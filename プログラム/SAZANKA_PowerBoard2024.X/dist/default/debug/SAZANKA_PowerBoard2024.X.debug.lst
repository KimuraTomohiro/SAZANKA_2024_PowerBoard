

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 19 18:23:31 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,space=0,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    34                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    36                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    37                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    41                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    42                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    43                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=3
    44                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    48                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    49                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    50                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    51                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    52                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    56                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=2
    61                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	intentry,global,class=CODE,space=0,delta=2
    77                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    91                           	dabs	1,0x7E,2
    92     0000                     
    93                           ; Generated 07/09/2023 GMT
    94                           ; 
    95                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution. Publication is not required when
   109                           ;        this file is used in an embedded application.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC16F1705 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127     0008                     bsr             equ	8
   128     0005                     fsr0h           equ	5
   129     0004                     fsr0l           equ	4
   130     0007                     fsr1h           equ	7
   131     0006                     fsr1l           equ	6
   132     0000                     indf            equ	0
   133     0000                     indf0           equ	0
   134     0001                     indf1           equ	1
   135     000B                     intcon          equ	11
   136     0002                     pc              equ	2
   137     0002                     pcl             equ	2
   138     000A                     pclath          equ	10
   139     0003                     status          equ	3
   140     0009                     wreg            equ	9
   141     0000                     INDF0           equ	0	;# 
   142     0001                     INDF1           equ	1	;# 
   143     0002                     PCL             equ	2	;# 
   144     0003                     STATUS          equ	3	;# 
   145     0004                     FSR0L           equ	4	;# 
   146     0005                     FSR0H           equ	5	;# 
   147     0006                     FSR1L           equ	6	;# 
   148     0007                     FSR1H           equ	7	;# 
   149     0008                     BSR             equ	8	;# 
   150     0009                     WREG            equ	9	;# 
   151     000A                     PCLATH          equ	10	;# 
   152     000B                     INTCON          equ	11	;# 
   153     000C                     PORTA           equ	12	;# 
   154     000E                     PORTC           equ	14	;# 
   155     0011                     PIR1            equ	17	;# 
   156     0012                     PIR2            equ	18	;# 
   157     0013                     PIR3            equ	19	;# 
   158     0015                     TMR0            equ	21	;# 
   159     0016                     TMR1            equ	22	;# 
   160     0016                     TMR1L           equ	22	;# 
   161     0017                     TMR1H           equ	23	;# 
   162     0018                     T1CON           equ	24	;# 
   163     0019                     T1GCON          equ	25	;# 
   164     001A                     TMR2            equ	26	;# 
   165     001B                     PR2             equ	27	;# 
   166     001C                     T2CON           equ	28	;# 
   167     008C                     TRISA           equ	140	;# 
   168     008E                     TRISC           equ	142	;# 
   169     0091                     PIE1            equ	145	;# 
   170     0092                     PIE2            equ	146	;# 
   171     0093                     PIE3            equ	147	;# 
   172     0095                     OPTION_REG      equ	149	;# 
   173     0096                     PCON            equ	150	;# 
   174     0097                     WDTCON          equ	151	;# 
   175     0098                     OSCTUNE         equ	152	;# 
   176     0099                     OSCCON          equ	153	;# 
   177     009A                     OSCSTAT         equ	154	;# 
   178     009B                     ADRES           equ	155	;# 
   179     009B                     ADRESL          equ	155	;# 
   180     009C                     ADRESH          equ	156	;# 
   181     009D                     ADCON0          equ	157	;# 
   182     009E                     ADCON1          equ	158	;# 
   183     009F                     ADCON2          equ	159	;# 
   184     010C                     LATA            equ	268	;# 
   185     010E                     LATC            equ	270	;# 
   186     0111                     CM1CON0         equ	273	;# 
   187     0112                     CM1CON1         equ	274	;# 
   188     0113                     CM2CON0         equ	275	;# 
   189     0114                     CM2CON1         equ	276	;# 
   190     0115                     CMOUT           equ	277	;# 
   191     0116                     BORCON          equ	278	;# 
   192     0117                     FVRCON          equ	279	;# 
   193     0118                     DAC1CON0        equ	280	;# 
   194     0119                     DAC1CON1        equ	281	;# 
   195     011C                     ZCD1CON         equ	284	;# 
   196     018C                     ANSELA          equ	396	;# 
   197     018E                     ANSELC          equ	398	;# 
   198     0191                     PMADR           equ	401	;# 
   199     0191                     PMADRL          equ	401	;# 
   200     0192                     PMADRH          equ	402	;# 
   201     0193                     PMDAT           equ	403	;# 
   202     0193                     PMDATL          equ	403	;# 
   203     0194                     PMDATH          equ	404	;# 
   204     0195                     PMCON1          equ	405	;# 
   205     0196                     PMCON2          equ	406	;# 
   206     0197                     VREGCON         equ	407	;# 
   207     0199                     RC1REG          equ	409	;# 
   208     0199                     RCREG           equ	409	;# 
   209     0199                     RCREG1          equ	409	;# 
   210     019A                     TX1REG          equ	410	;# 
   211     019A                     TXREG1          equ	410	;# 
   212     019A                     TXREG           equ	410	;# 
   213     019B                     SP1BRG          equ	411	;# 
   214     019B                     SPBRG           equ	411	;# 
   215     019B                     SP1BRGL         equ	411	;# 
   216     019B                     SPBRG1          equ	411	;# 
   217     019B                     SPBRGL          equ	411	;# 
   218     019C                     SP1BRGH         equ	412	;# 
   219     019C                     SPBRGH          equ	412	;# 
   220     019C                     SPBRGH1         equ	412	;# 
   221     019D                     RC1STA          equ	413	;# 
   222     019D                     RCSTA1          equ	413	;# 
   223     019D                     RCSTA           equ	413	;# 
   224     019E                     TX1STA          equ	414	;# 
   225     019E                     TXSTA1          equ	414	;# 
   226     019E                     TXSTA           equ	414	;# 
   227     019F                     BAUD1CON        equ	415	;# 
   228     019F                     BAUDCON1        equ	415	;# 
   229     019F                     BAUDCTL1        equ	415	;# 
   230     019F                     BAUDCON         equ	415	;# 
   231     019F                     BAUDCTL         equ	415	;# 
   232     020C                     WPUA            equ	524	;# 
   233     020E                     WPUC            equ	526	;# 
   234     0211                     SSP1BUF         equ	529	;# 
   235     0211                     SSPBUF          equ	529	;# 
   236     0212                     SSP1ADD         equ	530	;# 
   237     0212                     SSPADD          equ	530	;# 
   238     0213                     SSP1MSK         equ	531	;# 
   239     0213                     SSPMSK          equ	531	;# 
   240     0214                     SSP1STAT        equ	532	;# 
   241     0214                     SSPSTAT         equ	532	;# 
   242     0215                     SSP1CON1        equ	533	;# 
   243     0215                     SSPCON          equ	533	;# 
   244     0215                     SSPCON1         equ	533	;# 
   245     0215                     SSP1CON         equ	533	;# 
   246     0216                     SSP1CON2        equ	534	;# 
   247     0216                     SSPCON2         equ	534	;# 
   248     0217                     SSP1CON3        equ	535	;# 
   249     0217                     SSPCON3         equ	535	;# 
   250     028C                     ODCONA          equ	652	;# 
   251     028E                     ODCONC          equ	654	;# 
   252     0291                     CCPR1           equ	657	;# 
   253     0291                     CCPR1L          equ	657	;# 
   254     0292                     CCPR1H          equ	658	;# 
   255     0293                     CCP1CON         equ	659	;# 
   256     0293                     ECCP1CON        equ	659	;# 
   257     0298                     CCPR2           equ	664	;# 
   258     0298                     CCPR2L          equ	664	;# 
   259     0299                     CCPR2H          equ	665	;# 
   260     029A                     CCP2CON         equ	666	;# 
   261     029A                     ECCP2CON        equ	666	;# 
   262     029E                     CCPTMRS         equ	670	;# 
   263     030C                     SLRCONA         equ	780	;# 
   264     030E                     SLRCONC         equ	782	;# 
   265     038C                     INLVLA          equ	908	;# 
   266     038E                     INLVLC          equ	910	;# 
   267     0391                     IOCAP           equ	913	;# 
   268     0392                     IOCAN           equ	914	;# 
   269     0393                     IOCAF           equ	915	;# 
   270     0397                     IOCCP           equ	919	;# 
   271     0398                     IOCCN           equ	920	;# 
   272     0399                     IOCCF           equ	921	;# 
   273     0415                     TMR4            equ	1045	;# 
   274     0416                     PR4             equ	1046	;# 
   275     0417                     T4CON           equ	1047	;# 
   276     041C                     TMR6            equ	1052	;# 
   277     041D                     PR6             equ	1053	;# 
   278     041E                     T6CON           equ	1054	;# 
   279     0511                     OPA1CON         equ	1297	;# 
   280     0515                     OPA2CON         equ	1301	;# 
   281     0617                     PWM3DCL         equ	1559	;# 
   282     0618                     PWM3DCH         equ	1560	;# 
   283     0619                     PWM3CON         equ	1561	;# 
   284     0619                     PWM3CON0        equ	1561	;# 
   285     061A                     PWM4DCL         equ	1562	;# 
   286     061B                     PWM4DCH         equ	1563	;# 
   287     061C                     PWM4CON         equ	1564	;# 
   288     061C                     PWM4CON0        equ	1564	;# 
   289     0691                     COG1PHR         equ	1681	;# 
   290     0692                     COG1PHF         equ	1682	;# 
   291     0693                     COG1BLKR        equ	1683	;# 
   292     0694                     COG1BLKF        equ	1684	;# 
   293     0695                     COG1DBR         equ	1685	;# 
   294     0696                     COG1DBF         equ	1686	;# 
   295     0697                     COG1CON0        equ	1687	;# 
   296     0698                     COG1CON1        equ	1688	;# 
   297     0699                     COG1RIS         equ	1689	;# 
   298     069A                     COG1RSIM        equ	1690	;# 
   299     069B                     COG1FIS         equ	1691	;# 
   300     069C                     COG1FSIM        equ	1692	;# 
   301     069D                     COG1ASD0        equ	1693	;# 
   302     069E                     COG1ASD1        equ	1694	;# 
   303     069F                     COG1STR         equ	1695	;# 
   304     0E0F                     PPSLOCK         equ	3599	;# 
   305     0E10                     INTPPS          equ	3600	;# 
   306     0E11                     T0CKIPPS        equ	3601	;# 
   307     0E12                     T1CKIPPS        equ	3602	;# 
   308     0E13                     T1GPPS          equ	3603	;# 
   309     0E14                     CCP1PPS         equ	3604	;# 
   310     0E15                     CCP2PPS         equ	3605	;# 
   311     0E17                     COGINPPS        equ	3607	;# 
   312     0E20                     SSPCLKPPS       equ	3616	;# 
   313     0E21                     SSPDATPPS       equ	3617	;# 
   314     0E22                     SSPSSPPS        equ	3618	;# 
   315     0E24                     RXPPS           equ	3620	;# 
   316     0E25                     CKPPS           equ	3621	;# 
   317     0E28                     CLCIN0PPS       equ	3624	;# 
   318     0E29                     CLCIN1PPS       equ	3625	;# 
   319     0E2A                     CLCIN2PPS       equ	3626	;# 
   320     0E2B                     CLCIN3PPS       equ	3627	;# 
   321     0E90                     RA0PPS          equ	3728	;# 
   322     0E91                     RA1PPS          equ	3729	;# 
   323     0E92                     RA2PPS          equ	3730	;# 
   324     0E94                     RA4PPS          equ	3732	;# 
   325     0E95                     RA5PPS          equ	3733	;# 
   326     0EA0                     RC0PPS          equ	3744	;# 
   327     0EA1                     RC1PPS          equ	3745	;# 
   328     0EA2                     RC2PPS          equ	3746	;# 
   329     0EA3                     RC3PPS          equ	3747	;# 
   330     0EA4                     RC4PPS          equ	3748	;# 
   331     0EA5                     RC5PPS          equ	3749	;# 
   332     0F0F                     CLCDATA         equ	3855	;# 
   333     0F10                     CLC1CON         equ	3856	;# 
   334     0F11                     CLC1POL         equ	3857	;# 
   335     0F12                     CLC1SEL0        equ	3858	;# 
   336     0F13                     CLC1SEL1        equ	3859	;# 
   337     0F14                     CLC1SEL2        equ	3860	;# 
   338     0F15                     CLC1SEL3        equ	3861	;# 
   339     0F16                     CLC1GLS0        equ	3862	;# 
   340     0F17                     CLC1GLS1        equ	3863	;# 
   341     0F18                     CLC1GLS2        equ	3864	;# 
   342     0F19                     CLC1GLS3        equ	3865	;# 
   343     0F1A                     CLC2CON         equ	3866	;# 
   344     0F1B                     CLC2POL         equ	3867	;# 
   345     0F1C                     CLC2SEL0        equ	3868	;# 
   346     0F1D                     CLC2SEL1        equ	3869	;# 
   347     0F1E                     CLC2SEL2        equ	3870	;# 
   348     0F1F                     CLC2SEL3        equ	3871	;# 
   349     0F20                     CLC2GLS0        equ	3872	;# 
   350     0F21                     CLC2GLS1        equ	3873	;# 
   351     0F22                     CLC2GLS2        equ	3874	;# 
   352     0F23                     CLC2GLS3        equ	3875	;# 
   353     0F24                     CLC3CON         equ	3876	;# 
   354     0F25                     CLC3POL         equ	3877	;# 
   355     0F26                     CLC3SEL0        equ	3878	;# 
   356     0F27                     CLC3SEL1        equ	3879	;# 
   357     0F28                     CLC3SEL2        equ	3880	;# 
   358     0F29                     CLC3SEL3        equ	3881	;# 
   359     0F2A                     CLC3GLS0        equ	3882	;# 
   360     0F2B                     CLC3GLS1        equ	3883	;# 
   361     0F2C                     CLC3GLS2        equ	3884	;# 
   362     0F2D                     CLC3GLS3        equ	3885	;# 
   363     0F9E                     ICDBK0H         equ	3998	;# 
   364     0FE4                     STATUS_SHAD     equ	4068	;# 
   365     0FE5                     WREG_SHAD       equ	4069	;# 
   366     0FE6                     BSR_SHAD        equ	4070	;# 
   367     0FE7                     PCLATH_SHAD     equ	4071	;# 
   368     0FE8                     FSR0L_SHAD      equ	4072	;# 
   369     0FE9                     FSR0H_SHAD      equ	4073	;# 
   370     0FEA                     FSR1L_SHAD      equ	4074	;# 
   371     0FEB                     FSR1H_SHAD      equ	4075	;# 
   372     0FED                     STKPTR          equ	4077	;# 
   373     0FEE                     TOSL            equ	4078	;# 
   374     0FEF                     TOSH            equ	4079	;# 
   375     0000                     INDF0           equ	0	;# 
   376     0001                     INDF1           equ	1	;# 
   377     0002                     PCL             equ	2	;# 
   378     0003                     STATUS          equ	3	;# 
   379     0004                     FSR0L           equ	4	;# 
   380     0005                     FSR0H           equ	5	;# 
   381     0006                     FSR1L           equ	6	;# 
   382     0007                     FSR1H           equ	7	;# 
   383     0008                     BSR             equ	8	;# 
   384     0009                     WREG            equ	9	;# 
   385     000A                     PCLATH          equ	10	;# 
   386     000B                     INTCON          equ	11	;# 
   387     000C                     PORTA           equ	12	;# 
   388     000E                     PORTC           equ	14	;# 
   389     0011                     PIR1            equ	17	;# 
   390     0012                     PIR2            equ	18	;# 
   391     0013                     PIR3            equ	19	;# 
   392     0015                     TMR0            equ	21	;# 
   393     0016                     TMR1            equ	22	;# 
   394     0016                     TMR1L           equ	22	;# 
   395     0017                     TMR1H           equ	23	;# 
   396     0018                     T1CON           equ	24	;# 
   397     0019                     T1GCON          equ	25	;# 
   398     001A                     TMR2            equ	26	;# 
   399     001B                     PR2             equ	27	;# 
   400     001C                     T2CON           equ	28	;# 
   401     008C                     TRISA           equ	140	;# 
   402     008E                     TRISC           equ	142	;# 
   403     0091                     PIE1            equ	145	;# 
   404     0092                     PIE2            equ	146	;# 
   405     0093                     PIE3            equ	147	;# 
   406     0095                     OPTION_REG      equ	149	;# 
   407     0096                     PCON            equ	150	;# 
   408     0097                     WDTCON          equ	151	;# 
   409     0098                     OSCTUNE         equ	152	;# 
   410     0099                     OSCCON          equ	153	;# 
   411     009A                     OSCSTAT         equ	154	;# 
   412     009B                     ADRES           equ	155	;# 
   413     009B                     ADRESL          equ	155	;# 
   414     009C                     ADRESH          equ	156	;# 
   415     009D                     ADCON0          equ	157	;# 
   416     009E                     ADCON1          equ	158	;# 
   417     009F                     ADCON2          equ	159	;# 
   418     010C                     LATA            equ	268	;# 
   419     010E                     LATC            equ	270	;# 
   420     0111                     CM1CON0         equ	273	;# 
   421     0112                     CM1CON1         equ	274	;# 
   422     0113                     CM2CON0         equ	275	;# 
   423     0114                     CM2CON1         equ	276	;# 
   424     0115                     CMOUT           equ	277	;# 
   425     0116                     BORCON          equ	278	;# 
   426     0117                     FVRCON          equ	279	;# 
   427     0118                     DAC1CON0        equ	280	;# 
   428     0119                     DAC1CON1        equ	281	;# 
   429     011C                     ZCD1CON         equ	284	;# 
   430     018C                     ANSELA          equ	396	;# 
   431     018E                     ANSELC          equ	398	;# 
   432     0191                     PMADR           equ	401	;# 
   433     0191                     PMADRL          equ	401	;# 
   434     0192                     PMADRH          equ	402	;# 
   435     0193                     PMDAT           equ	403	;# 
   436     0193                     PMDATL          equ	403	;# 
   437     0194                     PMDATH          equ	404	;# 
   438     0195                     PMCON1          equ	405	;# 
   439     0196                     PMCON2          equ	406	;# 
   440     0197                     VREGCON         equ	407	;# 
   441     0199                     RC1REG          equ	409	;# 
   442     0199                     RCREG           equ	409	;# 
   443     0199                     RCREG1          equ	409	;# 
   444     019A                     TX1REG          equ	410	;# 
   445     019A                     TXREG1          equ	410	;# 
   446     019A                     TXREG           equ	410	;# 
   447     019B                     SP1BRG          equ	411	;# 
   448     019B                     SPBRG           equ	411	;# 
   449     019B                     SP1BRGL         equ	411	;# 
   450     019B                     SPBRG1          equ	411	;# 
   451     019B                     SPBRGL          equ	411	;# 
   452     019C                     SP1BRGH         equ	412	;# 
   453     019C                     SPBRGH          equ	412	;# 
   454     019C                     SPBRGH1         equ	412	;# 
   455     019D                     RC1STA          equ	413	;# 
   456     019D                     RCSTA1          equ	413	;# 
   457     019D                     RCSTA           equ	413	;# 
   458     019E                     TX1STA          equ	414	;# 
   459     019E                     TXSTA1          equ	414	;# 
   460     019E                     TXSTA           equ	414	;# 
   461     019F                     BAUD1CON        equ	415	;# 
   462     019F                     BAUDCON1        equ	415	;# 
   463     019F                     BAUDCTL1        equ	415	;# 
   464     019F                     BAUDCON         equ	415	;# 
   465     019F                     BAUDCTL         equ	415	;# 
   466     020C                     WPUA            equ	524	;# 
   467     020E                     WPUC            equ	526	;# 
   468     0211                     SSP1BUF         equ	529	;# 
   469     0211                     SSPBUF          equ	529	;# 
   470     0212                     SSP1ADD         equ	530	;# 
   471     0212                     SSPADD          equ	530	;# 
   472     0213                     SSP1MSK         equ	531	;# 
   473     0213                     SSPMSK          equ	531	;# 
   474     0214                     SSP1STAT        equ	532	;# 
   475     0214                     SSPSTAT         equ	532	;# 
   476     0215                     SSP1CON1        equ	533	;# 
   477     0215                     SSPCON          equ	533	;# 
   478     0215                     SSPCON1         equ	533	;# 
   479     0215                     SSP1CON         equ	533	;# 
   480     0216                     SSP1CON2        equ	534	;# 
   481     0216                     SSPCON2         equ	534	;# 
   482     0217                     SSP1CON3        equ	535	;# 
   483     0217                     SSPCON3         equ	535	;# 
   484     028C                     ODCONA          equ	652	;# 
   485     028E                     ODCONC          equ	654	;# 
   486     0291                     CCPR1           equ	657	;# 
   487     0291                     CCPR1L          equ	657	;# 
   488     0292                     CCPR1H          equ	658	;# 
   489     0293                     CCP1CON         equ	659	;# 
   490     0293                     ECCP1CON        equ	659	;# 
   491     0298                     CCPR2           equ	664	;# 
   492     0298                     CCPR2L          equ	664	;# 
   493     0299                     CCPR2H          equ	665	;# 
   494     029A                     CCP2CON         equ	666	;# 
   495     029A                     ECCP2CON        equ	666	;# 
   496     029E                     CCPTMRS         equ	670	;# 
   497     030C                     SLRCONA         equ	780	;# 
   498     030E                     SLRCONC         equ	782	;# 
   499     038C                     INLVLA          equ	908	;# 
   500     038E                     INLVLC          equ	910	;# 
   501     0391                     IOCAP           equ	913	;# 
   502     0392                     IOCAN           equ	914	;# 
   503     0393                     IOCAF           equ	915	;# 
   504     0397                     IOCCP           equ	919	;# 
   505     0398                     IOCCN           equ	920	;# 
   506     0399                     IOCCF           equ	921	;# 
   507     0415                     TMR4            equ	1045	;# 
   508     0416                     PR4             equ	1046	;# 
   509     0417                     T4CON           equ	1047	;# 
   510     041C                     TMR6            equ	1052	;# 
   511     041D                     PR6             equ	1053	;# 
   512     041E                     T6CON           equ	1054	;# 
   513     0511                     OPA1CON         equ	1297	;# 
   514     0515                     OPA2CON         equ	1301	;# 
   515     0617                     PWM3DCL         equ	1559	;# 
   516     0618                     PWM3DCH         equ	1560	;# 
   517     0619                     PWM3CON         equ	1561	;# 
   518     0619                     PWM3CON0        equ	1561	;# 
   519     061A                     PWM4DCL         equ	1562	;# 
   520     061B                     PWM4DCH         equ	1563	;# 
   521     061C                     PWM4CON         equ	1564	;# 
   522     061C                     PWM4CON0        equ	1564	;# 
   523     0691                     COG1PHR         equ	1681	;# 
   524     0692                     COG1PHF         equ	1682	;# 
   525     0693                     COG1BLKR        equ	1683	;# 
   526     0694                     COG1BLKF        equ	1684	;# 
   527     0695                     COG1DBR         equ	1685	;# 
   528     0696                     COG1DBF         equ	1686	;# 
   529     0697                     COG1CON0        equ	1687	;# 
   530     0698                     COG1CON1        equ	1688	;# 
   531     0699                     COG1RIS         equ	1689	;# 
   532     069A                     COG1RSIM        equ	1690	;# 
   533     069B                     COG1FIS         equ	1691	;# 
   534     069C                     COG1FSIM        equ	1692	;# 
   535     069D                     COG1ASD0        equ	1693	;# 
   536     069E                     COG1ASD1        equ	1694	;# 
   537     069F                     COG1STR         equ	1695	;# 
   538     0E0F                     PPSLOCK         equ	3599	;# 
   539     0E10                     INTPPS          equ	3600	;# 
   540     0E11                     T0CKIPPS        equ	3601	;# 
   541     0E12                     T1CKIPPS        equ	3602	;# 
   542     0E13                     T1GPPS          equ	3603	;# 
   543     0E14                     CCP1PPS         equ	3604	;# 
   544     0E15                     CCP2PPS         equ	3605	;# 
   545     0E17                     COGINPPS        equ	3607	;# 
   546     0E20                     SSPCLKPPS       equ	3616	;# 
   547     0E21                     SSPDATPPS       equ	3617	;# 
   548     0E22                     SSPSSPPS        equ	3618	;# 
   549     0E24                     RXPPS           equ	3620	;# 
   550     0E25                     CKPPS           equ	3621	;# 
   551     0E28                     CLCIN0PPS       equ	3624	;# 
   552     0E29                     CLCIN1PPS       equ	3625	;# 
   553     0E2A                     CLCIN2PPS       equ	3626	;# 
   554     0E2B                     CLCIN3PPS       equ	3627	;# 
   555     0E90                     RA0PPS          equ	3728	;# 
   556     0E91                     RA1PPS          equ	3729	;# 
   557     0E92                     RA2PPS          equ	3730	;# 
   558     0E94                     RA4PPS          equ	3732	;# 
   559     0E95                     RA5PPS          equ	3733	;# 
   560     0EA0                     RC0PPS          equ	3744	;# 
   561     0EA1                     RC1PPS          equ	3745	;# 
   562     0EA2                     RC2PPS          equ	3746	;# 
   563     0EA3                     RC3PPS          equ	3747	;# 
   564     0EA4                     RC4PPS          equ	3748	;# 
   565     0EA5                     RC5PPS          equ	3749	;# 
   566     0F0F                     CLCDATA         equ	3855	;# 
   567     0F10                     CLC1CON         equ	3856	;# 
   568     0F11                     CLC1POL         equ	3857	;# 
   569     0F12                     CLC1SEL0        equ	3858	;# 
   570     0F13                     CLC1SEL1        equ	3859	;# 
   571     0F14                     CLC1SEL2        equ	3860	;# 
   572     0F15                     CLC1SEL3        equ	3861	;# 
   573     0F16                     CLC1GLS0        equ	3862	;# 
   574     0F17                     CLC1GLS1        equ	3863	;# 
   575     0F18                     CLC1GLS2        equ	3864	;# 
   576     0F19                     CLC1GLS3        equ	3865	;# 
   577     0F1A                     CLC2CON         equ	3866	;# 
   578     0F1B                     CLC2POL         equ	3867	;# 
   579     0F1C                     CLC2SEL0        equ	3868	;# 
   580     0F1D                     CLC2SEL1        equ	3869	;# 
   581     0F1E                     CLC2SEL2        equ	3870	;# 
   582     0F1F                     CLC2SEL3        equ	3871	;# 
   583     0F20                     CLC2GLS0        equ	3872	;# 
   584     0F21                     CLC2GLS1        equ	3873	;# 
   585     0F22                     CLC2GLS2        equ	3874	;# 
   586     0F23                     CLC2GLS3        equ	3875	;# 
   587     0F24                     CLC3CON         equ	3876	;# 
   588     0F25                     CLC3POL         equ	3877	;# 
   589     0F26                     CLC3SEL0        equ	3878	;# 
   590     0F27                     CLC3SEL1        equ	3879	;# 
   591     0F28                     CLC3SEL2        equ	3880	;# 
   592     0F29                     CLC3SEL3        equ	3881	;# 
   593     0F2A                     CLC3GLS0        equ	3882	;# 
   594     0F2B                     CLC3GLS1        equ	3883	;# 
   595     0F2C                     CLC3GLS2        equ	3884	;# 
   596     0F2D                     CLC3GLS3        equ	3885	;# 
   597     0F9E                     ICDBK0H         equ	3998	;# 
   598     0FE4                     STATUS_SHAD     equ	4068	;# 
   599     0FE5                     WREG_SHAD       equ	4069	;# 
   600     0FE6                     BSR_SHAD        equ	4070	;# 
   601     0FE7                     PCLATH_SHAD     equ	4071	;# 
   602     0FE8                     FSR0L_SHAD      equ	4072	;# 
   603     0FE9                     FSR0H_SHAD      equ	4073	;# 
   604     0FEA                     FSR1L_SHAD      equ	4074	;# 
   605     0FEB                     FSR1H_SHAD      equ	4075	;# 
   606     0FED                     STKPTR          equ	4077	;# 
   607     0FEE                     TOSL            equ	4078	;# 
   608     0FEF                     TOSH            equ	4079	;# 
   609     0000                     INDF0           equ	0	;# 
   610     0001                     INDF1           equ	1	;# 
   611     0002                     PCL             equ	2	;# 
   612     0003                     STATUS          equ	3	;# 
   613     0004                     FSR0L           equ	4	;# 
   614     0005                     FSR0H           equ	5	;# 
   615     0006                     FSR1L           equ	6	;# 
   616     0007                     FSR1H           equ	7	;# 
   617     0008                     BSR             equ	8	;# 
   618     0009                     WREG            equ	9	;# 
   619     000A                     PCLATH          equ	10	;# 
   620     000B                     INTCON          equ	11	;# 
   621     000C                     PORTA           equ	12	;# 
   622     000E                     PORTC           equ	14	;# 
   623     0011                     PIR1            equ	17	;# 
   624     0012                     PIR2            equ	18	;# 
   625     0013                     PIR3            equ	19	;# 
   626     0015                     TMR0            equ	21	;# 
   627     0016                     TMR1            equ	22	;# 
   628     0016                     TMR1L           equ	22	;# 
   629     0017                     TMR1H           equ	23	;# 
   630     0018                     T1CON           equ	24	;# 
   631     0019                     T1GCON          equ	25	;# 
   632     001A                     TMR2            equ	26	;# 
   633     001B                     PR2             equ	27	;# 
   634     001C                     T2CON           equ	28	;# 
   635     008C                     TRISA           equ	140	;# 
   636     008E                     TRISC           equ	142	;# 
   637     0091                     PIE1            equ	145	;# 
   638     0092                     PIE2            equ	146	;# 
   639     0093                     PIE3            equ	147	;# 
   640     0095                     OPTION_REG      equ	149	;# 
   641     0096                     PCON            equ	150	;# 
   642     0097                     WDTCON          equ	151	;# 
   643     0098                     OSCTUNE         equ	152	;# 
   644     0099                     OSCCON          equ	153	;# 
   645     009A                     OSCSTAT         equ	154	;# 
   646     009B                     ADRES           equ	155	;# 
   647     009B                     ADRESL          equ	155	;# 
   648     009C                     ADRESH          equ	156	;# 
   649     009D                     ADCON0          equ	157	;# 
   650     009E                     ADCON1          equ	158	;# 
   651     009F                     ADCON2          equ	159	;# 
   652     010C                     LATA            equ	268	;# 
   653     010E                     LATC            equ	270	;# 
   654     0111                     CM1CON0         equ	273	;# 
   655     0112                     CM1CON1         equ	274	;# 
   656     0113                     CM2CON0         equ	275	;# 
   657     0114                     CM2CON1         equ	276	;# 
   658     0115                     CMOUT           equ	277	;# 
   659     0116                     BORCON          equ	278	;# 
   660     0117                     FVRCON          equ	279	;# 
   661     0118                     DAC1CON0        equ	280	;# 
   662     0119                     DAC1CON1        equ	281	;# 
   663     011C                     ZCD1CON         equ	284	;# 
   664     018C                     ANSELA          equ	396	;# 
   665     018E                     ANSELC          equ	398	;# 
   666     0191                     PMADR           equ	401	;# 
   667     0191                     PMADRL          equ	401	;# 
   668     0192                     PMADRH          equ	402	;# 
   669     0193                     PMDAT           equ	403	;# 
   670     0193                     PMDATL          equ	403	;# 
   671     0194                     PMDATH          equ	404	;# 
   672     0195                     PMCON1          equ	405	;# 
   673     0196                     PMCON2          equ	406	;# 
   674     0197                     VREGCON         equ	407	;# 
   675     0199                     RC1REG          equ	409	;# 
   676     0199                     RCREG           equ	409	;# 
   677     0199                     RCREG1          equ	409	;# 
   678     019A                     TX1REG          equ	410	;# 
   679     019A                     TXREG1          equ	410	;# 
   680     019A                     TXREG           equ	410	;# 
   681     019B                     SP1BRG          equ	411	;# 
   682     019B                     SPBRG           equ	411	;# 
   683     019B                     SP1BRGL         equ	411	;# 
   684     019B                     SPBRG1          equ	411	;# 
   685     019B                     SPBRGL          equ	411	;# 
   686     019C                     SP1BRGH         equ	412	;# 
   687     019C                     SPBRGH          equ	412	;# 
   688     019C                     SPBRGH1         equ	412	;# 
   689     019D                     RC1STA          equ	413	;# 
   690     019D                     RCSTA1          equ	413	;# 
   691     019D                     RCSTA           equ	413	;# 
   692     019E                     TX1STA          equ	414	;# 
   693     019E                     TXSTA1          equ	414	;# 
   694     019E                     TXSTA           equ	414	;# 
   695     019F                     BAUD1CON        equ	415	;# 
   696     019F                     BAUDCON1        equ	415	;# 
   697     019F                     BAUDCTL1        equ	415	;# 
   698     019F                     BAUDCON         equ	415	;# 
   699     019F                     BAUDCTL         equ	415	;# 
   700     020C                     WPUA            equ	524	;# 
   701     020E                     WPUC            equ	526	;# 
   702     0211                     SSP1BUF         equ	529	;# 
   703     0211                     SSPBUF          equ	529	;# 
   704     0212                     SSP1ADD         equ	530	;# 
   705     0212                     SSPADD          equ	530	;# 
   706     0213                     SSP1MSK         equ	531	;# 
   707     0213                     SSPMSK          equ	531	;# 
   708     0214                     SSP1STAT        equ	532	;# 
   709     0214                     SSPSTAT         equ	532	;# 
   710     0215                     SSP1CON1        equ	533	;# 
   711     0215                     SSPCON          equ	533	;# 
   712     0215                     SSPCON1         equ	533	;# 
   713     0215                     SSP1CON         equ	533	;# 
   714     0216                     SSP1CON2        equ	534	;# 
   715     0216                     SSPCON2         equ	534	;# 
   716     0217                     SSP1CON3        equ	535	;# 
   717     0217                     SSPCON3         equ	535	;# 
   718     028C                     ODCONA          equ	652	;# 
   719     028E                     ODCONC          equ	654	;# 
   720     0291                     CCPR1           equ	657	;# 
   721     0291                     CCPR1L          equ	657	;# 
   722     0292                     CCPR1H          equ	658	;# 
   723     0293                     CCP1CON         equ	659	;# 
   724     0293                     ECCP1CON        equ	659	;# 
   725     0298                     CCPR2           equ	664	;# 
   726     0298                     CCPR2L          equ	664	;# 
   727     0299                     CCPR2H          equ	665	;# 
   728     029A                     CCP2CON         equ	666	;# 
   729     029A                     ECCP2CON        equ	666	;# 
   730     029E                     CCPTMRS         equ	670	;# 
   731     030C                     SLRCONA         equ	780	;# 
   732     030E                     SLRCONC         equ	782	;# 
   733     038C                     INLVLA          equ	908	;# 
   734     038E                     INLVLC          equ	910	;# 
   735     0391                     IOCAP           equ	913	;# 
   736     0392                     IOCAN           equ	914	;# 
   737     0393                     IOCAF           equ	915	;# 
   738     0397                     IOCCP           equ	919	;# 
   739     0398                     IOCCN           equ	920	;# 
   740     0399                     IOCCF           equ	921	;# 
   741     0415                     TMR4            equ	1045	;# 
   742     0416                     PR4             equ	1046	;# 
   743     0417                     T4CON           equ	1047	;# 
   744     041C                     TMR6            equ	1052	;# 
   745     041D                     PR6             equ	1053	;# 
   746     041E                     T6CON           equ	1054	;# 
   747     0511                     OPA1CON         equ	1297	;# 
   748     0515                     OPA2CON         equ	1301	;# 
   749     0617                     PWM3DCL         equ	1559	;# 
   750     0618                     PWM3DCH         equ	1560	;# 
   751     0619                     PWM3CON         equ	1561	;# 
   752     0619                     PWM3CON0        equ	1561	;# 
   753     061A                     PWM4DCL         equ	1562	;# 
   754     061B                     PWM4DCH         equ	1563	;# 
   755     061C                     PWM4CON         equ	1564	;# 
   756     061C                     PWM4CON0        equ	1564	;# 
   757     0691                     COG1PHR         equ	1681	;# 
   758     0692                     COG1PHF         equ	1682	;# 
   759     0693                     COG1BLKR        equ	1683	;# 
   760     0694                     COG1BLKF        equ	1684	;# 
   761     0695                     COG1DBR         equ	1685	;# 
   762     0696                     COG1DBF         equ	1686	;# 
   763     0697                     COG1CON0        equ	1687	;# 
   764     0698                     COG1CON1        equ	1688	;# 
   765     0699                     COG1RIS         equ	1689	;# 
   766     069A                     COG1RSIM        equ	1690	;# 
   767     069B                     COG1FIS         equ	1691	;# 
   768     069C                     COG1FSIM        equ	1692	;# 
   769     069D                     COG1ASD0        equ	1693	;# 
   770     069E                     COG1ASD1        equ	1694	;# 
   771     069F                     COG1STR         equ	1695	;# 
   772     0E0F                     PPSLOCK         equ	3599	;# 
   773     0E10                     INTPPS          equ	3600	;# 
   774     0E11                     T0CKIPPS        equ	3601	;# 
   775     0E12                     T1CKIPPS        equ	3602	;# 
   776     0E13                     T1GPPS          equ	3603	;# 
   777     0E14                     CCP1PPS         equ	3604	;# 
   778     0E15                     CCP2PPS         equ	3605	;# 
   779     0E17                     COGINPPS        equ	3607	;# 
   780     0E20                     SSPCLKPPS       equ	3616	;# 
   781     0E21                     SSPDATPPS       equ	3617	;# 
   782     0E22                     SSPSSPPS        equ	3618	;# 
   783     0E24                     RXPPS           equ	3620	;# 
   784     0E25                     CKPPS           equ	3621	;# 
   785     0E28                     CLCIN0PPS       equ	3624	;# 
   786     0E29                     CLCIN1PPS       equ	3625	;# 
   787     0E2A                     CLCIN2PPS       equ	3626	;# 
   788     0E2B                     CLCIN3PPS       equ	3627	;# 
   789     0E90                     RA0PPS          equ	3728	;# 
   790     0E91                     RA1PPS          equ	3729	;# 
   791     0E92                     RA2PPS          equ	3730	;# 
   792     0E94                     RA4PPS          equ	3732	;# 
   793     0E95                     RA5PPS          equ	3733	;# 
   794     0EA0                     RC0PPS          equ	3744	;# 
   795     0EA1                     RC1PPS          equ	3745	;# 
   796     0EA2                     RC2PPS          equ	3746	;# 
   797     0EA3                     RC3PPS          equ	3747	;# 
   798     0EA4                     RC4PPS          equ	3748	;# 
   799     0EA5                     RC5PPS          equ	3749	;# 
   800     0F0F                     CLCDATA         equ	3855	;# 
   801     0F10                     CLC1CON         equ	3856	;# 
   802     0F11                     CLC1POL         equ	3857	;# 
   803     0F12                     CLC1SEL0        equ	3858	;# 
   804     0F13                     CLC1SEL1        equ	3859	;# 
   805     0F14                     CLC1SEL2        equ	3860	;# 
   806     0F15                     CLC1SEL3        equ	3861	;# 
   807     0F16                     CLC1GLS0        equ	3862	;# 
   808     0F17                     CLC1GLS1        equ	3863	;# 
   809     0F18                     CLC1GLS2        equ	3864	;# 
   810     0F19                     CLC1GLS3        equ	3865	;# 
   811     0F1A                     CLC2CON         equ	3866	;# 
   812     0F1B                     CLC2POL         equ	3867	;# 
   813     0F1C                     CLC2SEL0        equ	3868	;# 
   814     0F1D                     CLC2SEL1        equ	3869	;# 
   815     0F1E                     CLC2SEL2        equ	3870	;# 
   816     0F1F                     CLC2SEL3        equ	3871	;# 
   817     0F20                     CLC2GLS0        equ	3872	;# 
   818     0F21                     CLC2GLS1        equ	3873	;# 
   819     0F22                     CLC2GLS2        equ	3874	;# 
   820     0F23                     CLC2GLS3        equ	3875	;# 
   821     0F24                     CLC3CON         equ	3876	;# 
   822     0F25                     CLC3POL         equ	3877	;# 
   823     0F26                     CLC3SEL0        equ	3878	;# 
   824     0F27                     CLC3SEL1        equ	3879	;# 
   825     0F28                     CLC3SEL2        equ	3880	;# 
   826     0F29                     CLC3SEL3        equ	3881	;# 
   827     0F2A                     CLC3GLS0        equ	3882	;# 
   828     0F2B                     CLC3GLS1        equ	3883	;# 
   829     0F2C                     CLC3GLS2        equ	3884	;# 
   830     0F2D                     CLC3GLS3        equ	3885	;# 
   831     0F9E                     ICDBK0H         equ	3998	;# 
   832     0FE4                     STATUS_SHAD     equ	4068	;# 
   833     0FE5                     WREG_SHAD       equ	4069	;# 
   834     0FE6                     BSR_SHAD        equ	4070	;# 
   835     0FE7                     PCLATH_SHAD     equ	4071	;# 
   836     0FE8                     FSR0L_SHAD      equ	4072	;# 
   837     0FE9                     FSR0H_SHAD      equ	4073	;# 
   838     0FEA                     FSR1L_SHAD      equ	4074	;# 
   839     0FEB                     FSR1H_SHAD      equ	4075	;# 
   840     0FED                     STKPTR          equ	4077	;# 
   841     0FEE                     TOSL            equ	4078	;# 
   842     0FEF                     TOSH            equ	4079	;# 
   843     0000                     INDF0           equ	0	;# 
   844     0001                     INDF1           equ	1	;# 
   845     0002                     PCL             equ	2	;# 
   846     0003                     STATUS          equ	3	;# 
   847     0004                     FSR0L           equ	4	;# 
   848     0005                     FSR0H           equ	5	;# 
   849     0006                     FSR1L           equ	6	;# 
   850     0007                     FSR1H           equ	7	;# 
   851     0008                     BSR             equ	8	;# 
   852     0009                     WREG            equ	9	;# 
   853     000A                     PCLATH          equ	10	;# 
   854     000B                     INTCON          equ	11	;# 
   855     000C                     PORTA           equ	12	;# 
   856     000E                     PORTC           equ	14	;# 
   857     0011                     PIR1            equ	17	;# 
   858     0012                     PIR2            equ	18	;# 
   859     0013                     PIR3            equ	19	;# 
   860     0015                     TMR0            equ	21	;# 
   861     0016                     TMR1            equ	22	;# 
   862     0016                     TMR1L           equ	22	;# 
   863     0017                     TMR1H           equ	23	;# 
   864     0018                     T1CON           equ	24	;# 
   865     0019                     T1GCON          equ	25	;# 
   866     001A                     TMR2            equ	26	;# 
   867     001B                     PR2             equ	27	;# 
   868     001C                     T2CON           equ	28	;# 
   869     008C                     TRISA           equ	140	;# 
   870     008E                     TRISC           equ	142	;# 
   871     0091                     PIE1            equ	145	;# 
   872     0092                     PIE2            equ	146	;# 
   873     0093                     PIE3            equ	147	;# 
   874     0095                     OPTION_REG      equ	149	;# 
   875     0096                     PCON            equ	150	;# 
   876     0097                     WDTCON          equ	151	;# 
   877     0098                     OSCTUNE         equ	152	;# 
   878     0099                     OSCCON          equ	153	;# 
   879     009A                     OSCSTAT         equ	154	;# 
   880     009B                     ADRES           equ	155	;# 
   881     009B                     ADRESL          equ	155	;# 
   882     009C                     ADRESH          equ	156	;# 
   883     009D                     ADCON0          equ	157	;# 
   884     009E                     ADCON1          equ	158	;# 
   885     009F                     ADCON2          equ	159	;# 
   886     010C                     LATA            equ	268	;# 
   887     010E                     LATC            equ	270	;# 
   888     0111                     CM1CON0         equ	273	;# 
   889     0112                     CM1CON1         equ	274	;# 
   890     0113                     CM2CON0         equ	275	;# 
   891     0114                     CM2CON1         equ	276	;# 
   892     0115                     CMOUT           equ	277	;# 
   893     0116                     BORCON          equ	278	;# 
   894     0117                     FVRCON          equ	279	;# 
   895     0118                     DAC1CON0        equ	280	;# 
   896     0119                     DAC1CON1        equ	281	;# 
   897     011C                     ZCD1CON         equ	284	;# 
   898     018C                     ANSELA          equ	396	;# 
   899     018E                     ANSELC          equ	398	;# 
   900     0191                     PMADR           equ	401	;# 
   901     0191                     PMADRL          equ	401	;# 
   902     0192                     PMADRH          equ	402	;# 
   903     0193                     PMDAT           equ	403	;# 
   904     0193                     PMDATL          equ	403	;# 
   905     0194                     PMDATH          equ	404	;# 
   906     0195                     PMCON1          equ	405	;# 
   907     0196                     PMCON2          equ	406	;# 
   908     0197                     VREGCON         equ	407	;# 
   909     0199                     RC1REG          equ	409	;# 
   910     0199                     RCREG           equ	409	;# 
   911     0199                     RCREG1          equ	409	;# 
   912     019A                     TX1REG          equ	410	;# 
   913     019A                     TXREG1          equ	410	;# 
   914     019A                     TXREG           equ	410	;# 
   915     019B                     SP1BRG          equ	411	;# 
   916     019B                     SPBRG           equ	411	;# 
   917     019B                     SP1BRGL         equ	411	;# 
   918     019B                     SPBRG1          equ	411	;# 
   919     019B                     SPBRGL          equ	411	;# 
   920     019C                     SP1BRGH         equ	412	;# 
   921     019C                     SPBRGH          equ	412	;# 
   922     019C                     SPBRGH1         equ	412	;# 
   923     019D                     RC1STA          equ	413	;# 
   924     019D                     RCSTA1          equ	413	;# 
   925     019D                     RCSTA           equ	413	;# 
   926     019E                     TX1STA          equ	414	;# 
   927     019E                     TXSTA1          equ	414	;# 
   928     019E                     TXSTA           equ	414	;# 
   929     019F                     BAUD1CON        equ	415	;# 
   930     019F                     BAUDCON1        equ	415	;# 
   931     019F                     BAUDCTL1        equ	415	;# 
   932     019F                     BAUDCON         equ	415	;# 
   933     019F                     BAUDCTL         equ	415	;# 
   934     020C                     WPUA            equ	524	;# 
   935     020E                     WPUC            equ	526	;# 
   936     0211                     SSP1BUF         equ	529	;# 
   937     0211                     SSPBUF          equ	529	;# 
   938     0212                     SSP1ADD         equ	530	;# 
   939     0212                     SSPADD          equ	530	;# 
   940     0213                     SSP1MSK         equ	531	;# 
   941     0213                     SSPMSK          equ	531	;# 
   942     0214                     SSP1STAT        equ	532	;# 
   943     0214                     SSPSTAT         equ	532	;# 
   944     0215                     SSP1CON1        equ	533	;# 
   945     0215                     SSPCON          equ	533	;# 
   946     0215                     SSPCON1         equ	533	;# 
   947     0215                     SSP1CON         equ	533	;# 
   948     0216                     SSP1CON2        equ	534	;# 
   949     0216                     SSPCON2         equ	534	;# 
   950     0217                     SSP1CON3        equ	535	;# 
   951     0217                     SSPCON3         equ	535	;# 
   952     028C                     ODCONA          equ	652	;# 
   953     028E                     ODCONC          equ	654	;# 
   954     0291                     CCPR1           equ	657	;# 
   955     0291                     CCPR1L          equ	657	;# 
   956     0292                     CCPR1H          equ	658	;# 
   957     0293                     CCP1CON         equ	659	;# 
   958     0293                     ECCP1CON        equ	659	;# 
   959     0298                     CCPR2           equ	664	;# 
   960     0298                     CCPR2L          equ	664	;# 
   961     0299                     CCPR2H          equ	665	;# 
   962     029A                     CCP2CON         equ	666	;# 
   963     029A                     ECCP2CON        equ	666	;# 
   964     029E                     CCPTMRS         equ	670	;# 
   965     030C                     SLRCONA         equ	780	;# 
   966     030E                     SLRCONC         equ	782	;# 
   967     038C                     INLVLA          equ	908	;# 
   968     038E                     INLVLC          equ	910	;# 
   969     0391                     IOCAP           equ	913	;# 
   970     0392                     IOCAN           equ	914	;# 
   971     0393                     IOCAF           equ	915	;# 
   972     0397                     IOCCP           equ	919	;# 
   973     0398                     IOCCN           equ	920	;# 
   974     0399                     IOCCF           equ	921	;# 
   975     0415                     TMR4            equ	1045	;# 
   976     0416                     PR4             equ	1046	;# 
   977     0417                     T4CON           equ	1047	;# 
   978     041C                     TMR6            equ	1052	;# 
   979     041D                     PR6             equ	1053	;# 
   980     041E                     T6CON           equ	1054	;# 
   981     0511                     OPA1CON         equ	1297	;# 
   982     0515                     OPA2CON         equ	1301	;# 
   983     0617                     PWM3DCL         equ	1559	;# 
   984     0618                     PWM3DCH         equ	1560	;# 
   985     0619                     PWM3CON         equ	1561	;# 
   986     0619                     PWM3CON0        equ	1561	;# 
   987     061A                     PWM4DCL         equ	1562	;# 
   988     061B                     PWM4DCH         equ	1563	;# 
   989     061C                     PWM4CON         equ	1564	;# 
   990     061C                     PWM4CON0        equ	1564	;# 
   991     0691                     COG1PHR         equ	1681	;# 
   992     0692                     COG1PHF         equ	1682	;# 
   993     0693                     COG1BLKR        equ	1683	;# 
   994     0694                     COG1BLKF        equ	1684	;# 
   995     0695                     COG1DBR         equ	1685	;# 
   996     0696                     COG1DBF         equ	1686	;# 
   997     0697                     COG1CON0        equ	1687	;# 
   998     0698                     COG1CON1        equ	1688	;# 
   999     0699                     COG1RIS         equ	1689	;# 
  1000     069A                     COG1RSIM        equ	1690	;# 
  1001     069B                     COG1FIS         equ	1691	;# 
  1002     069C                     COG1FSIM        equ	1692	;# 
  1003     069D                     COG1ASD0        equ	1693	;# 
  1004     069E                     COG1ASD1        equ	1694	;# 
  1005     069F                     COG1STR         equ	1695	;# 
  1006     0E0F                     PPSLOCK         equ	3599	;# 
  1007     0E10                     INTPPS          equ	3600	;# 
  1008     0E11                     T0CKIPPS        equ	3601	;# 
  1009     0E12                     T1CKIPPS        equ	3602	;# 
  1010     0E13                     T1GPPS          equ	3603	;# 
  1011     0E14                     CCP1PPS         equ	3604	;# 
  1012     0E15                     CCP2PPS         equ	3605	;# 
  1013     0E17                     COGINPPS        equ	3607	;# 
  1014     0E20                     SSPCLKPPS       equ	3616	;# 
  1015     0E21                     SSPDATPPS       equ	3617	;# 
  1016     0E22                     SSPSSPPS        equ	3618	;# 
  1017     0E24                     RXPPS           equ	3620	;# 
  1018     0E25                     CKPPS           equ	3621	;# 
  1019     0E28                     CLCIN0PPS       equ	3624	;# 
  1020     0E29                     CLCIN1PPS       equ	3625	;# 
  1021     0E2A                     CLCIN2PPS       equ	3626	;# 
  1022     0E2B                     CLCIN3PPS       equ	3627	;# 
  1023     0E90                     RA0PPS          equ	3728	;# 
  1024     0E91                     RA1PPS          equ	3729	;# 
  1025     0E92                     RA2PPS          equ	3730	;# 
  1026     0E94                     RA4PPS          equ	3732	;# 
  1027     0E95                     RA5PPS          equ	3733	;# 
  1028     0EA0                     RC0PPS          equ	3744	;# 
  1029     0EA1                     RC1PPS          equ	3745	;# 
  1030     0EA2                     RC2PPS          equ	3746	;# 
  1031     0EA3                     RC3PPS          equ	3747	;# 
  1032     0EA4                     RC4PPS          equ	3748	;# 
  1033     0EA5                     RC5PPS          equ	3749	;# 
  1034     0F0F                     CLCDATA         equ	3855	;# 
  1035     0F10                     CLC1CON         equ	3856	;# 
  1036     0F11                     CLC1POL         equ	3857	;# 
  1037     0F12                     CLC1SEL0        equ	3858	;# 
  1038     0F13                     CLC1SEL1        equ	3859	;# 
  1039     0F14                     CLC1SEL2        equ	3860	;# 
  1040     0F15                     CLC1SEL3        equ	3861	;# 
  1041     0F16                     CLC1GLS0        equ	3862	;# 
  1042     0F17                     CLC1GLS1        equ	3863	;# 
  1043     0F18                     CLC1GLS2        equ	3864	;# 
  1044     0F19                     CLC1GLS3        equ	3865	;# 
  1045     0F1A                     CLC2CON         equ	3866	;# 
  1046     0F1B                     CLC2POL         equ	3867	;# 
  1047     0F1C                     CLC2SEL0        equ	3868	;# 
  1048     0F1D                     CLC2SEL1        equ	3869	;# 
  1049     0F1E                     CLC2SEL2        equ	3870	;# 
  1050     0F1F                     CLC2SEL3        equ	3871	;# 
  1051     0F20                     CLC2GLS0        equ	3872	;# 
  1052     0F21                     CLC2GLS1        equ	3873	;# 
  1053     0F22                     CLC2GLS2        equ	3874	;# 
  1054     0F23                     CLC2GLS3        equ	3875	;# 
  1055     0F24                     CLC3CON         equ	3876	;# 
  1056     0F25                     CLC3POL         equ	3877	;# 
  1057     0F26                     CLC3SEL0        equ	3878	;# 
  1058     0F27                     CLC3SEL1        equ	3879	;# 
  1059     0F28                     CLC3SEL2        equ	3880	;# 
  1060     0F29                     CLC3SEL3        equ	3881	;# 
  1061     0F2A                     CLC3GLS0        equ	3882	;# 
  1062     0F2B                     CLC3GLS1        equ	3883	;# 
  1063     0F2C                     CLC3GLS2        equ	3884	;# 
  1064     0F2D                     CLC3GLS3        equ	3885	;# 
  1065     0F9E                     ICDBK0H         equ	3998	;# 
  1066     0FE4                     STATUS_SHAD     equ	4068	;# 
  1067     0FE5                     WREG_SHAD       equ	4069	;# 
  1068     0FE6                     BSR_SHAD        equ	4070	;# 
  1069     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1070     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1071     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1072     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1073     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1074     0FED                     STKPTR          equ	4077	;# 
  1075     0FEE                     TOSL            equ	4078	;# 
  1076     0FEF                     TOSH            equ	4079	;# 
  1077     0000                     INDF0           equ	0	;# 
  1078     0001                     INDF1           equ	1	;# 
  1079     0002                     PCL             equ	2	;# 
  1080     0003                     STATUS          equ	3	;# 
  1081     0004                     FSR0L           equ	4	;# 
  1082     0005                     FSR0H           equ	5	;# 
  1083     0006                     FSR1L           equ	6	;# 
  1084     0007                     FSR1H           equ	7	;# 
  1085     0008                     BSR             equ	8	;# 
  1086     0009                     WREG            equ	9	;# 
  1087     000A                     PCLATH          equ	10	;# 
  1088     000B                     INTCON          equ	11	;# 
  1089     000C                     PORTA           equ	12	;# 
  1090     000E                     PORTC           equ	14	;# 
  1091     0011                     PIR1            equ	17	;# 
  1092     0012                     PIR2            equ	18	;# 
  1093     0013                     PIR3            equ	19	;# 
  1094     0015                     TMR0            equ	21	;# 
  1095     0016                     TMR1            equ	22	;# 
  1096     0016                     TMR1L           equ	22	;# 
  1097     0017                     TMR1H           equ	23	;# 
  1098     0018                     T1CON           equ	24	;# 
  1099     0019                     T1GCON          equ	25	;# 
  1100     001A                     TMR2            equ	26	;# 
  1101     001B                     PR2             equ	27	;# 
  1102     001C                     T2CON           equ	28	;# 
  1103     008C                     TRISA           equ	140	;# 
  1104     008E                     TRISC           equ	142	;# 
  1105     0091                     PIE1            equ	145	;# 
  1106     0092                     PIE2            equ	146	;# 
  1107     0093                     PIE3            equ	147	;# 
  1108     0095                     OPTION_REG      equ	149	;# 
  1109     0096                     PCON            equ	150	;# 
  1110     0097                     WDTCON          equ	151	;# 
  1111     0098                     OSCTUNE         equ	152	;# 
  1112     0099                     OSCCON          equ	153	;# 
  1113     009A                     OSCSTAT         equ	154	;# 
  1114     009B                     ADRES           equ	155	;# 
  1115     009B                     ADRESL          equ	155	;# 
  1116     009C                     ADRESH          equ	156	;# 
  1117     009D                     ADCON0          equ	157	;# 
  1118     009E                     ADCON1          equ	158	;# 
  1119     009F                     ADCON2          equ	159	;# 
  1120     010C                     LATA            equ	268	;# 
  1121     010E                     LATC            equ	270	;# 
  1122     0111                     CM1CON0         equ	273	;# 
  1123     0112                     CM1CON1         equ	274	;# 
  1124     0113                     CM2CON0         equ	275	;# 
  1125     0114                     CM2CON1         equ	276	;# 
  1126     0115                     CMOUT           equ	277	;# 
  1127     0116                     BORCON          equ	278	;# 
  1128     0117                     FVRCON          equ	279	;# 
  1129     0118                     DAC1CON0        equ	280	;# 
  1130     0119                     DAC1CON1        equ	281	;# 
  1131     011C                     ZCD1CON         equ	284	;# 
  1132     018C                     ANSELA          equ	396	;# 
  1133     018E                     ANSELC          equ	398	;# 
  1134     0191                     PMADR           equ	401	;# 
  1135     0191                     PMADRL          equ	401	;# 
  1136     0192                     PMADRH          equ	402	;# 
  1137     0193                     PMDAT           equ	403	;# 
  1138     0193                     PMDATL          equ	403	;# 
  1139     0194                     PMDATH          equ	404	;# 
  1140     0195                     PMCON1          equ	405	;# 
  1141     0196                     PMCON2          equ	406	;# 
  1142     0197                     VREGCON         equ	407	;# 
  1143     0199                     RC1REG          equ	409	;# 
  1144     0199                     RCREG           equ	409	;# 
  1145     0199                     RCREG1          equ	409	;# 
  1146     019A                     TX1REG          equ	410	;# 
  1147     019A                     TXREG1          equ	410	;# 
  1148     019A                     TXREG           equ	410	;# 
  1149     019B                     SP1BRG          equ	411	;# 
  1150     019B                     SPBRG           equ	411	;# 
  1151     019B                     SP1BRGL         equ	411	;# 
  1152     019B                     SPBRG1          equ	411	;# 
  1153     019B                     SPBRGL          equ	411	;# 
  1154     019C                     SP1BRGH         equ	412	;# 
  1155     019C                     SPBRGH          equ	412	;# 
  1156     019C                     SPBRGH1         equ	412	;# 
  1157     019D                     RC1STA          equ	413	;# 
  1158     019D                     RCSTA1          equ	413	;# 
  1159     019D                     RCSTA           equ	413	;# 
  1160     019E                     TX1STA          equ	414	;# 
  1161     019E                     TXSTA1          equ	414	;# 
  1162     019E                     TXSTA           equ	414	;# 
  1163     019F                     BAUD1CON        equ	415	;# 
  1164     019F                     BAUDCON1        equ	415	;# 
  1165     019F                     BAUDCTL1        equ	415	;# 
  1166     019F                     BAUDCON         equ	415	;# 
  1167     019F                     BAUDCTL         equ	415	;# 
  1168     020C                     WPUA            equ	524	;# 
  1169     020E                     WPUC            equ	526	;# 
  1170     0211                     SSP1BUF         equ	529	;# 
  1171     0211                     SSPBUF          equ	529	;# 
  1172     0212                     SSP1ADD         equ	530	;# 
  1173     0212                     SSPADD          equ	530	;# 
  1174     0213                     SSP1MSK         equ	531	;# 
  1175     0213                     SSPMSK          equ	531	;# 
  1176     0214                     SSP1STAT        equ	532	;# 
  1177     0214                     SSPSTAT         equ	532	;# 
  1178     0215                     SSP1CON1        equ	533	;# 
  1179     0215                     SSPCON          equ	533	;# 
  1180     0215                     SSPCON1         equ	533	;# 
  1181     0215                     SSP1CON         equ	533	;# 
  1182     0216                     SSP1CON2        equ	534	;# 
  1183     0216                     SSPCON2         equ	534	;# 
  1184     0217                     SSP1CON3        equ	535	;# 
  1185     0217                     SSPCON3         equ	535	;# 
  1186     028C                     ODCONA          equ	652	;# 
  1187     028E                     ODCONC          equ	654	;# 
  1188     0291                     CCPR1           equ	657	;# 
  1189     0291                     CCPR1L          equ	657	;# 
  1190     0292                     CCPR1H          equ	658	;# 
  1191     0293                     CCP1CON         equ	659	;# 
  1192     0293                     ECCP1CON        equ	659	;# 
  1193     0298                     CCPR2           equ	664	;# 
  1194     0298                     CCPR2L          equ	664	;# 
  1195     0299                     CCPR2H          equ	665	;# 
  1196     029A                     CCP2CON         equ	666	;# 
  1197     029A                     ECCP2CON        equ	666	;# 
  1198     029E                     CCPTMRS         equ	670	;# 
  1199     030C                     SLRCONA         equ	780	;# 
  1200     030E                     SLRCONC         equ	782	;# 
  1201     038C                     INLVLA          equ	908	;# 
  1202     038E                     INLVLC          equ	910	;# 
  1203     0391                     IOCAP           equ	913	;# 
  1204     0392                     IOCAN           equ	914	;# 
  1205     0393                     IOCAF           equ	915	;# 
  1206     0397                     IOCCP           equ	919	;# 
  1207     0398                     IOCCN           equ	920	;# 
  1208     0399                     IOCCF           equ	921	;# 
  1209     0415                     TMR4            equ	1045	;# 
  1210     0416                     PR4             equ	1046	;# 
  1211     0417                     T4CON           equ	1047	;# 
  1212     041C                     TMR6            equ	1052	;# 
  1213     041D                     PR6             equ	1053	;# 
  1214     041E                     T6CON           equ	1054	;# 
  1215     0511                     OPA1CON         equ	1297	;# 
  1216     0515                     OPA2CON         equ	1301	;# 
  1217     0617                     PWM3DCL         equ	1559	;# 
  1218     0618                     PWM3DCH         equ	1560	;# 
  1219     0619                     PWM3CON         equ	1561	;# 
  1220     0619                     PWM3CON0        equ	1561	;# 
  1221     061A                     PWM4DCL         equ	1562	;# 
  1222     061B                     PWM4DCH         equ	1563	;# 
  1223     061C                     PWM4CON         equ	1564	;# 
  1224     061C                     PWM4CON0        equ	1564	;# 
  1225     0691                     COG1PHR         equ	1681	;# 
  1226     0692                     COG1PHF         equ	1682	;# 
  1227     0693                     COG1BLKR        equ	1683	;# 
  1228     0694                     COG1BLKF        equ	1684	;# 
  1229     0695                     COG1DBR         equ	1685	;# 
  1230     0696                     COG1DBF         equ	1686	;# 
  1231     0697                     COG1CON0        equ	1687	;# 
  1232     0698                     COG1CON1        equ	1688	;# 
  1233     0699                     COG1RIS         equ	1689	;# 
  1234     069A                     COG1RSIM        equ	1690	;# 
  1235     069B                     COG1FIS         equ	1691	;# 
  1236     069C                     COG1FSIM        equ	1692	;# 
  1237     069D                     COG1ASD0        equ	1693	;# 
  1238     069E                     COG1ASD1        equ	1694	;# 
  1239     069F                     COG1STR         equ	1695	;# 
  1240     0E0F                     PPSLOCK         equ	3599	;# 
  1241     0E10                     INTPPS          equ	3600	;# 
  1242     0E11                     T0CKIPPS        equ	3601	;# 
  1243     0E12                     T1CKIPPS        equ	3602	;# 
  1244     0E13                     T1GPPS          equ	3603	;# 
  1245     0E14                     CCP1PPS         equ	3604	;# 
  1246     0E15                     CCP2PPS         equ	3605	;# 
  1247     0E17                     COGINPPS        equ	3607	;# 
  1248     0E20                     SSPCLKPPS       equ	3616	;# 
  1249     0E21                     SSPDATPPS       equ	3617	;# 
  1250     0E22                     SSPSSPPS        equ	3618	;# 
  1251     0E24                     RXPPS           equ	3620	;# 
  1252     0E25                     CKPPS           equ	3621	;# 
  1253     0E28                     CLCIN0PPS       equ	3624	;# 
  1254     0E29                     CLCIN1PPS       equ	3625	;# 
  1255     0E2A                     CLCIN2PPS       equ	3626	;# 
  1256     0E2B                     CLCIN3PPS       equ	3627	;# 
  1257     0E90                     RA0PPS          equ	3728	;# 
  1258     0E91                     RA1PPS          equ	3729	;# 
  1259     0E92                     RA2PPS          equ	3730	;# 
  1260     0E94                     RA4PPS          equ	3732	;# 
  1261     0E95                     RA5PPS          equ	3733	;# 
  1262     0EA0                     RC0PPS          equ	3744	;# 
  1263     0EA1                     RC1PPS          equ	3745	;# 
  1264     0EA2                     RC2PPS          equ	3746	;# 
  1265     0EA3                     RC3PPS          equ	3747	;# 
  1266     0EA4                     RC4PPS          equ	3748	;# 
  1267     0EA5                     RC5PPS          equ	3749	;# 
  1268     0F0F                     CLCDATA         equ	3855	;# 
  1269     0F10                     CLC1CON         equ	3856	;# 
  1270     0F11                     CLC1POL         equ	3857	;# 
  1271     0F12                     CLC1SEL0        equ	3858	;# 
  1272     0F13                     CLC1SEL1        equ	3859	;# 
  1273     0F14                     CLC1SEL2        equ	3860	;# 
  1274     0F15                     CLC1SEL3        equ	3861	;# 
  1275     0F16                     CLC1GLS0        equ	3862	;# 
  1276     0F17                     CLC1GLS1        equ	3863	;# 
  1277     0F18                     CLC1GLS2        equ	3864	;# 
  1278     0F19                     CLC1GLS3        equ	3865	;# 
  1279     0F1A                     CLC2CON         equ	3866	;# 
  1280     0F1B                     CLC2POL         equ	3867	;# 
  1281     0F1C                     CLC2SEL0        equ	3868	;# 
  1282     0F1D                     CLC2SEL1        equ	3869	;# 
  1283     0F1E                     CLC2SEL2        equ	3870	;# 
  1284     0F1F                     CLC2SEL3        equ	3871	;# 
  1285     0F20                     CLC2GLS0        equ	3872	;# 
  1286     0F21                     CLC2GLS1        equ	3873	;# 
  1287     0F22                     CLC2GLS2        equ	3874	;# 
  1288     0F23                     CLC2GLS3        equ	3875	;# 
  1289     0F24                     CLC3CON         equ	3876	;# 
  1290     0F25                     CLC3POL         equ	3877	;# 
  1291     0F26                     CLC3SEL0        equ	3878	;# 
  1292     0F27                     CLC3SEL1        equ	3879	;# 
  1293     0F28                     CLC3SEL2        equ	3880	;# 
  1294     0F29                     CLC3SEL3        equ	3881	;# 
  1295     0F2A                     CLC3GLS0        equ	3882	;# 
  1296     0F2B                     CLC3GLS1        equ	3883	;# 
  1297     0F2C                     CLC3GLS2        equ	3884	;# 
  1298     0F2D                     CLC3GLS3        equ	3885	;# 
  1299     0F9E                     ICDBK0H         equ	3998	;# 
  1300     0FE4                     STATUS_SHAD     equ	4068	;# 
  1301     0FE5                     WREG_SHAD       equ	4069	;# 
  1302     0FE6                     BSR_SHAD        equ	4070	;# 
  1303     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1304     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1305     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1306     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1307     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1308     0FED                     STKPTR          equ	4077	;# 
  1309     0FEE                     TOSL            equ	4078	;# 
  1310     0FEF                     TOSH            equ	4079	;# 
  1311     0000                     INDF0           equ	0	;# 
  1312     0001                     INDF1           equ	1	;# 
  1313     0002                     PCL             equ	2	;# 
  1314     0003                     STATUS          equ	3	;# 
  1315     0004                     FSR0L           equ	4	;# 
  1316     0005                     FSR0H           equ	5	;# 
  1317     0006                     FSR1L           equ	6	;# 
  1318     0007                     FSR1H           equ	7	;# 
  1319     0008                     BSR             equ	8	;# 
  1320     0009                     WREG            equ	9	;# 
  1321     000A                     PCLATH          equ	10	;# 
  1322     000B                     INTCON          equ	11	;# 
  1323     000C                     PORTA           equ	12	;# 
  1324     000E                     PORTC           equ	14	;# 
  1325     0011                     PIR1            equ	17	;# 
  1326     0012                     PIR2            equ	18	;# 
  1327     0013                     PIR3            equ	19	;# 
  1328     0015                     TMR0            equ	21	;# 
  1329     0016                     TMR1            equ	22	;# 
  1330     0016                     TMR1L           equ	22	;# 
  1331     0017                     TMR1H           equ	23	;# 
  1332     0018                     T1CON           equ	24	;# 
  1333     0019                     T1GCON          equ	25	;# 
  1334     001A                     TMR2            equ	26	;# 
  1335     001B                     PR2             equ	27	;# 
  1336     001C                     T2CON           equ	28	;# 
  1337     008C                     TRISA           equ	140	;# 
  1338     008E                     TRISC           equ	142	;# 
  1339     0091                     PIE1            equ	145	;# 
  1340     0092                     PIE2            equ	146	;# 
  1341     0093                     PIE3            equ	147	;# 
  1342     0095                     OPTION_REG      equ	149	;# 
  1343     0096                     PCON            equ	150	;# 
  1344     0097                     WDTCON          equ	151	;# 
  1345     0098                     OSCTUNE         equ	152	;# 
  1346     0099                     OSCCON          equ	153	;# 
  1347     009A                     OSCSTAT         equ	154	;# 
  1348     009B                     ADRES           equ	155	;# 
  1349     009B                     ADRESL          equ	155	;# 
  1350     009C                     ADRESH          equ	156	;# 
  1351     009D                     ADCON0          equ	157	;# 
  1352     009E                     ADCON1          equ	158	;# 
  1353     009F                     ADCON2          equ	159	;# 
  1354     010C                     LATA            equ	268	;# 
  1355     010E                     LATC            equ	270	;# 
  1356     0111                     CM1CON0         equ	273	;# 
  1357     0112                     CM1CON1         equ	274	;# 
  1358     0113                     CM2CON0         equ	275	;# 
  1359     0114                     CM2CON1         equ	276	;# 
  1360     0115                     CMOUT           equ	277	;# 
  1361     0116                     BORCON          equ	278	;# 
  1362     0117                     FVRCON          equ	279	;# 
  1363     0118                     DAC1CON0        equ	280	;# 
  1364     0119                     DAC1CON1        equ	281	;# 
  1365     011C                     ZCD1CON         equ	284	;# 
  1366     018C                     ANSELA          equ	396	;# 
  1367     018E                     ANSELC          equ	398	;# 
  1368     0191                     PMADR           equ	401	;# 
  1369     0191                     PMADRL          equ	401	;# 
  1370     0192                     PMADRH          equ	402	;# 
  1371     0193                     PMDAT           equ	403	;# 
  1372     0193                     PMDATL          equ	403	;# 
  1373     0194                     PMDATH          equ	404	;# 
  1374     0195                     PMCON1          equ	405	;# 
  1375     0196                     PMCON2          equ	406	;# 
  1376     0197                     VREGCON         equ	407	;# 
  1377     0199                     RC1REG          equ	409	;# 
  1378     0199                     RCREG           equ	409	;# 
  1379     0199                     RCREG1          equ	409	;# 
  1380     019A                     TX1REG          equ	410	;# 
  1381     019A                     TXREG1          equ	410	;# 
  1382     019A                     TXREG           equ	410	;# 
  1383     019B                     SP1BRG          equ	411	;# 
  1384     019B                     SPBRG           equ	411	;# 
  1385     019B                     SP1BRGL         equ	411	;# 
  1386     019B                     SPBRG1          equ	411	;# 
  1387     019B                     SPBRGL          equ	411	;# 
  1388     019C                     SP1BRGH         equ	412	;# 
  1389     019C                     SPBRGH          equ	412	;# 
  1390     019C                     SPBRGH1         equ	412	;# 
  1391     019D                     RC1STA          equ	413	;# 
  1392     019D                     RCSTA1          equ	413	;# 
  1393     019D                     RCSTA           equ	413	;# 
  1394     019E                     TX1STA          equ	414	;# 
  1395     019E                     TXSTA1          equ	414	;# 
  1396     019E                     TXSTA           equ	414	;# 
  1397     019F                     BAUD1CON        equ	415	;# 
  1398     019F                     BAUDCON1        equ	415	;# 
  1399     019F                     BAUDCTL1        equ	415	;# 
  1400     019F                     BAUDCON         equ	415	;# 
  1401     019F                     BAUDCTL         equ	415	;# 
  1402     020C                     WPUA            equ	524	;# 
  1403     020E                     WPUC            equ	526	;# 
  1404     0211                     SSP1BUF         equ	529	;# 
  1405     0211                     SSPBUF          equ	529	;# 
  1406     0212                     SSP1ADD         equ	530	;# 
  1407     0212                     SSPADD          equ	530	;# 
  1408     0213                     SSP1MSK         equ	531	;# 
  1409     0213                     SSPMSK          equ	531	;# 
  1410     0214                     SSP1STAT        equ	532	;# 
  1411     0214                     SSPSTAT         equ	532	;# 
  1412     0215                     SSP1CON1        equ	533	;# 
  1413     0215                     SSPCON          equ	533	;# 
  1414     0215                     SSPCON1         equ	533	;# 
  1415     0215                     SSP1CON         equ	533	;# 
  1416     0216                     SSP1CON2        equ	534	;# 
  1417     0216                     SSPCON2         equ	534	;# 
  1418     0217                     SSP1CON3        equ	535	;# 
  1419     0217                     SSPCON3         equ	535	;# 
  1420     028C                     ODCONA          equ	652	;# 
  1421     028E                     ODCONC          equ	654	;# 
  1422     0291                     CCPR1           equ	657	;# 
  1423     0291                     CCPR1L          equ	657	;# 
  1424     0292                     CCPR1H          equ	658	;# 
  1425     0293                     CCP1CON         equ	659	;# 
  1426     0293                     ECCP1CON        equ	659	;# 
  1427     0298                     CCPR2           equ	664	;# 
  1428     0298                     CCPR2L          equ	664	;# 
  1429     0299                     CCPR2H          equ	665	;# 
  1430     029A                     CCP2CON         equ	666	;# 
  1431     029A                     ECCP2CON        equ	666	;# 
  1432     029E                     CCPTMRS         equ	670	;# 
  1433     030C                     SLRCONA         equ	780	;# 
  1434     030E                     SLRCONC         equ	782	;# 
  1435     038C                     INLVLA          equ	908	;# 
  1436     038E                     INLVLC          equ	910	;# 
  1437     0391                     IOCAP           equ	913	;# 
  1438     0392                     IOCAN           equ	914	;# 
  1439     0393                     IOCAF           equ	915	;# 
  1440     0397                     IOCCP           equ	919	;# 
  1441     0398                     IOCCN           equ	920	;# 
  1442     0399                     IOCCF           equ	921	;# 
  1443     0415                     TMR4            equ	1045	;# 
  1444     0416                     PR4             equ	1046	;# 
  1445     0417                     T4CON           equ	1047	;# 
  1446     041C                     TMR6            equ	1052	;# 
  1447     041D                     PR6             equ	1053	;# 
  1448     041E                     T6CON           equ	1054	;# 
  1449     0511                     OPA1CON         equ	1297	;# 
  1450     0515                     OPA2CON         equ	1301	;# 
  1451     0617                     PWM3DCL         equ	1559	;# 
  1452     0618                     PWM3DCH         equ	1560	;# 
  1453     0619                     PWM3CON         equ	1561	;# 
  1454     0619                     PWM3CON0        equ	1561	;# 
  1455     061A                     PWM4DCL         equ	1562	;# 
  1456     061B                     PWM4DCH         equ	1563	;# 
  1457     061C                     PWM4CON         equ	1564	;# 
  1458     061C                     PWM4CON0        equ	1564	;# 
  1459     0691                     COG1PHR         equ	1681	;# 
  1460     0692                     COG1PHF         equ	1682	;# 
  1461     0693                     COG1BLKR        equ	1683	;# 
  1462     0694                     COG1BLKF        equ	1684	;# 
  1463     0695                     COG1DBR         equ	1685	;# 
  1464     0696                     COG1DBF         equ	1686	;# 
  1465     0697                     COG1CON0        equ	1687	;# 
  1466     0698                     COG1CON1        equ	1688	;# 
  1467     0699                     COG1RIS         equ	1689	;# 
  1468     069A                     COG1RSIM        equ	1690	;# 
  1469     069B                     COG1FIS         equ	1691	;# 
  1470     069C                     COG1FSIM        equ	1692	;# 
  1471     069D                     COG1ASD0        equ	1693	;# 
  1472     069E                     COG1ASD1        equ	1694	;# 
  1473     069F                     COG1STR         equ	1695	;# 
  1474     0E0F                     PPSLOCK         equ	3599	;# 
  1475     0E10                     INTPPS          equ	3600	;# 
  1476     0E11                     T0CKIPPS        equ	3601	;# 
  1477     0E12                     T1CKIPPS        equ	3602	;# 
  1478     0E13                     T1GPPS          equ	3603	;# 
  1479     0E14                     CCP1PPS         equ	3604	;# 
  1480     0E15                     CCP2PPS         equ	3605	;# 
  1481     0E17                     COGINPPS        equ	3607	;# 
  1482     0E20                     SSPCLKPPS       equ	3616	;# 
  1483     0E21                     SSPDATPPS       equ	3617	;# 
  1484     0E22                     SSPSSPPS        equ	3618	;# 
  1485     0E24                     RXPPS           equ	3620	;# 
  1486     0E25                     CKPPS           equ	3621	;# 
  1487     0E28                     CLCIN0PPS       equ	3624	;# 
  1488     0E29                     CLCIN1PPS       equ	3625	;# 
  1489     0E2A                     CLCIN2PPS       equ	3626	;# 
  1490     0E2B                     CLCIN3PPS       equ	3627	;# 
  1491     0E90                     RA0PPS          equ	3728	;# 
  1492     0E91                     RA1PPS          equ	3729	;# 
  1493     0E92                     RA2PPS          equ	3730	;# 
  1494     0E94                     RA4PPS          equ	3732	;# 
  1495     0E95                     RA5PPS          equ	3733	;# 
  1496     0EA0                     RC0PPS          equ	3744	;# 
  1497     0EA1                     RC1PPS          equ	3745	;# 
  1498     0EA2                     RC2PPS          equ	3746	;# 
  1499     0EA3                     RC3PPS          equ	3747	;# 
  1500     0EA4                     RC4PPS          equ	3748	;# 
  1501     0EA5                     RC5PPS          equ	3749	;# 
  1502     0F0F                     CLCDATA         equ	3855	;# 
  1503     0F10                     CLC1CON         equ	3856	;# 
  1504     0F11                     CLC1POL         equ	3857	;# 
  1505     0F12                     CLC1SEL0        equ	3858	;# 
  1506     0F13                     CLC1SEL1        equ	3859	;# 
  1507     0F14                     CLC1SEL2        equ	3860	;# 
  1508     0F15                     CLC1SEL3        equ	3861	;# 
  1509     0F16                     CLC1GLS0        equ	3862	;# 
  1510     0F17                     CLC1GLS1        equ	3863	;# 
  1511     0F18                     CLC1GLS2        equ	3864	;# 
  1512     0F19                     CLC1GLS3        equ	3865	;# 
  1513     0F1A                     CLC2CON         equ	3866	;# 
  1514     0F1B                     CLC2POL         equ	3867	;# 
  1515     0F1C                     CLC2SEL0        equ	3868	;# 
  1516     0F1D                     CLC2SEL1        equ	3869	;# 
  1517     0F1E                     CLC2SEL2        equ	3870	;# 
  1518     0F1F                     CLC2SEL3        equ	3871	;# 
  1519     0F20                     CLC2GLS0        equ	3872	;# 
  1520     0F21                     CLC2GLS1        equ	3873	;# 
  1521     0F22                     CLC2GLS2        equ	3874	;# 
  1522     0F23                     CLC2GLS3        equ	3875	;# 
  1523     0F24                     CLC3CON         equ	3876	;# 
  1524     0F25                     CLC3POL         equ	3877	;# 
  1525     0F26                     CLC3SEL0        equ	3878	;# 
  1526     0F27                     CLC3SEL1        equ	3879	;# 
  1527     0F28                     CLC3SEL2        equ	3880	;# 
  1528     0F29                     CLC3SEL3        equ	3881	;# 
  1529     0F2A                     CLC3GLS0        equ	3882	;# 
  1530     0F2B                     CLC3GLS1        equ	3883	;# 
  1531     0F2C                     CLC3GLS2        equ	3884	;# 
  1532     0F2D                     CLC3GLS3        equ	3885	;# 
  1533     0F9E                     ICDBK0H         equ	3998	;# 
  1534     0FE4                     STATUS_SHAD     equ	4068	;# 
  1535     0FE5                     WREG_SHAD       equ	4069	;# 
  1536     0FE6                     BSR_SHAD        equ	4070	;# 
  1537     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1538     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1539     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1540     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1541     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1542     0FED                     STKPTR          equ	4077	;# 
  1543     0FEE                     TOSL            equ	4078	;# 
  1544     0FEF                     TOSH            equ	4079	;# 
  1545     0000                     INDF0           equ	0	;# 
  1546     0001                     INDF1           equ	1	;# 
  1547     0002                     PCL             equ	2	;# 
  1548     0003                     STATUS          equ	3	;# 
  1549     0004                     FSR0L           equ	4	;# 
  1550     0005                     FSR0H           equ	5	;# 
  1551     0006                     FSR1L           equ	6	;# 
  1552     0007                     FSR1H           equ	7	;# 
  1553     0008                     BSR             equ	8	;# 
  1554     0009                     WREG            equ	9	;# 
  1555     000A                     PCLATH          equ	10	;# 
  1556     000B                     INTCON          equ	11	;# 
  1557     000C                     PORTA           equ	12	;# 
  1558     000E                     PORTC           equ	14	;# 
  1559     0011                     PIR1            equ	17	;# 
  1560     0012                     PIR2            equ	18	;# 
  1561     0013                     PIR3            equ	19	;# 
  1562     0015                     TMR0            equ	21	;# 
  1563     0016                     TMR1            equ	22	;# 
  1564     0016                     TMR1L           equ	22	;# 
  1565     0017                     TMR1H           equ	23	;# 
  1566     0018                     T1CON           equ	24	;# 
  1567     0019                     T1GCON          equ	25	;# 
  1568     001A                     TMR2            equ	26	;# 
  1569     001B                     PR2             equ	27	;# 
  1570     001C                     T2CON           equ	28	;# 
  1571     008C                     TRISA           equ	140	;# 
  1572     008E                     TRISC           equ	142	;# 
  1573     0091                     PIE1            equ	145	;# 
  1574     0092                     PIE2            equ	146	;# 
  1575     0093                     PIE3            equ	147	;# 
  1576     0095                     OPTION_REG      equ	149	;# 
  1577     0096                     PCON            equ	150	;# 
  1578     0097                     WDTCON          equ	151	;# 
  1579     0098                     OSCTUNE         equ	152	;# 
  1580     0099                     OSCCON          equ	153	;# 
  1581     009A                     OSCSTAT         equ	154	;# 
  1582     009B                     ADRES           equ	155	;# 
  1583     009B                     ADRESL          equ	155	;# 
  1584     009C                     ADRESH          equ	156	;# 
  1585     009D                     ADCON0          equ	157	;# 
  1586     009E                     ADCON1          equ	158	;# 
  1587     009F                     ADCON2          equ	159	;# 
  1588     010C                     LATA            equ	268	;# 
  1589     010E                     LATC            equ	270	;# 
  1590     0111                     CM1CON0         equ	273	;# 
  1591     0112                     CM1CON1         equ	274	;# 
  1592     0113                     CM2CON0         equ	275	;# 
  1593     0114                     CM2CON1         equ	276	;# 
  1594     0115                     CMOUT           equ	277	;# 
  1595     0116                     BORCON          equ	278	;# 
  1596     0117                     FVRCON          equ	279	;# 
  1597     0118                     DAC1CON0        equ	280	;# 
  1598     0119                     DAC1CON1        equ	281	;# 
  1599     011C                     ZCD1CON         equ	284	;# 
  1600     018C                     ANSELA          equ	396	;# 
  1601     018E                     ANSELC          equ	398	;# 
  1602     0191                     PMADR           equ	401	;# 
  1603     0191                     PMADRL          equ	401	;# 
  1604     0192                     PMADRH          equ	402	;# 
  1605     0193                     PMDAT           equ	403	;# 
  1606     0193                     PMDATL          equ	403	;# 
  1607     0194                     PMDATH          equ	404	;# 
  1608     0195                     PMCON1          equ	405	;# 
  1609     0196                     PMCON2          equ	406	;# 
  1610     0197                     VREGCON         equ	407	;# 
  1611     0199                     RC1REG          equ	409	;# 
  1612     0199                     RCREG           equ	409	;# 
  1613     0199                     RCREG1          equ	409	;# 
  1614     019A                     TX1REG          equ	410	;# 
  1615     019A                     TXREG1          equ	410	;# 
  1616     019A                     TXREG           equ	410	;# 
  1617     019B                     SP1BRG          equ	411	;# 
  1618     019B                     SPBRG           equ	411	;# 
  1619     019B                     SP1BRGL         equ	411	;# 
  1620     019B                     SPBRG1          equ	411	;# 
  1621     019B                     SPBRGL          equ	411	;# 
  1622     019C                     SP1BRGH         equ	412	;# 
  1623     019C                     SPBRGH          equ	412	;# 
  1624     019C                     SPBRGH1         equ	412	;# 
  1625     019D                     RC1STA          equ	413	;# 
  1626     019D                     RCSTA1          equ	413	;# 
  1627     019D                     RCSTA           equ	413	;# 
  1628     019E                     TX1STA          equ	414	;# 
  1629     019E                     TXSTA1          equ	414	;# 
  1630     019E                     TXSTA           equ	414	;# 
  1631     019F                     BAUD1CON        equ	415	;# 
  1632     019F                     BAUDCON1        equ	415	;# 
  1633     019F                     BAUDCTL1        equ	415	;# 
  1634     019F                     BAUDCON         equ	415	;# 
  1635     019F                     BAUDCTL         equ	415	;# 
  1636     020C                     WPUA            equ	524	;# 
  1637     020E                     WPUC            equ	526	;# 
  1638     0211                     SSP1BUF         equ	529	;# 
  1639     0211                     SSPBUF          equ	529	;# 
  1640     0212                     SSP1ADD         equ	530	;# 
  1641     0212                     SSPADD          equ	530	;# 
  1642     0213                     SSP1MSK         equ	531	;# 
  1643     0213                     SSPMSK          equ	531	;# 
  1644     0214                     SSP1STAT        equ	532	;# 
  1645     0214                     SSPSTAT         equ	532	;# 
  1646     0215                     SSP1CON1        equ	533	;# 
  1647     0215                     SSPCON          equ	533	;# 
  1648     0215                     SSPCON1         equ	533	;# 
  1649     0215                     SSP1CON         equ	533	;# 
  1650     0216                     SSP1CON2        equ	534	;# 
  1651     0216                     SSPCON2         equ	534	;# 
  1652     0217                     SSP1CON3        equ	535	;# 
  1653     0217                     SSPCON3         equ	535	;# 
  1654     028C                     ODCONA          equ	652	;# 
  1655     028E                     ODCONC          equ	654	;# 
  1656     0291                     CCPR1           equ	657	;# 
  1657     0291                     CCPR1L          equ	657	;# 
  1658     0292                     CCPR1H          equ	658	;# 
  1659     0293                     CCP1CON         equ	659	;# 
  1660     0293                     ECCP1CON        equ	659	;# 
  1661     0298                     CCPR2           equ	664	;# 
  1662     0298                     CCPR2L          equ	664	;# 
  1663     0299                     CCPR2H          equ	665	;# 
  1664     029A                     CCP2CON         equ	666	;# 
  1665     029A                     ECCP2CON        equ	666	;# 
  1666     029E                     CCPTMRS         equ	670	;# 
  1667     030C                     SLRCONA         equ	780	;# 
  1668     030E                     SLRCONC         equ	782	;# 
  1669     038C                     INLVLA          equ	908	;# 
  1670     038E                     INLVLC          equ	910	;# 
  1671     0391                     IOCAP           equ	913	;# 
  1672     0392                     IOCAN           equ	914	;# 
  1673     0393                     IOCAF           equ	915	;# 
  1674     0397                     IOCCP           equ	919	;# 
  1675     0398                     IOCCN           equ	920	;# 
  1676     0399                     IOCCF           equ	921	;# 
  1677     0415                     TMR4            equ	1045	;# 
  1678     0416                     PR4             equ	1046	;# 
  1679     0417                     T4CON           equ	1047	;# 
  1680     041C                     TMR6            equ	1052	;# 
  1681     041D                     PR6             equ	1053	;# 
  1682     041E                     T6CON           equ	1054	;# 
  1683     0511                     OPA1CON         equ	1297	;# 
  1684     0515                     OPA2CON         equ	1301	;# 
  1685     0617                     PWM3DCL         equ	1559	;# 
  1686     0618                     PWM3DCH         equ	1560	;# 
  1687     0619                     PWM3CON         equ	1561	;# 
  1688     0619                     PWM3CON0        equ	1561	;# 
  1689     061A                     PWM4DCL         equ	1562	;# 
  1690     061B                     PWM4DCH         equ	1563	;# 
  1691     061C                     PWM4CON         equ	1564	;# 
  1692     061C                     PWM4CON0        equ	1564	;# 
  1693     0691                     COG1PHR         equ	1681	;# 
  1694     0692                     COG1PHF         equ	1682	;# 
  1695     0693                     COG1BLKR        equ	1683	;# 
  1696     0694                     COG1BLKF        equ	1684	;# 
  1697     0695                     COG1DBR         equ	1685	;# 
  1698     0696                     COG1DBF         equ	1686	;# 
  1699     0697                     COG1CON0        equ	1687	;# 
  1700     0698                     COG1CON1        equ	1688	;# 
  1701     0699                     COG1RIS         equ	1689	;# 
  1702     069A                     COG1RSIM        equ	1690	;# 
  1703     069B                     COG1FIS         equ	1691	;# 
  1704     069C                     COG1FSIM        equ	1692	;# 
  1705     069D                     COG1ASD0        equ	1693	;# 
  1706     069E                     COG1ASD1        equ	1694	;# 
  1707     069F                     COG1STR         equ	1695	;# 
  1708     0E0F                     PPSLOCK         equ	3599	;# 
  1709     0E10                     INTPPS          equ	3600	;# 
  1710     0E11                     T0CKIPPS        equ	3601	;# 
  1711     0E12                     T1CKIPPS        equ	3602	;# 
  1712     0E13                     T1GPPS          equ	3603	;# 
  1713     0E14                     CCP1PPS         equ	3604	;# 
  1714     0E15                     CCP2PPS         equ	3605	;# 
  1715     0E17                     COGINPPS        equ	3607	;# 
  1716     0E20                     SSPCLKPPS       equ	3616	;# 
  1717     0E21                     SSPDATPPS       equ	3617	;# 
  1718     0E22                     SSPSSPPS        equ	3618	;# 
  1719     0E24                     RXPPS           equ	3620	;# 
  1720     0E25                     CKPPS           equ	3621	;# 
  1721     0E28                     CLCIN0PPS       equ	3624	;# 
  1722     0E29                     CLCIN1PPS       equ	3625	;# 
  1723     0E2A                     CLCIN2PPS       equ	3626	;# 
  1724     0E2B                     CLCIN3PPS       equ	3627	;# 
  1725     0E90                     RA0PPS          equ	3728	;# 
  1726     0E91                     RA1PPS          equ	3729	;# 
  1727     0E92                     RA2PPS          equ	3730	;# 
  1728     0E94                     RA4PPS          equ	3732	;# 
  1729     0E95                     RA5PPS          equ	3733	;# 
  1730     0EA0                     RC0PPS          equ	3744	;# 
  1731     0EA1                     RC1PPS          equ	3745	;# 
  1732     0EA2                     RC2PPS          equ	3746	;# 
  1733     0EA3                     RC3PPS          equ	3747	;# 
  1734     0EA4                     RC4PPS          equ	3748	;# 
  1735     0EA5                     RC5PPS          equ	3749	;# 
  1736     0F0F                     CLCDATA         equ	3855	;# 
  1737     0F10                     CLC1CON         equ	3856	;# 
  1738     0F11                     CLC1POL         equ	3857	;# 
  1739     0F12                     CLC1SEL0        equ	3858	;# 
  1740     0F13                     CLC1SEL1        equ	3859	;# 
  1741     0F14                     CLC1SEL2        equ	3860	;# 
  1742     0F15                     CLC1SEL3        equ	3861	;# 
  1743     0F16                     CLC1GLS0        equ	3862	;# 
  1744     0F17                     CLC1GLS1        equ	3863	;# 
  1745     0F18                     CLC1GLS2        equ	3864	;# 
  1746     0F19                     CLC1GLS3        equ	3865	;# 
  1747     0F1A                     CLC2CON         equ	3866	;# 
  1748     0F1B                     CLC2POL         equ	3867	;# 
  1749     0F1C                     CLC2SEL0        equ	3868	;# 
  1750     0F1D                     CLC2SEL1        equ	3869	;# 
  1751     0F1E                     CLC2SEL2        equ	3870	;# 
  1752     0F1F                     CLC2SEL3        equ	3871	;# 
  1753     0F20                     CLC2GLS0        equ	3872	;# 
  1754     0F21                     CLC2GLS1        equ	3873	;# 
  1755     0F22                     CLC2GLS2        equ	3874	;# 
  1756     0F23                     CLC2GLS3        equ	3875	;# 
  1757     0F24                     CLC3CON         equ	3876	;# 
  1758     0F25                     CLC3POL         equ	3877	;# 
  1759     0F26                     CLC3SEL0        equ	3878	;# 
  1760     0F27                     CLC3SEL1        equ	3879	;# 
  1761     0F28                     CLC3SEL2        equ	3880	;# 
  1762     0F29                     CLC3SEL3        equ	3881	;# 
  1763     0F2A                     CLC3GLS0        equ	3882	;# 
  1764     0F2B                     CLC3GLS1        equ	3883	;# 
  1765     0F2C                     CLC3GLS2        equ	3884	;# 
  1766     0F2D                     CLC3GLS3        equ	3885	;# 
  1767     0F9E                     ICDBK0H         equ	3998	;# 
  1768     0FE4                     STATUS_SHAD     equ	4068	;# 
  1769     0FE5                     WREG_SHAD       equ	4069	;# 
  1770     0FE6                     BSR_SHAD        equ	4070	;# 
  1771     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1772     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1773     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1774     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1775     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1776     0FED                     STKPTR          equ	4077	;# 
  1777     0FEE                     TOSL            equ	4078	;# 
  1778     0FEF                     TOSH            equ	4079	;# 
  1779     0000                     INDF0           equ	0	;# 
  1780     0001                     INDF1           equ	1	;# 
  1781     0002                     PCL             equ	2	;# 
  1782     0003                     STATUS          equ	3	;# 
  1783     0004                     FSR0L           equ	4	;# 
  1784     0005                     FSR0H           equ	5	;# 
  1785     0006                     FSR1L           equ	6	;# 
  1786     0007                     FSR1H           equ	7	;# 
  1787     0008                     BSR             equ	8	;# 
  1788     0009                     WREG            equ	9	;# 
  1789     000A                     PCLATH          equ	10	;# 
  1790     000B                     INTCON          equ	11	;# 
  1791     000C                     PORTA           equ	12	;# 
  1792     000E                     PORTC           equ	14	;# 
  1793     0011                     PIR1            equ	17	;# 
  1794     0012                     PIR2            equ	18	;# 
  1795     0013                     PIR3            equ	19	;# 
  1796     0015                     TMR0            equ	21	;# 
  1797     0016                     TMR1            equ	22	;# 
  1798     0016                     TMR1L           equ	22	;# 
  1799     0017                     TMR1H           equ	23	;# 
  1800     0018                     T1CON           equ	24	;# 
  1801     0019                     T1GCON          equ	25	;# 
  1802     001A                     TMR2            equ	26	;# 
  1803     001B                     PR2             equ	27	;# 
  1804     001C                     T2CON           equ	28	;# 
  1805     008C                     TRISA           equ	140	;# 
  1806     008E                     TRISC           equ	142	;# 
  1807     0091                     PIE1            equ	145	;# 
  1808     0092                     PIE2            equ	146	;# 
  1809     0093                     PIE3            equ	147	;# 
  1810     0095                     OPTION_REG      equ	149	;# 
  1811     0096                     PCON            equ	150	;# 
  1812     0097                     WDTCON          equ	151	;# 
  1813     0098                     OSCTUNE         equ	152	;# 
  1814     0099                     OSCCON          equ	153	;# 
  1815     009A                     OSCSTAT         equ	154	;# 
  1816     009B                     ADRES           equ	155	;# 
  1817     009B                     ADRESL          equ	155	;# 
  1818     009C                     ADRESH          equ	156	;# 
  1819     009D                     ADCON0          equ	157	;# 
  1820     009E                     ADCON1          equ	158	;# 
  1821     009F                     ADCON2          equ	159	;# 
  1822     010C                     LATA            equ	268	;# 
  1823     010E                     LATC            equ	270	;# 
  1824     0111                     CM1CON0         equ	273	;# 
  1825     0112                     CM1CON1         equ	274	;# 
  1826     0113                     CM2CON0         equ	275	;# 
  1827     0114                     CM2CON1         equ	276	;# 
  1828     0115                     CMOUT           equ	277	;# 
  1829     0116                     BORCON          equ	278	;# 
  1830     0117                     FVRCON          equ	279	;# 
  1831     0118                     DAC1CON0        equ	280	;# 
  1832     0119                     DAC1CON1        equ	281	;# 
  1833     011C                     ZCD1CON         equ	284	;# 
  1834     018C                     ANSELA          equ	396	;# 
  1835     018E                     ANSELC          equ	398	;# 
  1836     0191                     PMADR           equ	401	;# 
  1837     0191                     PMADRL          equ	401	;# 
  1838     0192                     PMADRH          equ	402	;# 
  1839     0193                     PMDAT           equ	403	;# 
  1840     0193                     PMDATL          equ	403	;# 
  1841     0194                     PMDATH          equ	404	;# 
  1842     0195                     PMCON1          equ	405	;# 
  1843     0196                     PMCON2          equ	406	;# 
  1844     0197                     VREGCON         equ	407	;# 
  1845     0199                     RC1REG          equ	409	;# 
  1846     0199                     RCREG           equ	409	;# 
  1847     0199                     RCREG1          equ	409	;# 
  1848     019A                     TX1REG          equ	410	;# 
  1849     019A                     TXREG1          equ	410	;# 
  1850     019A                     TXREG           equ	410	;# 
  1851     019B                     SP1BRG          equ	411	;# 
  1852     019B                     SPBRG           equ	411	;# 
  1853     019B                     SP1BRGL         equ	411	;# 
  1854     019B                     SPBRG1          equ	411	;# 
  1855     019B                     SPBRGL          equ	411	;# 
  1856     019C                     SP1BRGH         equ	412	;# 
  1857     019C                     SPBRGH          equ	412	;# 
  1858     019C                     SPBRGH1         equ	412	;# 
  1859     019D                     RC1STA          equ	413	;# 
  1860     019D                     RCSTA1          equ	413	;# 
  1861     019D                     RCSTA           equ	413	;# 
  1862     019E                     TX1STA          equ	414	;# 
  1863     019E                     TXSTA1          equ	414	;# 
  1864     019E                     TXSTA           equ	414	;# 
  1865     019F                     BAUD1CON        equ	415	;# 
  1866     019F                     BAUDCON1        equ	415	;# 
  1867     019F                     BAUDCTL1        equ	415	;# 
  1868     019F                     BAUDCON         equ	415	;# 
  1869     019F                     BAUDCTL         equ	415	;# 
  1870     020C                     WPUA            equ	524	;# 
  1871     020E                     WPUC            equ	526	;# 
  1872     0211                     SSP1BUF         equ	529	;# 
  1873     0211                     SSPBUF          equ	529	;# 
  1874     0212                     SSP1ADD         equ	530	;# 
  1875     0212                     SSPADD          equ	530	;# 
  1876     0213                     SSP1MSK         equ	531	;# 
  1877     0213                     SSPMSK          equ	531	;# 
  1878     0214                     SSP1STAT        equ	532	;# 
  1879     0214                     SSPSTAT         equ	532	;# 
  1880     0215                     SSP1CON1        equ	533	;# 
  1881     0215                     SSPCON          equ	533	;# 
  1882     0215                     SSPCON1         equ	533	;# 
  1883     0215                     SSP1CON         equ	533	;# 
  1884     0216                     SSP1CON2        equ	534	;# 
  1885     0216                     SSPCON2         equ	534	;# 
  1886     0217                     SSP1CON3        equ	535	;# 
  1887     0217                     SSPCON3         equ	535	;# 
  1888     028C                     ODCONA          equ	652	;# 
  1889     028E                     ODCONC          equ	654	;# 
  1890     0291                     CCPR1           equ	657	;# 
  1891     0291                     CCPR1L          equ	657	;# 
  1892     0292                     CCPR1H          equ	658	;# 
  1893     0293                     CCP1CON         equ	659	;# 
  1894     0293                     ECCP1CON        equ	659	;# 
  1895     0298                     CCPR2           equ	664	;# 
  1896     0298                     CCPR2L          equ	664	;# 
  1897     0299                     CCPR2H          equ	665	;# 
  1898     029A                     CCP2CON         equ	666	;# 
  1899     029A                     ECCP2CON        equ	666	;# 
  1900     029E                     CCPTMRS         equ	670	;# 
  1901     030C                     SLRCONA         equ	780	;# 
  1902     030E                     SLRCONC         equ	782	;# 
  1903     038C                     INLVLA          equ	908	;# 
  1904     038E                     INLVLC          equ	910	;# 
  1905     0391                     IOCAP           equ	913	;# 
  1906     0392                     IOCAN           equ	914	;# 
  1907     0393                     IOCAF           equ	915	;# 
  1908     0397                     IOCCP           equ	919	;# 
  1909     0398                     IOCCN           equ	920	;# 
  1910     0399                     IOCCF           equ	921	;# 
  1911     0415                     TMR4            equ	1045	;# 
  1912     0416                     PR4             equ	1046	;# 
  1913     0417                     T4CON           equ	1047	;# 
  1914     041C                     TMR6            equ	1052	;# 
  1915     041D                     PR6             equ	1053	;# 
  1916     041E                     T6CON           equ	1054	;# 
  1917     0511                     OPA1CON         equ	1297	;# 
  1918     0515                     OPA2CON         equ	1301	;# 
  1919     0617                     PWM3DCL         equ	1559	;# 
  1920     0618                     PWM3DCH         equ	1560	;# 
  1921     0619                     PWM3CON         equ	1561	;# 
  1922     0619                     PWM3CON0        equ	1561	;# 
  1923     061A                     PWM4DCL         equ	1562	;# 
  1924     061B                     PWM4DCH         equ	1563	;# 
  1925     061C                     PWM4CON         equ	1564	;# 
  1926     061C                     PWM4CON0        equ	1564	;# 
  1927     0691                     COG1PHR         equ	1681	;# 
  1928     0692                     COG1PHF         equ	1682	;# 
  1929     0693                     COG1BLKR        equ	1683	;# 
  1930     0694                     COG1BLKF        equ	1684	;# 
  1931     0695                     COG1DBR         equ	1685	;# 
  1932     0696                     COG1DBF         equ	1686	;# 
  1933     0697                     COG1CON0        equ	1687	;# 
  1934     0698                     COG1CON1        equ	1688	;# 
  1935     0699                     COG1RIS         equ	1689	;# 
  1936     069A                     COG1RSIM        equ	1690	;# 
  1937     069B                     COG1FIS         equ	1691	;# 
  1938     069C                     COG1FSIM        equ	1692	;# 
  1939     069D                     COG1ASD0        equ	1693	;# 
  1940     069E                     COG1ASD1        equ	1694	;# 
  1941     069F                     COG1STR         equ	1695	;# 
  1942     0E0F                     PPSLOCK         equ	3599	;# 
  1943     0E10                     INTPPS          equ	3600	;# 
  1944     0E11                     T0CKIPPS        equ	3601	;# 
  1945     0E12                     T1CKIPPS        equ	3602	;# 
  1946     0E13                     T1GPPS          equ	3603	;# 
  1947     0E14                     CCP1PPS         equ	3604	;# 
  1948     0E15                     CCP2PPS         equ	3605	;# 
  1949     0E17                     COGINPPS        equ	3607	;# 
  1950     0E20                     SSPCLKPPS       equ	3616	;# 
  1951     0E21                     SSPDATPPS       equ	3617	;# 
  1952     0E22                     SSPSSPPS        equ	3618	;# 
  1953     0E24                     RXPPS           equ	3620	;# 
  1954     0E25                     CKPPS           equ	3621	;# 
  1955     0E28                     CLCIN0PPS       equ	3624	;# 
  1956     0E29                     CLCIN1PPS       equ	3625	;# 
  1957     0E2A                     CLCIN2PPS       equ	3626	;# 
  1958     0E2B                     CLCIN3PPS       equ	3627	;# 
  1959     0E90                     RA0PPS          equ	3728	;# 
  1960     0E91                     RA1PPS          equ	3729	;# 
  1961     0E92                     RA2PPS          equ	3730	;# 
  1962     0E94                     RA4PPS          equ	3732	;# 
  1963     0E95                     RA5PPS          equ	3733	;# 
  1964     0EA0                     RC0PPS          equ	3744	;# 
  1965     0EA1                     RC1PPS          equ	3745	;# 
  1966     0EA2                     RC2PPS          equ	3746	;# 
  1967     0EA3                     RC3PPS          equ	3747	;# 
  1968     0EA4                     RC4PPS          equ	3748	;# 
  1969     0EA5                     RC5PPS          equ	3749	;# 
  1970     0F0F                     CLCDATA         equ	3855	;# 
  1971     0F10                     CLC1CON         equ	3856	;# 
  1972     0F11                     CLC1POL         equ	3857	;# 
  1973     0F12                     CLC1SEL0        equ	3858	;# 
  1974     0F13                     CLC1SEL1        equ	3859	;# 
  1975     0F14                     CLC1SEL2        equ	3860	;# 
  1976     0F15                     CLC1SEL3        equ	3861	;# 
  1977     0F16                     CLC1GLS0        equ	3862	;# 
  1978     0F17                     CLC1GLS1        equ	3863	;# 
  1979     0F18                     CLC1GLS2        equ	3864	;# 
  1980     0F19                     CLC1GLS3        equ	3865	;# 
  1981     0F1A                     CLC2CON         equ	3866	;# 
  1982     0F1B                     CLC2POL         equ	3867	;# 
  1983     0F1C                     CLC2SEL0        equ	3868	;# 
  1984     0F1D                     CLC2SEL1        equ	3869	;# 
  1985     0F1E                     CLC2SEL2        equ	3870	;# 
  1986     0F1F                     CLC2SEL3        equ	3871	;# 
  1987     0F20                     CLC2GLS0        equ	3872	;# 
  1988     0F21                     CLC2GLS1        equ	3873	;# 
  1989     0F22                     CLC2GLS2        equ	3874	;# 
  1990     0F23                     CLC2GLS3        equ	3875	;# 
  1991     0F24                     CLC3CON         equ	3876	;# 
  1992     0F25                     CLC3POL         equ	3877	;# 
  1993     0F26                     CLC3SEL0        equ	3878	;# 
  1994     0F27                     CLC3SEL1        equ	3879	;# 
  1995     0F28                     CLC3SEL2        equ	3880	;# 
  1996     0F29                     CLC3SEL3        equ	3881	;# 
  1997     0F2A                     CLC3GLS0        equ	3882	;# 
  1998     0F2B                     CLC3GLS1        equ	3883	;# 
  1999     0F2C                     CLC3GLS2        equ	3884	;# 
  2000     0F2D                     CLC3GLS3        equ	3885	;# 
  2001     0F9E                     ICDBK0H         equ	3998	;# 
  2002     0FE4                     STATUS_SHAD     equ	4068	;# 
  2003     0FE5                     WREG_SHAD       equ	4069	;# 
  2004     0FE6                     BSR_SHAD        equ	4070	;# 
  2005     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2006     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2007     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2008     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2009     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2010     0FED                     STKPTR          equ	4077	;# 
  2011     0FEE                     TOSL            equ	4078	;# 
  2012     0FEF                     TOSH            equ	4079	;# 
  2013                           
  2014 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  2015     0000                     _INT_DefaultInterruptHandler equ	0
  2016                           
  2017 ;; Function _EUSART_Deinitialize is unused but had its address taken
  2018     0000                     _EUSART_Deinitialize equ	0
  2019                           
  2020 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  2021     0000                     _EUSART_TransmitEnable equ	0
  2022                           
  2023 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  2024     0000                     _EUSART_TransmitDisable equ	0
  2025                           
  2026 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  2027     0000                     _EUSART_AutoBaudSet equ	0
  2028                           
  2029 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  2030     0000                     _EUSART_AutoBaudQuery equ	0
  2031                           
  2032 ;; Function _EUSART_IsTxDone is unused but had its address taken
  2033     0000                     _EUSART_IsTxDone equ	0
  2034                           
  2035 ;; Function _EUSART_ErrorGet is unused but had its address taken
  2036     0000                     _EUSART_ErrorGet equ	0
  2037                           
  2038 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  2039     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  2040                           
  2041                           	psect	idataBANK2
  2042     1DF4                     __pidataBANK2:
  2043                           
  2044                           ;initializer for _reset_flg_12
  2045     1DF4  3404               	retlw	4
  2046                           
  2047                           ;initializer for _reset_flg_24
  2048     1DF5  3404               	retlw	4
  2049                           
  2050                           	psect	stringtext1
  2051     1800                     __pstringtext1:
  2052     1800                     _UART1:
  2053     1800  344D               	retlw	low _EUSART_Initialize
  2054     1801  3411               	retlw	high _EUSART_Initialize
  2055     1802  3400               	retlw	0
  2056     1803  3400               	retlw	0
  2057     1804  3434               	retlw	low _EUSART_Read
  2058     1805  3410               	retlw	high _EUSART_Read
  2059     1806  34C2               	retlw	low _EUSART_Write
  2060     1807  3410               	retlw	high _EUSART_Write
  2061     1808  340F               	retlw	low _EUSART_IsRxReady
  2062     1809  341E               	retlw	high _EUSART_IsRxReady
  2063     180A  3417               	retlw	low _EUSART_IsTxReady
  2064     180B  341E               	retlw	high _EUSART_IsTxReady
  2065     180C  3400               	retlw	0
  2066     180D  3400               	retlw	0
  2067     180E  3400               	retlw	0
  2068     180F  3400               	retlw	0
  2069     1810  3400               	retlw	0
  2070     1811  3400               	retlw	0
  2071     1812  3400               	retlw	0
  2072     1813  3400               	retlw	0
  2073     1814  3400               	retlw	0
  2074     1815  3400               	retlw	0
  2075     1816  3400               	retlw	0
  2076     1817  3400               	retlw	0
  2077     1818  3400               	retlw	0
  2078     1819  3400               	retlw	0
  2079     181A  3400               	retlw	0
  2080     181B  3400               	retlw	0
  2081     181C  3400               	retlw	0
  2082     181D  3400               	retlw	0
  2083     181E  3400               	retlw	0
  2084     181F  3400               	retlw	0
  2085     1820  3400               	retlw	0
  2086     1821  3400               	retlw	0
  2087     1822  3400               	retlw	0
  2088     1823  3400               	retlw	0
  2089     1824  345E               	retlw	low _EUSART_RxCompleteCallbackRegister
  2090     1825  341E               	retlw	high _EUSART_RxCompleteCallbackRegister
  2091     1826  3400               	retlw	0
  2092     1827  3400               	retlw	0
  2093     1828  346D               	retlw	low _EUSART_FramingErrorCallbackRegister
  2094     1829  341E               	retlw	high _EUSART_FramingErrorCallbackRegister
  2095     182A  347C               	retlw	low _EUSART_OverrunErrorCallbackRegister
  2096     182B  341E               	retlw	high _EUSART_OverrunErrorCallbackRegister
  2097     182C  3400               	retlw	0
  2098     182D  3400               	retlw	0
  2099     182E  3400               	retlw	0
  2100     182F  3400               	retlw	0
  2101     1830                     __end_of_UART1:
  2102                           
  2103                           	psect	nvBANK2
  2104     015D                     __pnvBANK2:
  2105     015D                     _TMR4_PeriodMatchCallback:
  2106     015D                     	ds	2
  2107     015F                     _EUSART_TxInterruptHandler:
  2108     015F                     	ds	2
  2109     0161                     _EUSART_RxInterruptHandler:
  2110     0161                     	ds	2
  2111     0163                     _ADC_InterruptHandler:
  2112     0163                     	ds	2
  2113     0012                     _PIR2bits       set	18
  2114     000B                     _INTCONbits     set	11
  2115     0011                     _PIR1bits       set	17
  2116     0092                     _PIE2bits       set	146
  2117     0095                     _OPTION_REGbits set	149
  2118     008E                     _TRISC          set	142
  2119     008C                     _TRISA          set	140
  2120     0098                     _OSCTUNE        set	152
  2121     0099                     _OSCCON         set	153
  2122     009D                     _ADCON0bits     set	157
  2123     0091                     _PIE1bits       set	145
  2124     009D                     _ADCON0         set	157
  2125     009F                     _ADCON2         set	159
  2126     009C                     _ADRESH         set	156
  2127     009B                     _ADRESL         set	155
  2128     009E                     _ADCON1         set	158
  2129     010C                     _LATAbits       set	268
  2130     010E                     _LATC           set	270
  2131     010C                     _LATA           set	268
  2132     0116                     _BORCON         set	278
  2133     019A                     _TX1REG         set	410
  2134     0199                     _RC1REG         set	409
  2135     019F                     _BAUD1CONbits   set	415
  2136     019E                     _TX1STAbits     set	414
  2137     019D                     _RC1STAbits     set	413
  2138     019C                     _SP1BRGH        set	412
  2139     019B                     _SP1BRGL        set	411
  2140     019E                     _TX1STA         set	414
  2141     019D                     _RC1STA         set	413
  2142     019F                     _BAUD1CON       set	415
  2143     018E                     _ANSELC         set	398
  2144     018C                     _ANSELA         set	396
  2145     020E                     _WPUC           set	526
  2146     020C                     _WPUA           set	524
  2147     028E                     _ODCONC         set	654
  2148     028C                     _ODCONA         set	652
  2149     030E                     _SLRCONC        set	782
  2150     030C                     _SLRCONA        set	780
  2151     0399                     _IOCCF          set	921
  2152     0398                     _IOCCN          set	920
  2153     0397                     _IOCCP          set	919
  2154     0393                     _IOCAF          set	915
  2155     0392                     _IOCAN          set	914
  2156     0391                     _IOCAP          set	913
  2157     038E                     _INLVLC         set	910
  2158     038C                     _INLVLA         set	908
  2159     0417                     _T4CONbits      set	1047
  2160     0417                     _T4CON          set	1047
  2161     0415                     _TMR4           set	1045
  2162     0416                     _PR4            set	1046
  2163     0E24                     _RXPPS          set	3620
  2164     0EA3                     _RC3PPS         set	3747
  2165                           
  2166                           	psect	stringtext2
  2167     1830                     __pstringtext2:
  2168     1830                     STR_2:
  2169     1830  3443               	retlw	67	;'C'
  2170     1831  3472               	retlw	114	;'r'
  2171     1832  3465               	retlw	101	;'e'
  2172     1833  3461               	retlw	97	;'a'
  2173     1834  3474               	retlw	116	;'t'
  2174     1835  3465               	retlw	101	;'e'
  2175     1836  3464               	retlw	100	;'d'
  2176     1837  3420               	retlw	32	;' '
  2177     1838  3462               	retlw	98	;'b'
  2178     1839  3479               	retlw	121	;'y'
  2179     183A  3420               	retlw	32	;' '
  2180     183B  344B               	retlw	75	;'K'
  2181     183C  3469               	retlw	105	;'i'
  2182     183D  346D               	retlw	109	;'m'
  2183     183E  3475               	retlw	117	;'u'
  2184     183F  3472               	retlw	114	;'r'
  2185     1840  3461               	retlw	97	;'a'
  2186     1841  3454               	retlw	84	;'T'
  2187     1842  346F               	retlw	111	;'o'
  2188     1843  346D               	retlw	109	;'m'
  2189     1844  346F               	retlw	111	;'o'
  2190     1845  3468               	retlw	104	;'h'
  2191     1846  3469               	retlw	105	;'i'
  2192     1847  3472               	retlw	114	;'r'
  2193     1848  346F               	retlw	111	;'o'
  2194     1849  340A               	retlw	10
  2195     184A  3400               	retlw	0
  2196                           
  2197                           	psect	stringtext3
  2198     184B                     __pstringtext3:
  2199     184B                     STR_1:
  2200     184B  3453               	retlw	83	;'S'
  2201     184C  3441               	retlw	65	;'A'
  2202     184D  345A               	retlw	90	;'Z'
  2203     184E  3441               	retlw	65	;'A'
  2204     184F  344E               	retlw	78	;'N'
  2205     1850  344B               	retlw	75	;'K'
  2206     1851  3441               	retlw	65	;'A'
  2207     1852  345F               	retlw	95	;'_'
  2208     1853  3450               	retlw	80	;'P'
  2209     1854  346F               	retlw	111	;'o'
  2210     1855  3477               	retlw	119	;'w'
  2211     1856  3465               	retlw	101	;'e'
  2212     1857  3472               	retlw	114	;'r'
  2213     1858  3442               	retlw	66	;'B'
  2214     1859  346F               	retlw	111	;'o'
  2215     185A  3461               	retlw	97	;'a'
  2216     185B  3472               	retlw	114	;'r'
  2217     185C  3464               	retlw	100	;'d'
  2218     185D  3432               	retlw	50	;'2'
  2219     185E  3430               	retlw	48	;'0'
  2220     185F  3432               	retlw	50	;'2'
  2221     1860  3434               	retlw	52	;'4'
  2222     1861  340A               	retlw	10
  2223     1862  3400               	retlw	0
  2224                           
  2225                           	psect	stringtext4
  2226     1863                     __pstringtext4:
  2227     1863                     STR_4:
  2228     1863  3454               	retlw	84	;'T'
  2229     1864  3468               	retlw	104	;'h'
  2230     1865  3469               	retlw	105	;'i'
  2231     1866  3473               	retlw	115	;'s'
  2232     1867  3420               	retlw	32	;' '
  2233     1868  3469               	retlw	105	;'i'
  2234     1869  3473               	retlw	115	;'s'
  2235     186A  3420               	retlw	32	;' '
  2236     186B  3463               	retlw	99	;'c'
  2237     186C  346F               	retlw	111	;'o'
  2238     186D  346E               	retlw	110	;'n'
  2239     186E  3466               	retlw	102	;'f'
  2240     186F  3469               	retlw	105	;'i'
  2241     1870  3467               	retlw	103	;'g'
  2242     1871  3420               	retlw	32	;' '
  2243     1872  346D               	retlw	109	;'m'
  2244     1873  346F               	retlw	111	;'o'
  2245     1874  3464               	retlw	100	;'d'
  2246     1875  3465               	retlw	101	;'e'
  2247     1876  3400               	retlw	0
  2248                           
  2249                           	psect	stringtext5
  2250     1877                     __pstringtext5:
  2251     1877                     STR_3:
  2252     1877  3456               	retlw	86	;'V'
  2253     1878  3448               	retlw	72	;'H'
  2254     1879  343A               	retlw	58	;':'
  2255     187A  3425               	retlw	37	;'%'
  2256     187B  342E               	retlw	46	;'.'
  2257     187C  3431               	retlw	49	;'1'
  2258     187D  3466               	retlw	102	;'f'
  2259     187E  3420               	retlw	32	;' '
  2260     187F  3456               	retlw	86	;'V'
  2261     1880  344C               	retlw	76	;'L'
  2262     1881  343A               	retlw	58	;':'
  2263     1882  3425               	retlw	37	;'%'
  2264     1883  342E               	retlw	46	;'.'
  2265     1884  3431               	retlw	49	;'1'
  2266     1885  3466               	retlw	102	;'f'
  2267     1886  340A               	retlw	10
  2268     1887  3400               	retlw	0
  2269                           
  2270                           	psect	stringtext6
  2271     1888                     __pstringtext6:
  2272     1888                     STR_5:
  2273     1888  3469               	retlw	105	;'i'
  2274     1889  346E               	retlw	110	;'n'
  2275     188A  3466               	retlw	102	;'f'
  2276     188B  3400               	retlw	0
  2277                           
  2278                           	psect	stringtext7
  2279     188C                     __pstringtext7:
  2280     188C                     STR_8:
  2281     188C  346E               	retlw	110	;'n'
  2282     188D  3461               	retlw	97	;'a'
  2283     188E  346E               	retlw	110	;'n'
  2284     188F  3400               	retlw	0
  2285                           
  2286                           	psect	stringtext8
  2287     0000                     __pstringtext8:
  2288     188C                     STR_9           equ	STR_8
  2289     188C                     STR_10          equ	STR_8
  2290     1888                     STR_6           equ	STR_5
  2291     1888                     STR_7           equ	STR_5
  2292                           
  2293                           	psect	cinit
  2294     004C                     start_initialization:	
  2295                           ; #config settings
  2296                           
  2297     004C                     __initialization:
  2298                           
  2299                           ; Initialize objects allocated to BANK2
  2300     004C  0022               	movlb	2	; select bank2
  2301     004D  319D  25F4  3180   	fcall	__pidataBANK2	;fetch initializer
  2302     0050  00ED               	movwf	__pdataBANK2& (0+127)
  2303     0051  319D  25F5  3180   	fcall	__pidataBANK2+1	;fetch initializer
  2304     0054  00EE               	movwf	(__pdataBANK2+1)& (0+127)
  2305                           
  2306                           ; Clear objects allocated to COMMON
  2307     0055  01F0               	clrf	__pbssCOMMON& (0+127)
  2308     0056  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2309     0057  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2310     0058  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2311     0059  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2312     005A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2313                           
  2314                           ; Clear objects allocated to BANK1
  2315     005B  0021               	movlb	1	; select bank1
  2316     005C  01ED               	clrf	__pbssBANK1& (0+127)
  2317     005D  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  2318     005E  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  2319                           
  2320                           ; Clear objects allocated to BANK2
  2321     005F  3020               	movlw	low __pbssBANK2
  2322     0060  0084               	movwf	4
  2323     0061  3001               	movlw	high __pbssBANK2
  2324     0062  0085               	movwf	5
  2325     0063  303D               	movlw	61
  2326     0064  319E  2609  3180   	fcall	clear_ram0
  2327                           
  2328                           ; Clear objects allocated to BANK3
  2329     0067  30A0               	movlw	low __pbssBANK3
  2330     0068  0084               	movwf	4
  2331     0069  3001               	movlw	high __pbssBANK3
  2332     006A  0085               	movwf	5
  2333     006B  3008               	movlw	8
  2334     006C  319E  2609  3180   	fcall	clear_ram0
  2335                           
  2336                           ; Clear objects allocated to BANK4
  2337     006F  3020               	movlw	low __pbssBANK4
  2338     0070  0084               	movwf	4
  2339     0071  3002               	movlw	high __pbssBANK4
  2340     0072  0085               	movwf	5
  2341     0073  3050               	movlw	80
  2342     0074  319E  2609  3180   	fcall	clear_ram0
  2343     0077                     end_of_initialization:	
  2344                           ;End of C runtime variable initialization code
  2345                           
  2346     0077                     __end_of__initialization:
  2347     0077  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2348     0078  0020               	movlb	0
  2349     0079  3189  29F4         	ljmp	_main	;jump to C main() function
  2350                           
  2351                           	psect	bssCOMMON
  2352     0070                     __pbssCOMMON:
  2353     0070                     _eusartRxCount:
  2354     0070                     	ds	1
  2355     0071                     _eusartRxTail:
  2356     0071                     	ds	1
  2357     0072                     _eusartRxHead:
  2358     0072                     	ds	1
  2359     0073                     _eusartTxBufferRemaining:
  2360     0073                     	ds	1
  2361     0074                     _eusartTxTail:
  2362     0074                     	ds	1
  2363     0075                     _eusartTxHead:
  2364     0075                     	ds	1
  2365                           
  2366                           	psect	bssBANK1
  2367     00ED                     __pbssBANK1:
  2368     00ED                     _INT_InterruptHandler:
  2369     00ED                     	ds	2
  2370     00EF                     _flags:
  2371     00EF                     	ds	1
  2372                           
  2373                           	psect	bssBANK2
  2374     0120                     __pbssBANK2:
  2375     0120                     _eusartRxStatusBuffer:
  2376     0120                     	ds	16
  2377     0130                     _eusartTxBuffer:
  2378     0130                     	ds	8
  2379     0138                     floorf@F521:
  2380     0138                     	ds	4
  2381     013C                     ___fpclassifyf@F465:
  2382     013C                     	ds	4
  2383     0140                     _voltage_24:
  2384     0140                     	ds	4
  2385     0144                     _voltage_12:
  2386     0144                     	ds	4
  2387     0148                     _width:
  2388     0148                     	ds	2
  2389     014A                     _prec:
  2390     014A                     	ds	2
  2391     014C                     _voltage_raw_12:
  2392     014C                     	ds	2
  2393     014E                     _voltage_raw_24:
  2394     014E                     	ds	2
  2395     0150                     _EUSART_OverrunErrorHandler:
  2396     0150                     	ds	2
  2397     0152                     _EUSART_FramingErrorHandler:
  2398     0152                     	ds	2
  2399     0154                     _EUSART_RxCompleteInterruptHandler:
  2400     0154                     	ds	2
  2401     0156                     _EUSART_TxCompleteInterruptHandler:
  2402     0156                     	ds	2
  2403     0158                     _eusartRxLastError:
  2404     0158                     	ds	2
  2405     015A                     TMR4_ISR@CountCallBack:
  2406     015A                     	ds	2
  2407     015C                     _config_flg:
  2408     015C                     	ds	1
  2409                           
  2410                           	psect	dataBANK2
  2411     016D                     __pdataBANK2:
  2412     016D                     _reset_flg_12:
  2413     016D                     	ds	1
  2414     016E                     _reset_flg_24:
  2415     016E                     	ds	1
  2416                           
  2417                           	psect	bssBANK3
  2418     01A0                     __pbssBANK3:
  2419     01A0                     _eusartRxBuffer:
  2420     01A0                     	ds	8
  2421                           
  2422                           	psect	bssBANK4
  2423     0220                     __pbssBANK4:
  2424     0220                     _dbuf:
  2425     0220                     	ds	80
  2426                           
  2427                           	psect	clrtext
  2428     1E09                     clear_ram0:	
  2429                           ;	Called with FSR0 containing the base address, and
  2430                           ;	WREG with the size to clear
  2431                           
  2432     1E09  0064               	clrwdt	;clear the watchdog before getting into this loop
  2433     1E0A                     clrloop0:
  2434     1E0A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2435     1E0B  3101               	addfsr 0,1
  2436     1E0C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2437     1E0D  2E0A               	goto	clrloop0	;have we reached the end yet?
  2438     1E0E  3400               	retlw	0	;all done for this memory range, return
  2439                           
  2440                           	psect	cstackBANK2
  2441     0165                     __pcstackBANK2:
  2442     0165                     _main$1111:
  2443                           
  2444                           ; 4 bytes @ 0x0
  2445     0165                     	ds	4
  2446     0169                     _main$1112:
  2447                           
  2448                           ; 4 bytes @ 0x4
  2449     0169                     	ds	4
  2450                           
  2451                           	psect	cstackBANK1
  2452     00A0                     __pcstackBANK1:
  2453     00A0                     efgtoa@ne:
  2454                           
  2455                           ; 2 bytes @ 0x0
  2456     00A0                     	ds	2
  2457     00A2                     efgtoa@p:
  2458                           
  2459                           ; 2 bytes @ 0x2
  2460     00A2                     	ds	2
  2461     00A4                     efgtoa@t:
  2462                           
  2463                           ; 2 bytes @ 0x4
  2464     00A4                     	ds	2
  2465     00A6                     _efgtoa$1559:
  2466                           
  2467                           ; 2 bytes @ 0x6
  2468     00A6                     	ds	2
  2469     00A8                     efgtoa@pp:
  2470                           
  2471                           ; 1 bytes @ 0x8
  2472     00A8                     	ds	1
  2473     00A9                     efgtoa@mode:
  2474                           
  2475                           ; 1 bytes @ 0x9
  2476     00A9                     	ds	1
  2477     00AA                     efgtoa@nmode:
  2478                           
  2479                           ; 1 bytes @ 0xA
  2480     00AA                     	ds	1
  2481     00AB                     efgtoa@d:
  2482                           
  2483                           ; 2 bytes @ 0xB
  2484     00AB                     	ds	2
  2485     00AD                     efgtoa@m:
  2486                           
  2487                           ; 2 bytes @ 0xD
  2488     00AD                     	ds	2
  2489     00AF                     efgtoa@e:
  2490                           
  2491                           ; 2 bytes @ 0xF
  2492     00AF                     	ds	2
  2493     00B1                     efgtoa@w:
  2494                           
  2495                           ; 2 bytes @ 0x11
  2496     00B1                     	ds	2
  2497     00B3                     efgtoa@ou:
  2498                           
  2499                           ; 4 bytes @ 0x13
  2500     00B3                     	ds	4
  2501     00B7                     efgtoa@i:
  2502                           
  2503                           ; 2 bytes @ 0x17
  2504     00B7                     	ds	2
  2505     00B9                     efgtoa@h:
  2506                           
  2507                           ; 4 bytes @ 0x19
  2508     00B9                     	ds	4
  2509     00BD                     efgtoa@l:
  2510                           
  2511                           ; 4 bytes @ 0x1D
  2512     00BD                     	ds	4
  2513     00C1                     efgtoa@sign:
  2514                           
  2515                           ; 1 bytes @ 0x21
  2516     00C1                     	ds	1
  2517     00C2                     efgtoa@g:
  2518                           
  2519                           ; 4 bytes @ 0x22
  2520     00C2                     	ds	4
  2521     00C6                     efgtoa@n:
  2522                           
  2523                           ; 2 bytes @ 0x26
  2524     00C6                     	ds	2
  2525     00C8                     efgtoa@u:
  2526                           
  2527                           ; 4 bytes @ 0x28
  2528     00C8                     	ds	4
  2529     00CC                     ?_vfpfcnvrt:
  2530     00CC                     vfpfcnvrt@fp:	
  2531                           ; 1 bytes @ 0x2C
  2532                           
  2533                           
  2534                           ; 2 bytes @ 0x2C
  2535     00CC                     	ds	2
  2536     00CE                     vfpfcnvrt@fmt:
  2537                           
  2538                           ; 1 bytes @ 0x2E
  2539     00CE                     	ds	1
  2540     00CF                     vfpfcnvrt@ap:
  2541                           
  2542                           ; 1 bytes @ 0x2F
  2543     00CF                     	ds	1
  2544     00D0                     ??_vfpfcnvrt:
  2545                           
  2546                           ; 1 bytes @ 0x30
  2547     00D0                     	ds	4
  2548     00D4                     vfpfcnvrt@convarg:
  2549                           
  2550                           ; 4 bytes @ 0x34
  2551     00D4                     	ds	4
  2552     00D8                     vfpfcnvrt@c:
  2553                           
  2554                           ; 1 bytes @ 0x38
  2555     00D8                     	ds	1
  2556     00D9                     vfpfcnvrt@cp:
  2557                           
  2558                           ; 2 bytes @ 0x39
  2559     00D9                     	ds	2
  2560     00DB                     ?_vfprintf:
  2561     00DB                     vfprintf@fp:	
  2562                           ; 2 bytes @ 0x3B
  2563                           
  2564                           
  2565                           ; 2 bytes @ 0x3B
  2566     00DB                     	ds	2
  2567     00DD                     vfprintf@fmt:
  2568                           
  2569                           ; 2 bytes @ 0x3D
  2570     00DD                     	ds	2
  2571     00DF                     vfprintf@ap:
  2572                           
  2573                           ; 1 bytes @ 0x3F
  2574     00DF                     	ds	1
  2575     00E0                     vfprintf@cfmt:
  2576                           
  2577                           ; 2 bytes @ 0x40
  2578     00E0                     	ds	2
  2579     00E2                     ?_printf:
  2580     00E2                     printf@fmt:	
  2581                           ; 2 bytes @ 0x42
  2582                           
  2583                           
  2584                           ; 2 bytes @ 0x42
  2585     00E2                     	ds	10
  2586     00EC                     printf@ap:
  2587                           
  2588                           ; 1 bytes @ 0x4C
  2589     00EC                     	ds	1
  2590                           
  2591                           	psect	cstackCOMMON
  2592     0076                     __pcstackCOMMON:
  2593     0076                     ?_ADC_DefaultInterruptHandler:
  2594     0076                     ?_TMR4_ISR:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597     0076                     ?_TMR4_Initialize:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600     0076                     ?_EUSART_Initialize:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603     0076                     ?_TMR4_DefaultPeriodMatchCallback:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606     0076                     ?_EUSART_Read:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609     0076                     ?_EUSART_IsRxReady:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612     0076                     ?_EUSART_IsTxReady:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615     0076                     ?_EUSART_ReceiveISR:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618     0076                     ?_EUSART_TransmitISR:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621     0076                     ?_EUSART_DefaultFramingErrorCallback:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624     0076                     ?_EUSART_DefaultOverrunErrorCallback:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627     0076                     ?_timer_interrupt:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630     0076                     ?_check_RX_Data:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633     0076                     ?_handle_buzzer:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636     0076                     ?_ADC_Initialize:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639     0076                     ?_ADC_ISR:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642     0076                     ?_CLOCK_Initialize:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645     0076                     ?_PIN_MANAGER_Initialize:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648     0076                     ?_INTERRUPT_Initialize:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651     0076                     ?_INTERRUPT_InterruptManager:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654     0076                     ?_SYSTEM_Initialize:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657     0076                     ?_TMR4_Start:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660     0076                     ?_putch:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663     0076                     ?_LED_24V_On:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666     0076                     ?_LED_24V_Off:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669     0076                     ?_LED_12V_On:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672     0076                     ?_LED_12V_Off:	
  2673                           ; 1 bytes @ 0x0
  2674                           
  2675     0076                     ?i1_EUSART_Write:	
  2676                           ; 1 bytes @ 0x0
  2677                           
  2678     0076                     ?_main:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681     0076                     EUSART_Read@tempRxTail:	
  2682                           ; 2 bytes @ 0x0
  2683                           
  2684     0076                     EUSART_TransmitISR@tempTxTail:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687     0076                     i1EUSART_Write@txData:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690     0076                     ??_ADC_DefaultInterruptHandler:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693     0076                     ??_TMR4_ISR:	
  2694                           ; 1 bytes @ 0x0
  2695                           
  2696     0076                     ??_TMR4_DefaultPeriodMatchCallback:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699     0076                     ??_EUSART_Read:	
  2700                           ; 1 bytes @ 0x0
  2701                           
  2702     0076                     ??_EUSART_IsRxReady:	
  2703                           ; 1 bytes @ 0x0
  2704                           
  2705     0076                     ??_EUSART_TransmitISR:	
  2706                           ; 1 bytes @ 0x0
  2707                           
  2708     0076                     ??_EUSART_DefaultFramingErrorCallback:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711     0076                     ??_EUSART_DefaultOverrunErrorCallback:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714     0076                     ??_timer_interrupt:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717     0076                     ??_ADC_ISR:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720                           
  2721                           ; 1 bytes @ 0x0
  2722     0076                     	ds	1
  2723     0077                     EUSART_Read@readValue:
  2724     0077                     i1EUSART_Write@tempTxHead:	
  2725                           ; 1 bytes @ 0x1
  2726                           
  2727     0077                     ??i1_EUSART_Write:	
  2728                           ; 1 bytes @ 0x1
  2729                           
  2730                           
  2731                           ; 1 bytes @ 0x1
  2732     0077                     	ds	1
  2733     0078                     check_RX_Data@i:
  2734     0078                     ??_check_RX_Data:	
  2735                           ; 1 bytes @ 0x2
  2736                           
  2737                           
  2738                           ; 1 bytes @ 0x2
  2739     0078                     	ds	1
  2740     0079                     check_RX_Data@buf:
  2741                           
  2742                           ; 1 bytes @ 0x3
  2743     0079                     	ds	1
  2744     007A                     EUSART_ReceiveISR@regValue:
  2745     007A                     ??_EUSART_ReceiveISR:	
  2746                           ; 1 bytes @ 0x4
  2747                           
  2748                           
  2749                           ; 1 bytes @ 0x4
  2750     007A                     	ds	1
  2751     007B                     EUSART_ReceiveISR@tempRxHead:
  2752                           
  2753                           ; 1 bytes @ 0x5
  2754     007B                     	ds	1
  2755     007C                     ??_INTERRUPT_InterruptManager:
  2756                           
  2757                           	psect	cstackBANK0
  2758     0020                     __pcstackBANK0:	
  2759                           ; 1 bytes @ 0x6
  2760                           
  2761     0020                     ?_ADC_SetInterruptHandler:
  2762     0020                     ?_INT_SetInterruptHandler:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765     0020                     ?_EUSART_Write:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768     0020                     ?_EUSART_RxCompleteCallbackRegister:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771     0020                     ?_EUSART_FramingErrorCallbackRegister:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774     0020                     ?_EUSART_OverrunErrorCallbackRegister:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777     0020                     ?_delay_ms:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780     0020                     ?_strcpy:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783     0020                     ?_memcpy:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786     0020                     ?_TMR4_PeriodMatchCallbackRegister:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789     0020                     ?___fleq:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792     0020                     ?__Umul8_16:	
  2793                           ; 1 bit 
  2794                           
  2795     0020                     ?___fpclassifyf:	
  2796                           ; 2 bytes @ 0x0
  2797                           
  2798     0020                     ?_ADC_GetConversion:	
  2799                           ; 2 bytes @ 0x0
  2800                           
  2801     0020                     ?___wmul:	
  2802                           ; 2 bytes @ 0x0
  2803                           
  2804     0020                     ?_labs:	
  2805                           ; 2 bytes @ 0x0
  2806                           
  2807     0020                     ?___flneg:	
  2808                           ; 4 bytes @ 0x0
  2809                           
  2810     0020                     ?___fltol:	
  2811                           ; 4 bytes @ 0x0
  2812                           
  2813     0020                     ?___fldiv:	
  2814                           ; 4 bytes @ 0x0
  2815                           
  2816     0020                     ?___xxtofl:	
  2817                           ; 4 bytes @ 0x0
  2818                           
  2819     0020                     EUSART_Write@txData:	
  2820                           ; 4 bytes @ 0x0
  2821                           
  2822     0020                     __Umul8_16@multiplicand:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825     0020                     memcpy@d1:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828     0020                     strcpy@dest:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831     0020                     ADC_SetInterruptHandler@InterruptHandler:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834     0020                     INT_SetInterruptHandler@InterruptHandler:	
  2835                           ; 2 bytes @ 0x0
  2836                           
  2837     0020                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  2838                           ; 2 bytes @ 0x0
  2839                           
  2840     0020                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  2841                           ; 2 bytes @ 0x0
  2842                           
  2843     0020                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  2844                           ; 2 bytes @ 0x0
  2845                           
  2846     0020                     EUSART_RxCompleteCallbackRegister@callbackHandler:	
  2847                           ; 2 bytes @ 0x0
  2848                           
  2849     0020                     delay_ms@ms:	
  2850                           ; 2 bytes @ 0x0
  2851                           
  2852     0020                     ___wmul@multiplier:	
  2853                           ; 2 bytes @ 0x0
  2854                           
  2855     0020                     ___fleq@ff1:	
  2856                           ; 2 bytes @ 0x0
  2857                           
  2858     0020                     ___flneg@f1:	
  2859                           ; 4 bytes @ 0x0
  2860                           
  2861     0020                     ___fltol@f1:	
  2862                           ; 4 bytes @ 0x0
  2863                           
  2864     0020                     ___fldiv@a:	
  2865                           ; 4 bytes @ 0x0
  2866                           
  2867     0020                     ___xxtofl@val:	
  2868                           ; 4 bytes @ 0x0
  2869                           
  2870     0020                     ___fpclassifyf@x:	
  2871                           ; 4 bytes @ 0x0
  2872                           
  2873     0020                     labs@a:	
  2874                           ; 4 bytes @ 0x0
  2875                           
  2876     0020                     ??_TMR4_Initialize:	
  2877                           ; 4 bytes @ 0x0
  2878                           
  2879     0020                     ??_EUSART_IsTxReady:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882     0020                     ??_CLOCK_Initialize:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885     0020                     ??_PIN_MANAGER_Initialize:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888     0020                     ??_TMR4_Start:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891     0020                     ??_LED_24V_On:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894     0020                     ??_LED_24V_Off:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897     0020                     ??_LED_12V_On:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900     0020                     ??_LED_12V_Off:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903                           
  2904                           ; 1 bytes @ 0x0
  2905     0020                     	ds	1
  2906     0021                     EUSART_Write@tempTxHead:
  2907     0021                     memcpy@s1:	
  2908                           ; 1 bytes @ 0x1
  2909                           
  2910     0021                     strcpy@src:	
  2911                           ; 1 bytes @ 0x1
  2912                           
  2913     0021                     ??_EUSART_Write:	
  2914                           ; 2 bytes @ 0x1
  2915                           
  2916                           
  2917                           ; 1 bytes @ 0x1
  2918     0021                     	ds	1
  2919     0022                     putch@txData:
  2920     0022                     ___wmul@multiplicand:	
  2921                           ; 1 bytes @ 0x2
  2922                           
  2923     0022                     memcpy@n:	
  2924                           ; 2 bytes @ 0x2
  2925                           
  2926     0022                     ??_ADC_SetInterruptHandler:	
  2927                           ; 2 bytes @ 0x2
  2928                           
  2929     0022                     ??_INT_SetInterruptHandler:	
  2930                           ; 1 bytes @ 0x2
  2931                           
  2932     0022                     ??_EUSART_Initialize:	
  2933                           ; 1 bytes @ 0x2
  2934                           
  2935     0022                     ??_EUSART_RxCompleteCallbackRegister:	
  2936                           ; 1 bytes @ 0x2
  2937                           
  2938     0022                     ??_EUSART_FramingErrorCallbackRegister:	
  2939                           ; 1 bytes @ 0x2
  2940                           
  2941     0022                     ??_EUSART_OverrunErrorCallbackRegister:	
  2942                           ; 1 bytes @ 0x2
  2943                           
  2944     0022                     ??_delay_ms:	
  2945                           ; 1 bytes @ 0x2
  2946                           
  2947     0022                     ??__Umul8_16:	
  2948                           ; 1 bytes @ 0x2
  2949                           
  2950     0022                     ??_ADC_Initialize:	
  2951                           ; 1 bytes @ 0x2
  2952                           
  2953     0022                     ??_ADC_GetConversion:	
  2954                           ; 1 bytes @ 0x2
  2955                           
  2956     0022                     ??_INTERRUPT_Initialize:	
  2957                           ; 1 bytes @ 0x2
  2958                           
  2959     0022                     ??_SYSTEM_Initialize:	
  2960                           ; 1 bytes @ 0x2
  2961                           
  2962     0022                     ??_TMR4_PeriodMatchCallbackRegister:	
  2963                           ; 1 bytes @ 0x2
  2964                           
  2965     0022                     ??_putch:	
  2966                           ; 1 bytes @ 0x2
  2967                           
  2968                           
  2969                           ; 1 bytes @ 0x2
  2970     0022                     	ds	1
  2971     0023                     ?_fputc:
  2972     0023                     ADC_GetConversion@channel:	
  2973                           ; 2 bytes @ 0x3
  2974                           
  2975     0023                     delay_ms@i:	
  2976                           ; 1 bytes @ 0x3
  2977                           
  2978     0023                     fputc@c:	
  2979                           ; 2 bytes @ 0x3
  2980                           
  2981     0023                     ??_strcpy:	
  2982                           ; 2 bytes @ 0x3
  2983                           
  2984                           
  2985                           ; 1 bytes @ 0x3
  2986     0023                     	ds	1
  2987     0024                     memcpy@tmp:
  2988     0024                     ___wmul@product:	
  2989                           ; 1 bytes @ 0x4
  2990                           
  2991     0024                     __Umul8_16@product:	
  2992                           ; 2 bytes @ 0x4
  2993                           
  2994     0024                     ___fleq@ff2:	
  2995                           ; 2 bytes @ 0x4
  2996                           
  2997     0024                     ___fldiv@b:	
  2998                           ; 4 bytes @ 0x4
  2999                           
  3000     0024                     ??___fpclassifyf:	
  3001                           ; 4 bytes @ 0x4
  3002                           
  3003     0024                     ??_labs:	
  3004                           ; 1 bytes @ 0x4
  3005                           
  3006     0024                     ??_memcpy:	
  3007                           ; 1 bytes @ 0x4
  3008                           
  3009     0024                     ??___wmul:	
  3010                           ; 1 bytes @ 0x4
  3011                           
  3012     0024                     ??___flneg:	
  3013                           ; 1 bytes @ 0x4
  3014                           
  3015     0024                     ??___fltol:	
  3016                           ; 1 bytes @ 0x4
  3017                           
  3018     0024                     ??___xxtofl:	
  3019                           ; 1 bytes @ 0x4
  3020                           
  3021                           
  3022                           ; 1 bytes @ 0x4
  3023     0024                     	ds	1
  3024     0025                     handle_buzzer@i:
  3025     0025                     memcpy@d:	
  3026                           ; 1 bytes @ 0x5
  3027                           
  3028     0025                     strcpy@d:	
  3029                           ; 1 bytes @ 0x5
  3030                           
  3031     0025                     fputc@fp:	
  3032                           ; 1 bytes @ 0x5
  3033                           
  3034     0025                     ??_handle_buzzer:	
  3035                           ; 2 bytes @ 0x5
  3036                           
  3037                           
  3038                           ; 1 bytes @ 0x5
  3039     0025                     	ds	1
  3040     0026                     ?_read_prec_or_width:
  3041     0026                     read_prec_or_width@fmt:	
  3042                           ; 2 bytes @ 0x6
  3043                           
  3044     0026                     memcpy@s:	
  3045                           ; 1 bytes @ 0x6
  3046                           
  3047     0026                     __Umul8_16@word_mpld:	
  3048                           ; 1 bytes @ 0x6
  3049                           
  3050                           
  3051                           ; 2 bytes @ 0x6
  3052     0026                     	ds	1
  3053     0027                     read_prec_or_width@ap:
  3054     0027                     ??_fputc:	
  3055                           ; 1 bytes @ 0x7
  3056                           
  3057                           
  3058                           ; 1 bytes @ 0x7
  3059     0027                     	ds	1
  3060     0028                     ___fltol@sign1:
  3061     0028                     __Umul8_16@multiplier:	
  3062                           ; 1 bytes @ 0x8
  3063                           
  3064     0028                     ___xxtofl@sign:	
  3065                           ; 1 bytes @ 0x8
  3066                           
  3067     0028                     ??___fleq:	
  3068                           ; 1 bytes @ 0x8
  3069                           
  3070     0028                     ??___fldiv:	
  3071                           ; 1 bytes @ 0x8
  3072                           
  3073     0028                     ??_read_prec_or_width:	
  3074                           ; 1 bytes @ 0x8
  3075                           
  3076                           
  3077                           ; 1 bytes @ 0x8
  3078     0028                     	ds	1
  3079     0029                     ___fltol@exp1:
  3080     0029                     ___xxtofl@exp:	
  3081                           ; 1 bytes @ 0x9
  3082                           
  3083                           
  3084                           ; 1 bytes @ 0x9
  3085     0029                     	ds	1
  3086     002A                     ___fpclassifyf@e:
  3087     002A                     ___xxtofl@arg:	
  3088                           ; 2 bytes @ 0xA
  3089                           
  3090                           
  3091                           ; 4 bytes @ 0xA
  3092     002A                     	ds	1
  3093     002B                     read_prec_or_width@c:
  3094                           
  3095                           ; 1 bytes @ 0xB
  3096     002B                     	ds	1
  3097     002C                     ?_fputs:
  3098     002C                     fputs@s:	
  3099                           ; 2 bytes @ 0xC
  3100                           
  3101     002C                     read_prec_or_width@n:	
  3102                           ; 1 bytes @ 0xC
  3103                           
  3104     002C                     ___fpclassifyf@u:	
  3105                           ; 2 bytes @ 0xC
  3106                           
  3107                           
  3108                           ; 4 bytes @ 0xC
  3109     002C                     	ds	1
  3110     002D                     fputs@fp:
  3111     002D                     ___fldiv@rem:	
  3112                           ; 2 bytes @ 0xD
  3113                           
  3114                           
  3115                           ; 4 bytes @ 0xD
  3116     002D                     	ds	1
  3117     002E                     ?___flmul:
  3118     002E                     ___flmul@b:	
  3119                           ; 4 bytes @ 0xE
  3120                           
  3121                           
  3122                           ; 4 bytes @ 0xE
  3123     002E                     	ds	1
  3124     002F                     ??_fputs:
  3125                           
  3126                           ; 1 bytes @ 0xF
  3127     002F                     	ds	2
  3128     0031                     ___fldiv@sign:
  3129     0031                     fputs@c:	
  3130                           ; 1 bytes @ 0x11
  3131                           
  3132                           
  3133                           ; 1 bytes @ 0x11
  3134     0031                     	ds	1
  3135     0032                     ___fldiv@new_exp:
  3136     0032                     fputs@i:	
  3137                           ; 2 bytes @ 0x12
  3138                           
  3139     0032                     ___flmul@a:	
  3140                           ; 2 bytes @ 0x12
  3141                           
  3142                           
  3143                           ; 4 bytes @ 0x12
  3144     0032                     	ds	2
  3145     0034                     ?_pad:
  3146     0034                     pad@fp:	
  3147                           ; 1 bytes @ 0x14
  3148                           
  3149     0034                     ___fldiv@grs:	
  3150                           ; 2 bytes @ 0x14
  3151                           
  3152                           
  3153                           ; 4 bytes @ 0x14
  3154     0034                     	ds	2
  3155     0036                     pad@buf:
  3156     0036                     ??___flmul:	
  3157                           ; 1 bytes @ 0x16
  3158                           
  3159                           
  3160                           ; 1 bytes @ 0x16
  3161     0036                     	ds	1
  3162     0037                     pad@p:
  3163                           
  3164                           ; 2 bytes @ 0x17
  3165     0037                     	ds	1
  3166     0038                     ___fldiv@bexp:
  3167                           
  3168                           ; 1 bytes @ 0x18
  3169     0038                     	ds	1
  3170     0039                     ___fldiv@aexp:
  3171     0039                     ??_pad:	
  3172                           ; 1 bytes @ 0x19
  3173                           
  3174                           
  3175                           ; 1 bytes @ 0x19
  3176     0039                     	ds	1
  3177     003A                     ?_floorf:
  3178     003A                     pad@i:	
  3179                           ; 4 bytes @ 0x1A
  3180                           
  3181     003A                     floorf@x:	
  3182                           ; 2 bytes @ 0x1A
  3183                           
  3184                           
  3185                           ; 4 bytes @ 0x1A
  3186     003A                     	ds	1
  3187     003B                     ___flmul@sign:
  3188                           
  3189                           ; 1 bytes @ 0x1B
  3190     003B                     	ds	1
  3191     003C                     ___flmul@aexp:
  3192                           
  3193                           ; 1 bytes @ 0x1C
  3194     003C                     	ds	1
  3195     003D                     ___flmul@grs:
  3196                           
  3197                           ; 4 bytes @ 0x1D
  3198     003D                     	ds	1
  3199     003E                     ??_floorf:
  3200                           
  3201                           ; 1 bytes @ 0x1E
  3202     003E                     	ds	3
  3203     0041                     ___flmul@bexp:
  3204                           
  3205                           ; 1 bytes @ 0x21
  3206     0041                     	ds	1
  3207     0042                     ___flmul@prod:
  3208                           
  3209                           ; 4 bytes @ 0x22
  3210     0042                     	ds	2
  3211     0044                     floorf@m:
  3212                           
  3213                           ; 4 bytes @ 0x24
  3214     0044                     	ds	2
  3215     0046                     ___flmul@temp:
  3216                           
  3217                           ; 2 bytes @ 0x26
  3218     0046                     	ds	2
  3219     0048                     ?___flge:
  3220     0048                     ?___fladd:	
  3221                           ; 1 bit 
  3222                           
  3223     0048                     floorf@e:	
  3224                           ; 4 bytes @ 0x28
  3225                           
  3226     0048                     ___flge@ff1:	
  3227                           ; 2 bytes @ 0x28
  3228                           
  3229     0048                     ___fladd@b:	
  3230                           ; 4 bytes @ 0x28
  3231                           
  3232                           
  3233                           ; 4 bytes @ 0x28
  3234     0048                     	ds	2
  3235     004A                     floorf@u:
  3236                           
  3237                           ; 4 bytes @ 0x2A
  3238     004A                     	ds	2
  3239     004C                     ___flge@ff2:
  3240     004C                     ___fladd@a:	
  3241                           ; 4 bytes @ 0x2C
  3242                           
  3243                           
  3244                           ; 4 bytes @ 0x2C
  3245     004C                     	ds	4
  3246     0050                     ??___flge:
  3247     0050                     ??___fladd:	
  3248                           ; 1 bytes @ 0x30
  3249                           
  3250                           
  3251                           ; 1 bytes @ 0x30
  3252     0050                     	ds	4
  3253     0054                     ?_handle_voltage:
  3254     0054                     handle_voltage@voltage:	
  3255                           ; 1 bytes @ 0x34
  3256                           
  3257                           
  3258                           ; 4 bytes @ 0x34
  3259     0054                     	ds	4
  3260     0058                     ___fladd@signs:
  3261     0058                     handle_voltage@threshold:	
  3262                           ; 1 bytes @ 0x38
  3263                           
  3264                           
  3265                           ; 4 bytes @ 0x38
  3266     0058                     	ds	1
  3267     0059                     ___fladd@aexp:
  3268                           
  3269                           ; 1 bytes @ 0x39
  3270     0059                     	ds	1
  3271     005A                     ___fladd@bexp:
  3272                           
  3273                           ; 1 bytes @ 0x3A
  3274     005A                     	ds	1
  3275     005B                     ___fladd@grs:
  3276                           
  3277                           ; 1 bytes @ 0x3B
  3278     005B                     	ds	1
  3279     005C                     ?___flsub:
  3280     005C                     handle_voltage@mode:	
  3281                           ; 4 bytes @ 0x3C
  3282                           
  3283     005C                     ___flsub@a:	
  3284                           ; 1 bytes @ 0x3C
  3285                           
  3286                           
  3287                           ; 4 bytes @ 0x3C
  3288     005C                     	ds	1
  3289     005D                     handle_voltage@reset_flg:
  3290                           
  3291                           ; 1 bytes @ 0x3D
  3292     005D                     	ds	1
  3293     005E                     handle_voltage@LED_SetHigh:
  3294                           
  3295                           ; 2 bytes @ 0x3E
  3296     005E                     	ds	2
  3297     0060                     handle_voltage@LED_SetLow:
  3298     0060                     ___flsub@b:	
  3299                           ; 2 bytes @ 0x40
  3300                           
  3301                           
  3302                           ; 4 bytes @ 0x40
  3303     0060                     	ds	2
  3304     0062                     ??_handle_voltage:
  3305                           
  3306                           ; 1 bytes @ 0x42
  3307     0062                     	ds	2
  3308     0064                     ?_efgtoa:
  3309     0064                     efgtoa@fp:	
  3310                           ; 1 bytes @ 0x44
  3311                           
  3312     0064                     ??___flsub:	
  3313                           ; 2 bytes @ 0x44
  3314                           
  3315                           
  3316                           ; 1 bytes @ 0x44
  3317     0064                     	ds	2
  3318     0066                     efgtoa@f:
  3319                           
  3320                           ; 4 bytes @ 0x46
  3321     0066                     	ds	4
  3322     006A                     efgtoa@c:
  3323                           
  3324                           ; 1 bytes @ 0x4A
  3325     006A                     	ds	1
  3326     006B                     ??_efgtoa:
  3327                           
  3328                           ; 1 bytes @ 0x4B
  3329     006B                     	ds	4
  3330     006F                     ??_vfprintf:
  3331                           
  3332                           ; 1 bytes @ 0x4F
  3333     006F                     	ds	1
  3334     0070                     ??_printf:
  3335     0070                     ??_main:	
  3336                           ; 1 bytes @ 0x50
  3337                           
  3338                           
  3339                           	psect	maintext
  3340     09F4                     __pmaintext:	
  3341                           ; 1 bytes @ 0x50
  3342 ;;
  3343 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3344 ;;
  3345 ;; *************** function _main *****************
  3346 ;; Defined at:
  3347 ;;		line 39 in file "main.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  2  552[None  ] int 
  3354 ;; Registers used:
  3355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : B1F/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;Total ram usage:        8 bytes
  3366 ;; Hardware stack levels required when called: 13
  3367 ;; This function calls:
  3368 ;;		_ADC_GetConversion
  3369 ;;		_EUSART_RxCompleteCallbackRegister
  3370 ;;		_SYSTEM_Initialize
  3371 ;;		_TMR4_PeriodMatchCallbackRegister
  3372 ;;		_TMR4_Start
  3373 ;;		___fladd
  3374 ;;		___flge
  3375 ;;		___flmul
  3376 ;;		___xxtofl
  3377 ;;		_delay_ms
  3378 ;;		_handle_voltage
  3379 ;;		_printf
  3380 ;; This function is called by:
  3381 ;;		Startup code after reset
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385     09F4                     _main:	
  3386                           ;psect for function _main
  3387                           
  3388     09F4                     l5300:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3391                           
  3392                           
  3393                           ;main.c: 41:     SYSTEM_Initialize();
  3394     09F4  3190  2000  3189   	fcall	_SYSTEM_Initialize
  3395     09F7                     l5302:
  3396                           
  3397                           ;main.c: 42:     (INTCONbits.GIE = 1);
  3398     09F7  178B               	bsf	11,7	;volatile
  3399     09F8                     l5304:
  3400                           
  3401                           ;main.c: 43:     (INTCONbits.PEIE = 1);
  3402     09F8  170B               	bsf	11,6	;volatile
  3403     09F9                     l5306:
  3404                           
  3405                           ;main.c: 44:     TMR4_Start();
  3406     09F9  319D  25F6  3189   	fcall	_TMR4_Start
  3407     09FC                     l5308:
  3408                           
  3409                           ;main.c: 45:     TMR4_PeriodMatchCallbackRegister(timer_interrupt);
  3410     09FC  300D               	movlw	low _timer_interrupt
  3411     09FD  0020               	movlb	0	; select bank0
  3412     09FE  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler
  3413     09FF  3008               	movlw	high _timer_interrupt
  3414     0A00  00A1               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler+1
  3415     0A01  319E  263A  3189   	fcall	_TMR4_PeriodMatchCallbackRegister
  3416     0A04                     l5310:
  3417                           
  3418                           ;main.c: 46:     EUSART_RxCompleteCallbackRegister(check_RX_Data);
  3419     0A04  3041               	movlw	low _check_RX_Data
  3420     0A05  0020               	movlb	0	; select bank0
  3421     0A06  00A0               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler
  3422     0A07  301F               	movlw	high _check_RX_Data
  3423     0A08  00A1               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler+1
  3424     0A09  319E  265E  3189   	fcall	_EUSART_RxCompleteCallbackRegister
  3425     0A0C                     l5312:
  3426                           
  3427                           ;main.c: 48:     printf("SAZANKA_PowerBoard2024\n");
  3428     0A0C  304B               	movlw	low (STR_1| (0+32768))
  3429     0A0D  0021               	movlb	1	; select bank1
  3430     0A0E  00E2               	movwf	printf@fmt^(0+128)
  3431     0A0F  3098               	movlw	high (STR_1| (0+32768))
  3432     0A10  00E3               	movwf	(printf@fmt^(0+128)+1)
  3433     0A11  319E  268B  3189   	fcall	_printf
  3434     0A14                     l5314:
  3435                           
  3436                           ;main.c: 49:     printf("Created by KimuraTomohiro\n");
  3437     0A14  3030               	movlw	low (STR_2| (0+32768))
  3438     0A15  0021               	movlb	1	; select bank1
  3439     0A16  00E2               	movwf	printf@fmt^(0+128)
  3440     0A17  3098               	movlw	high (STR_2| (0+32768))
  3441     0A18  00E3               	movwf	(printf@fmt^(0+128)+1)
  3442     0A19  319E  268B  3189   	fcall	_printf
  3443     0A1C                     l5316:
  3444                           
  3445                           ;main.c: 56:         voltage_raw_24 = ADC_GetConversion(VREF_24V);
  3446     0A1C  3005               	movlw	5
  3447     0A1D  3190  2013  3189   	fcall	_ADC_GetConversion
  3448     0A20  0020               	movlb	0	; select bank0
  3449     0A21  0821               	movf	?_ADC_GetConversion+1,w
  3450     0A22  0022               	movlb	2	; select bank2
  3451     0A23  00CF               	movwf	(_voltage_raw_24+1)^(0+256)
  3452     0A24  0020               	movlb	0	; select bank0
  3453     0A25  0820               	movf	?_ADC_GetConversion,w
  3454     0A26  0022               	movlb	2	; select bank2
  3455     0A27  00CE               	movwf	_voltage_raw_24^(0+256)
  3456     0A28                     l5318:
  3457                           
  3458                           ;main.c: 57:         voltage_raw_12 = ADC_GetConversion(VREF_12V);
  3459     0A28  3006               	movlw	6
  3460     0A29  3190  2013  3189   	fcall	_ADC_GetConversion
  3461     0A2C  0020               	movlb	0	; select bank0
  3462     0A2D  0821               	movf	?_ADC_GetConversion+1,w
  3463     0A2E  0022               	movlb	2	; select bank2
  3464     0A2F  00CD               	movwf	(_voltage_raw_12+1)^(0+256)
  3465     0A30  0020               	movlb	0	; select bank0
  3466     0A31  0820               	movf	?_ADC_GetConversion,w
  3467     0A32  0022               	movlb	2	; select bank2
  3468     0A33  00CC               	movwf	_voltage_raw_12^(0+256)
  3469     0A34                     l5320:
  3470                           
  3471                           ;main.c: 59:         voltage_24 = voltage_raw_24 * 0.0008789 + -3.3375;
  3472     0A34  30C0               	movlw	192
  3473     0A35  0020               	movlb	0	; select bank0
  3474     0A36  00CB               	movwf	___fladd@b+3
  3475     0A37  3055               	movlw	85
  3476     0A38  00CA               	movwf	___fladd@b+2
  3477     0A39  3099               	movlw	153
  3478     0A3A  00C9               	movwf	___fladd@b+1
  3479     0A3B  309A               	movlw	154
  3480     0A3C  00C8               	movwf	___fladd@b
  3481     0A3D  303A               	movlw	58
  3482     0A3E  00B1               	movwf	___flmul@b+3
  3483     0A3F  3066               	movlw	102
  3484     0A40  00B0               	movwf	___flmul@b+2
  3485     0A41  3065               	movlw	101
  3486     0A42  00AF               	movwf	___flmul@b+1
  3487     0A43  30FB               	movlw	251
  3488     0A44  00AE               	movwf	___flmul@b
  3489     0A45  0022               	movlb	2	; select bank2
  3490     0A46  084E               	movf	_voltage_raw_24^(0+256),w
  3491     0A47  0020               	movlb	0	; select bank0
  3492     0A48  00A0               	movwf	___xxtofl@val
  3493     0A49  0022               	movlb	2	; select bank2
  3494     0A4A  084F               	movf	(_voltage_raw_24+1)^(0+256),w
  3495     0A4B  0020               	movlb	0	; select bank0
  3496     0A4C  00A1               	movwf	___xxtofl@val+1
  3497     0A4D  01A2               	clrf	___xxtofl@val+2
  3498     0A4E  01A3               	clrf	___xxtofl@val+3
  3499     0A4F  3000               	movlw	0
  3500     0A50  3187  2745  3189   	fcall	___xxtofl
  3501     0A53  0020               	movlb	0	; select bank0
  3502     0A54  0823               	movf	?___xxtofl+3,w
  3503     0A55  00B5               	movwf	___flmul@a+3
  3504     0A56  0822               	movf	?___xxtofl+2,w
  3505     0A57  00B4               	movwf	___flmul@a+2
  3506     0A58  0821               	movf	?___xxtofl+1,w
  3507     0A59  00B3               	movwf	___flmul@a+1
  3508     0A5A  0820               	movf	?___xxtofl,w
  3509     0A5B  00B2               	movwf	___flmul@a
  3510     0A5C  318D  25C5  3189   	fcall	___flmul
  3511     0A5F  0020               	movlb	0	; select bank0
  3512     0A60  0831               	movf	?___flmul+3,w
  3513     0A61  00CF               	movwf	___fladd@a+3
  3514     0A62  0830               	movf	?___flmul+2,w
  3515     0A63  00CE               	movwf	___fladd@a+2
  3516     0A64  082F               	movf	?___flmul+1,w
  3517     0A65  00CD               	movwf	___fladd@a+1
  3518     0A66  082E               	movf	?___flmul,w
  3519     0A67  00CC               	movwf	___fladd@a
  3520     0A68  318B  23B9  3189   	fcall	___fladd
  3521     0A6B  0020               	movlb	0	; select bank0
  3522     0A6C  084B               	movf	?___fladd+3,w
  3523     0A6D  0022               	movlb	2	; select bank2
  3524     0A6E  00C3               	movwf	(_voltage_24+3)^(0+256)
  3525     0A6F  0020               	movlb	0	; select bank0
  3526     0A70  084A               	movf	?___fladd+2,w
  3527     0A71  0022               	movlb	2	; select bank2
  3528     0A72  00C2               	movwf	(_voltage_24+2)^(0+256)
  3529     0A73  0020               	movlb	0	; select bank0
  3530     0A74  0849               	movf	?___fladd+1,w
  3531     0A75  0022               	movlb	2	; select bank2
  3532     0A76  00C1               	movwf	(_voltage_24+1)^(0+256)
  3533     0A77  0020               	movlb	0	; select bank0
  3534     0A78  0848               	movf	?___fladd,w
  3535     0A79  0022               	movlb	2	; select bank2
  3536     0A7A  00C0               	movwf	_voltage_24^(0+256)
  3537     0A7B                     l5322:
  3538                           
  3539                           ;main.c: 60:         voltage_12 = voltage_raw_12 * 0.00042613636 + -1.52727272;
  3540     0A7B  30BF               	movlw	191
  3541     0A7C  0020               	movlb	0	; select bank0
  3542     0A7D  00CB               	movwf	___fladd@b+3
  3543     0A7E  30C3               	movlw	195
  3544     0A7F  00CA               	movwf	___fladd@b+2
  3545     0A80  307D               	movlw	125
  3546     0A81  00C9               	movwf	___fladd@b+1
  3547     0A82  30AC               	movlw	172
  3548     0A83  00C8               	movwf	___fladd@b
  3549     0A84  3039               	movlw	57
  3550     0A85  00B1               	movwf	___flmul@b+3
  3551     0A86  30DF               	movlw	223
  3552     0A87  00B0               	movwf	___flmul@b+2
  3553     0A88  306B               	movlw	107
  3554     0A89  00AF               	movwf	___flmul@b+1
  3555     0A8A  300E               	movlw	14
  3556     0A8B  00AE               	movwf	___flmul@b
  3557     0A8C  0022               	movlb	2	; select bank2
  3558     0A8D  084C               	movf	_voltage_raw_12^(0+256),w
  3559     0A8E  0020               	movlb	0	; select bank0
  3560     0A8F  00A0               	movwf	___xxtofl@val
  3561     0A90  0022               	movlb	2	; select bank2
  3562     0A91  084D               	movf	(_voltage_raw_12+1)^(0+256),w
  3563     0A92  0020               	movlb	0	; select bank0
  3564     0A93  00A1               	movwf	___xxtofl@val+1
  3565     0A94  01A2               	clrf	___xxtofl@val+2
  3566     0A95  01A3               	clrf	___xxtofl@val+3
  3567     0A96  3000               	movlw	0
  3568     0A97  3187  2745  3189   	fcall	___xxtofl
  3569     0A9A  0020               	movlb	0	; select bank0
  3570     0A9B  0823               	movf	?___xxtofl+3,w
  3571     0A9C  00B5               	movwf	___flmul@a+3
  3572     0A9D  0822               	movf	?___xxtofl+2,w
  3573     0A9E  00B4               	movwf	___flmul@a+2
  3574     0A9F  0821               	movf	?___xxtofl+1,w
  3575     0AA0  00B3               	movwf	___flmul@a+1
  3576     0AA1  0820               	movf	?___xxtofl,w
  3577     0AA2  00B2               	movwf	___flmul@a
  3578     0AA3  318D  25C5  3189   	fcall	___flmul
  3579     0AA6  0020               	movlb	0	; select bank0
  3580     0AA7  0831               	movf	?___flmul+3,w
  3581     0AA8  00CF               	movwf	___fladd@a+3
  3582     0AA9  0830               	movf	?___flmul+2,w
  3583     0AAA  00CE               	movwf	___fladd@a+2
  3584     0AAB  082F               	movf	?___flmul+1,w
  3585     0AAC  00CD               	movwf	___fladd@a+1
  3586     0AAD  082E               	movf	?___flmul,w
  3587     0AAE  00CC               	movwf	___fladd@a
  3588     0AAF  318B  23B9  3189   	fcall	___fladd
  3589     0AB2  0020               	movlb	0	; select bank0
  3590     0AB3  084B               	movf	?___fladd+3,w
  3591     0AB4  0022               	movlb	2	; select bank2
  3592     0AB5  00C7               	movwf	(_voltage_12+3)^(0+256)
  3593     0AB6  0020               	movlb	0	; select bank0
  3594     0AB7  084A               	movf	?___fladd+2,w
  3595     0AB8  0022               	movlb	2	; select bank2
  3596     0AB9  00C6               	movwf	(_voltage_12+2)^(0+256)
  3597     0ABA  0020               	movlb	0	; select bank0
  3598     0ABB  0849               	movf	?___fladd+1,w
  3599     0ABC  0022               	movlb	2	; select bank2
  3600     0ABD  00C5               	movwf	(_voltage_12+1)^(0+256)
  3601     0ABE  0020               	movlb	0	; select bank0
  3602     0ABF  0848               	movf	?___fladd,w
  3603     0AC0  0022               	movlb	2	; select bank2
  3604     0AC1  00C4               	movwf	_voltage_12^(0+256)
  3605     0AC2                     l5324:
  3606                           
  3607                           ;main.c: 62:         printf("VH:%.1f VL:%.1f\n", (voltage_24 > 9.0) ? voltage_24 : 0,
  3608     0AC2  3040               	movlw	64
  3609     0AC3  0020               	movlb	0	; select bank0
  3610     0AC4  00CB               	movwf	___flge@ff1+3
  3611     0AC5  30C0               	movlw	192
  3612     0AC6  00CA               	movwf	___flge@ff1+2
  3613     0AC7  3000               	movlw	0
  3614     0AC8  00C9               	movwf	___flge@ff1+1
  3615     0AC9  3000               	movlw	0
  3616     0ACA  00C8               	movwf	___flge@ff1
  3617     0ACB  0022               	movlb	2	; select bank2
  3618     0ACC  0847               	movf	(_voltage_12+3)^(0+256),w
  3619     0ACD  0020               	movlb	0	; select bank0
  3620     0ACE  00CF               	movwf	___flge@ff2+3
  3621     0ACF  0022               	movlb	2	; select bank2
  3622     0AD0  0846               	movf	(_voltage_12+2)^(0+256),w
  3623     0AD1  0020               	movlb	0	; select bank0
  3624     0AD2  00CE               	movwf	___flge@ff2+2
  3625     0AD3  0022               	movlb	2	; select bank2
  3626     0AD4  0845               	movf	(_voltage_12+1)^(0+256),w
  3627     0AD5  0020               	movlb	0	; select bank0
  3628     0AD6  00CD               	movwf	___flge@ff2+1
  3629     0AD7  0022               	movlb	2	; select bank2
  3630     0AD8  0844               	movf	_voltage_12^(0+256),w
  3631     0AD9  0020               	movlb	0	; select bank0
  3632     0ADA  00CC               	movwf	___flge@ff2
  3633     0ADB  3193  23D6  3189   	fcall	___flge
  3634     0ADE  1C03               	btfss	3,0
  3635     0ADF  2AE1               	goto	u7011
  3636     0AE0  2AE2               	goto	u7010
  3637     0AE1                     u7011:
  3638     0AE1  2AEC               	goto	l5328
  3639     0AE2                     u7010:
  3640     0AE2                     l5326:
  3641     0AE2  3000               	movlw	0
  3642     0AE3  0022               	movlb	2	; select bank2
  3643     0AE4  00E8               	movwf	(_main$1111+3)^(0+256)
  3644     0AE5  3000               	movlw	0
  3645     0AE6  00E7               	movwf	(_main$1111+2)^(0+256)
  3646     0AE7  3000               	movlw	0
  3647     0AE8  00E6               	movwf	(_main$1111+1)^(0+256)
  3648     0AE9  3000               	movlw	0
  3649     0AEA  00E5               	movwf	_main$1111^(0+256)
  3650     0AEB  2AF5               	goto	l5330
  3651     0AEC                     l5328:
  3652     0AEC  0022               	movlb	2	; select bank2
  3653     0AED  0847               	movf	(_voltage_12+3)^(0+256),w
  3654     0AEE  00E8               	movwf	(_main$1111+3)^(0+256)
  3655     0AEF  0846               	movf	(_voltage_12+2)^(0+256),w
  3656     0AF0  00E7               	movwf	(_main$1111+2)^(0+256)
  3657     0AF1  0845               	movf	(_voltage_12+1)^(0+256),w
  3658     0AF2  00E6               	movwf	(_main$1111+1)^(0+256)
  3659     0AF3  0844               	movf	_voltage_12^(0+256),w
  3660     0AF4  00E5               	movwf	_main$1111^(0+256)
  3661     0AF5                     l5330:
  3662     0AF5  3041               	movlw	65
  3663     0AF6  0020               	movlb	0	; select bank0
  3664     0AF7  00CB               	movwf	___flge@ff1+3
  3665     0AF8  3010               	movlw	16
  3666     0AF9  00CA               	movwf	___flge@ff1+2
  3667     0AFA  3000               	movlw	0
  3668     0AFB  00C9               	movwf	___flge@ff1+1
  3669     0AFC  3000               	movlw	0
  3670     0AFD  00C8               	movwf	___flge@ff1
  3671     0AFE  0022               	movlb	2	; select bank2
  3672     0AFF  0843               	movf	(_voltage_24+3)^(0+256),w
  3673     0B00  0020               	movlb	0	; select bank0
  3674     0B01  00CF               	movwf	___flge@ff2+3
  3675     0B02  0022               	movlb	2	; select bank2
  3676     0B03  0842               	movf	(_voltage_24+2)^(0+256),w
  3677     0B04  0020               	movlb	0	; select bank0
  3678     0B05  00CE               	movwf	___flge@ff2+2
  3679     0B06  0022               	movlb	2	; select bank2
  3680     0B07  0841               	movf	(_voltage_24+1)^(0+256),w
  3681     0B08  0020               	movlb	0	; select bank0
  3682     0B09  00CD               	movwf	___flge@ff2+1
  3683     0B0A  0022               	movlb	2	; select bank2
  3684     0B0B  0840               	movf	_voltage_24^(0+256),w
  3685     0B0C  0020               	movlb	0	; select bank0
  3686     0B0D  00CC               	movwf	___flge@ff2
  3687     0B0E  3193  23D6  3189   	fcall	___flge
  3688     0B11  1C03               	btfss	3,0
  3689     0B12  2B14               	goto	u7021
  3690     0B13  2B15               	goto	u7020
  3691     0B14                     u7021:
  3692     0B14  2B1F               	goto	l5334
  3693     0B15                     u7020:
  3694     0B15                     l5332:
  3695     0B15  3000               	movlw	0
  3696     0B16  0022               	movlb	2	; select bank2
  3697     0B17  00EC               	movwf	(_main$1112+3)^(0+256)
  3698     0B18  3000               	movlw	0
  3699     0B19  00EB               	movwf	(_main$1112+2)^(0+256)
  3700     0B1A  3000               	movlw	0
  3701     0B1B  00EA               	movwf	(_main$1112+1)^(0+256)
  3702     0B1C  3000               	movlw	0
  3703     0B1D  00E9               	movwf	_main$1112^(0+256)
  3704     0B1E  2B28               	goto	l5336
  3705     0B1F                     l5334:
  3706     0B1F  0022               	movlb	2	; select bank2
  3707     0B20  0843               	movf	(_voltage_24+3)^(0+256),w
  3708     0B21  00EC               	movwf	(_main$1112+3)^(0+256)
  3709     0B22  0842               	movf	(_voltage_24+2)^(0+256),w
  3710     0B23  00EB               	movwf	(_main$1112+2)^(0+256)
  3711     0B24  0841               	movf	(_voltage_24+1)^(0+256),w
  3712     0B25  00EA               	movwf	(_main$1112+1)^(0+256)
  3713     0B26  0840               	movf	_voltage_24^(0+256),w
  3714     0B27  00E9               	movwf	_main$1112^(0+256)
  3715     0B28                     l5336:
  3716     0B28  3077               	movlw	low (STR_3| (0+32768))
  3717     0B29  0021               	movlb	1	; select bank1
  3718     0B2A  00E2               	movwf	printf@fmt^(0+128)
  3719     0B2B  3098               	movlw	high (STR_3| (0+32768))
  3720     0B2C  00E3               	movwf	(printf@fmt^(0+128)+1)
  3721     0B2D  0022               	movlb	2	; select bank2
  3722     0B2E  086C               	movf	(_main$1112+3)^(0+256),w
  3723     0B2F  0021               	movlb	1	; select bank1
  3724     0B30  00E7               	movwf	((?_printf+3)^(0+128)+2)
  3725     0B31  0022               	movlb	2	; select bank2
  3726     0B32  086B               	movf	(_main$1112+2)^(0+256),w
  3727     0B33  0021               	movlb	1	; select bank1
  3728     0B34  00E6               	movwf	((?_printf+2)^(0+128)+2)
  3729     0B35  0022               	movlb	2	; select bank2
  3730     0B36  086A               	movf	(_main$1112+1)^(0+256),w
  3731     0B37  0021               	movlb	1	; select bank1
  3732     0B38  00E5               	movwf	((?_printf+1)^(0+128)+2)
  3733     0B39  0022               	movlb	2	; select bank2
  3734     0B3A  0869               	movf	_main$1112^(0+256),w
  3735     0B3B  0021               	movlb	1	; select bank1
  3736     0B3C  00E4               	movwf	(?_printf^(0+128)+2)
  3737     0B3D  0022               	movlb	2	; select bank2
  3738     0B3E  0868               	movf	(_main$1111+3)^(0+256),w
  3739     0B3F  0021               	movlb	1	; select bank1
  3740     0B40  00EB               	movwf	((?_printf+3)^(0+128)+6)
  3741     0B41  0022               	movlb	2	; select bank2
  3742     0B42  0867               	movf	(_main$1111+2)^(0+256),w
  3743     0B43  0021               	movlb	1	; select bank1
  3744     0B44  00EA               	movwf	((?_printf+2)^(0+128)+6)
  3745     0B45  0022               	movlb	2	; select bank2
  3746     0B46  0866               	movf	(_main$1111+1)^(0+256),w
  3747     0B47  0021               	movlb	1	; select bank1
  3748     0B48  00E9               	movwf	((?_printf+1)^(0+128)+6)
  3749     0B49  0022               	movlb	2	; select bank2
  3750     0B4A  0865               	movf	_main$1111^(0+256),w
  3751     0B4B  0021               	movlb	1	; select bank1
  3752     0B4C  00E8               	movwf	(?_printf^(0+128)+6)
  3753     0B4D  319E  268B  3189   	fcall	_printf
  3754     0B50                     l5338:
  3755                           
  3756                           ;main.c: 65:         handle_voltage(voltage_24, 9.0, 24, &reset_flg_24, LED_24V_On, LED_
      +                          24V_Off);
  3757     0B50  0022               	movlb	2	; select bank2
  3758     0B51  0843               	movf	(_voltage_24+3)^(0+256),w
  3759     0B52  0020               	movlb	0	; select bank0
  3760     0B53  00D7               	movwf	handle_voltage@voltage+3
  3761     0B54  0022               	movlb	2	; select bank2
  3762     0B55  0842               	movf	(_voltage_24+2)^(0+256),w
  3763     0B56  0020               	movlb	0	; select bank0
  3764     0B57  00D6               	movwf	handle_voltage@voltage+2
  3765     0B58  0022               	movlb	2	; select bank2
  3766     0B59  0841               	movf	(_voltage_24+1)^(0+256),w
  3767     0B5A  0020               	movlb	0	; select bank0
  3768     0B5B  00D5               	movwf	handle_voltage@voltage+1
  3769     0B5C  0022               	movlb	2	; select bank2
  3770     0B5D  0840               	movf	_voltage_24^(0+256),w
  3771     0B5E  0020               	movlb	0	; select bank0
  3772     0B5F  00D4               	movwf	handle_voltage@voltage
  3773     0B60  3041               	movlw	65
  3774     0B61  00DB               	movwf	handle_voltage@threshold+3
  3775     0B62  3010               	movlw	16
  3776     0B63  00DA               	movwf	handle_voltage@threshold+2
  3777     0B64  3000               	movlw	0
  3778     0B65  00D9               	movwf	handle_voltage@threshold+1
  3779     0B66  3000               	movlw	0
  3780     0B67  00D8               	movwf	handle_voltage@threshold
  3781     0B68  3018               	movlw	24
  3782     0B69  00DC               	movwf	handle_voltage@mode
  3783     0B6A  306E               	movlw	(low (_reset_flg_24| (0+256)))& (0+255)
  3784     0B6B  00DD               	movwf	handle_voltage@reset_flg
  3785     0B6C  30FF               	movlw	low _LED_24V_On
  3786     0B6D  00DE               	movwf	handle_voltage@LED_SetHigh
  3787     0B6E  301D               	movlw	high _LED_24V_On
  3788     0B6F  00DF               	movwf	handle_voltage@LED_SetHigh+1
  3789     0B70  30F9               	movlw	low _LED_24V_Off
  3790     0B71  00E0               	movwf	handle_voltage@LED_SetLow
  3791     0B72  301D               	movlw	high _LED_24V_Off
  3792     0B73  00E1               	movwf	handle_voltage@LED_SetLow+1
  3793     0B74  3188  2048  3189   	fcall	_handle_voltage
  3794     0B77                     l5340:
  3795                           
  3796                           ;main.c: 66:         handle_voltage(voltage_12, 6.0, 12, &reset_flg_12, LED_12V_On, LED_
      +                          12V_Off);
  3797     0B77  0022               	movlb	2	; select bank2
  3798     0B78  0847               	movf	(_voltage_12+3)^(0+256),w
  3799     0B79  0020               	movlb	0	; select bank0
  3800     0B7A  00D7               	movwf	handle_voltage@voltage+3
  3801     0B7B  0022               	movlb	2	; select bank2
  3802     0B7C  0846               	movf	(_voltage_12+2)^(0+256),w
  3803     0B7D  0020               	movlb	0	; select bank0
  3804     0B7E  00D6               	movwf	handle_voltage@voltage+2
  3805     0B7F  0022               	movlb	2	; select bank2
  3806     0B80  0845               	movf	(_voltage_12+1)^(0+256),w
  3807     0B81  0020               	movlb	0	; select bank0
  3808     0B82  00D5               	movwf	handle_voltage@voltage+1
  3809     0B83  0022               	movlb	2	; select bank2
  3810     0B84  0844               	movf	_voltage_12^(0+256),w
  3811     0B85  0020               	movlb	0	; select bank0
  3812     0B86  00D4               	movwf	handle_voltage@voltage
  3813     0B87  3040               	movlw	64
  3814     0B88  00DB               	movwf	handle_voltage@threshold+3
  3815     0B89  30C0               	movlw	192
  3816     0B8A  00DA               	movwf	handle_voltage@threshold+2
  3817     0B8B  3000               	movlw	0
  3818     0B8C  00D9               	movwf	handle_voltage@threshold+1
  3819     0B8D  3000               	movlw	0
  3820     0B8E  00D8               	movwf	handle_voltage@threshold
  3821     0B8F  300C               	movlw	12
  3822     0B90  00DC               	movwf	handle_voltage@mode
  3823     0B91  306D               	movlw	(low (_reset_flg_12| (0+256)))& (0+255)
  3824     0B92  00DD               	movwf	handle_voltage@reset_flg
  3825     0B93  3002               	movlw	low _LED_12V_On
  3826     0B94  00DE               	movwf	handle_voltage@LED_SetHigh
  3827     0B95  301E               	movlw	high _LED_12V_On
  3828     0B96  00DF               	movwf	handle_voltage@LED_SetHigh+1
  3829     0B97  30FC               	movlw	low _LED_12V_Off
  3830     0B98  00E0               	movwf	handle_voltage@LED_SetLow
  3831     0B99  301D               	movlw	high _LED_12V_Off
  3832     0B9A  00E1               	movwf	handle_voltage@LED_SetLow+1
  3833     0B9B  3188  2048  3189   	fcall	_handle_voltage
  3834     0B9E                     l5342:
  3835                           
  3836                           ;main.c: 69:         if(config_flg == 1)
  3837     0B9E  0022               	movlb	2	; select bank2
  3838     0B9F  035C               	decf	_config_flg^(0+256),w
  3839     0BA0  1D03               	btfss	3,2
  3840     0BA1  2BA3               	goto	u7031
  3841     0BA2  2BA4               	goto	u7030
  3842     0BA3                     u7031:
  3843     0BA3  2BA5               	goto	l5346
  3844     0BA4                     u7030:
  3845     0BA4  2BAE               	goto	l5348
  3846     0BA5                     l5346:
  3847                           
  3848                           ;main.c: 71:         delay_ms(10);
  3849     0BA5  300A               	movlw	10
  3850     0BA6  0020               	movlb	0	; select bank0
  3851     0BA7  00A0               	movwf	delay_ms@ms
  3852     0BA8  3000               	movlw	0
  3853     0BA9  00A1               	movwf	delay_ms@ms+1
  3854     0BAA  319F  2706  3189   	fcall	_delay_ms
  3855     0BAD  2A1C               	goto	l5316
  3856     0BAE                     l5348:
  3857                           
  3858                           ;main.c: 77:         printf("This is config mode");
  3859     0BAE  3063               	movlw	low (STR_4| (0+32768))
  3860     0BAF  0021               	movlb	1	; select bank1
  3861     0BB0  00E2               	movwf	printf@fmt^(0+128)
  3862     0BB1  3098               	movlw	high (STR_4| (0+32768))
  3863     0BB2  00E3               	movwf	(printf@fmt^(0+128)+1)
  3864     0BB3  319E  268B  3189   	fcall	_printf
  3865     0BB6  2BAE               	goto	l5348
  3866     0BB7  3180  284A         	ljmp	start
  3867     0BB9                     __end_of_main:
  3868                           
  3869                           	psect	text1
  3870     1E8B                     __ptext1:	
  3871 ;; *************** function _printf *****************
  3872 ;; Defined at:
  3873 ;;		line 5 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/printf.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  fmt             2   66[BANK1 ] PTR const unsigned char 
  3876 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  ret             2    0        int 
  3879 ;;  ap              1   76[BANK1 ] PTR void [1]
  3880 ;;		 -> ?_printf(2), 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  2   66[BANK1 ] int 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3890 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;Total ram usage:       11 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 12
  3897 ;; This function calls:
  3898 ;;		_vfprintf
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904     1E8B                     _printf:	
  3905                           ;psect for function _printf
  3906                           
  3907     1E8B                     l5212:	
  3908                           ;incstack = 0
  3909                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3910                           
  3911     1E8B  30E4               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3912     1E8C  0021               	movlb	1	; select bank1
  3913     1E8D  00EC               	movwf	printf@ap^(0+128)
  3914     1E8E                     l5214:
  3915     1E8E  3000               	movlw	0
  3916     1E8F  00DB               	movwf	vfprintf@fp^(0+128)
  3917     1E90  00DC               	movwf	(vfprintf@fp+1)^(0+128)
  3918     1E91  0863               	movf	(printf@fmt+1)^(0+128),w
  3919     1E92  00DE               	movwf	(vfprintf@fmt+1)^(0+128)
  3920     1E93  0862               	movf	printf@fmt^(0+128),w
  3921     1E94  00DD               	movwf	vfprintf@fmt^(0+128)
  3922     1E95  30EC               	movlw	(low (printf@ap| 0))& (0+255)
  3923     1E96  00DF               	movwf	vfprintf@ap^(0+128)
  3924     1E97  319F  2723  319E   	fcall	_vfprintf
  3925     1E9A                     l1167:
  3926     1E9A  0008               	return
  3927     1E9B                     __end_of_printf:
  3928                           
  3929                           	psect	text2
  3930     1F23                     __ptext2:	
  3931 ;; *************** function _vfprintf *****************
  3932 ;; Defined at:
  3933 ;;		line 1817 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  fp              2   59[BANK1 ] PTR struct _IO_FILE
  3936 ;;		 -> NULL(0), 
  3937 ;;  fmt             2   61[BANK1 ] PTR const unsigned char 
  3938 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  3939 ;;  ap              1   63[BANK1 ] PTR PTR void 
  3940 ;;		 -> printf@ap(1), 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  cfmt            2   64[BANK1 ] PTR unsigned char 
  3943 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  2   59[BANK1 ] int 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3953 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3957 ;;Total ram usage:        8 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; Hardware stack levels required when called: 11
  3960 ;; This function calls:
  3961 ;;		_vfpfcnvrt
  3962 ;; This function is called by:
  3963 ;;		_printf
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967     1F23                     _vfprintf:	
  3968                           ;psect for function _vfprintf
  3969                           
  3970     1F23                     l5172:	
  3971                           ;incstack = 0
  3972                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3973                           
  3974                           
  3975                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.50/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  3976     1F23  0021               	movlb	1	; select bank1
  3977     1F24  085E               	movf	(vfprintf@fmt+1)^(0+128),w
  3978     1F25  00E1               	movwf	(vfprintf@cfmt+1)^(0+128)
  3979     1F26  085D               	movf	vfprintf@fmt^(0+128),w
  3980     1F27  00E0               	movwf	vfprintf@cfmt^(0+128)
  3981                           
  3982                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  3983     1F28  2F34               	goto	l5176
  3984     1F29                     l5174:
  3985                           
  3986                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  3987     1F29  085C               	movf	(vfprintf@fp+1)^(0+128),w
  3988     1F2A  00CD               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  3989     1F2B  085B               	movf	vfprintf@fp^(0+128),w
  3990     1F2C  00CC               	movwf	vfpfcnvrt@fp^(0+128)
  3991     1F2D  30E0               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3992     1F2E  00CE               	movwf	vfpfcnvrt@fmt^(0+128)
  3993     1F2F  085F               	movf	vfprintf@ap^(0+128),w
  3994     1F30  00CF               	movwf	vfpfcnvrt@ap^(0+128)
  3995     1F31  3195  254C  319F   	fcall	_vfpfcnvrt
  3996     1F34                     l5176:
  3997                           
  3998                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  3999     1F34  0021               	movlb	1	; select bank1
  4000     1F35  0860               	movf	vfprintf@cfmt^(0+128),w
  4001     1F36  0084               	movwf	4
  4002     1F37  0861               	movf	(vfprintf@cfmt+1)^(0+128),w
  4003     1F38  0085               	movwf	5
  4004     1F39  0012               	moviw fsr0++
  4005     1F3A  1D03               	btfss	3,2
  4006     1F3B  2F3D               	goto	u6751
  4007     1F3C  2F3E               	goto	u6750
  4008     1F3D                     u6751:
  4009     1F3D  2F29               	goto	l5174
  4010     1F3E                     u6750:
  4011     1F3E                     l5178:
  4012                           
  4013                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  4014     1F3E  01DB               	clrf	?_vfprintf^(0+128)
  4015     1F3F  01DC               	clrf	(?_vfprintf+1)^(0+128)
  4016     1F40                     l1285:
  4017     1F40  0008               	return
  4018     1F41                     __end_of_vfprintf:
  4019                           
  4020                           	psect	text3
  4021     154C                     __ptext3:	
  4022 ;; *************** function _vfpfcnvrt *****************
  4023 ;; Defined at:
  4024 ;;		line 1177 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  4027 ;;		 -> NULL(0), 
  4028 ;;  fmt             1   46[BANK1 ] PTR PTR unsigned char 
  4029 ;;		 -> vfprintf@cfmt(2), 
  4030 ;;  ap              1   47[BANK1 ] PTR PTR void 
  4031 ;;		 -> printf@ap(1), 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  convarg         4   52[BANK1 ] struct .
  4034 ;;  cp              2   57[BANK1 ] PTR unsigned char 
  4035 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  4036 ;;  c               1   56[BANK1 ] unsigned char 
  4037 ;;  done            1    0        _Bool 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4047 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;Total ram usage:       15 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; Hardware stack levels required when called: 10
  4054 ;; This function calls:
  4055 ;;		_efgtoa
  4056 ;;		_fputc
  4057 ;;		_read_prec_or_width
  4058 ;; This function is called by:
  4059 ;;		_vfprintf
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063     154C                     _vfpfcnvrt:	
  4064                           ;psect for function _vfpfcnvrt
  4065                           
  4066     154C                     l5006:	
  4067                           ;incstack = 0
  4068                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4069                           
  4070                           
  4071                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.50/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  4072     154C  0021               	movlb	1	; select bank1
  4073     154D  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4074     154E  0086               	movwf	6
  4075     154F  0187               	clrf	7
  4076     1550  3F40               	moviw [0]fsr1
  4077     1551  00D0               	movwf	??_vfpfcnvrt^(0+128)
  4078     1552  3F41               	moviw [1]fsr1
  4079     1553  00D1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4080     1554  0850               	movf	??_vfpfcnvrt^(0+128),w
  4081     1555  0084               	movwf	4
  4082     1556  0851               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4083     1557  0085               	movwf	5
  4084     1558  0012               	moviw fsr0++
  4085     1559  3A25               	xorlw	37
  4086     155A  1D03               	btfss	3,2
  4087     155B  2D5D               	goto	u6711
  4088     155C  2D5E               	goto	u6710
  4089     155D                     u6711:
  4090     155D  2E3A               	goto	l5056
  4091     155E                     u6710:
  4092     155E                     l5008:
  4093                           
  4094                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  4095     155E  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4096     155F  0086               	movwf	6
  4097     1560  0187               	clrf	7
  4098     1561  3001               	movlw	1
  4099     1562  0781               	addwf	1,f
  4100     1563  3141               	addfsr 1,1
  4101     1564  1803               	skipnc
  4102     1565  0A81               	incf	1,f
  4103     1566                     l5010:
  4104                           
  4105                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  4106     1566  0022               	movlb	2	; select bank2
  4107     1567  01C8               	clrf	_width^(0+256)
  4108     1568  01C9               	clrf	(_width+1)^(0+256)
  4109     1569  3000               	movlw	0
  4110     156A  0021               	movlb	1	; select bank1
  4111     156B  00EF               	movwf	_flags^(0+128)
  4112     156C                     l5012:
  4113                           
  4114                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  4115     156C  30FF               	movlw	255
  4116     156D  0022               	movlb	2	; select bank2
  4117     156E  00CA               	movwf	_prec^(0+256)
  4118     156F  30FF               	movlw	255
  4119     1570  00CB               	movwf	(_prec^(0+256)+1)
  4120     1571                     l5014:
  4121                           
  4122                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1265:         if ((*
      +                          fmt)[0] == '.') {
  4123     1571  0021               	movlb	1	; select bank1
  4124     1572  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4125     1573  0086               	movwf	6
  4126     1574  0187               	clrf	7
  4127     1575  3F40               	moviw [0]fsr1
  4128     1576  00D0               	movwf	??_vfpfcnvrt^(0+128)
  4129     1577  3F41               	moviw [1]fsr1
  4130     1578  00D1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4131     1579  0850               	movf	??_vfpfcnvrt^(0+128),w
  4132     157A  0084               	movwf	4
  4133     157B  0851               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4134     157C  0085               	movwf	5
  4135     157D  0012               	moviw fsr0++
  4136     157E  3A2E               	xorlw	46
  4137     157F  1D03               	btfss	3,2
  4138     1580  2D82               	goto	u6721
  4139     1581  2D83               	goto	u6720
  4140     1582                     u6721:
  4141     1582  2D9D               	goto	l5020
  4142     1583                     u6720:
  4143     1583                     l5016:
  4144                           
  4145                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1266:             ++
      +                          *fmt;
  4146     1583  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4147     1584  0086               	movwf	6
  4148     1585  0187               	clrf	7
  4149     1586  3001               	movlw	1
  4150     1587  0781               	addwf	1,f
  4151     1588  3141               	addfsr 1,1
  4152     1589  1803               	skipnc
  4153     158A  0A81               	incf	1,f
  4154     158B                     l5018:
  4155                           
  4156                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1267:    prec = read
      +                          _prec_or_width(fmt, ap);
  4157     158B  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4158     158C  0020               	movlb	0	; select bank0
  4159     158D  00A6               	movwf	read_prec_or_width@fmt
  4160     158E  0021               	movlb	1	; select bank1
  4161     158F  084F               	movf	vfpfcnvrt@ap^(0+128),w
  4162     1590  0020               	movlb	0	; select bank0
  4163     1591  00A7               	movwf	read_prec_or_width@ap
  4164     1592  3192  222E  3195   	fcall	_read_prec_or_width
  4165     1595  0020               	movlb	0	; select bank0
  4166     1596  0827               	movf	?_read_prec_or_width+1,w
  4167     1597  0022               	movlb	2	; select bank2
  4168     1598  00CB               	movwf	(_prec+1)^(0+256)
  4169     1599  0020               	movlb	0	; select bank0
  4170     159A  0826               	movf	?_read_prec_or_width,w
  4171     159B  0022               	movlb	2	; select bank2
  4172     159C  00CA               	movwf	_prec^(0+256)
  4173     159D                     l5020:
  4174                           
  4175                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1689:   cp = *fmt;
  4176     159D  0021               	movlb	1	; select bank1
  4177     159E  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4178     159F  0086               	movwf	6
  4179     15A0  0187               	clrf	7
  4180     15A1  3F40               	moviw [0]fsr1
  4181     15A2  00D9               	movwf	vfpfcnvrt@cp^(0+128)
  4182     15A3  3F41               	moviw [1]fsr1
  4183     15A4  00DA               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4184     15A5                     l5022:
  4185                           
  4186                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1690:   c = *cp;
  4187     15A5  0859               	movf	vfpfcnvrt@cp^(0+128),w
  4188     15A6  0084               	movwf	4
  4189     15A7  085A               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4190     15A8  0085               	movwf	5
  4191     15A9  0800               	movf	0,w	;code access
  4192     15AA  00D8               	movwf	vfpfcnvrt@c^(0+128)
  4193                           
  4194                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1691:   switch(c) {
  4195     15AB  2DB6               	goto	l5030
  4196     15AC                     l5024:
  4197                           
  4198                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1695:     cp++;
  4199     15AC  3001               	movlw	1
  4200     15AD  07D9               	addwf	vfpfcnvrt@cp^(0+128),f
  4201     15AE  3000               	movlw	0
  4202     15AF  3DDA               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4203                           
  4204                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1696:     break;
  4205     15B0  2DC1               	goto	l5032
  4206     15B1                     l1267:	
  4207                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1710:    case 'f':
  4208                           
  4209                           
  4210                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1721:     c = 'l';
  4211     15B1  306C               	movlw	108
  4212     15B2  00D8               	movwf	vfpfcnvrt@c^(0+128)
  4213                           
  4214                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1722:     break;
  4215     15B3  2DC1               	goto	l5032
  4216     15B4                     l5026:
  4217                           
  4218                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1724:     c = 0;
  4219     15B4  01D8               	clrf	vfpfcnvrt@c^(0+128)
  4220                           
  4221                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1725:     break;
  4222     15B5  2DC1               	goto	l5032
  4223     15B6                     l5030:
  4224     15B6  0858               	movf	vfpfcnvrt@c^(0+128),w
  4225                           
  4226                           ; Switch size 1, requested type "simple"
  4227                           ; Number of cases is 3, Range of values is 76 to 108
  4228                           ; switch strategies available:
  4229                           ; Name         Instructions Cycles
  4230                           ; simple_byte           10     6 (average)
  4231                           ; direct_byte           75     9 (fixed)
  4232                           ; jumptable            263     9 (fixed)
  4233                           ;	Chosen strategy is simple_byte
  4234     15B7  3A4C               	xorlw	76	; case 76
  4235     15B8  1903               	skipnz
  4236     15B9  2DAC               	goto	l5024
  4237     15BA  3A2A               	xorlw	42	; case 102
  4238     15BB  1903               	skipnz
  4239     15BC  2DB1               	goto	l1267
  4240     15BD  3A0A               	xorlw	10	; case 108
  4241     15BE  1903               	skipnz
  4242     15BF  2DAC               	goto	l5024
  4243     15C0  2DB4               	goto	l5026
  4244     15C1                     l5032:
  4245     15C1  0859               	movf	vfpfcnvrt@cp^(0+128),w
  4246     15C2  0084               	movwf	4
  4247     15C3  085A               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4248     15C4  0085               	movwf	5
  4249     15C5  0012               	moviw fsr0++
  4250     15C6  3A66               	xorlw	102
  4251     15C7  1D03               	btfss	3,2
  4252     15C8  2DCA               	goto	u6731
  4253     15C9  2DCB               	goto	u6730
  4254     15CA                     u6731:
  4255     15CA  2E30               	goto	l5052
  4256     15CB                     u6730:
  4257     15CB  2DEE               	goto	l5040
  4258     15CC                     l5034:
  4259                           
  4260                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1756:      convarg.f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4261     15CC  084F               	movf	vfpfcnvrt@ap^(0+128),w
  4262     15CD  0086               	movwf	6
  4263     15CE  0187               	clrf	7
  4264     15CF  0801               	movf	1,w
  4265     15D0  0084               	movwf	4
  4266     15D1  0185               	clrf	5
  4267     15D2  3004               	movlw	4
  4268     15D3  0781               	addwf	1,f
  4269     15D4  3F00               	moviw [0]fsr0
  4270     15D5  00D4               	movwf	vfpfcnvrt@convarg^(0+128)
  4271     15D6  3F01               	moviw [1]fsr0
  4272     15D7  00D5               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4273     15D8  3F02               	moviw [2]fsr0
  4274     15D9  00D6               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4275     15DA  3F03               	moviw [3]fsr0
  4276     15DB  00D7               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4277                           
  4278                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1757:      break;
  4279     15DC  2DF6               	goto	l5042
  4280     15DD                     l5036:
  4281                           
  4282                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1759:      convarg.f
      +                           = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4283     15DD  084F               	movf	vfpfcnvrt@ap^(0+128),w
  4284     15DE  0086               	movwf	6
  4285     15DF  0187               	clrf	7
  4286     15E0  0801               	movf	1,w
  4287     15E1  0084               	movwf	4
  4288     15E2  0185               	clrf	5
  4289     15E3  3004               	movlw	4
  4290     15E4  0781               	addwf	1,f
  4291     15E5  3F00               	moviw [0]fsr0
  4292     15E6  00D4               	movwf	vfpfcnvrt@convarg^(0+128)
  4293     15E7  3F01               	moviw [1]fsr0
  4294     15E8  00D5               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4295     15E9  3F02               	moviw [2]fsr0
  4296     15EA  00D6               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4297     15EB  3F03               	moviw [3]fsr0
  4298     15EC  00D7               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4299                           
  4300                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1760:      break;
  4301     15ED  2DF6               	goto	l5042
  4302     15EE                     l5040:
  4303     15EE  0858               	movf	vfpfcnvrt@c^(0+128),w
  4304                           
  4305                           ; Switch size 1, requested type "simple"
  4306                           ; Number of cases is 2, Range of values is 76 to 108
  4307                           ; switch strategies available:
  4308                           ; Name         Instructions Cycles
  4309                           ; simple_byte            7     4 (average)
  4310                           ; direct_byte           75     9 (fixed)
  4311                           ; jumptable            263     9 (fixed)
  4312                           ;	Chosen strategy is simple_byte
  4313     15EF  3A4C               	xorlw	76	; case 76
  4314     15F0  1903               	skipnz
  4315     15F1  2DDD               	goto	l5036
  4316     15F2  3A20               	xorlw	32	; case 108
  4317     15F3  1903               	skipnz
  4318     15F4  2DCC               	goto	l5034
  4319     15F5  2DF6               	goto	l5042
  4320     15F6                     l5042:
  4321                           
  4322                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1762:    *fmt = cp+1
      +                          ;
  4323     15F6  0859               	movf	vfpfcnvrt@cp^(0+128),w
  4324     15F7  3E01               	addlw	1
  4325     15F8  00D0               	movwf	??_vfpfcnvrt^(0+128)
  4326     15F9  3000               	movlw	0
  4327     15FA  3D5A               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4328     15FB  00D1               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4329     15FC  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4330     15FD  0086               	movwf	6
  4331     15FE  0187               	clrf	7
  4332     15FF  0850               	movf	??_vfpfcnvrt^(0+128),w
  4333     1600  3FC0               	movwi [0]fsr1
  4334     1601  0851               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4335     1602  3FC1               	movwi [1]fsr1
  4336                           
  4337                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1763:    switch (*cp
      +                          ) {
  4338     1603  2E27               	goto	l5050
  4339     1604                     l5044:
  4340                           
  4341                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1790:      return (v
      +                          oid) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4342     1604  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  4343     1605  0020               	movlb	0	; select bank0
  4344     1606  00E5               	movwf	efgtoa@fp+1
  4345     1607  0021               	movlb	1	; select bank1
  4346     1608  084C               	movf	vfpfcnvrt@fp^(0+128),w
  4347     1609  0020               	movlb	0	; select bank0
  4348     160A  00E4               	movwf	efgtoa@fp
  4349     160B  0021               	movlb	1	; select bank1
  4350     160C  0857               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4351     160D  0020               	movlb	0	; select bank0
  4352     160E  00E9               	movwf	efgtoa@f+3
  4353     160F  0021               	movlb	1	; select bank1
  4354     1610  0856               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4355     1611  0020               	movlb	0	; select bank0
  4356     1612  00E8               	movwf	efgtoa@f+2
  4357     1613  0021               	movlb	1	; select bank1
  4358     1614  0855               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4359     1615  0020               	movlb	0	; select bank0
  4360     1616  00E7               	movwf	efgtoa@f+1
  4361     1617  0021               	movlb	1	; select bank1
  4362     1618  0854               	movf	vfpfcnvrt@convarg^(0+128),w
  4363     1619  0020               	movlb	0	; select bank0
  4364     161A  00E6               	movwf	efgtoa@f
  4365     161B  0021               	movlb	1	; select bank1
  4366     161C  0859               	movf	vfpfcnvrt@cp^(0+128),w
  4367     161D  0084               	movwf	4
  4368     161E  085A               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4369     161F  0085               	movwf	5
  4370     1620  0800               	movf	0,w	;code access
  4371     1621  0020               	movlb	0	; select bank0
  4372     1622  00EA               	movwf	efgtoa@c
  4373     1623  3180  207B  3195   	fcall	_efgtoa
  4374     1626  2E5B               	goto	l1278
  4375     1627                     l5050:
  4376     1627  0859               	movf	vfpfcnvrt@cp^(0+128),w
  4377     1628  0084               	movwf	4
  4378     1629  085A               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4379     162A  0085               	movwf	5
  4380     162B  0800               	movf	0,w	;code access
  4381                           
  4382                           ; Switch size 1, requested type "simple"
  4383                           ; Number of cases is 1, Range of values is 102 to 102
  4384                           ; switch strategies available:
  4385                           ; Name         Instructions Cycles
  4386                           ; simple_byte            4     3 (average)
  4387                           ; direct_byte           11     9 (fixed)
  4388                           ; jumptable            263     9 (fixed)
  4389                           ;	Chosen strategy is simple_byte
  4390     162C  3A66               	xorlw	102	; case 102
  4391     162D  1903               	skipnz
  4392     162E  2E04               	goto	l5044
  4393     162F  2E30               	goto	l5052
  4394     1630                     l5052:
  4395                           
  4396                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  4397     1630  0021               	movlb	1	; select bank1
  4398     1631  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4399     1632  0086               	movwf	6
  4400     1633  0187               	clrf	7
  4401     1634  3001               	movlw	1
  4402     1635  0781               	addwf	1,f
  4403     1636  3141               	addfsr 1,1
  4404     1637  1803               	skipnc
  4405     1638  0A81               	incf	1,f
  4406     1639  2E5B               	goto	l1278
  4407     163A                     l5056:
  4408                           
  4409                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  4410     163A  084E               	movf	vfpfcnvrt@fmt^(0+128),w
  4411     163B  0086               	movwf	6
  4412     163C  0187               	clrf	7
  4413     163D  3F40               	moviw [0]fsr1
  4414     163E  00D0               	movwf	??_vfpfcnvrt^(0+128)
  4415     163F  3F41               	moviw [1]fsr1
  4416     1640  00D1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4417     1641  0850               	movf	??_vfpfcnvrt^(0+128),w
  4418     1642  0084               	movwf	4
  4419     1643  0851               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4420     1644  0085               	movwf	5
  4421     1645  0800               	movf	0,w	;code access
  4422     1646  00D2               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4423     1647  01D3               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4424     1648  0852               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4425     1649  0020               	movlb	0	; select bank0
  4426     164A  00A3               	movwf	fputc@c
  4427     164B  0021               	movlb	1	; select bank1
  4428     164C  0853               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4429     164D  0020               	movlb	0	; select bank0
  4430     164E  00A4               	movwf	fputc@c+1
  4431     164F  0021               	movlb	1	; select bank1
  4432     1650  084D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  4433     1651  0020               	movlb	0	; select bank0
  4434     1652  00A6               	movwf	fputc@fp+1
  4435     1653  0021               	movlb	1	; select bank1
  4436     1654  084C               	movf	vfpfcnvrt@fp^(0+128),w
  4437     1655  0020               	movlb	0	; select bank0
  4438     1656  00A5               	movwf	fputc@fp
  4439     1657  3192  228A  3195   	fcall	_fputc
  4440     165A  2E30               	goto	l5052
  4441     165B                     l1278:
  4442     165B  0008               	return
  4443     165C                     __end_of_vfpfcnvrt:
  4444                           
  4445                           	psect	text4
  4446     122E                     __ptext4:	
  4447 ;; *************** function _read_prec_or_width *****************
  4448 ;; Defined at:
  4449 ;;		line 1158 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  fmt             1    6[BANK0 ] PTR PTR const unsigned c
  4452 ;;		 -> vfprintf@cfmt(2), 
  4453 ;;  ap              1    7[BANK0 ] PTR PTR void [1]
  4454 ;;		 -> printf@ap(1), 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  c               1   11[BANK0 ] unsigned char 
  4457 ;;  n               2   12[BANK0 ] int 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  2    6[BANK0 ] int 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;Total ram usage:        8 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 5
  4474 ;; This function calls:
  4475 ;;		___wmul
  4476 ;; This function is called by:
  4477 ;;		_vfpfcnvrt
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481     122E                     _read_prec_or_width:	
  4482                           ;psect for function _read_prec_or_width
  4483                           
  4484     122E                     l4972:	
  4485                           ;incstack = 0
  4486                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4487                           
  4488                           
  4489                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  4490     122E  0020               	movlb	0	; select bank0
  4491     122F  01AC               	clrf	read_prec_or_width@n
  4492     1230  01AD               	clrf	read_prec_or_width@n+1
  4493     1231                     l4974:
  4494                           
  4495                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  4496     1231  0826               	movf	read_prec_or_width@fmt,w
  4497     1232  0086               	movwf	6
  4498     1233  0187               	clrf	7
  4499     1234  3F40               	moviw [0]fsr1
  4500     1235  00A8               	movwf	??_read_prec_or_width
  4501     1236  3F41               	moviw [1]fsr1
  4502     1237  00A9               	movwf	??_read_prec_or_width+1
  4503     1238  0828               	movf	??_read_prec_or_width,w
  4504     1239  0084               	movwf	4
  4505     123A  0829               	movf	??_read_prec_or_width+1,w
  4506     123B  0085               	movwf	5
  4507     123C  0012               	moviw fsr0++
  4508     123D  3A2A               	xorlw	42
  4509     123E  1D03               	btfss	3,2
  4510     123F  2A41               	goto	u6661
  4511     1240  2A42               	goto	u6660
  4512     1241                     u6661:
  4513     1241  2A71               	goto	l4984
  4514     1242                     u6660:
  4515     1242                     l4976:
  4516                           
  4517                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  4518     1242  0826               	movf	read_prec_or_width@fmt,w
  4519     1243  0086               	movwf	6
  4520     1244  0187               	clrf	7
  4521     1245  3001               	movlw	1
  4522     1246  0781               	addwf	1,f
  4523     1247  3141               	addfsr 1,1
  4524     1248  1803               	skipnc
  4525     1249  0A81               	incf	1,f
  4526     124A                     l4978:
  4527                           
  4528                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  4529     124A  0827               	movf	read_prec_or_width@ap,w
  4530     124B  0086               	movwf	6
  4531     124C  0187               	clrf	7
  4532     124D  0801               	movf	1,w
  4533     124E  0084               	movwf	4
  4534     124F  0185               	clrf	5
  4535     1250  3002               	movlw	2
  4536     1251  0781               	addwf	1,f
  4537     1252  3F00               	moviw [0]fsr0
  4538     1253  00AC               	movwf	read_prec_or_width@n
  4539     1254  3F01               	moviw [1]fsr0
  4540     1255  00AD               	movwf	read_prec_or_width@n+1
  4541                           
  4542                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1163:     } else {
  4543     1256  2A85               	goto	l4986
  4544     1257                     l4980:
  4545                           
  4546                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  4547     1257  082D               	movf	read_prec_or_width@n+1,w
  4548     1258  00A1               	movwf	___wmul@multiplier+1
  4549     1259  082C               	movf	read_prec_or_width@n,w
  4550     125A  00A0               	movwf	___wmul@multiplier
  4551     125B  300A               	movlw	10
  4552     125C  00A2               	movwf	___wmul@multiplicand
  4553     125D  3000               	movlw	0
  4554     125E  00A3               	movwf	___wmul@multiplicand+1
  4555     125F  319F  27BF  3192   	fcall	___wmul
  4556     1262  0020               	movlb	0	; select bank0
  4557     1263  082B               	movf	read_prec_or_width@c,w
  4558     1264  0720               	addwf	?___wmul,w
  4559     1265  00AC               	movwf	read_prec_or_width@n
  4560     1266  3000               	movlw	0
  4561     1267  3D21               	addwfc	?___wmul+1,w
  4562     1268  00AD               	movwf	read_prec_or_width@n+1
  4563     1269                     l4982:
  4564                           
  4565                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  4566     1269  0826               	movf	read_prec_or_width@fmt,w
  4567     126A  0086               	movwf	6
  4568     126B  0187               	clrf	7
  4569     126C  3001               	movlw	1
  4570     126D  0781               	addwf	1,f
  4571     126E  3141               	addfsr 1,1
  4572     126F  1803               	skipnc
  4573     1270  0A81               	incf	1,f
  4574     1271                     l4984:
  4575                           
  4576                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4577     1271  0826               	movf	read_prec_or_width@fmt,w
  4578     1272  0086               	movwf	6
  4579     1273  0187               	clrf	7
  4580     1274  3F40               	moviw [0]fsr1
  4581     1275  00A8               	movwf	??_read_prec_or_width
  4582     1276  3F41               	moviw [1]fsr1
  4583     1277  00A9               	movwf	??_read_prec_or_width+1
  4584     1278  0828               	movf	??_read_prec_or_width,w
  4585     1279  0084               	movwf	4
  4586     127A  0829               	movf	??_read_prec_or_width+1,w
  4587     127B  0085               	movwf	5
  4588     127C  0800               	movf	0,w	;code access
  4589     127D  3ED0               	addlw	208
  4590     127E  00AB               	movwf	read_prec_or_width@c
  4591     127F  300A               	movlw	10
  4592     1280  022B               	subwf	read_prec_or_width@c,w
  4593     1281  1C03               	skipc
  4594     1282  2A84               	goto	u6671
  4595     1283  2A85               	goto	u6670
  4596     1284                     u6671:
  4597     1284  2A57               	goto	l4980
  4598     1285                     u6670:
  4599     1285                     l4986:
  4600                           
  4601                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1170:     return n;
  4602     1285  082D               	movf	read_prec_or_width@n+1,w
  4603     1286  00A7               	movwf	?_read_prec_or_width+1
  4604     1287  082C               	movf	read_prec_or_width@n,w
  4605     1288  00A6               	movwf	?_read_prec_or_width
  4606     1289                     l1258:
  4607     1289  0008               	return
  4608     128A                     __end_of_read_prec_or_width:
  4609                           
  4610                           	psect	text5
  4611     1FBF                     __ptext5:	
  4612 ;; *************** function ___wmul *****************
  4613 ;; Defined at:
  4614 ;;		line 15 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/Umul16.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4617 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  product         2    4[BANK0 ] unsigned int 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2    0[BANK0 ] unsigned int 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;Total ram usage:        6 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 4
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_read_prec_or_width
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643     1FBF                     ___wmul:	
  4644                           ;psect for function ___wmul
  4645                           
  4646     1FBF                     l4534:	
  4647                           ;incstack = 0
  4648                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4649                           
  4650     1FBF  0020               	movlb	0	; select bank0
  4651     1FC0  01A4               	clrf	___wmul@product
  4652     1FC1  01A5               	clrf	___wmul@product+1
  4653     1FC2                     l4536:
  4654     1FC2  1C20               	btfss	___wmul@multiplier,0
  4655     1FC3  2FC5               	goto	u5871
  4656     1FC4  2FC6               	goto	u5870
  4657     1FC5                     u5871:
  4658     1FC5  2FCA               	goto	l704
  4659     1FC6                     u5870:
  4660     1FC6                     l4538:
  4661     1FC6  0822               	movf	___wmul@multiplicand,w
  4662     1FC7  07A4               	addwf	___wmul@product,f
  4663     1FC8  0823               	movf	___wmul@multiplicand+1,w
  4664     1FC9  3DA5               	addwfc	___wmul@product+1,f
  4665     1FCA                     l704:
  4666     1FCA  3001               	movlw	1
  4667     1FCB                     u5885:
  4668     1FCB  35A2               	lslf	___wmul@multiplicand,f
  4669     1FCC  0DA3               	rlf	___wmul@multiplicand+1,f
  4670     1FCD  0B89               	decfsz	9,f
  4671     1FCE  2FCB               	goto	u5885
  4672     1FCF                     l4540:
  4673     1FCF  3001               	movlw	1
  4674     1FD0                     u5895:
  4675     1FD0  36A1               	lsrf	___wmul@multiplier+1,f
  4676     1FD1  0CA0               	rrf	___wmul@multiplier,f
  4677     1FD2  0B89               	decfsz	9,f
  4678     1FD3  2FD0               	goto	u5895
  4679     1FD4                     l4542:
  4680     1FD4  0820               	movf	___wmul@multiplier,w
  4681     1FD5  0421               	iorwf	___wmul@multiplier+1,w
  4682     1FD6  1D03               	btfss	3,2
  4683     1FD7  2FD9               	goto	u5901
  4684     1FD8  2FDA               	goto	u5900
  4685     1FD9                     u5901:
  4686     1FD9  2FC2               	goto	l4536
  4687     1FDA                     u5900:
  4688     1FDA                     l4544:
  4689     1FDA  0825               	movf	___wmul@product+1,w
  4690     1FDB  00A1               	movwf	?___wmul+1
  4691     1FDC  0824               	movf	___wmul@product,w
  4692     1FDD  00A0               	movwf	?___wmul
  4693     1FDE                     l706:
  4694     1FDE  0008               	return
  4695     1FDF                     __end_of___wmul:
  4696                           
  4697                           	psect	text6
  4698     007B                     __ptext6:	
  4699 ;; *************** function _efgtoa *****************
  4700 ;; Defined at:
  4701 ;;		line 587 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  4704 ;;		 -> NULL(0), 
  4705 ;;  f               4   70[BANK0 ] PTR struct _IO_FILE
  4706 ;;  c               1   74[BANK0 ] unsigned char 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  u               4   40[BANK1 ] struct flui
  4709 ;;  g               4   34[BANK1 ] struct flui
  4710 ;;  l               4   29[BANK1 ] struct flui
  4711 ;;  h               4   25[BANK1 ] struct flui
  4712 ;;  ou              4   19[BANK1 ] struct flui
  4713 ;;  n               2   38[BANK1 ] int 
  4714 ;;  i               2   23[BANK1 ] int 
  4715 ;;  w               2   17[BANK1 ] int 
  4716 ;;  e               2   15[BANK1 ] int 
  4717 ;;  m               2   13[BANK1 ] int 
  4718 ;;  d               2   11[BANK1 ] int 
  4719 ;;  t               2    4[BANK1 ] int 
  4720 ;;  p               2    2[BANK1 ] int 
  4721 ;;  ne              2    0[BANK1 ] int 
  4722 ;;  sign            1   33[BANK1 ] unsigned char 
  4723 ;;  nmode           1   10[BANK1 ] unsigned char 
  4724 ;;  mode            1    9[BANK1 ] unsigned char 
  4725 ;;  pp              1    8[BANK1 ] unsigned char 
  4726 ;;  esign           1    0        unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4736 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Locals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Totals:         0      11      44       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;Total ram usage:       55 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 9
  4743 ;; This function calls:
  4744 ;;		___fladd
  4745 ;;		___fldiv
  4746 ;;		___fleq
  4747 ;;		___flge
  4748 ;;		___flmul
  4749 ;;		___flneg
  4750 ;;		___flsub
  4751 ;;		___fltol
  4752 ;;		___fpclassifyf
  4753 ;;		_floorf
  4754 ;;		_labs
  4755 ;;		_memcpy
  4756 ;;		_pad
  4757 ;;		_strcpy
  4758 ;; This function is called by:
  4759 ;;		_vfpfcnvrt
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763     007B                     _efgtoa:	
  4764                           ;psect for function _efgtoa
  4765                           
  4766     007B                     l4770:	
  4767                           ;incstack = 0
  4768                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4769                           
  4770                           
  4771                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 587: static void efg
      +                          toa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.50/pic/sources/c99/c
      +                          ommon/doprnt.c: 588: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c
      +                          : 589:     char mode, nmode, pp, sign, esign;;/Applications/microchip/xc8/v2.50/pic/sour
      +                          ces/c99/common/doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;/Applications/microchi
      +                          p/xc8/v2.50/pic/sources/c99/common/doprnt.c: 591:     long double h, l;;/Applications/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 592:  union flui g, u, ou;
  4772     007B  0021               	movlb	1	; select bank1
  4773     007C  01C1               	clrf	efgtoa@sign^(0+128)
  4774     007D                     l4772:
  4775                           
  4776                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 596:     g.f = f;
  4777     007D  0020               	movlb	0	; select bank0
  4778     007E  0869               	movf	efgtoa@f+3,w
  4779     007F  0021               	movlb	1	; select bank1
  4780     0080  00C5               	movwf	(efgtoa@g+3)^(0+128)
  4781     0081  0020               	movlb	0	; select bank0
  4782     0082  0868               	movf	efgtoa@f+2,w
  4783     0083  0021               	movlb	1	; select bank1
  4784     0084  00C4               	movwf	(efgtoa@g+2)^(0+128)
  4785     0085  0020               	movlb	0	; select bank0
  4786     0086  0867               	movf	efgtoa@f+1,w
  4787     0087  0021               	movlb	1	; select bank1
  4788     0088  00C3               	movwf	(efgtoa@g+1)^(0+128)
  4789     0089  0020               	movlb	0	; select bank0
  4790     008A  0866               	movf	efgtoa@f,w
  4791     008B  0021               	movlb	1	; select bank1
  4792     008C  00C2               	movwf	efgtoa@g^(0+128)
  4793     008D                     l4774:
  4794                           
  4795                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 597:     if (g.f < 0
      +                          .0) {
  4796     008D  0845               	movf	(efgtoa@g+3)^(0+128),w
  4797     008E  0020               	movlb	0	; select bank0
  4798     008F  00CB               	movwf	___flge@ff1+3
  4799     0090  0021               	movlb	1	; select bank1
  4800     0091  0844               	movf	(efgtoa@g+2)^(0+128),w
  4801     0092  0020               	movlb	0	; select bank0
  4802     0093  00CA               	movwf	___flge@ff1+2
  4803     0094  0021               	movlb	1	; select bank1
  4804     0095  0843               	movf	(efgtoa@g+1)^(0+128),w
  4805     0096  0020               	movlb	0	; select bank0
  4806     0097  00C9               	movwf	___flge@ff1+1
  4807     0098  0021               	movlb	1	; select bank1
  4808     0099  0842               	movf	efgtoa@g^(0+128),w
  4809     009A  0020               	movlb	0	; select bank0
  4810     009B  00C8               	movwf	___flge@ff1
  4811     009C  3000               	movlw	0
  4812     009D  00CF               	movwf	___flge@ff2+3
  4813     009E  3000               	movlw	0
  4814     009F  00CE               	movwf	___flge@ff2+2
  4815     00A0  3000               	movlw	0
  4816     00A1  00CD               	movwf	___flge@ff2+1
  4817     00A2  3000               	movlw	0
  4818     00A3  00CC               	movwf	___flge@ff2
  4819     00A4  3193  23D6  3180   	fcall	___flge
  4820     00A7  1803               	btfsc	3,0
  4821     00A8  28AA               	goto	u6341
  4822     00A9  28AB               	goto	u6340
  4823     00AA                     u6341:
  4824     00AA  28D0               	goto	l4780
  4825     00AB                     u6340:
  4826     00AB                     l4776:
  4827                           
  4828                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 598:         sign = 
      +                          1;
  4829     00AB  3001               	movlw	1
  4830     00AC  0021               	movlb	1	; select bank1
  4831     00AD  00C1               	movwf	efgtoa@sign^(0+128)
  4832     00AE                     l4778:
  4833                           
  4834                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 599:         g.f = -
      +                          g.f;
  4835     00AE  0845               	movf	(efgtoa@g+3)^(0+128),w
  4836     00AF  0020               	movlb	0	; select bank0
  4837     00B0  00A3               	movwf	___flneg@f1+3
  4838     00B1  0021               	movlb	1	; select bank1
  4839     00B2  0844               	movf	(efgtoa@g+2)^(0+128),w
  4840     00B3  0020               	movlb	0	; select bank0
  4841     00B4  00A2               	movwf	___flneg@f1+2
  4842     00B5  0021               	movlb	1	; select bank1
  4843     00B6  0843               	movf	(efgtoa@g+1)^(0+128),w
  4844     00B7  0020               	movlb	0	; select bank0
  4845     00B8  00A1               	movwf	___flneg@f1+1
  4846     00B9  0021               	movlb	1	; select bank1
  4847     00BA  0842               	movf	efgtoa@g^(0+128),w
  4848     00BB  0020               	movlb	0	; select bank0
  4849     00BC  00A0               	movwf	___flneg@f1
  4850     00BD  3188  2001  3180   	fcall	___flneg
  4851     00C0  0020               	movlb	0	; select bank0
  4852     00C1  0823               	movf	?___flneg+3,w
  4853     00C2  0021               	movlb	1	; select bank1
  4854     00C3  00C5               	movwf	(efgtoa@g+3)^(0+128)
  4855     00C4  0020               	movlb	0	; select bank0
  4856     00C5  0822               	movf	?___flneg+2,w
  4857     00C6  0021               	movlb	1	; select bank1
  4858     00C7  00C4               	movwf	(efgtoa@g+2)^(0+128)
  4859     00C8  0020               	movlb	0	; select bank0
  4860     00C9  0821               	movf	?___flneg+1,w
  4861     00CA  0021               	movlb	1	; select bank1
  4862     00CB  00C3               	movwf	(efgtoa@g+1)^(0+128)
  4863     00CC  0020               	movlb	0	; select bank0
  4864     00CD  0820               	movf	?___flneg,w
  4865     00CE  0021               	movlb	1	; select bank1
  4866     00CF  00C2               	movwf	efgtoa@g^(0+128)
  4867     00D0                     l4780:
  4868                           
  4869                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 603:     n = 0;
  4870     00D0  0021               	movlb	1	; select bank1
  4871     00D1  01C6               	clrf	efgtoa@n^(0+128)
  4872     00D2  01C7               	clrf	(efgtoa@n+1)^(0+128)
  4873     00D3                     l4782:
  4874                           
  4875                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 604:     w = width;
  4876     00D3  0022               	movlb	2	; select bank2
  4877     00D4  0849               	movf	(_width+1)^(0+256),w
  4878     00D5  0021               	movlb	1	; select bank1
  4879     00D6  00B2               	movwf	(efgtoa@w+1)^(0+128)
  4880     00D7  0022               	movlb	2	; select bank2
  4881     00D8  0848               	movf	_width^(0+256),w
  4882     00D9  0021               	movlb	1	; select bank1
  4883     00DA  00B1               	movwf	efgtoa@w^(0+128)
  4884     00DB                     l4784:
  4885                           
  4886                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 605:     if (sign
  4887     00DB  0841               	movf	efgtoa@sign^(0+128),w
  4888     00DC  1903               	btfsc	3,2
  4889     00DD  28DF               	goto	u6351
  4890     00DE  28E0               	goto	u6350
  4891     00DF                     u6351:
  4892     00DF  28F0               	goto	l4792
  4893     00E0                     u6350:
  4894     00E0                     l4786:
  4895                           
  4896                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 609:    ) {;/Applica
      +                          tions/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 610:   sign = sign ? '-' : '+
      +                          ';
  4897     00E0  0841               	movf	efgtoa@sign^(0+128),w
  4898     00E1  1D03               	btfss	3,2
  4899     00E2  28E4               	goto	u6361
  4900     00E3  28E5               	goto	u6360
  4901     00E4                     u6361:
  4902     00E4  28EA               	goto	l4790
  4903     00E5                     u6360:
  4904     00E5                     l4788:
  4905     00E5  302B               	movlw	43
  4906     00E6  00A6               	movwf	_efgtoa$1559^(0+128)
  4907     00E7  3000               	movlw	0
  4908     00E8  00A7               	movwf	(_efgtoa$1559^(0+128)+1)
  4909     00E9  28EE               	goto	l1206
  4910     00EA                     l4790:
  4911     00EA  302D               	movlw	45
  4912     00EB  00A6               	movwf	_efgtoa$1559^(0+128)
  4913     00EC  3000               	movlw	0
  4914     00ED  00A7               	movwf	(_efgtoa$1559^(0+128)+1)
  4915     00EE                     l1206:
  4916     00EE  0826               	movf	_efgtoa$1559^(0+128),w
  4917     00EF  00C1               	movwf	efgtoa@sign^(0+128)
  4918     00F0                     l4792:
  4919                           
  4920                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 619:     if (( __fpc
      +                          lassifyf(g.f) == 1 )) {
  4921     00F0  0845               	movf	(efgtoa@g+3)^(0+128),w
  4922     00F1  0020               	movlb	0	; select bank0
  4923     00F2  00A3               	movwf	___fpclassifyf@x+3
  4924     00F3  0021               	movlb	1	; select bank1
  4925     00F4  0844               	movf	(efgtoa@g+2)^(0+128),w
  4926     00F5  0020               	movlb	0	; select bank0
  4927     00F6  00A2               	movwf	___fpclassifyf@x+2
  4928     00F7  0021               	movlb	1	; select bank1
  4929     00F8  0843               	movf	(efgtoa@g+1)^(0+128),w
  4930     00F9  0020               	movlb	0	; select bank0
  4931     00FA  00A1               	movwf	___fpclassifyf@x+1
  4932     00FB  0021               	movlb	1	; select bank1
  4933     00FC  0842               	movf	efgtoa@g^(0+128),w
  4934     00FD  0020               	movlb	0	; select bank0
  4935     00FE  00A0               	movwf	___fpclassifyf@x
  4936     00FF  3193  2357  3180   	fcall	___fpclassifyf
  4937     0102  0020               	movlb	0	; select bank0
  4938     0103  0320               	decf	?___fpclassifyf,w
  4939     0104  0421               	iorwf	?___fpclassifyf+1,w
  4940     0105  1D03               	btfss	3,2
  4941     0106  2908               	goto	u6371
  4942     0107  2909               	goto	u6370
  4943     0108                     u6371:
  4944     0108  293E               	goto	l4804
  4945     0109                     u6370:
  4946     0109                     l4794:
  4947                           
  4948                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 620:   if (sign) {
  4949     0109  0021               	movlb	1	; select bank1
  4950     010A  0841               	movf	efgtoa@sign^(0+128),w
  4951     010B  1903               	btfsc	3,2
  4952     010C  290E               	goto	u6381
  4953     010D  290F               	goto	u6380
  4954     010E                     u6381:
  4955     010E  291B               	goto	l4798
  4956     010F                     u6380:
  4957     010F                     l4796:
  4958                           
  4959                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 621:    dbuf[0] = si
      +                          gn;
  4960     010F  0841               	movf	efgtoa@sign^(0+128),w
  4961     0110  0024               	movlb	4	; select bank4
  4962     0111  00A0               	movwf	_dbuf^(0+512)
  4963                           
  4964                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 622:    w--;
  4965     0112  30FF               	movlw	255
  4966     0113  0021               	movlb	1	; select bank1
  4967     0114  07B1               	addwf	efgtoa@w^(0+128),f
  4968     0115  30FF               	movlw	255
  4969     0116  3DB2               	addwfc	(efgtoa@w+1)^(0+128),f
  4970                           
  4971                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 623:    n = 1;
  4972     0117  3001               	movlw	1
  4973     0118  00C6               	movwf	efgtoa@n^(0+128)
  4974     0119  3000               	movlw	0
  4975     011A  00C7               	movwf	(efgtoa@n^(0+128)+1)
  4976     011B                     l4798:
  4977                           
  4978                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 631:   {;/Applicatio
      +                          ns/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 632:             strcpy(&dbuf[n]
      +                          , "inf");
  4979     011B  0846               	movf	efgtoa@n^(0+128),w
  4980     011C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  4981     011D  0020               	movlb	0	; select bank0
  4982     011E  00A0               	movwf	strcpy@dest
  4983     011F  3088               	movlw	low (STR_5| (0+32768))
  4984     0120  00A1               	movwf	strcpy@src
  4985     0121  3098               	movlw	high (STR_5| (0+32768))
  4986     0122  00A2               	movwf	strcpy@src+1
  4987     0123  319E  26EB  3180   	fcall	_strcpy
  4988     0126                     l4800:
  4989                           
  4990                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 633:         };/Appl
      +                          ications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 634:         w -= ((sizeof
      +                          ("inf")/sizeof("inf"[0]))-1);
  4991     0126  30FD               	movlw	253
  4992     0127  0021               	movlb	1	; select bank1
  4993     0128  07B1               	addwf	efgtoa@w^(0+128),f
  4994     0129  30FF               	movlw	255
  4995     012A  3DB2               	addwfc	(efgtoa@w+1)^(0+128),f
  4996                           
  4997                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 635:         return 
      +                          (void) pad(fp, &dbuf[0], w);
  4998     012B  0020               	movlb	0	; select bank0
  4999     012C  0865               	movf	efgtoa@fp+1,w
  5000     012D  00B5               	movwf	pad@fp+1
  5001     012E  0864               	movf	efgtoa@fp,w
  5002     012F  00B4               	movwf	pad@fp
  5003     0130  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5004     0131  00B6               	movwf	pad@buf
  5005     0132  0021               	movlb	1	; select bank1
  5006     0133  0832               	movf	(efgtoa@w+1)^(0+128),w
  5007     0134  0020               	movlb	0	; select bank0
  5008     0135  00B8               	movwf	pad@p+1
  5009     0136  0021               	movlb	1	; select bank1
  5010     0137  0831               	movf	efgtoa@w^(0+128),w
  5011     0138  0020               	movlb	0	; select bank0
  5012     0139  00B7               	movwf	pad@p
  5013     013A  3191  2119  3180   	fcall	_pad
  5014     013D  2F44               	goto	l1209
  5015     013E                     l4804:
  5016                           
  5017                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 637:     if (( __fpc
      +                          lassifyf(g.f) == 0 )) {
  5018     013E  0021               	movlb	1	; select bank1
  5019     013F  0845               	movf	(efgtoa@g+3)^(0+128),w
  5020     0140  0020               	movlb	0	; select bank0
  5021     0141  00A3               	movwf	___fpclassifyf@x+3
  5022     0142  0021               	movlb	1	; select bank1
  5023     0143  0844               	movf	(efgtoa@g+2)^(0+128),w
  5024     0144  0020               	movlb	0	; select bank0
  5025     0145  00A2               	movwf	___fpclassifyf@x+2
  5026     0146  0021               	movlb	1	; select bank1
  5027     0147  0843               	movf	(efgtoa@g+1)^(0+128),w
  5028     0148  0020               	movlb	0	; select bank0
  5029     0149  00A1               	movwf	___fpclassifyf@x+1
  5030     014A  0021               	movlb	1	; select bank1
  5031     014B  0842               	movf	efgtoa@g^(0+128),w
  5032     014C  0020               	movlb	0	; select bank0
  5033     014D  00A0               	movwf	___fpclassifyf@x
  5034     014E  3193  2357  3180   	fcall	___fpclassifyf
  5035     0151  0020               	movlb	0	; select bank0
  5036     0152  0820               	movf	?___fpclassifyf,w
  5037     0153  0421               	iorwf	?___fpclassifyf+1,w
  5038     0154  1D03               	btfss	3,2
  5039     0155  2957               	goto	u6391
  5040     0156  2958               	goto	u6390
  5041     0157                     u6391:
  5042     0157  2976               	goto	l4816
  5043     0158                     u6390:
  5044     0158                     l4806:
  5045                           
  5046                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 638:   if (sign) {
  5047     0158  0021               	movlb	1	; select bank1
  5048     0159  0841               	movf	efgtoa@sign^(0+128),w
  5049     015A  1903               	btfsc	3,2
  5050     015B  295D               	goto	u6401
  5051     015C  295E               	goto	u6400
  5052     015D                     u6401:
  5053     015D  296A               	goto	l4810
  5054     015E                     u6400:
  5055     015E                     l4808:
  5056                           
  5057                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 639:    dbuf[0] = si
      +                          gn;
  5058     015E  0841               	movf	efgtoa@sign^(0+128),w
  5059     015F  0024               	movlb	4	; select bank4
  5060     0160  00A0               	movwf	_dbuf^(0+512)
  5061                           
  5062                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 640:    w--;
  5063     0161  30FF               	movlw	255
  5064     0162  0021               	movlb	1	; select bank1
  5065     0163  07B1               	addwf	efgtoa@w^(0+128),f
  5066     0164  30FF               	movlw	255
  5067     0165  3DB2               	addwfc	(efgtoa@w+1)^(0+128),f
  5068                           
  5069                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 641:    n = 1;
  5070     0166  3001               	movlw	1
  5071     0167  00C6               	movwf	efgtoa@n^(0+128)
  5072     0168  3000               	movlw	0
  5073     0169  00C7               	movwf	(efgtoa@n^(0+128)+1)
  5074     016A                     l4810:
  5075                           
  5076                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 649:   {;/Applicatio
      +                          ns/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 650:             strcpy(&dbuf[n]
      +                          , "nan");
  5077     016A  0846               	movf	efgtoa@n^(0+128),w
  5078     016B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5079     016C  0020               	movlb	0	; select bank0
  5080     016D  00A0               	movwf	strcpy@dest
  5081     016E  308C               	movlw	low (STR_8| (0+32768))
  5082     016F  00A1               	movwf	strcpy@src
  5083     0170  3098               	movlw	high (STR_8| (0+32768))
  5084     0171  00A2               	movwf	strcpy@src+1
  5085     0172  319E  26EB  3180   	fcall	_strcpy
  5086     0175  2926               	goto	l4800
  5087     0176                     l4816:
  5088                           
  5089                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 657:     u.f = 1.0;
  5090     0176  303F               	movlw	63
  5091     0177  0021               	movlb	1	; select bank1
  5092     0178  00CB               	movwf	(efgtoa@u+3)^(0+128)
  5093     0179  3080               	movlw	128
  5094     017A  00CA               	movwf	(efgtoa@u+2)^(0+128)
  5095     017B  3000               	movlw	0
  5096     017C  00C9               	movwf	(efgtoa@u+1)^(0+128)
  5097     017D  3000               	movlw	0
  5098     017E  00C8               	movwf	efgtoa@u^(0+128)
  5099     017F                     l4818:
  5100                           
  5101                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 658:     e = 0;
  5102     017F  01AF               	clrf	efgtoa@e^(0+128)
  5103     0180  01B0               	clrf	(efgtoa@e+1)^(0+128)
  5104     0181                     l4820:
  5105                           
  5106                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 659:  if (!(g.f == 0
      +                          .0)) {
  5107     0181  0845               	movf	(efgtoa@g+3)^(0+128),w
  5108     0182  0020               	movlb	0	; select bank0
  5109     0183  00A3               	movwf	___fleq@ff1+3
  5110     0184  0021               	movlb	1	; select bank1
  5111     0185  0844               	movf	(efgtoa@g+2)^(0+128),w
  5112     0186  0020               	movlb	0	; select bank0
  5113     0187  00A2               	movwf	___fleq@ff1+2
  5114     0188  0021               	movlb	1	; select bank1
  5115     0189  0843               	movf	(efgtoa@g+1)^(0+128),w
  5116     018A  0020               	movlb	0	; select bank0
  5117     018B  00A1               	movwf	___fleq@ff1+1
  5118     018C  0021               	movlb	1	; select bank1
  5119     018D  0842               	movf	efgtoa@g^(0+128),w
  5120     018E  0020               	movlb	0	; select bank0
  5121     018F  00A0               	movwf	___fleq@ff1
  5122     0190  3000               	movlw	0
  5123     0191  00A7               	movwf	___fleq@ff2+3
  5124     0192  3000               	movlw	0
  5125     0193  00A6               	movwf	___fleq@ff2+2
  5126     0194  3000               	movlw	0
  5127     0195  00A5               	movwf	___fleq@ff2+1
  5128     0196  3000               	movlw	0
  5129     0197  00A4               	movwf	___fleq@ff2
  5130     0198  3191  2183  3180   	fcall	___fleq
  5131     019B  1803               	btfsc	3,0
  5132     019C  299E               	goto	u6411
  5133     019D  299F               	goto	u6410
  5134     019E                     u6411:
  5135     019E  2AF3               	goto	l4846
  5136     019F                     u6410:
  5137     019F  29AD               	goto	l4826
  5138     01A0                     l4824:
  5139                           
  5140                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 661:    u = ou;
  5141     01A0  0021               	movlb	1	; select bank1
  5142     01A1  0836               	movf	(efgtoa@ou+3)^(0+128),w
  5143     01A2  00CB               	movwf	(efgtoa@u+3)^(0+128)
  5144     01A3  0835               	movf	(efgtoa@ou+2)^(0+128),w
  5145     01A4  00CA               	movwf	(efgtoa@u+2)^(0+128)
  5146     01A5  0834               	movf	(efgtoa@ou+1)^(0+128),w
  5147     01A6  00C9               	movwf	(efgtoa@u+1)^(0+128)
  5148     01A7  0833               	movf	efgtoa@ou^(0+128),w
  5149     01A8  00C8               	movwf	efgtoa@u^(0+128)
  5150                           
  5151                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 662:    ++e;
  5152     01A9  3001               	movlw	1
  5153     01AA  07AF               	addwf	efgtoa@e^(0+128),f
  5154     01AB  3000               	movlw	0
  5155     01AC  3DB0               	addwfc	(efgtoa@e+1)^(0+128),f
  5156     01AD                     l4826:
  5157                           
  5158                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 660:   while ((labs(
      +                          (g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5159     01AD  3041               	movlw	65
  5160     01AE  0020               	movlb	0	; select bank0
  5161     01AF  00B1               	movwf	___flmul@b+3
  5162     01B0  3020               	movlw	32
  5163     01B1  00B0               	movwf	___flmul@b+2
  5164     01B2  3000               	movlw	0
  5165     01B3  00AF               	movwf	___flmul@b+1
  5166     01B4  3000               	movlw	0
  5167     01B5  00AE               	movwf	___flmul@b
  5168     01B6  0021               	movlb	1	; select bank1
  5169     01B7  084B               	movf	(efgtoa@u+3)^(0+128),w
  5170     01B8  0020               	movlb	0	; select bank0
  5171     01B9  00B5               	movwf	___flmul@a+3
  5172     01BA  0021               	movlb	1	; select bank1
  5173     01BB  084A               	movf	(efgtoa@u+2)^(0+128),w
  5174     01BC  0020               	movlb	0	; select bank0
  5175     01BD  00B4               	movwf	___flmul@a+2
  5176     01BE  0021               	movlb	1	; select bank1
  5177     01BF  0849               	movf	(efgtoa@u+1)^(0+128),w
  5178     01C0  0020               	movlb	0	; select bank0
  5179     01C1  00B3               	movwf	___flmul@a+1
  5180     01C2  0021               	movlb	1	; select bank1
  5181     01C3  0848               	movf	efgtoa@u^(0+128),w
  5182     01C4  0020               	movlb	0	; select bank0
  5183     01C5  00B2               	movwf	___flmul@a
  5184     01C6  318D  25C5  3180   	fcall	___flmul
  5185     01C9  0020               	movlb	0	; select bank0
  5186     01CA  0831               	movf	?___flmul+3,w
  5187     01CB  0021               	movlb	1	; select bank1
  5188     01CC  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  5189     01CD  0020               	movlb	0	; select bank0
  5190     01CE  0830               	movf	?___flmul+2,w
  5191     01CF  0021               	movlb	1	; select bank1
  5192     01D0  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  5193     01D1  0020               	movlb	0	; select bank0
  5194     01D2  082F               	movf	?___flmul+1,w
  5195     01D3  0021               	movlb	1	; select bank1
  5196     01D4  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  5197     01D5  0020               	movlb	0	; select bank0
  5198     01D6  082E               	movf	?___flmul,w
  5199     01D7  0021               	movlb	1	; select bank1
  5200     01D8  00B3               	movwf	efgtoa@ou^(0+128)
  5201     01D9                     l4828:
  5202     01D9  0833               	movf	efgtoa@ou^(0+128),w
  5203     01DA  0242               	subwf	efgtoa@g^(0+128),w
  5204     01DB  0020               	movlb	0	; select bank0
  5205     01DC  00EB               	movwf	??_efgtoa
  5206     01DD  0021               	movlb	1	; select bank1
  5207     01DE  0834               	movf	(efgtoa@ou+1)^(0+128),w
  5208     01DF  3B43               	subwfb	(efgtoa@g+1)^(0+128),w
  5209     01E0  0020               	movlb	0	; select bank0
  5210     01E1  00EC               	movwf	??_efgtoa+1
  5211     01E2  0021               	movlb	1	; select bank1
  5212     01E3  0835               	movf	(efgtoa@ou+2)^(0+128),w
  5213     01E4  3B44               	subwfb	(efgtoa@g+2)^(0+128),w
  5214     01E5  0020               	movlb	0	; select bank0
  5215     01E6  00ED               	movwf	??_efgtoa+2
  5216     01E7  0021               	movlb	1	; select bank1
  5217     01E8  0836               	movf	(efgtoa@ou+3)^(0+128),w
  5218     01E9  3B45               	subwfb	(efgtoa@g+3)^(0+128),w
  5219     01EA  0020               	movlb	0	; select bank0
  5220     01EB  00EE               	movwf	??_efgtoa+3
  5221     01EC  086E               	movf	??_efgtoa+3,w
  5222     01ED  00A3               	movwf	labs@a+3
  5223     01EE  086D               	movf	??_efgtoa+2,w
  5224     01EF  00A2               	movwf	labs@a+2
  5225     01F0  086C               	movf	??_efgtoa+1,w
  5226     01F1  00A1               	movwf	labs@a+1
  5227     01F2  086B               	movf	??_efgtoa,w
  5228     01F3  00A0               	movwf	labs@a
  5229     01F4  3187  27EA  3180   	fcall	_labs
  5230     01F7  0020               	movlb	0	; select bank0
  5231     01F8  1BA3               	btfsc	?_labs+3,7
  5232     01F9  2A08               	goto	u6421
  5233     01FA  0823               	movf	?_labs+3,w
  5234     01FB  1D03               	btfss	3,2
  5235     01FC  2A09               	goto	u6420
  5236     01FD  0822               	movf	?_labs+2,w
  5237     01FE  1D03               	btfss	3,2
  5238     01FF  2A09               	goto	u6420
  5239     0200  0821               	movf	?_labs+1,w
  5240     0201  1D03               	btfss	3,2
  5241     0202  2A09               	goto	u6420
  5242     0203  3002               	movlw	2
  5243     0204  0220               	subwf	?_labs,w
  5244     0205  1C03               	btfss	3,0
  5245     0206  2A08               	goto	u6421
  5246     0207  2A09               	goto	u6420
  5247     0208                     u6421:
  5248     0208  29A0               	goto	l4824
  5249     0209                     u6420:
  5250     0209                     l4830:
  5251     0209  0021               	movlb	1	; select bank1
  5252     020A  0836               	movf	(efgtoa@ou+3)^(0+128),w
  5253     020B  0020               	movlb	0	; select bank0
  5254     020C  00CB               	movwf	___flge@ff1+3
  5255     020D  0021               	movlb	1	; select bank1
  5256     020E  0835               	movf	(efgtoa@ou+2)^(0+128),w
  5257     020F  0020               	movlb	0	; select bank0
  5258     0210  00CA               	movwf	___flge@ff1+2
  5259     0211  0021               	movlb	1	; select bank1
  5260     0212  0834               	movf	(efgtoa@ou+1)^(0+128),w
  5261     0213  0020               	movlb	0	; select bank0
  5262     0214  00C9               	movwf	___flge@ff1+1
  5263     0215  0021               	movlb	1	; select bank1
  5264     0216  0833               	movf	efgtoa@ou^(0+128),w
  5265     0217  0020               	movlb	0	; select bank0
  5266     0218  00C8               	movwf	___flge@ff1
  5267     0219  0021               	movlb	1	; select bank1
  5268     021A  0845               	movf	(efgtoa@g+3)^(0+128),w
  5269     021B  0020               	movlb	0	; select bank0
  5270     021C  00CF               	movwf	___flge@ff2+3
  5271     021D  0021               	movlb	1	; select bank1
  5272     021E  0844               	movf	(efgtoa@g+2)^(0+128),w
  5273     021F  0020               	movlb	0	; select bank0
  5274     0220  00CE               	movwf	___flge@ff2+2
  5275     0221  0021               	movlb	1	; select bank1
  5276     0222  0843               	movf	(efgtoa@g+1)^(0+128),w
  5277     0223  0020               	movlb	0	; select bank0
  5278     0224  00CD               	movwf	___flge@ff2+1
  5279     0225  0021               	movlb	1	; select bank1
  5280     0226  0842               	movf	efgtoa@g^(0+128),w
  5281     0227  0020               	movlb	0	; select bank0
  5282     0228  00CC               	movwf	___flge@ff2
  5283     0229  3193  23D6  3180   	fcall	___flge
  5284     022C  1C03               	btfss	3,0
  5285     022D  2A2F               	goto	u6431
  5286     022E  2A30               	goto	u6430
  5287     022F                     u6431:
  5288     022F  29A0               	goto	l4824
  5289     0230                     u6430:
  5290     0230                     l4832:
  5291                           
  5292                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 664:   if ((labs((g)
      +                          .u-(u).u) <= 1)) {
  5293     0230  0021               	movlb	1	; select bank1
  5294     0231  0848               	movf	efgtoa@u^(0+128),w
  5295     0232  0242               	subwf	efgtoa@g^(0+128),w
  5296     0233  0020               	movlb	0	; select bank0
  5297     0234  00EB               	movwf	??_efgtoa
  5298     0235  0021               	movlb	1	; select bank1
  5299     0236  0849               	movf	(efgtoa@u+1)^(0+128),w
  5300     0237  3B43               	subwfb	(efgtoa@g+1)^(0+128),w
  5301     0238  0020               	movlb	0	; select bank0
  5302     0239  00EC               	movwf	??_efgtoa+1
  5303     023A  0021               	movlb	1	; select bank1
  5304     023B  084A               	movf	(efgtoa@u+2)^(0+128),w
  5305     023C  3B44               	subwfb	(efgtoa@g+2)^(0+128),w
  5306     023D  0020               	movlb	0	; select bank0
  5307     023E  00ED               	movwf	??_efgtoa+2
  5308     023F  0021               	movlb	1	; select bank1
  5309     0240  084B               	movf	(efgtoa@u+3)^(0+128),w
  5310     0241  3B45               	subwfb	(efgtoa@g+3)^(0+128),w
  5311     0242  0020               	movlb	0	; select bank0
  5312     0243  00EE               	movwf	??_efgtoa+3
  5313     0244  086E               	movf	??_efgtoa+3,w
  5314     0245  00A3               	movwf	labs@a+3
  5315     0246  086D               	movf	??_efgtoa+2,w
  5316     0247  00A2               	movwf	labs@a+2
  5317     0248  086C               	movf	??_efgtoa+1,w
  5318     0249  00A1               	movwf	labs@a+1
  5319     024A  086B               	movf	??_efgtoa,w
  5320     024B  00A0               	movwf	labs@a
  5321     024C  3187  27EA  3180   	fcall	_labs
  5322     024F  0020               	movlb	0	; select bank0
  5323     0250  1BA3               	btfsc	?_labs+3,7
  5324     0251  2A61               	goto	u6440
  5325     0252  0823               	movf	?_labs+3,w
  5326     0253  1D03               	btfss	3,2
  5327     0254  2A60               	goto	u6441
  5328     0255  0822               	movf	?_labs+2,w
  5329     0256  1D03               	btfss	3,2
  5330     0257  2A60               	goto	u6441
  5331     0258  0821               	movf	?_labs+1,w
  5332     0259  1D03               	btfss	3,2
  5333     025A  2A60               	goto	u6441
  5334     025B  3002               	movlw	2
  5335     025C  0220               	subwf	?_labs,w
  5336     025D  1803               	btfsc	3,0
  5337     025E  2A60               	goto	u6441
  5338     025F  2A61               	goto	u6440
  5339     0260                     u6441:
  5340     0260  2ACC               	goto	l4844
  5341     0261                     u6440:
  5342     0261                     l4834:
  5343                           
  5344                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 665:    g = u;
  5345     0261  0021               	movlb	1	; select bank1
  5346     0262  084B               	movf	(efgtoa@u+3)^(0+128),w
  5347     0263  00C5               	movwf	(efgtoa@g+3)^(0+128)
  5348     0264  084A               	movf	(efgtoa@u+2)^(0+128),w
  5349     0265  00C4               	movwf	(efgtoa@g+2)^(0+128)
  5350     0266  0849               	movf	(efgtoa@u+1)^(0+128),w
  5351     0267  00C3               	movwf	(efgtoa@g+1)^(0+128)
  5352     0268  0848               	movf	efgtoa@u^(0+128),w
  5353     0269  00C2               	movwf	efgtoa@g^(0+128)
  5354                           
  5355                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 666:   }
  5356     026A  2AF3               	goto	l4846
  5357     026B                     l4836:
  5358                           
  5359                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 669:     u.f = u.f/1
      +                          0.0;
  5360     026B  3041               	movlw	65
  5361     026C  0020               	movlb	0	; select bank0
  5362     026D  00A3               	movwf	___fldiv@a+3
  5363     026E  3020               	movlw	32
  5364     026F  00A2               	movwf	___fldiv@a+2
  5365     0270  3000               	movlw	0
  5366     0271  00A1               	movwf	___fldiv@a+1
  5367     0272  3000               	movlw	0
  5368     0273  00A0               	movwf	___fldiv@a
  5369     0274  0021               	movlb	1	; select bank1
  5370     0275  084B               	movf	(efgtoa@u+3)^(0+128),w
  5371     0276  0020               	movlb	0	; select bank0
  5372     0277  00A7               	movwf	___fldiv@b+3
  5373     0278  0021               	movlb	1	; select bank1
  5374     0279  084A               	movf	(efgtoa@u+2)^(0+128),w
  5375     027A  0020               	movlb	0	; select bank0
  5376     027B  00A6               	movwf	___fldiv@b+2
  5377     027C  0021               	movlb	1	; select bank1
  5378     027D  0849               	movf	(efgtoa@u+1)^(0+128),w
  5379     027E  0020               	movlb	0	; select bank0
  5380     027F  00A5               	movwf	___fldiv@b+1
  5381     0280  0021               	movlb	1	; select bank1
  5382     0281  0848               	movf	efgtoa@u^(0+128),w
  5383     0282  0020               	movlb	0	; select bank0
  5384     0283  00A4               	movwf	___fldiv@b
  5385     0284  3196  265C  3180   	fcall	___fldiv
  5386     0287  0020               	movlb	0	; select bank0
  5387     0288  0823               	movf	?___fldiv+3,w
  5388     0289  0021               	movlb	1	; select bank1
  5389     028A  00CB               	movwf	(efgtoa@u+3)^(0+128)
  5390     028B  0020               	movlb	0	; select bank0
  5391     028C  0822               	movf	?___fldiv+2,w
  5392     028D  0021               	movlb	1	; select bank1
  5393     028E  00CA               	movwf	(efgtoa@u+2)^(0+128)
  5394     028F  0020               	movlb	0	; select bank0
  5395     0290  0821               	movf	?___fldiv+1,w
  5396     0291  0021               	movlb	1	; select bank1
  5397     0292  00C9               	movwf	(efgtoa@u+1)^(0+128)
  5398     0293  0020               	movlb	0	; select bank0
  5399     0294  0820               	movf	?___fldiv,w
  5400     0295  0021               	movlb	1	; select bank1
  5401     0296  00C8               	movwf	efgtoa@u^(0+128)
  5402     0297                     l4838:
  5403                           
  5404                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 670:     --e;
  5405     0297  30FF               	movlw	255
  5406     0298  07AF               	addwf	efgtoa@e^(0+128),f
  5407     0299  30FF               	movlw	255
  5408     029A  3DB0               	addwfc	(efgtoa@e+1)^(0+128),f
  5409     029B                     l4840:
  5410                           
  5411                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 671:     if ((labs((
      +                          g).u-(u).u) <= 1)) {
  5412     029B  0848               	movf	efgtoa@u^(0+128),w
  5413     029C  0242               	subwf	efgtoa@g^(0+128),w
  5414     029D  0020               	movlb	0	; select bank0
  5415     029E  00EB               	movwf	??_efgtoa
  5416     029F  0021               	movlb	1	; select bank1
  5417     02A0  0849               	movf	(efgtoa@u+1)^(0+128),w
  5418     02A1  3B43               	subwfb	(efgtoa@g+1)^(0+128),w
  5419     02A2  0020               	movlb	0	; select bank0
  5420     02A3  00EC               	movwf	??_efgtoa+1
  5421     02A4  0021               	movlb	1	; select bank1
  5422     02A5  084A               	movf	(efgtoa@u+2)^(0+128),w
  5423     02A6  3B44               	subwfb	(efgtoa@g+2)^(0+128),w
  5424     02A7  0020               	movlb	0	; select bank0
  5425     02A8  00ED               	movwf	??_efgtoa+2
  5426     02A9  0021               	movlb	1	; select bank1
  5427     02AA  084B               	movf	(efgtoa@u+3)^(0+128),w
  5428     02AB  3B45               	subwfb	(efgtoa@g+3)^(0+128),w
  5429     02AC  0020               	movlb	0	; select bank0
  5430     02AD  00EE               	movwf	??_efgtoa+3
  5431     02AE  086E               	movf	??_efgtoa+3,w
  5432     02AF  00A3               	movwf	labs@a+3
  5433     02B0  086D               	movf	??_efgtoa+2,w
  5434     02B1  00A2               	movwf	labs@a+2
  5435     02B2  086C               	movf	??_efgtoa+1,w
  5436     02B3  00A1               	movwf	labs@a+1
  5437     02B4  086B               	movf	??_efgtoa,w
  5438     02B5  00A0               	movwf	labs@a
  5439     02B6  3187  27EA  3180   	fcall	_labs
  5440     02B9  0020               	movlb	0	; select bank0
  5441     02BA  1BA3               	btfsc	?_labs+3,7
  5442     02BB  2ACB               	goto	u6450
  5443     02BC  0823               	movf	?_labs+3,w
  5444     02BD  1D03               	btfss	3,2
  5445     02BE  2ACA               	goto	u6451
  5446     02BF  0822               	movf	?_labs+2,w
  5447     02C0  1D03               	btfss	3,2
  5448     02C1  2ACA               	goto	u6451
  5449     02C2  0821               	movf	?_labs+1,w
  5450     02C3  1D03               	btfss	3,2
  5451     02C4  2ACA               	goto	u6451
  5452     02C5  3002               	movlw	2
  5453     02C6  0220               	subwf	?_labs,w
  5454     02C7  1803               	btfsc	3,0
  5455     02C8  2ACA               	goto	u6451
  5456     02C9  2ACB               	goto	u6450
  5457     02CA                     u6451:
  5458     02CA  2ACC               	goto	l4844
  5459     02CB                     u6450:
  5460     02CB  2A61               	goto	l4834
  5461     02CC                     l4844:
  5462                           
  5463                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 668:    while (g.f <
      +                           u.f) {
  5464     02CC  0021               	movlb	1	; select bank1
  5465     02CD  0845               	movf	(efgtoa@g+3)^(0+128),w
  5466     02CE  0020               	movlb	0	; select bank0
  5467     02CF  00CB               	movwf	___flge@ff1+3
  5468     02D0  0021               	movlb	1	; select bank1
  5469     02D1  0844               	movf	(efgtoa@g+2)^(0+128),w
  5470     02D2  0020               	movlb	0	; select bank0
  5471     02D3  00CA               	movwf	___flge@ff1+2
  5472     02D4  0021               	movlb	1	; select bank1
  5473     02D5  0843               	movf	(efgtoa@g+1)^(0+128),w
  5474     02D6  0020               	movlb	0	; select bank0
  5475     02D7  00C9               	movwf	___flge@ff1+1
  5476     02D8  0021               	movlb	1	; select bank1
  5477     02D9  0842               	movf	efgtoa@g^(0+128),w
  5478     02DA  0020               	movlb	0	; select bank0
  5479     02DB  00C8               	movwf	___flge@ff1
  5480     02DC  0021               	movlb	1	; select bank1
  5481     02DD  084B               	movf	(efgtoa@u+3)^(0+128),w
  5482     02DE  0020               	movlb	0	; select bank0
  5483     02DF  00CF               	movwf	___flge@ff2+3
  5484     02E0  0021               	movlb	1	; select bank1
  5485     02E1  084A               	movf	(efgtoa@u+2)^(0+128),w
  5486     02E2  0020               	movlb	0	; select bank0
  5487     02E3  00CE               	movwf	___flge@ff2+2
  5488     02E4  0021               	movlb	1	; select bank1
  5489     02E5  0849               	movf	(efgtoa@u+1)^(0+128),w
  5490     02E6  0020               	movlb	0	; select bank0
  5491     02E7  00CD               	movwf	___flge@ff2+1
  5492     02E8  0021               	movlb	1	; select bank1
  5493     02E9  0848               	movf	efgtoa@u^(0+128),w
  5494     02EA  0020               	movlb	0	; select bank0
  5495     02EB  00CC               	movwf	___flge@ff2
  5496     02EC  3193  23D6  3180   	fcall	___flge
  5497     02EF  1C03               	btfss	3,0
  5498     02F0  2AF2               	goto	u6461
  5499     02F1  2AF3               	goto	u6460
  5500     02F2                     u6461:
  5501     02F2  2A6B               	goto	l4836
  5502     02F3                     u6460:
  5503     02F3                     l4846:
  5504                           
  5505                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 683:  mode = c;
  5506     02F3  0020               	movlb	0	; select bank0
  5507     02F4  086A               	movf	efgtoa@c,w
  5508     02F5  0021               	movlb	1	; select bank1
  5509     02F6  00A9               	movwf	efgtoa@mode^(0+128)
  5510                           
  5511                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 685:     nmode = mod
      +                          e;
  5512     02F7  0829               	movf	efgtoa@mode^(0+128),w
  5513     02F8  00AA               	movwf	efgtoa@nmode^(0+128)
  5514     02F9                     l4848:
  5515                           
  5516                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 695:  {;/Application
      +                          s/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 696:         p = (prec < 0) ? 6 :
      +                           prec;
  5517     02F9  0022               	movlb	2	; select bank2
  5518     02FA  1BCB               	btfsc	(_prec+1)^(0+256),7
  5519     02FB  2AFD               	goto	u6471
  5520     02FC  2AFE               	goto	u6470
  5521     02FD                     u6471:
  5522     02FD  2B06               	goto	l4852
  5523     02FE                     u6470:
  5524     02FE                     l4850:
  5525     02FE  084B               	movf	(_prec+1)^(0+256),w
  5526     02FF  0021               	movlb	1	; select bank1
  5527     0300  00A3               	movwf	(efgtoa@p+1)^(0+128)
  5528     0301  0022               	movlb	2	; select bank2
  5529     0302  084A               	movf	_prec^(0+256),w
  5530     0303  0021               	movlb	1	; select bank1
  5531     0304  00A2               	movwf	efgtoa@p^(0+128)
  5532     0305  2B0B               	goto	l1225
  5533     0306                     l4852:
  5534     0306  3006               	movlw	6
  5535     0307  0021               	movlb	1	; select bank1
  5536     0308  00A2               	movwf	efgtoa@p^(0+128)
  5537     0309  3000               	movlw	0
  5538     030A  00A3               	movwf	(efgtoa@p^(0+128)+1)
  5539     030B                     l1225:
  5540                           
  5541                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 697:     };/Applicat
      +                          ions/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 711:     m = p;
  5542     030B  0823               	movf	(efgtoa@p+1)^(0+128),w
  5543     030C  00AE               	movwf	(efgtoa@m+1)^(0+128)
  5544     030D  0822               	movf	efgtoa@p^(0+128),w
  5545     030E  00AD               	movwf	efgtoa@m^(0+128)
  5546                           
  5547                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 715:  {;/Application
      +                          s/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 716:         ++m;
  5548     030F  3001               	movlw	1
  5549     0310  07AD               	addwf	efgtoa@m^(0+128),f
  5550     0311  3000               	movlw	0
  5551     0312  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5552     0313                     l4854:
  5553                           
  5554                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 717:     };/Applicat
      +                          ions/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 721:     if (nmode == 'f') {
  5555     0313  3066               	movlw	102
  5556     0314  062A               	xorwf	efgtoa@nmode^(0+128),w
  5557     0315  1D03               	btfss	3,2
  5558     0316  2B18               	goto	u6481
  5559     0317  2B19               	goto	u6480
  5560     0318                     u6481:
  5561     0318  2B31               	goto	l4866
  5562     0319                     u6480:
  5563     0319                     l4856:
  5564                           
  5565                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 722:         if (e <
      +                           0) {
  5566     0319  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
  5567     031A  2B1C               	goto	u6491
  5568     031B  2B1D               	goto	u6490
  5569     031C                     u6491:
  5570     031C  2B27               	goto	l4862
  5571     031D                     u6490:
  5572     031D                     l4858:
  5573                           
  5574                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 723:             u.f
      +                           = 1.0;
  5575     031D  303F               	movlw	63
  5576     031E  00CB               	movwf	(efgtoa@u+3)^(0+128)
  5577     031F  3080               	movlw	128
  5578     0320  00CA               	movwf	(efgtoa@u+2)^(0+128)
  5579     0321  3000               	movlw	0
  5580     0322  00C9               	movwf	(efgtoa@u+1)^(0+128)
  5581     0323  3000               	movlw	0
  5582     0324  00C8               	movwf	efgtoa@u^(0+128)
  5583     0325                     l4860:
  5584                           
  5585                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 724:             e =
      +                           0;
  5586     0325  01AF               	clrf	efgtoa@e^(0+128)
  5587     0326  01B0               	clrf	(efgtoa@e+1)^(0+128)
  5588     0327                     l4862:
  5589                           
  5590                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 726:         if (!(m
      +                          ode == 'g')) {
  5591     0327  3067               	movlw	103
  5592     0328  0629               	xorwf	efgtoa@mode^(0+128),w
  5593     0329  1903               	btfsc	3,2
  5594     032A  2B2C               	goto	u6501
  5595     032B  2B2D               	goto	u6500
  5596     032C                     u6501:
  5597     032C  2B31               	goto	l4866
  5598     032D                     u6500:
  5599     032D                     l4864:
  5600                           
  5601                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 727:             m +
      +                          = e;
  5602     032D  082F               	movf	efgtoa@e^(0+128),w
  5603     032E  07AD               	addwf	efgtoa@m^(0+128),f
  5604     032F  0830               	movf	(efgtoa@e+1)^(0+128),w
  5605     0330  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  5606     0331                     l4866:
  5607                           
  5608                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 733:     i = 0;
  5609     0331  01B7               	clrf	efgtoa@i^(0+128)
  5610     0332  01B8               	clrf	(efgtoa@i+1)^(0+128)
  5611     0333                     l4868:
  5612                           
  5613                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 734:     h = g.f;
  5614     0333  0845               	movf	(efgtoa@g+3)^(0+128),w
  5615     0334  00BC               	movwf	(efgtoa@h+3)^(0+128)
  5616     0335  0844               	movf	(efgtoa@g+2)^(0+128),w
  5617     0336  00BB               	movwf	(efgtoa@h+2)^(0+128)
  5618     0337  0843               	movf	(efgtoa@g+1)^(0+128),w
  5619     0338  00BA               	movwf	(efgtoa@h+1)^(0+128)
  5620     0339  0842               	movf	efgtoa@g^(0+128),w
  5621     033A  00B9               	movwf	efgtoa@h^(0+128)
  5622     033B                     l4870:
  5623                           
  5624                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 735:     ou = u;
  5625     033B  084B               	movf	(efgtoa@u+3)^(0+128),w
  5626     033C  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  5627     033D  084A               	movf	(efgtoa@u+2)^(0+128),w
  5628     033E  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  5629     033F  0849               	movf	(efgtoa@u+1)^(0+128),w
  5630     0340  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  5631     0341  0848               	movf	efgtoa@u^(0+128),w
  5632     0342  00B3               	movwf	efgtoa@ou^(0+128)
  5633                           
  5634                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < 
      +                          m) {
  5635     0343  2C1B               	goto	l4876
  5636     0344                     l4872:
  5637                           
  5638                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 737:         l = flo
      +                          orf(h/u.f);
  5639     0344  0021               	movlb	1	; select bank1
  5640     0345  084B               	movf	(efgtoa@u+3)^(0+128),w
  5641     0346  0020               	movlb	0	; select bank0
  5642     0347  00A3               	movwf	___fldiv@a+3
  5643     0348  0021               	movlb	1	; select bank1
  5644     0349  084A               	movf	(efgtoa@u+2)^(0+128),w
  5645     034A  0020               	movlb	0	; select bank0
  5646     034B  00A2               	movwf	___fldiv@a+2
  5647     034C  0021               	movlb	1	; select bank1
  5648     034D  0849               	movf	(efgtoa@u+1)^(0+128),w
  5649     034E  0020               	movlb	0	; select bank0
  5650     034F  00A1               	movwf	___fldiv@a+1
  5651     0350  0021               	movlb	1	; select bank1
  5652     0351  0848               	movf	efgtoa@u^(0+128),w
  5653     0352  0020               	movlb	0	; select bank0
  5654     0353  00A0               	movwf	___fldiv@a
  5655     0354  0021               	movlb	1	; select bank1
  5656     0355  083C               	movf	(efgtoa@h+3)^(0+128),w
  5657     0356  0020               	movlb	0	; select bank0
  5658     0357  00A7               	movwf	___fldiv@b+3
  5659     0358  0021               	movlb	1	; select bank1
  5660     0359  083B               	movf	(efgtoa@h+2)^(0+128),w
  5661     035A  0020               	movlb	0	; select bank0
  5662     035B  00A6               	movwf	___fldiv@b+2
  5663     035C  0021               	movlb	1	; select bank1
  5664     035D  083A               	movf	(efgtoa@h+1)^(0+128),w
  5665     035E  0020               	movlb	0	; select bank0
  5666     035F  00A5               	movwf	___fldiv@b+1
  5667     0360  0021               	movlb	1	; select bank1
  5668     0361  0839               	movf	efgtoa@h^(0+128),w
  5669     0362  0020               	movlb	0	; select bank0
  5670     0363  00A4               	movwf	___fldiv@b
  5671     0364  3196  265C  3180   	fcall	___fldiv
  5672     0367  0020               	movlb	0	; select bank0
  5673     0368  0823               	movf	?___fldiv+3,w
  5674     0369  00BD               	movwf	floorf@x+3
  5675     036A  0822               	movf	?___fldiv+2,w
  5676     036B  00BC               	movwf	floorf@x+2
  5677     036C  0821               	movf	?___fldiv+1,w
  5678     036D  00BB               	movwf	floorf@x+1
  5679     036E  0820               	movf	?___fldiv,w
  5680     036F  00BA               	movwf	floorf@x
  5681     0370  3194  2461  3180   	fcall	_floorf
  5682     0373  0020               	movlb	0	; select bank0
  5683     0374  083D               	movf	?_floorf+3,w
  5684     0375  0021               	movlb	1	; select bank1
  5685     0376  00C0               	movwf	(efgtoa@l+3)^(0+128)
  5686     0377  0020               	movlb	0	; select bank0
  5687     0378  083C               	movf	?_floorf+2,w
  5688     0379  0021               	movlb	1	; select bank1
  5689     037A  00BF               	movwf	(efgtoa@l+2)^(0+128)
  5690     037B  0020               	movlb	0	; select bank0
  5691     037C  083B               	movf	?_floorf+1,w
  5692     037D  0021               	movlb	1	; select bank1
  5693     037E  00BE               	movwf	(efgtoa@l+1)^(0+128)
  5694     037F  0020               	movlb	0	; select bank0
  5695     0380  083A               	movf	?_floorf,w
  5696     0381  0021               	movlb	1	; select bank1
  5697     0382  00BD               	movwf	efgtoa@l^(0+128)
  5698                           
  5699                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 738:         d = (in
      +                          t)l;
  5700     0383  0840               	movf	(efgtoa@l+3)^(0+128),w
  5701     0384  0020               	movlb	0	; select bank0
  5702     0385  00A3               	movwf	___fltol@f1+3
  5703     0386  0021               	movlb	1	; select bank1
  5704     0387  083F               	movf	(efgtoa@l+2)^(0+128),w
  5705     0388  0020               	movlb	0	; select bank0
  5706     0389  00A2               	movwf	___fltol@f1+2
  5707     038A  0021               	movlb	1	; select bank1
  5708     038B  083E               	movf	(efgtoa@l+1)^(0+128),w
  5709     038C  0020               	movlb	0	; select bank0
  5710     038D  00A1               	movwf	___fltol@f1+1
  5711     038E  0021               	movlb	1	; select bank1
  5712     038F  083D               	movf	efgtoa@l^(0+128),w
  5713     0390  0020               	movlb	0	; select bank0
  5714     0391  00A0               	movwf	___fltol@f1
  5715     0392  3192  22E8  3180   	fcall	___fltol
  5716     0395  0020               	movlb	0	; select bank0
  5717     0396  0821               	movf	?___fltol+1,w
  5718     0397  0021               	movlb	1	; select bank1
  5719     0398  00AC               	movwf	(efgtoa@d+1)^(0+128)
  5720     0399  0020               	movlb	0	; select bank0
  5721     039A  0820               	movf	?___fltol,w
  5722     039B  0021               	movlb	1	; select bank1
  5723     039C  00AB               	movwf	efgtoa@d^(0+128)
  5724                           
  5725                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 739:         h -= l*
      +                          u.f;
  5726     039D  084B               	movf	(efgtoa@u+3)^(0+128),w
  5727     039E  0020               	movlb	0	; select bank0
  5728     039F  00B5               	movwf	___flmul@a+3
  5729     03A0  0021               	movlb	1	; select bank1
  5730     03A1  084A               	movf	(efgtoa@u+2)^(0+128),w
  5731     03A2  0020               	movlb	0	; select bank0
  5732     03A3  00B4               	movwf	___flmul@a+2
  5733     03A4  0021               	movlb	1	; select bank1
  5734     03A5  0849               	movf	(efgtoa@u+1)^(0+128),w
  5735     03A6  0020               	movlb	0	; select bank0
  5736     03A7  00B3               	movwf	___flmul@a+1
  5737     03A8  0021               	movlb	1	; select bank1
  5738     03A9  0848               	movf	efgtoa@u^(0+128),w
  5739     03AA  0020               	movlb	0	; select bank0
  5740     03AB  00B2               	movwf	___flmul@a
  5741     03AC  0021               	movlb	1	; select bank1
  5742     03AD  0840               	movf	(efgtoa@l+3)^(0+128),w
  5743     03AE  0020               	movlb	0	; select bank0
  5744     03AF  00B1               	movwf	___flmul@b+3
  5745     03B0  0021               	movlb	1	; select bank1
  5746     03B1  083F               	movf	(efgtoa@l+2)^(0+128),w
  5747     03B2  0020               	movlb	0	; select bank0
  5748     03B3  00B0               	movwf	___flmul@b+2
  5749     03B4  0021               	movlb	1	; select bank1
  5750     03B5  083E               	movf	(efgtoa@l+1)^(0+128),w
  5751     03B6  0020               	movlb	0	; select bank0
  5752     03B7  00AF               	movwf	___flmul@b+1
  5753     03B8  0021               	movlb	1	; select bank1
  5754     03B9  083D               	movf	efgtoa@l^(0+128),w
  5755     03BA  0020               	movlb	0	; select bank0
  5756     03BB  00AE               	movwf	___flmul@b
  5757     03BC  318D  25C5  3180   	fcall	___flmul
  5758     03BF  0020               	movlb	0	; select bank0
  5759     03C0  0831               	movf	?___flmul+3,w
  5760     03C1  00DF               	movwf	___flsub@a+3
  5761     03C2  0830               	movf	?___flmul+2,w
  5762     03C3  00DE               	movwf	___flsub@a+2
  5763     03C4  082F               	movf	?___flmul+1,w
  5764     03C5  00DD               	movwf	___flsub@a+1
  5765     03C6  082E               	movf	?___flmul,w
  5766     03C7  00DC               	movwf	___flsub@a
  5767     03C8  0021               	movlb	1	; select bank1
  5768     03C9  083C               	movf	(efgtoa@h+3)^(0+128),w
  5769     03CA  0020               	movlb	0	; select bank0
  5770     03CB  00E3               	movwf	___flsub@b+3
  5771     03CC  0021               	movlb	1	; select bank1
  5772     03CD  083B               	movf	(efgtoa@h+2)^(0+128),w
  5773     03CE  0020               	movlb	0	; select bank0
  5774     03CF  00E2               	movwf	___flsub@b+2
  5775     03D0  0021               	movlb	1	; select bank1
  5776     03D1  083A               	movf	(efgtoa@h+1)^(0+128),w
  5777     03D2  0020               	movlb	0	; select bank0
  5778     03D3  00E1               	movwf	___flsub@b+1
  5779     03D4  0021               	movlb	1	; select bank1
  5780     03D5  0839               	movf	efgtoa@h^(0+128),w
  5781     03D6  0020               	movlb	0	; select bank0
  5782     03D7  00E0               	movwf	___flsub@b
  5783     03D8  319F  279F  3180   	fcall	___flsub
  5784     03DB  0020               	movlb	0	; select bank0
  5785     03DC  085F               	movf	?___flsub+3,w
  5786     03DD  0021               	movlb	1	; select bank1
  5787     03DE  00BC               	movwf	(efgtoa@h+3)^(0+128)
  5788     03DF  0020               	movlb	0	; select bank0
  5789     03E0  085E               	movf	?___flsub+2,w
  5790     03E1  0021               	movlb	1	; select bank1
  5791     03E2  00BB               	movwf	(efgtoa@h+2)^(0+128)
  5792     03E3  0020               	movlb	0	; select bank0
  5793     03E4  085D               	movf	?___flsub+1,w
  5794     03E5  0021               	movlb	1	; select bank1
  5795     03E6  00BA               	movwf	(efgtoa@h+1)^(0+128)
  5796     03E7  0020               	movlb	0	; select bank0
  5797     03E8  085C               	movf	?___flsub,w
  5798     03E9  0021               	movlb	1	; select bank1
  5799     03EA  00B9               	movwf	efgtoa@h^(0+128)
  5800                           
  5801                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 740:         u.f = u
      +                          .f/10.0;
  5802     03EB  3041               	movlw	65
  5803     03EC  0020               	movlb	0	; select bank0
  5804     03ED  00A3               	movwf	___fldiv@a+3
  5805     03EE  3020               	movlw	32
  5806     03EF  00A2               	movwf	___fldiv@a+2
  5807     03F0  3000               	movlw	0
  5808     03F1  00A1               	movwf	___fldiv@a+1
  5809     03F2  3000               	movlw	0
  5810     03F3  00A0               	movwf	___fldiv@a
  5811     03F4  0021               	movlb	1	; select bank1
  5812     03F5  084B               	movf	(efgtoa@u+3)^(0+128),w
  5813     03F6  0020               	movlb	0	; select bank0
  5814     03F7  00A7               	movwf	___fldiv@b+3
  5815     03F8  0021               	movlb	1	; select bank1
  5816     03F9  084A               	movf	(efgtoa@u+2)^(0+128),w
  5817     03FA  0020               	movlb	0	; select bank0
  5818     03FB  00A6               	movwf	___fldiv@b+2
  5819     03FC  0021               	movlb	1	; select bank1
  5820     03FD  0849               	movf	(efgtoa@u+1)^(0+128),w
  5821     03FE  0020               	movlb	0	; select bank0
  5822     03FF  00A5               	movwf	___fldiv@b+1
  5823     0400  0021               	movlb	1	; select bank1
  5824     0401  0848               	movf	efgtoa@u^(0+128),w
  5825     0402  0020               	movlb	0	; select bank0
  5826     0403  00A4               	movwf	___fldiv@b
  5827     0404  3196  265C  3180   	fcall	___fldiv
  5828     0407  0020               	movlb	0	; select bank0
  5829     0408  0823               	movf	?___fldiv+3,w
  5830     0409  0021               	movlb	1	; select bank1
  5831     040A  00CB               	movwf	(efgtoa@u+3)^(0+128)
  5832     040B  0020               	movlb	0	; select bank0
  5833     040C  0822               	movf	?___fldiv+2,w
  5834     040D  0021               	movlb	1	; select bank1
  5835     040E  00CA               	movwf	(efgtoa@u+2)^(0+128)
  5836     040F  0020               	movlb	0	; select bank0
  5837     0410  0821               	movf	?___fldiv+1,w
  5838     0411  0021               	movlb	1	; select bank1
  5839     0412  00C9               	movwf	(efgtoa@u+1)^(0+128)
  5840     0413  0020               	movlb	0	; select bank0
  5841     0414  0820               	movf	?___fldiv,w
  5842     0415  0021               	movlb	1	; select bank1
  5843     0416  00C8               	movwf	efgtoa@u^(0+128)
  5844     0417                     l4874:
  5845                           
  5846                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 741:         ++i;
  5847     0417  3001               	movlw	1
  5848     0418  07B7               	addwf	efgtoa@i^(0+128),f
  5849     0419  3000               	movlw	0
  5850     041A  3DB8               	addwfc	(efgtoa@i+1)^(0+128),f
  5851     041B                     l4876:
  5852                           
  5853                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < 
      +                          m) {
  5854     041B  0838               	movf	(efgtoa@i+1)^(0+128),w
  5855     041C  3A80               	xorlw	128
  5856     041D  0020               	movlb	0	; select bank0
  5857     041E  00EB               	movwf	??_efgtoa
  5858     041F  0021               	movlb	1	; select bank1
  5859     0420  082E               	movf	(efgtoa@m+1)^(0+128),w
  5860     0421  3A80               	xorlw	128
  5861     0422  0020               	movlb	0	; select bank0
  5862     0423  026B               	subwf	??_efgtoa,w
  5863     0424  1D03               	skipz
  5864     0425  2C29               	goto	u6515
  5865     0426  0021               	movlb	1	; select bank1
  5866     0427  082D               	movf	efgtoa@m^(0+128),w
  5867     0428  0237               	subwf	efgtoa@i^(0+128),w
  5868     0429                     u6515:
  5869     0429  1C03               	skipc
  5870     042A  2C2C               	goto	u6511
  5871     042B  2C2D               	goto	u6510
  5872     042C                     u6511:
  5873     042C  2B44               	goto	l4872
  5874     042D                     u6510:
  5875     042D                     l4878:
  5876                           
  5877                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 745:     l = u.f*5.0
      +                          ;
  5878     042D  3040               	movlw	64
  5879     042E  0020               	movlb	0	; select bank0
  5880     042F  00B1               	movwf	___flmul@b+3
  5881     0430  30A0               	movlw	160
  5882     0431  00B0               	movwf	___flmul@b+2
  5883     0432  3000               	movlw	0
  5884     0433  00AF               	movwf	___flmul@b+1
  5885     0434  3000               	movlw	0
  5886     0435  00AE               	movwf	___flmul@b
  5887     0436  0021               	movlb	1	; select bank1
  5888     0437  084B               	movf	(efgtoa@u+3)^(0+128),w
  5889     0438  0020               	movlb	0	; select bank0
  5890     0439  00B5               	movwf	___flmul@a+3
  5891     043A  0021               	movlb	1	; select bank1
  5892     043B  084A               	movf	(efgtoa@u+2)^(0+128),w
  5893     043C  0020               	movlb	0	; select bank0
  5894     043D  00B4               	movwf	___flmul@a+2
  5895     043E  0021               	movlb	1	; select bank1
  5896     043F  0849               	movf	(efgtoa@u+1)^(0+128),w
  5897     0440  0020               	movlb	0	; select bank0
  5898     0441  00B3               	movwf	___flmul@a+1
  5899     0442  0021               	movlb	1	; select bank1
  5900     0443  0848               	movf	efgtoa@u^(0+128),w
  5901     0444  0020               	movlb	0	; select bank0
  5902     0445  00B2               	movwf	___flmul@a
  5903     0446  318D  25C5  3180   	fcall	___flmul
  5904     0449  0020               	movlb	0	; select bank0
  5905     044A  0831               	movf	?___flmul+3,w
  5906     044B  0021               	movlb	1	; select bank1
  5907     044C  00C0               	movwf	(efgtoa@l+3)^(0+128)
  5908     044D  0020               	movlb	0	; select bank0
  5909     044E  0830               	movf	?___flmul+2,w
  5910     044F  0021               	movlb	1	; select bank1
  5911     0450  00BF               	movwf	(efgtoa@l+2)^(0+128)
  5912     0451  0020               	movlb	0	; select bank0
  5913     0452  082F               	movf	?___flmul+1,w
  5914     0453  0021               	movlb	1	; select bank1
  5915     0454  00BE               	movwf	(efgtoa@l+1)^(0+128)
  5916     0455  0020               	movlb	0	; select bank0
  5917     0456  082E               	movf	?___flmul,w
  5918     0457  0021               	movlb	1	; select bank1
  5919     0458  00BD               	movwf	efgtoa@l^(0+128)
  5920                           
  5921                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 746:     if (h < l) 
      +                          {
  5922     0459  083C               	movf	(efgtoa@h+3)^(0+128),w
  5923     045A  0020               	movlb	0	; select bank0
  5924     045B  00CB               	movwf	___flge@ff1+3
  5925     045C  0021               	movlb	1	; select bank1
  5926     045D  083B               	movf	(efgtoa@h+2)^(0+128),w
  5927     045E  0020               	movlb	0	; select bank0
  5928     045F  00CA               	movwf	___flge@ff1+2
  5929     0460  0021               	movlb	1	; select bank1
  5930     0461  083A               	movf	(efgtoa@h+1)^(0+128),w
  5931     0462  0020               	movlb	0	; select bank0
  5932     0463  00C9               	movwf	___flge@ff1+1
  5933     0464  0021               	movlb	1	; select bank1
  5934     0465  0839               	movf	efgtoa@h^(0+128),w
  5935     0466  0020               	movlb	0	; select bank0
  5936     0467  00C8               	movwf	___flge@ff1
  5937     0468  0021               	movlb	1	; select bank1
  5938     0469  0840               	movf	(efgtoa@l+3)^(0+128),w
  5939     046A  0020               	movlb	0	; select bank0
  5940     046B  00CF               	movwf	___flge@ff2+3
  5941     046C  0021               	movlb	1	; select bank1
  5942     046D  083F               	movf	(efgtoa@l+2)^(0+128),w
  5943     046E  0020               	movlb	0	; select bank0
  5944     046F  00CE               	movwf	___flge@ff2+2
  5945     0470  0021               	movlb	1	; select bank1
  5946     0471  083E               	movf	(efgtoa@l+1)^(0+128),w
  5947     0472  0020               	movlb	0	; select bank0
  5948     0473  00CD               	movwf	___flge@ff2+1
  5949     0474  0021               	movlb	1	; select bank1
  5950     0475  083D               	movf	efgtoa@l^(0+128),w
  5951     0476  0020               	movlb	0	; select bank0
  5952     0477  00CC               	movwf	___flge@ff2
  5953     0478  3193  23D6  3180   	fcall	___flge
  5954     047B  1803               	btfsc	3,0
  5955     047C  2C7E               	goto	u6521
  5956     047D  2C7F               	goto	u6520
  5957     047E                     u6521:
  5958     047E  2C89               	goto	l4882
  5959     047F                     u6520:
  5960     047F                     l4880:
  5961                           
  5962                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 747:         l = 0.0
      +                          ;
  5963     047F  3000               	movlw	0
  5964     0480  0021               	movlb	1	; select bank1
  5965     0481  00C0               	movwf	(efgtoa@l+3)^(0+128)
  5966     0482  3000               	movlw	0
  5967     0483  00BF               	movwf	(efgtoa@l+2)^(0+128)
  5968     0484  3000               	movlw	0
  5969     0485  00BE               	movwf	(efgtoa@l+1)^(0+128)
  5970     0486  3000               	movlw	0
  5971     0487  00BD               	movwf	efgtoa@l^(0+128)
  5972                           
  5973                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 748:     } else {
  5974     0488  2CBD               	goto	l4888
  5975     0489                     l4882:
  5976                           
  5977                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 750:         if ((h 
      +                          == l) && !(d % 2)) {
  5978     0489  0021               	movlb	1	; select bank1
  5979     048A  083C               	movf	(efgtoa@h+3)^(0+128),w
  5980     048B  0020               	movlb	0	; select bank0
  5981     048C  00A3               	movwf	___fleq@ff1+3
  5982     048D  0021               	movlb	1	; select bank1
  5983     048E  083B               	movf	(efgtoa@h+2)^(0+128),w
  5984     048F  0020               	movlb	0	; select bank0
  5985     0490  00A2               	movwf	___fleq@ff1+2
  5986     0491  0021               	movlb	1	; select bank1
  5987     0492  083A               	movf	(efgtoa@h+1)^(0+128),w
  5988     0493  0020               	movlb	0	; select bank0
  5989     0494  00A1               	movwf	___fleq@ff1+1
  5990     0495  0021               	movlb	1	; select bank1
  5991     0496  0839               	movf	efgtoa@h^(0+128),w
  5992     0497  0020               	movlb	0	; select bank0
  5993     0498  00A0               	movwf	___fleq@ff1
  5994     0499  0021               	movlb	1	; select bank1
  5995     049A  0840               	movf	(efgtoa@l+3)^(0+128),w
  5996     049B  0020               	movlb	0	; select bank0
  5997     049C  00A7               	movwf	___fleq@ff2+3
  5998     049D  0021               	movlb	1	; select bank1
  5999     049E  083F               	movf	(efgtoa@l+2)^(0+128),w
  6000     049F  0020               	movlb	0	; select bank0
  6001     04A0  00A6               	movwf	___fleq@ff2+2
  6002     04A1  0021               	movlb	1	; select bank1
  6003     04A2  083E               	movf	(efgtoa@l+1)^(0+128),w
  6004     04A3  0020               	movlb	0	; select bank0
  6005     04A4  00A5               	movwf	___fleq@ff2+1
  6006     04A5  0021               	movlb	1	; select bank1
  6007     04A6  083D               	movf	efgtoa@l^(0+128),w
  6008     04A7  0020               	movlb	0	; select bank0
  6009     04A8  00A4               	movwf	___fleq@ff2
  6010     04A9  3191  2183  3180   	fcall	___fleq
  6011     04AC  1C03               	btfss	3,0
  6012     04AD  2CAF               	goto	u6531
  6013     04AE  2CB0               	goto	u6530
  6014     04AF                     u6531:
  6015     04AF  2CBD               	goto	l4888
  6016     04B0                     u6530:
  6017     04B0                     l4884:
  6018     04B0  0021               	movlb	1	; select bank1
  6019     04B1  182B               	btfsc	efgtoa@d^(0+128),0
  6020     04B2  2CB4               	goto	u6541
  6021     04B3  2CB5               	goto	u6540
  6022     04B4                     u6541:
  6023     04B4  2CBD               	goto	l4888
  6024     04B5                     u6540:
  6025     04B5                     l4886:
  6026                           
  6027                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 751:             l =
      +                           0.0;
  6028     04B5  3000               	movlw	0
  6029     04B6  00C0               	movwf	(efgtoa@l+3)^(0+128)
  6030     04B7  3000               	movlw	0
  6031     04B8  00BF               	movwf	(efgtoa@l+2)^(0+128)
  6032     04B9  3000               	movlw	0
  6033     04BA  00BE               	movwf	(efgtoa@l+1)^(0+128)
  6034     04BB  3000               	movlw	0
  6035     04BC  00BD               	movwf	efgtoa@l^(0+128)
  6036     04BD                     l4888:
  6037                           
  6038                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 756:     h = g.f + l
      +                          ;
  6039     04BD  0021               	movlb	1	; select bank1
  6040     04BE  0840               	movf	(efgtoa@l+3)^(0+128),w
  6041     04BF  0020               	movlb	0	; select bank0
  6042     04C0  00CB               	movwf	___fladd@b+3
  6043     04C1  0021               	movlb	1	; select bank1
  6044     04C2  083F               	movf	(efgtoa@l+2)^(0+128),w
  6045     04C3  0020               	movlb	0	; select bank0
  6046     04C4  00CA               	movwf	___fladd@b+2
  6047     04C5  0021               	movlb	1	; select bank1
  6048     04C6  083E               	movf	(efgtoa@l+1)^(0+128),w
  6049     04C7  0020               	movlb	0	; select bank0
  6050     04C8  00C9               	movwf	___fladd@b+1
  6051     04C9  0021               	movlb	1	; select bank1
  6052     04CA  083D               	movf	efgtoa@l^(0+128),w
  6053     04CB  0020               	movlb	0	; select bank0
  6054     04CC  00C8               	movwf	___fladd@b
  6055     04CD  0021               	movlb	1	; select bank1
  6056     04CE  0845               	movf	(efgtoa@g+3)^(0+128),w
  6057     04CF  0020               	movlb	0	; select bank0
  6058     04D0  00CF               	movwf	___fladd@a+3
  6059     04D1  0021               	movlb	1	; select bank1
  6060     04D2  0844               	movf	(efgtoa@g+2)^(0+128),w
  6061     04D3  0020               	movlb	0	; select bank0
  6062     04D4  00CE               	movwf	___fladd@a+2
  6063     04D5  0021               	movlb	1	; select bank1
  6064     04D6  0843               	movf	(efgtoa@g+1)^(0+128),w
  6065     04D7  0020               	movlb	0	; select bank0
  6066     04D8  00CD               	movwf	___fladd@a+1
  6067     04D9  0021               	movlb	1	; select bank1
  6068     04DA  0842               	movf	efgtoa@g^(0+128),w
  6069     04DB  0020               	movlb	0	; select bank0
  6070     04DC  00CC               	movwf	___fladd@a
  6071     04DD  318B  23B9  3180   	fcall	___fladd
  6072     04E0  0020               	movlb	0	; select bank0
  6073     04E1  084B               	movf	?___fladd+3,w
  6074     04E2  0021               	movlb	1	; select bank1
  6075     04E3  00BC               	movwf	(efgtoa@h+3)^(0+128)
  6076     04E4  0020               	movlb	0	; select bank0
  6077     04E5  084A               	movf	?___fladd+2,w
  6078     04E6  0021               	movlb	1	; select bank1
  6079     04E7  00BB               	movwf	(efgtoa@h+2)^(0+128)
  6080     04E8  0020               	movlb	0	; select bank0
  6081     04E9  0849               	movf	?___fladd+1,w
  6082     04EA  0021               	movlb	1	; select bank1
  6083     04EB  00BA               	movwf	(efgtoa@h+1)^(0+128)
  6084     04EC  0020               	movlb	0	; select bank0
  6085     04ED  0848               	movf	?___fladd,w
  6086     04EE  0021               	movlb	1	; select bank1
  6087     04EF  00B9               	movwf	efgtoa@h^(0+128)
  6088     04F0                     l4890:
  6089                           
  6090                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 758:  if (h >= (ou.f
      +                          *10.0)) {
  6091     04F0  083C               	movf	(efgtoa@h+3)^(0+128),w
  6092     04F1  0020               	movlb	0	; select bank0
  6093     04F2  00CB               	movwf	___flge@ff1+3
  6094     04F3  0021               	movlb	1	; select bank1
  6095     04F4  083B               	movf	(efgtoa@h+2)^(0+128),w
  6096     04F5  0020               	movlb	0	; select bank0
  6097     04F6  00CA               	movwf	___flge@ff1+2
  6098     04F7  0021               	movlb	1	; select bank1
  6099     04F8  083A               	movf	(efgtoa@h+1)^(0+128),w
  6100     04F9  0020               	movlb	0	; select bank0
  6101     04FA  00C9               	movwf	___flge@ff1+1
  6102     04FB  0021               	movlb	1	; select bank1
  6103     04FC  0839               	movf	efgtoa@h^(0+128),w
  6104     04FD  0020               	movlb	0	; select bank0
  6105     04FE  00C8               	movwf	___flge@ff1
  6106     04FF  3041               	movlw	65
  6107     0500  00B1               	movwf	___flmul@b+3
  6108     0501  3020               	movlw	32
  6109     0502  00B0               	movwf	___flmul@b+2
  6110     0503  3000               	movlw	0
  6111     0504  00AF               	movwf	___flmul@b+1
  6112     0505  3000               	movlw	0
  6113     0506  00AE               	movwf	___flmul@b
  6114     0507  0021               	movlb	1	; select bank1
  6115     0508  0836               	movf	(efgtoa@ou+3)^(0+128),w
  6116     0509  0020               	movlb	0	; select bank0
  6117     050A  00B5               	movwf	___flmul@a+3
  6118     050B  0021               	movlb	1	; select bank1
  6119     050C  0835               	movf	(efgtoa@ou+2)^(0+128),w
  6120     050D  0020               	movlb	0	; select bank0
  6121     050E  00B4               	movwf	___flmul@a+2
  6122     050F  0021               	movlb	1	; select bank1
  6123     0510  0834               	movf	(efgtoa@ou+1)^(0+128),w
  6124     0511  0020               	movlb	0	; select bank0
  6125     0512  00B3               	movwf	___flmul@a+1
  6126     0513  0021               	movlb	1	; select bank1
  6127     0514  0833               	movf	efgtoa@ou^(0+128),w
  6128     0515  0020               	movlb	0	; select bank0
  6129     0516  00B2               	movwf	___flmul@a
  6130     0517  318D  25C5  3180   	fcall	___flmul
  6131     051A  0020               	movlb	0	; select bank0
  6132     051B  0831               	movf	?___flmul+3,w
  6133     051C  00CF               	movwf	___flge@ff2+3
  6134     051D  0830               	movf	?___flmul+2,w
  6135     051E  00CE               	movwf	___flge@ff2+2
  6136     051F  082F               	movf	?___flmul+1,w
  6137     0520  00CD               	movwf	___flge@ff2+1
  6138     0521  082E               	movf	?___flmul,w
  6139     0522  00CC               	movwf	___flge@ff2
  6140     0523  3193  23D6  3180   	fcall	___flge
  6141     0526  1C03               	btfss	3,0
  6142     0527  2D29               	goto	u6551
  6143     0528  2D2A               	goto	u6550
  6144     0529                     u6551:
  6145     0529  2D65               	goto	l1235
  6146     052A                     u6550:
  6147     052A                     l4892:
  6148                           
  6149                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 759:   e++;
  6150     052A  3001               	movlw	1
  6151     052B  0021               	movlb	1	; select bank1
  6152     052C  07AF               	addwf	efgtoa@e^(0+128),f
  6153     052D  3000               	movlw	0
  6154     052E  3DB0               	addwfc	(efgtoa@e+1)^(0+128),f
  6155     052F                     l4894:
  6156                           
  6157                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 760:   ou.f *= 10.0;
  6158     052F  3041               	movlw	65
  6159     0530  0020               	movlb	0	; select bank0
  6160     0531  00B1               	movwf	___flmul@b+3
  6161     0532  3020               	movlw	32
  6162     0533  00B0               	movwf	___flmul@b+2
  6163     0534  3000               	movlw	0
  6164     0535  00AF               	movwf	___flmul@b+1
  6165     0536  3000               	movlw	0
  6166     0537  00AE               	movwf	___flmul@b
  6167     0538  0021               	movlb	1	; select bank1
  6168     0539  0836               	movf	(efgtoa@ou+3)^(0+128),w
  6169     053A  0020               	movlb	0	; select bank0
  6170     053B  00B5               	movwf	___flmul@a+3
  6171     053C  0021               	movlb	1	; select bank1
  6172     053D  0835               	movf	(efgtoa@ou+2)^(0+128),w
  6173     053E  0020               	movlb	0	; select bank0
  6174     053F  00B4               	movwf	___flmul@a+2
  6175     0540  0021               	movlb	1	; select bank1
  6176     0541  0834               	movf	(efgtoa@ou+1)^(0+128),w
  6177     0542  0020               	movlb	0	; select bank0
  6178     0543  00B3               	movwf	___flmul@a+1
  6179     0544  0021               	movlb	1	; select bank1
  6180     0545  0833               	movf	efgtoa@ou^(0+128),w
  6181     0546  0020               	movlb	0	; select bank0
  6182     0547  00B2               	movwf	___flmul@a
  6183     0548  318D  25C5  3180   	fcall	___flmul
  6184     054B  0020               	movlb	0	; select bank0
  6185     054C  0831               	movf	?___flmul+3,w
  6186     054D  0021               	movlb	1	; select bank1
  6187     054E  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  6188     054F  0020               	movlb	0	; select bank0
  6189     0550  0830               	movf	?___flmul+2,w
  6190     0551  0021               	movlb	1	; select bank1
  6191     0552  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  6192     0553  0020               	movlb	0	; select bank0
  6193     0554  082F               	movf	?___flmul+1,w
  6194     0555  0021               	movlb	1	; select bank1
  6195     0556  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  6196     0557  0020               	movlb	0	; select bank0
  6197     0558  082E               	movf	?___flmul,w
  6198     0559  0021               	movlb	1	; select bank1
  6199     055A  00B3               	movwf	efgtoa@ou^(0+128)
  6200     055B                     l4896:
  6201                           
  6202                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 762:   if (nmode == 
      +                          'f') {
  6203     055B  3066               	movlw	102
  6204     055C  062A               	xorwf	efgtoa@nmode^(0+128),w
  6205     055D  1D03               	btfss	3,2
  6206     055E  2D60               	goto	u6561
  6207     055F  2D61               	goto	u6560
  6208     0560                     u6561:
  6209     0560  2D65               	goto	l1235
  6210     0561                     u6560:
  6211     0561                     l4898:
  6212                           
  6213                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 764:    m++;
  6214     0561  3001               	movlw	1
  6215     0562  07AD               	addwf	efgtoa@m^(0+128),f
  6216     0563  3000               	movlw	0
  6217     0564  3DAE               	addwfc	(efgtoa@m+1)^(0+128),f
  6218     0565                     l1235:	
  6219                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 767:  }
  6220                           
  6221                           
  6222                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 770:     u = ou;
  6223     0565  0021               	movlb	1	; select bank1
  6224     0566  0836               	movf	(efgtoa@ou+3)^(0+128),w
  6225     0567  00CB               	movwf	(efgtoa@u+3)^(0+128)
  6226     0568  0835               	movf	(efgtoa@ou+2)^(0+128),w
  6227     0569  00CA               	movwf	(efgtoa@u+2)^(0+128)
  6228     056A  0834               	movf	(efgtoa@ou+1)^(0+128),w
  6229     056B  00C9               	movwf	(efgtoa@u+1)^(0+128)
  6230     056C  0833               	movf	efgtoa@ou^(0+128),w
  6231     056D  00C8               	movwf	efgtoa@u^(0+128)
  6232                           
  6233                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 774:  ne = e;
  6234     056E  0830               	movf	(efgtoa@e+1)^(0+128),w
  6235     056F  00A1               	movwf	(efgtoa@ne+1)^(0+128)
  6236     0570  082F               	movf	efgtoa@e^(0+128),w
  6237     0571  00A0               	movwf	efgtoa@ne^(0+128)
  6238     0572                     l4900:
  6239                           
  6240                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 776:     pp = 0;
  6241     0572  01A8               	clrf	efgtoa@pp^(0+128)
  6242     0573                     l4902:
  6243                           
  6244                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 777:     t = 0;
  6245     0573  01A4               	clrf	efgtoa@t^(0+128)
  6246     0574  01A5               	clrf	(efgtoa@t+1)^(0+128)
  6247     0575                     l4904:
  6248                           
  6249                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 778:     i = 0;
  6250     0575  01B7               	clrf	efgtoa@i^(0+128)
  6251     0576  01B8               	clrf	(efgtoa@i+1)^(0+128)
  6252                           
  6253                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6254     0577  2EBE               	goto	l4948
  6255     0578                     l4906:
  6256                           
  6257                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 780:         l = flo
      +                          orf(h/u.f);
  6258     0578  0021               	movlb	1	; select bank1
  6259     0579  084B               	movf	(efgtoa@u+3)^(0+128),w
  6260     057A  0020               	movlb	0	; select bank0
  6261     057B  00A3               	movwf	___fldiv@a+3
  6262     057C  0021               	movlb	1	; select bank1
  6263     057D  084A               	movf	(efgtoa@u+2)^(0+128),w
  6264     057E  0020               	movlb	0	; select bank0
  6265     057F  00A2               	movwf	___fldiv@a+2
  6266     0580  0021               	movlb	1	; select bank1
  6267     0581  0849               	movf	(efgtoa@u+1)^(0+128),w
  6268     0582  0020               	movlb	0	; select bank0
  6269     0583  00A1               	movwf	___fldiv@a+1
  6270     0584  0021               	movlb	1	; select bank1
  6271     0585  0848               	movf	efgtoa@u^(0+128),w
  6272     0586  0020               	movlb	0	; select bank0
  6273     0587  00A0               	movwf	___fldiv@a
  6274     0588  0021               	movlb	1	; select bank1
  6275     0589  083C               	movf	(efgtoa@h+3)^(0+128),w
  6276     058A  0020               	movlb	0	; select bank0
  6277     058B  00A7               	movwf	___fldiv@b+3
  6278     058C  0021               	movlb	1	; select bank1
  6279     058D  083B               	movf	(efgtoa@h+2)^(0+128),w
  6280     058E  0020               	movlb	0	; select bank0
  6281     058F  00A6               	movwf	___fldiv@b+2
  6282     0590  0021               	movlb	1	; select bank1
  6283     0591  083A               	movf	(efgtoa@h+1)^(0+128),w
  6284     0592  0020               	movlb	0	; select bank0
  6285     0593  00A5               	movwf	___fldiv@b+1
  6286     0594  0021               	movlb	1	; select bank1
  6287     0595  0839               	movf	efgtoa@h^(0+128),w
  6288     0596  0020               	movlb	0	; select bank0
  6289     0597  00A4               	movwf	___fldiv@b
  6290     0598  3196  265C  3180   	fcall	___fldiv
  6291     059B  0020               	movlb	0	; select bank0
  6292     059C  0823               	movf	?___fldiv+3,w
  6293     059D  00BD               	movwf	floorf@x+3
  6294     059E  0822               	movf	?___fldiv+2,w
  6295     059F  00BC               	movwf	floorf@x+2
  6296     05A0  0821               	movf	?___fldiv+1,w
  6297     05A1  00BB               	movwf	floorf@x+1
  6298     05A2  0820               	movf	?___fldiv,w
  6299     05A3  00BA               	movwf	floorf@x
  6300     05A4  3194  2461  3180   	fcall	_floorf
  6301     05A7  0020               	movlb	0	; select bank0
  6302     05A8  083D               	movf	?_floorf+3,w
  6303     05A9  0021               	movlb	1	; select bank1
  6304     05AA  00C0               	movwf	(efgtoa@l+3)^(0+128)
  6305     05AB  0020               	movlb	0	; select bank0
  6306     05AC  083C               	movf	?_floorf+2,w
  6307     05AD  0021               	movlb	1	; select bank1
  6308     05AE  00BF               	movwf	(efgtoa@l+2)^(0+128)
  6309     05AF  0020               	movlb	0	; select bank0
  6310     05B0  083B               	movf	?_floorf+1,w
  6311     05B1  0021               	movlb	1	; select bank1
  6312     05B2  00BE               	movwf	(efgtoa@l+1)^(0+128)
  6313     05B3  0020               	movlb	0	; select bank0
  6314     05B4  083A               	movf	?_floorf,w
  6315     05B5  0021               	movlb	1	; select bank1
  6316     05B6  00BD               	movwf	efgtoa@l^(0+128)
  6317                           
  6318                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 781:         d = (in
      +                          t)l > 9 ? 9 : (int)l;
  6319     05B7  0840               	movf	(efgtoa@l+3)^(0+128),w
  6320     05B8  0020               	movlb	0	; select bank0
  6321     05B9  00A3               	movwf	___fltol@f1+3
  6322     05BA  0021               	movlb	1	; select bank1
  6323     05BB  083F               	movf	(efgtoa@l+2)^(0+128),w
  6324     05BC  0020               	movlb	0	; select bank0
  6325     05BD  00A2               	movwf	___fltol@f1+2
  6326     05BE  0021               	movlb	1	; select bank1
  6327     05BF  083E               	movf	(efgtoa@l+1)^(0+128),w
  6328     05C0  0020               	movlb	0	; select bank0
  6329     05C1  00A1               	movwf	___fltol@f1+1
  6330     05C2  0021               	movlb	1	; select bank1
  6331     05C3  083D               	movf	efgtoa@l^(0+128),w
  6332     05C4  0020               	movlb	0	; select bank0
  6333     05C5  00A0               	movwf	___fltol@f1
  6334     05C6  3192  22E8  3180   	fcall	___fltol
  6335     05C9  0020               	movlb	0	; select bank0
  6336     05CA  0821               	movf	?___fltol+1,w
  6337     05CB  3A80               	xorlw	128
  6338     05CC  00EB               	movwf	??_efgtoa
  6339     05CD  3080               	movlw	128
  6340     05CE  026B               	subwf	??_efgtoa,w
  6341     05CF  1D03               	skipz
  6342     05D0  2DD3               	goto	u6575
  6343     05D1  300A               	movlw	10
  6344     05D2  0220               	subwf	?___fltol,w
  6345     05D3                     u6575:
  6346     05D3  1803               	skipnc
  6347     05D4  2DD6               	goto	u6571
  6348     05D5  2DD7               	goto	u6570
  6349     05D6                     u6571:
  6350     05D6  2DF3               	goto	l4910
  6351     05D7                     u6570:
  6352     05D7                     l4908:
  6353     05D7  0021               	movlb	1	; select bank1
  6354     05D8  0840               	movf	(efgtoa@l+3)^(0+128),w
  6355     05D9  0020               	movlb	0	; select bank0
  6356     05DA  00A3               	movwf	___fltol@f1+3
  6357     05DB  0021               	movlb	1	; select bank1
  6358     05DC  083F               	movf	(efgtoa@l+2)^(0+128),w
  6359     05DD  0020               	movlb	0	; select bank0
  6360     05DE  00A2               	movwf	___fltol@f1+2
  6361     05DF  0021               	movlb	1	; select bank1
  6362     05E0  083E               	movf	(efgtoa@l+1)^(0+128),w
  6363     05E1  0020               	movlb	0	; select bank0
  6364     05E2  00A1               	movwf	___fltol@f1+1
  6365     05E3  0021               	movlb	1	; select bank1
  6366     05E4  083D               	movf	efgtoa@l^(0+128),w
  6367     05E5  0020               	movlb	0	; select bank0
  6368     05E6  00A0               	movwf	___fltol@f1
  6369     05E7  3192  22E8  3180   	fcall	___fltol
  6370     05EA  0020               	movlb	0	; select bank0
  6371     05EB  0821               	movf	?___fltol+1,w
  6372     05EC  0021               	movlb	1	; select bank1
  6373     05ED  00AC               	movwf	(efgtoa@d+1)^(0+128)
  6374     05EE  0020               	movlb	0	; select bank0
  6375     05EF  0820               	movf	?___fltol,w
  6376     05F0  0021               	movlb	1	; select bank1
  6377     05F1  00AB               	movwf	efgtoa@d^(0+128)
  6378     05F2  2DF8               	goto	l4912
  6379     05F3                     l4910:
  6380     05F3  3009               	movlw	9
  6381     05F4  0021               	movlb	1	; select bank1
  6382     05F5  00AB               	movwf	efgtoa@d^(0+128)
  6383     05F6  3000               	movlw	0
  6384     05F7  00AC               	movwf	(efgtoa@d^(0+128)+1)
  6385     05F8                     l4912:
  6386                           
  6387                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 792:   {;/Applicatio
      +                          ns/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 793:             if (!pp && (ne 
      +                          < 0)) {
  6388     05F8  0828               	movf	efgtoa@pp^(0+128),w
  6389     05F9  1D03               	btfss	3,2
  6390     05FA  2DFC               	goto	u6581
  6391     05FB  2DFD               	goto	u6580
  6392     05FC                     u6581:
  6393     05FC  2E26               	goto	l4932
  6394     05FD                     u6580:
  6395     05FD                     l4914:
  6396     05FD  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
  6397     05FE  2E00               	goto	u6591
  6398     05FF  2E01               	goto	u6590
  6399     0600                     u6591:
  6400     0600  2E26               	goto	l4932
  6401     0601                     u6590:
  6402     0601                     l4916:
  6403                           
  6404                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 794:                
      +                           dbuf[n++] = '.';
  6405     0601  0846               	movf	efgtoa@n^(0+128),w
  6406     0602  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6407     0603  0086               	movwf	6
  6408     0604  3002               	movlw	2	; select bank4/5
  6409     0605  0087               	movwf	7
  6410     0606  302E               	movlw	46
  6411     0607  0081               	movwf	1
  6412     0608                     l4918:
  6413     0608  3001               	movlw	1
  6414     0609  07C6               	addwf	efgtoa@n^(0+128),f
  6415     060A  3000               	movlw	0
  6416     060B  3DC7               	addwfc	(efgtoa@n+1)^(0+128),f
  6417     060C                     l4920:
  6418                           
  6419                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 795:                
      +                           --w;
  6420     060C  30FF               	movlw	255
  6421     060D  07B1               	addwf	efgtoa@w^(0+128),f
  6422     060E  30FF               	movlw	255
  6423     060F  3DB2               	addwfc	(efgtoa@w+1)^(0+128),f
  6424     0610                     l4922:
  6425                           
  6426                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 796:                
      +                           pp = 1;
  6427     0610  3001               	movlw	1
  6428     0611  00A8               	movwf	efgtoa@pp^(0+128)
  6429     0612  2E26               	goto	l4932
  6430     0613                     l4924:
  6431                           
  6432                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 799:                
      +                           dbuf[n++] = '0';
  6433     0613  0846               	movf	efgtoa@n^(0+128),w
  6434     0614  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6435     0615  0086               	movwf	6
  6436     0616  3002               	movlw	2	; select bank4/5
  6437     0617  0087               	movwf	7
  6438     0618  3030               	movlw	48
  6439     0619  0081               	movwf	1
  6440     061A                     l4926:
  6441     061A  3001               	movlw	1
  6442     061B  07C6               	addwf	efgtoa@n^(0+128),f
  6443     061C  3000               	movlw	0
  6444     061D  3DC7               	addwfc	(efgtoa@n+1)^(0+128),f
  6445     061E                     l4928:
  6446                           
  6447                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 800:                
      +                           --w;
  6448     061E  30FF               	movlw	255
  6449     061F  07B1               	addwf	efgtoa@w^(0+128),f
  6450     0620  30FF               	movlw	255
  6451     0621  3DB2               	addwfc	(efgtoa@w+1)^(0+128),f
  6452     0622                     l4930:
  6453                           
  6454                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 801:                
      +                           --t;
  6455     0622  30FF               	movlw	255
  6456     0623  07A4               	addwf	efgtoa@t^(0+128),f
  6457     0624  30FF               	movlw	255
  6458     0625  3DA5               	addwfc	(efgtoa@t+1)^(0+128),f
  6459     0626                     l4932:
  6460                           
  6461                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 798:             whi
      +                          le (t) {
  6462     0626  0824               	movf	efgtoa@t^(0+128),w
  6463     0627  0425               	iorwf	(efgtoa@t+1)^(0+128),w
  6464     0628  1D03               	btfss	3,2
  6465     0629  2E2B               	goto	u6601
  6466     062A  2E2C               	goto	u6600
  6467     062B                     u6601:
  6468     062B  2E13               	goto	l4924
  6469     062C                     u6600:
  6470     062C                     l4934:
  6471                           
  6472                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 803:             dbu
      +                          f[n++] = (char)((int)'0' + d);
  6473     062C  0846               	movf	efgtoa@n^(0+128),w
  6474     062D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6475     062E  0086               	movwf	6
  6476     062F  3002               	movlw	2	; select bank4/5
  6477     0630  0087               	movwf	7
  6478     0631  082B               	movf	efgtoa@d^(0+128),w
  6479     0632  3E30               	addlw	48
  6480     0633  0081               	movwf	1
  6481     0634                     l4936:
  6482     0634  3001               	movlw	1
  6483     0635  07C6               	addwf	efgtoa@n^(0+128),f
  6484     0636  3000               	movlw	0
  6485     0637  3DC7               	addwfc	(efgtoa@n+1)^(0+128),f
  6486     0638                     l4938:
  6487                           
  6488                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 804:             --w
      +                          ;
  6489     0638  30FF               	movlw	255
  6490     0639  07B1               	addwf	efgtoa@w^(0+128),f
  6491     063A  30FF               	movlw	255
  6492     063B  3DB2               	addwfc	(efgtoa@w+1)^(0+128),f
  6493     063C                     l4940:
  6494                           
  6495                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 805:         };/Appl
      +                          ications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 806:         h -= l*u.f;
  6496     063C  084B               	movf	(efgtoa@u+3)^(0+128),w
  6497     063D  0020               	movlb	0	; select bank0
  6498     063E  00B5               	movwf	___flmul@a+3
  6499     063F  0021               	movlb	1	; select bank1
  6500     0640  084A               	movf	(efgtoa@u+2)^(0+128),w
  6501     0641  0020               	movlb	0	; select bank0
  6502     0642  00B4               	movwf	___flmul@a+2
  6503     0643  0021               	movlb	1	; select bank1
  6504     0644  0849               	movf	(efgtoa@u+1)^(0+128),w
  6505     0645  0020               	movlb	0	; select bank0
  6506     0646  00B3               	movwf	___flmul@a+1
  6507     0647  0021               	movlb	1	; select bank1
  6508     0648  0848               	movf	efgtoa@u^(0+128),w
  6509     0649  0020               	movlb	0	; select bank0
  6510     064A  00B2               	movwf	___flmul@a
  6511     064B  0021               	movlb	1	; select bank1
  6512     064C  0840               	movf	(efgtoa@l+3)^(0+128),w
  6513     064D  0020               	movlb	0	; select bank0
  6514     064E  00B1               	movwf	___flmul@b+3
  6515     064F  0021               	movlb	1	; select bank1
  6516     0650  083F               	movf	(efgtoa@l+2)^(0+128),w
  6517     0651  0020               	movlb	0	; select bank0
  6518     0652  00B0               	movwf	___flmul@b+2
  6519     0653  0021               	movlb	1	; select bank1
  6520     0654  083E               	movf	(efgtoa@l+1)^(0+128),w
  6521     0655  0020               	movlb	0	; select bank0
  6522     0656  00AF               	movwf	___flmul@b+1
  6523     0657  0021               	movlb	1	; select bank1
  6524     0658  083D               	movf	efgtoa@l^(0+128),w
  6525     0659  0020               	movlb	0	; select bank0
  6526     065A  00AE               	movwf	___flmul@b
  6527     065B  318D  25C5  3180   	fcall	___flmul
  6528     065E  0020               	movlb	0	; select bank0
  6529     065F  0831               	movf	?___flmul+3,w
  6530     0660  00DF               	movwf	___flsub@a+3
  6531     0661  0830               	movf	?___flmul+2,w
  6532     0662  00DE               	movwf	___flsub@a+2
  6533     0663  082F               	movf	?___flmul+1,w
  6534     0664  00DD               	movwf	___flsub@a+1
  6535     0665  082E               	movf	?___flmul,w
  6536     0666  00DC               	movwf	___flsub@a
  6537     0667  0021               	movlb	1	; select bank1
  6538     0668  083C               	movf	(efgtoa@h+3)^(0+128),w
  6539     0669  0020               	movlb	0	; select bank0
  6540     066A  00E3               	movwf	___flsub@b+3
  6541     066B  0021               	movlb	1	; select bank1
  6542     066C  083B               	movf	(efgtoa@h+2)^(0+128),w
  6543     066D  0020               	movlb	0	; select bank0
  6544     066E  00E2               	movwf	___flsub@b+2
  6545     066F  0021               	movlb	1	; select bank1
  6546     0670  083A               	movf	(efgtoa@h+1)^(0+128),w
  6547     0671  0020               	movlb	0	; select bank0
  6548     0672  00E1               	movwf	___flsub@b+1
  6549     0673  0021               	movlb	1	; select bank1
  6550     0674  0839               	movf	efgtoa@h^(0+128),w
  6551     0675  0020               	movlb	0	; select bank0
  6552     0676  00E0               	movwf	___flsub@b
  6553     0677  319F  279F  3180   	fcall	___flsub
  6554     067A  0020               	movlb	0	; select bank0
  6555     067B  085F               	movf	?___flsub+3,w
  6556     067C  0021               	movlb	1	; select bank1
  6557     067D  00BC               	movwf	(efgtoa@h+3)^(0+128)
  6558     067E  0020               	movlb	0	; select bank0
  6559     067F  085E               	movf	?___flsub+2,w
  6560     0680  0021               	movlb	1	; select bank1
  6561     0681  00BB               	movwf	(efgtoa@h+2)^(0+128)
  6562     0682  0020               	movlb	0	; select bank0
  6563     0683  085D               	movf	?___flsub+1,w
  6564     0684  0021               	movlb	1	; select bank1
  6565     0685  00BA               	movwf	(efgtoa@h+1)^(0+128)
  6566     0686  0020               	movlb	0	; select bank0
  6567     0687  085C               	movf	?___flsub,w
  6568     0688  0021               	movlb	1	; select bank1
  6569     0689  00B9               	movwf	efgtoa@h^(0+128)
  6570     068A                     l4942:
  6571                           
  6572                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 807:         u.f = u
      +                          .f/10.0;
  6573     068A  3041               	movlw	65
  6574     068B  0020               	movlb	0	; select bank0
  6575     068C  00A3               	movwf	___fldiv@a+3
  6576     068D  3020               	movlw	32
  6577     068E  00A2               	movwf	___fldiv@a+2
  6578     068F  3000               	movlw	0
  6579     0690  00A1               	movwf	___fldiv@a+1
  6580     0691  3000               	movlw	0
  6581     0692  00A0               	movwf	___fldiv@a
  6582     0693  0021               	movlb	1	; select bank1
  6583     0694  084B               	movf	(efgtoa@u+3)^(0+128),w
  6584     0695  0020               	movlb	0	; select bank0
  6585     0696  00A7               	movwf	___fldiv@b+3
  6586     0697  0021               	movlb	1	; select bank1
  6587     0698  084A               	movf	(efgtoa@u+2)^(0+128),w
  6588     0699  0020               	movlb	0	; select bank0
  6589     069A  00A6               	movwf	___fldiv@b+2
  6590     069B  0021               	movlb	1	; select bank1
  6591     069C  0849               	movf	(efgtoa@u+1)^(0+128),w
  6592     069D  0020               	movlb	0	; select bank0
  6593     069E  00A5               	movwf	___fldiv@b+1
  6594     069F  0021               	movlb	1	; select bank1
  6595     06A0  0848               	movf	efgtoa@u^(0+128),w
  6596     06A1  0020               	movlb	0	; select bank0
  6597     06A2  00A4               	movwf	___fldiv@b
  6598     06A3  3196  265C  3180   	fcall	___fldiv
  6599     06A6  0020               	movlb	0	; select bank0
  6600     06A7  0823               	movf	?___fldiv+3,w
  6601     06A8  0021               	movlb	1	; select bank1
  6602     06A9  00CB               	movwf	(efgtoa@u+3)^(0+128)
  6603     06AA  0020               	movlb	0	; select bank0
  6604     06AB  0822               	movf	?___fldiv+2,w
  6605     06AC  0021               	movlb	1	; select bank1
  6606     06AD  00CA               	movwf	(efgtoa@u+2)^(0+128)
  6607     06AE  0020               	movlb	0	; select bank0
  6608     06AF  0821               	movf	?___fldiv+1,w
  6609     06B0  0021               	movlb	1	; select bank1
  6610     06B1  00C9               	movwf	(efgtoa@u+1)^(0+128)
  6611     06B2  0020               	movlb	0	; select bank0
  6612     06B3  0820               	movf	?___fldiv,w
  6613     06B4  0021               	movlb	1	; select bank1
  6614     06B5  00C8               	movwf	efgtoa@u^(0+128)
  6615     06B6                     l4944:
  6616                           
  6617                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 808:         --ne;
  6618     06B6  30FF               	movlw	255
  6619     06B7  07A0               	addwf	efgtoa@ne^(0+128),f
  6620     06B8  30FF               	movlw	255
  6621     06B9  3DA1               	addwfc	(efgtoa@ne+1)^(0+128),f
  6622     06BA                     l4946:
  6623                           
  6624                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 809:         ++i;
  6625     06BA  3001               	movlw	1
  6626     06BB  07B7               	addwf	efgtoa@i^(0+128),f
  6627     06BC  3000               	movlw	0
  6628     06BD  3DB8               	addwfc	(efgtoa@i+1)^(0+128),f
  6629     06BE                     l4948:
  6630                           
  6631                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6632     06BE  0838               	movf	(efgtoa@i+1)^(0+128),w
  6633     06BF  3A80               	xorlw	128
  6634     06C0  0020               	movlb	0	; select bank0
  6635     06C1  00EB               	movwf	??_efgtoa
  6636     06C2  0021               	movlb	1	; select bank1
  6637     06C3  082E               	movf	(efgtoa@m+1)^(0+128),w
  6638     06C4  3A80               	xorlw	128
  6639     06C5  0020               	movlb	0	; select bank0
  6640     06C6  026B               	subwf	??_efgtoa,w
  6641     06C7  1D03               	skipz
  6642     06C8  2ECC               	goto	u6615
  6643     06C9  0021               	movlb	1	; select bank1
  6644     06CA  082D               	movf	efgtoa@m^(0+128),w
  6645     06CB  0237               	subwf	efgtoa@i^(0+128),w
  6646     06CC                     u6615:
  6647     06CC  1803               	skipnc
  6648     06CD  2ECF               	goto	u6611
  6649     06CE  2ED0               	goto	u6610
  6650     06CF                     u6611:
  6651     06CF  2EE0               	goto	l4952
  6652     06D0                     u6610:
  6653     06D0                     l4950:
  6654     06D0  0021               	movlb	1	; select bank1
  6655     06D1  0847               	movf	(efgtoa@n+1)^(0+128),w
  6656     06D2  3A80               	xorlw	128
  6657     06D3  0020               	movlb	0	; select bank0
  6658     06D4  00EB               	movwf	??_efgtoa
  6659     06D5  3080               	movlw	128
  6660     06D6  026B               	subwf	??_efgtoa,w
  6661     06D7  1D03               	skipz
  6662     06D8  2EDC               	goto	u6625
  6663     06D9  304B               	movlw	75
  6664     06DA  0021               	movlb	1	; select bank1
  6665     06DB  0246               	subwf	efgtoa@n^(0+128),w
  6666     06DC                     u6625:
  6667     06DC  1C03               	skipc
  6668     06DD  2EDF               	goto	u6621
  6669     06DE  2EE0               	goto	u6620
  6670     06DF                     u6621:
  6671     06DF  2D78               	goto	l4906
  6672     06E0                     u6620:
  6673     06E0                     l4952:
  6674                           
  6675                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 816:  i = sizeof(dbu
      +                          f) - 1;
  6676     06E0  304F               	movlw	79
  6677     06E1  0021               	movlb	1	; select bank1
  6678     06E2  00B7               	movwf	efgtoa@i^(0+128)
  6679     06E3  3000               	movlw	0
  6680     06E4  00B8               	movwf	(efgtoa@i^(0+128)+1)
  6681     06E5                     l4954:
  6682                           
  6683                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 817:     dbuf[i] = '
      +                          \0';
  6684     06E5  0837               	movf	efgtoa@i^(0+128),w
  6685     06E6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6686     06E7  0086               	movwf	6
  6687     06E8  3002               	movlw	2	; select bank4/5
  6688     06E9  0087               	movwf	7
  6689     06EA  0181               	clrf	1
  6690     06EB                     l4956:
  6691                           
  6692                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 848:  memcpy(&dbuf[i
      +                          -n], &dbuf[0], (size_t)n);
  6693     06EB  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6694     06EC  0020               	movlb	0	; select bank0
  6695     06ED  00EB               	movwf	??_efgtoa
  6696     06EE  0021               	movlb	1	; select bank1
  6697     06EF  0846               	movf	efgtoa@n^(0+128),w
  6698     06F0  0020               	movlb	0	; select bank0
  6699     06F1  026B               	subwf	??_efgtoa,w
  6700     06F2  0021               	movlb	1	; select bank1
  6701     06F3  0737               	addwf	efgtoa@i^(0+128),w
  6702     06F4  0020               	movlb	0	; select bank0
  6703     06F5  00A0               	movwf	memcpy@d1
  6704     06F6  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6705     06F7  00A1               	movwf	memcpy@s1
  6706     06F8  0021               	movlb	1	; select bank1
  6707     06F9  0847               	movf	(efgtoa@n+1)^(0+128),w
  6708     06FA  0020               	movlb	0	; select bank0
  6709     06FB  00A3               	movwf	memcpy@n+1
  6710     06FC  0021               	movlb	1	; select bank1
  6711     06FD  0846               	movf	efgtoa@n^(0+128),w
  6712     06FE  0020               	movlb	0	; select bank0
  6713     06FF  00A2               	movwf	memcpy@n
  6714     0700  3190  2057  3180   	fcall	_memcpy
  6715     0703                     l4958:
  6716                           
  6717                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 849:  n = i-n;
  6718     0703  0021               	movlb	1	; select bank1
  6719     0704  0846               	movf	efgtoa@n^(0+128),w
  6720     0705  0237               	subwf	efgtoa@i^(0+128),w
  6721     0706  00C6               	movwf	efgtoa@n^(0+128)
  6722     0707  0847               	movf	(efgtoa@n+1)^(0+128),w
  6723     0708  3B38               	subwfb	(efgtoa@i+1)^(0+128),w
  6724     0709  00C7               	movwf	(efgtoa@n+1)^(0+128)
  6725     070A                     l4960:
  6726                           
  6727                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 850:  i = sign == 0 
      +                          ? 0 : 1;
  6728     070A  0841               	movf	efgtoa@sign^(0+128),w
  6729     070B  1D03               	btfss	3,2
  6730     070C  2F0E               	goto	u6631
  6731     070D  2F10               	goto	u6630
  6732     070E                     u6631:
  6733     070E  3001               	movlw	1
  6734     070F  2F11               	goto	u6640
  6735     0710                     u6630:
  6736     0710  3000               	movlw	0
  6737     0711                     u6640:
  6738     0711  0020               	movlb	0	; select bank0
  6739     0712  00EB               	movwf	??_efgtoa
  6740     0713  01EC               	clrf	??_efgtoa+1
  6741     0714  086B               	movf	??_efgtoa,w
  6742     0715  0021               	movlb	1	; select bank1
  6743     0716  00B7               	movwf	efgtoa@i^(0+128)
  6744     0717  0020               	movlb	0	; select bank0
  6745     0718  086C               	movf	??_efgtoa+1,w
  6746     0719  0021               	movlb	1	; select bank1
  6747     071A  00B8               	movwf	(efgtoa@i+1)^(0+128)
  6748     071B                     l4962:
  6749                           
  6750                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 861:  if (sign) {
  6751     071B  0841               	movf	efgtoa@sign^(0+128),w
  6752     071C  1903               	btfsc	3,2
  6753     071D  2F1F               	goto	u6651
  6754     071E  2F20               	goto	u6650
  6755     071F                     u6651:
  6756     071F  2F2B               	goto	l4966
  6757     0720                     u6650:
  6758     0720                     l4964:
  6759                           
  6760                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 862:   dbuf[--n] = s
      +                          ign;
  6761     0720  30FF               	movlw	255
  6762     0721  07C6               	addwf	efgtoa@n^(0+128),f
  6763     0722  30FF               	movlw	255
  6764     0723  3DC7               	addwfc	(efgtoa@n+1)^(0+128),f
  6765     0724  0846               	movf	efgtoa@n^(0+128),w
  6766     0725  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6767     0726  0086               	movwf	6
  6768     0727  3002               	movlw	2	; select bank4/5
  6769     0728  0087               	movwf	7
  6770     0729  0841               	movf	efgtoa@sign^(0+128),w
  6771     072A  0081               	movwf	1
  6772     072B                     l4966:
  6773                           
  6774                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 864:  w -= i;
  6775     072B  0837               	movf	efgtoa@i^(0+128),w
  6776     072C  02B1               	subwf	efgtoa@w^(0+128),f
  6777     072D  0838               	movf	(efgtoa@i+1)^(0+128),w
  6778     072E  3BB2               	subwfb	(efgtoa@w+1)^(0+128),f
  6779     072F                     l4968:
  6780                           
  6781                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 867:     return (voi
      +                          d) pad(fp, &dbuf[n], w);
  6782     072F  0020               	movlb	0	; select bank0
  6783     0730  0865               	movf	efgtoa@fp+1,w
  6784     0731  00B5               	movwf	pad@fp+1
  6785     0732  0864               	movf	efgtoa@fp,w
  6786     0733  00B4               	movwf	pad@fp
  6787     0734  0021               	movlb	1	; select bank1
  6788     0735  0846               	movf	efgtoa@n^(0+128),w
  6789     0736  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6790     0737  0020               	movlb	0	; select bank0
  6791     0738  00B6               	movwf	pad@buf
  6792     0739  0021               	movlb	1	; select bank1
  6793     073A  0832               	movf	(efgtoa@w+1)^(0+128),w
  6794     073B  0020               	movlb	0	; select bank0
  6795     073C  00B8               	movwf	pad@p+1
  6796     073D  0021               	movlb	1	; select bank1
  6797     073E  0831               	movf	efgtoa@w^(0+128),w
  6798     073F  0020               	movlb	0	; select bank0
  6799     0740  00B7               	movwf	pad@p
  6800     0741  3191  2119  3180   	fcall	_pad
  6801     0744                     l1209:
  6802     0744  0008               	return
  6803     0745                     __end_of_efgtoa:
  6804                           
  6805                           	psect	text7
  6806     1EEB                     __ptext7:	
  6807 ;; *************** function _strcpy *****************
  6808 ;; Defined at:
  6809 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  dest            1    0[BANK0 ] PTR unsigned char 
  6812 ;;		 -> dbuf(80), 
  6813 ;;  src             2    1[BANK0 ] PTR const unsigned char 
  6814 ;;		 -> STR_8(4), STR_5(4), 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  d               1    5[BANK0 ] PTR unsigned char 
  6817 ;;		 -> dbuf(80), 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    0[BANK0 ] PTR unsigned char 
  6820 ;; Registers used:
  6821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6827 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;Total ram usage:        6 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 4
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_efgtoa
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841     1EEB                     _strcpy:	
  6842                           ;psect for function _strcpy
  6843                           
  6844     1EEB                     l4750:	
  6845                           ;incstack = 0
  6846                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6847                           
  6848     1EEB  0020               	movlb	0	; select bank0
  6849     1EEC  0820               	movf	strcpy@dest,w
  6850     1EED  00A5               	movwf	strcpy@d
  6851     1EEE                     l4752:
  6852     1EEE  0825               	movf	strcpy@d,w
  6853     1EEF  0086               	movwf	6
  6854     1EF0  3002               	movlw	2	; select bank4/5
  6855     1EF1  0087               	movwf	7
  6856     1EF2  0AA5               	incf	strcpy@d,f
  6857     1EF3  0822               	movf	strcpy@src+1,w
  6858     1EF4  00A4               	movwf	??_strcpy+1
  6859     1EF5  0821               	movf	strcpy@src,w
  6860     1EF6  00A3               	movwf	??_strcpy
  6861     1EF7  0AA1               	incf	strcpy@src,f
  6862     1EF8  1903               	skipnz
  6863     1EF9  0AA2               	incf	strcpy@src+1,f
  6864     1EFA  0823               	movf	??_strcpy,w
  6865     1EFB  0084               	movwf	4
  6866     1EFC  0824               	movf	??_strcpy+1,w
  6867     1EFD  0085               	movwf	5
  6868     1EFE  0800               	movf	0,w	;code access
  6869     1EFF  3FC0               	movwi [0]fsr1
  6870     1F00  0889               	movf	9,f
  6871     1F01  1D03               	btfss	3,2
  6872     1F02  2F04               	goto	u6311
  6873     1F03  2F05               	goto	u6310
  6874     1F04                     u6311:
  6875     1F04  2EEE               	goto	l4752
  6876     1F05                     u6310:
  6877     1F05                     l1348:
  6878     1F05  0008               	return
  6879     1F06                     __end_of_strcpy:
  6880                           
  6881                           	psect	text8
  6882     1119                     __ptext8:	
  6883 ;; *************** function _pad *****************
  6884 ;; Defined at:
  6885 ;;		line 193 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  6888 ;;		 -> NULL(0), 
  6889 ;;  buf             1   22[BANK0 ] PTR unsigned char 
  6890 ;;		 -> dbuf(80), 
  6891 ;;  p               2   23[BANK0 ] int 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  i               2   26[BANK0 ] int 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6903 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;Total ram usage:        8 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; Hardware stack levels required when called: 8
  6910 ;; This function calls:
  6911 ;;		_fputc
  6912 ;;		_fputs
  6913 ;; This function is called by:
  6914 ;;		_efgtoa
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918     1119                     _pad:	
  6919                           ;psect for function _pad
  6920                           
  6921     1119                     l4738:	
  6922                           ;incstack = 0
  6923                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6924                           
  6925                           
  6926                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.50/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 205:  if (p
      +                           < 0) {
  6927     1119  0020               	movlb	0	; select bank0
  6928     111A  1FB8               	btfss	pad@p+1,7
  6929     111B  291D               	goto	u6291
  6930     111C  291E               	goto	u6290
  6931     111D                     u6291:
  6932     111D  2920               	goto	l1194
  6933     111E                     u6290:
  6934     111E                     l4740:
  6935                           
  6936                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  6937     111E  01B7               	clrf	pad@p
  6938     111F  01B8               	clrf	pad@p+1
  6939     1120                     l1194:	
  6940                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 207:  }
  6941                           
  6942                           
  6943                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  6944     1120  01BA               	clrf	pad@i
  6945     1121  01BB               	clrf	pad@i+1
  6946                           
  6947                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6948     1122  2934               	goto	l4746
  6949     1123                     l4742:
  6950                           
  6951                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  6952     1123  3020               	movlw	32
  6953     1124  0020               	movlb	0	; select bank0
  6954     1125  00A3               	movwf	fputc@c
  6955     1126  3000               	movlw	0
  6956     1127  00A4               	movwf	fputc@c+1
  6957     1128  0835               	movf	pad@fp+1,w
  6958     1129  00A6               	movwf	fputc@fp+1
  6959     112A  0834               	movf	pad@fp,w
  6960     112B  00A5               	movwf	fputc@fp
  6961     112C  3192  228A  3191   	fcall	_fputc
  6962     112F                     l4744:
  6963                           
  6964                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 211:         ++i;
  6965     112F  3001               	movlw	1
  6966     1130  0020               	movlb	0	; select bank0
  6967     1131  07BA               	addwf	pad@i,f
  6968     1132  3000               	movlw	0
  6969     1133  3DBB               	addwfc	pad@i+1,f
  6970     1134                     l4746:
  6971                           
  6972                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6973     1134  083B               	movf	pad@i+1,w
  6974     1135  3A80               	xorlw	128
  6975     1136  00B9               	movwf	??_pad
  6976     1137  0838               	movf	pad@p+1,w
  6977     1138  3A80               	xorlw	128
  6978     1139  0239               	subwf	??_pad,w
  6979     113A  1D03               	skipz
  6980     113B  293E               	goto	u6305
  6981     113C  0837               	movf	pad@p,w
  6982     113D  023A               	subwf	pad@i,w
  6983     113E                     u6305:
  6984     113E  1C03               	skipc
  6985     113F  2941               	goto	u6301
  6986     1140  2942               	goto	u6300
  6987     1141                     u6301:
  6988     1141  2923               	goto	l4742
  6989     1142                     u6300:
  6990     1142                     l4748:
  6991                           
  6992                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  6993     1142  0020               	movlb	0	; select bank0
  6994     1143  0836               	movf	pad@buf,w
  6995     1144  00AC               	movwf	fputs@s
  6996     1145  0835               	movf	pad@fp+1,w
  6997     1146  00AE               	movwf	fputs@fp+1
  6998     1147  0834               	movf	pad@fp,w
  6999     1148  00AD               	movwf	fputs@fp
  7000     1149  3190  209E  3191   	fcall	_fputs
  7001     114C                     l1198:
  7002     114C  0008               	return
  7003     114D                     __end_of_pad:
  7004                           
  7005                           	psect	text9
  7006     109E                     __ptext9:	
  7007 ;; *************** function _fputs *****************
  7008 ;; Defined at:
  7009 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputs.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  s               1   12[BANK0 ] PTR const unsigned char 
  7012 ;;		 -> dbuf(80), 
  7013 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  7014 ;;		 -> NULL(0), 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  i               2   18[BANK0 ] int 
  7017 ;;  c               1   17[BANK0 ] unsigned char 
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  2   12[BANK0 ] int 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7027 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7030 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;Total ram usage:        8 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 7
  7034 ;; This function calls:
  7035 ;;		_fputc
  7036 ;; This function is called by:
  7037 ;;		_pad
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041     109E                     _fputs:	
  7042                           ;psect for function _fputs
  7043                           
  7044     109E                     l4526:	
  7045                           ;incstack = 0
  7046                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7047                           
  7048     109E  0020               	movlb	0	; select bank0
  7049     109F  01B2               	clrf	fputs@i
  7050     10A0  01B3               	clrf	fputs@i+1
  7051     10A1  28B5               	goto	l4532
  7052     10A2                     l4528:
  7053     10A2  0831               	movf	fputs@c,w
  7054     10A3  00AF               	movwf	??_fputs
  7055     10A4  01B0               	clrf	??_fputs+1
  7056     10A5  082F               	movf	??_fputs,w
  7057     10A6  00A3               	movwf	fputc@c
  7058     10A7  0830               	movf	??_fputs+1,w
  7059     10A8  00A4               	movwf	fputc@c+1
  7060     10A9  082E               	movf	fputs@fp+1,w
  7061     10AA  00A6               	movwf	fputc@fp+1
  7062     10AB  082D               	movf	fputs@fp,w
  7063     10AC  00A5               	movwf	fputc@fp
  7064     10AD  3192  228A  3190   	fcall	_fputc
  7065     10B0                     l4530:
  7066     10B0  3001               	movlw	1
  7067     10B1  0020               	movlb	0	; select bank0
  7068     10B2  07B2               	addwf	fputs@i,f
  7069     10B3  3000               	movlw	0
  7070     10B4  3DB3               	addwfc	fputs@i+1,f
  7071     10B5                     l4532:
  7072     10B5  082C               	movf	fputs@s,w
  7073     10B6  0732               	addwf	fputs@i,w
  7074     10B7  0086               	movwf	6
  7075     10B8  3002               	movlw	2	; select bank4/5
  7076     10B9  0087               	movwf	7
  7077     10BA  0801               	movf	1,w
  7078     10BB  00B1               	movwf	fputs@c
  7079     10BC  0831               	movf	fputs@c,w
  7080     10BD  1D03               	btfss	3,2
  7081     10BE  28C0               	goto	u5861
  7082     10BF  28C1               	goto	u5860
  7083     10C0                     u5861:
  7084     10C0  28A2               	goto	l4528
  7085     10C1                     u5860:
  7086     10C1                     l1342:
  7087     10C1  0008               	return
  7088     10C2                     __end_of_fputs:
  7089                           
  7090                           	psect	text10
  7091     128A                     __ptext10:	
  7092 ;; *************** function _fputc *****************
  7093 ;; Defined at:
  7094 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  c               2    3[BANK0 ] int 
  7097 ;;  fp              2    5[BANK0 ] PTR struct _IO_FILE
  7098 ;;		 -> NULL(0), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2    3[BANK0 ] int 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;Total ram usage:        9 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 6
  7117 ;; This function calls:
  7118 ;;		_putch
  7119 ;; This function is called by:
  7120 ;;		_pad
  7121 ;;		_vfpfcnvrt
  7122 ;;		_fputs
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126     128A                     _fputc:	
  7127                           ;psect for function _fputc
  7128                           
  7129     128A                     l4496:	
  7130                           ;incstack = 0
  7131                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7132                           
  7133     128A  0020               	movlb	0	; select bank0
  7134     128B  0825               	movf	fputc@fp,w
  7135     128C  0426               	iorwf	fputc@fp+1,w
  7136     128D  1903               	btfsc	3,2
  7137     128E  2A90               	goto	u5791
  7138     128F  2A91               	goto	u5790
  7139     1290                     u5791:
  7140     1290  2A97               	goto	l4500
  7141     1291                     u5790:
  7142     1291                     l4498:
  7143     1291  0825               	movf	fputc@fp,w
  7144     1292  0426               	iorwf	fputc@fp+1,w
  7145     1293  1D03               	btfss	3,2
  7146     1294  2A96               	goto	u5801
  7147     1295  2A97               	goto	u5800
  7148     1296                     u5801:
  7149     1296  2A9C               	goto	l4502
  7150     1297                     u5800:
  7151     1297                     l4500:
  7152     1297  0823               	movf	fputc@c,w
  7153     1298  319E  26AC  3192   	fcall	_putch
  7154     129B  2AE7               	goto	l1334
  7155     129C                     l4502:
  7156     129C  0825               	movf	fputc@fp,w
  7157     129D  0086               	movwf	6
  7158     129E  0826               	movf	fputc@fp+1,w
  7159     129F  0087               	movwf	7
  7160     12A0  3149               	addfsr 1,9
  7161     12A1  0016               	moviw fsr1++
  7162     12A2  0401               	iorwf	1,w
  7163     12A3  1903               	btfsc	3,2
  7164     12A4  2AA6               	goto	u5811
  7165     12A5  2AA7               	goto	u5810
  7166     12A6                     u5811:
  7167     12A6  2AC7               	goto	l4506
  7168     12A7                     u5810:
  7169     12A7                     l4504:
  7170     12A7  0825               	movf	fputc@fp,w
  7171     12A8  0086               	movwf	6
  7172     12A9  0826               	movf	fputc@fp+1,w
  7173     12AA  0087               	movwf	7
  7174     12AB  3149               	addfsr 1,9
  7175     12AC  3F40               	moviw [0]fsr1
  7176     12AD  00A7               	movwf	??_fputc
  7177     12AE  3F41               	moviw [1]fsr1
  7178     12AF  00A8               	movwf	??_fputc+1
  7179     12B0  0825               	movf	fputc@fp,w
  7180     12B1  0086               	movwf	6
  7181     12B2  0826               	movf	fputc@fp+1,w
  7182     12B3  0087               	movwf	7
  7183     12B4  3142               	addfsr 1,2
  7184     12B5  3F40               	moviw [0]fsr1
  7185     12B6  00A9               	movwf	??_fputc+2
  7186     12B7  3F41               	moviw [1]fsr1
  7187     12B8  00AA               	movwf	??_fputc+3
  7188     12B9  082A               	movf	??_fputc+3,w
  7189     12BA  3A80               	xorlw	128
  7190     12BB  00AB               	movwf	??_fputc+4
  7191     12BC  0828               	movf	??_fputc+1,w
  7192     12BD  3A80               	xorlw	128
  7193     12BE  022B               	subwf	??_fputc+4,w
  7194     12BF  1D03               	skipz
  7195     12C0  2AC3               	goto	u5825
  7196     12C1  0827               	movf	??_fputc,w
  7197     12C2  0229               	subwf	??_fputc+2,w
  7198     12C3                     u5825:
  7199     12C3  1803               	skipnc
  7200     12C4  2AC6               	goto	u5821
  7201     12C5  2AC7               	goto	u5820
  7202     12C6                     u5821:
  7203     12C6  2AE7               	goto	l1334
  7204     12C7                     u5820:
  7205     12C7                     l4506:
  7206     12C7  0020               	movlb	0	; select bank0
  7207     12C8  0825               	movf	fputc@fp,w
  7208     12C9  0086               	movwf	6
  7209     12CA  0826               	movf	fputc@fp+1,w
  7210     12CB  0087               	movwf	7
  7211     12CC  3142               	addfsr 1,2
  7212     12CD  0825               	movf	fputc@fp,w
  7213     12CE  0084               	movwf	4
  7214     12CF  0826               	movf	fputc@fp+1,w
  7215     12D0  0085               	movwf	5
  7216     12D1  3F00               	moviw [0]fsr0
  7217     12D2  00A7               	movwf	??_fputc
  7218     12D3  3F01               	moviw [1]fsr0
  7219     12D4  00A8               	movwf	??_fputc+1
  7220     12D5  3F40               	moviw [0]fsr1
  7221     12D6  0727               	addwf	??_fputc,w
  7222     12D7  0084               	movwf	4
  7223     12D8  3F41               	moviw [1]fsr1
  7224     12D9  3D28               	addwfc	??_fputc+1,w
  7225     12DA  0085               	movwf	5
  7226     12DB  0823               	movf	fputc@c,w
  7227     12DC  0080               	movwf	0
  7228     12DD                     l4508:
  7229     12DD  0825               	movf	fputc@fp,w
  7230     12DE  0086               	movwf	6
  7231     12DF  0826               	movf	fputc@fp+1,w
  7232     12E0  0087               	movwf	7
  7233     12E1  3142               	addfsr 1,2
  7234     12E2  3001               	movlw	1
  7235     12E3  0781               	addwf	1,f
  7236     12E4  3141               	addfsr 1,1
  7237     12E5  1803               	skipnc
  7238     12E6  0A81               	incf	1,f
  7239     12E7                     l1334:
  7240     12E7  0008               	return
  7241     12E8                     __end_of_fputc:
  7242                           
  7243                           	psect	text11
  7244     1EAC                     __ptext11:	
  7245 ;; *************** function _putch *****************
  7246 ;; Defined at:
  7247 ;;		line 401 in file "mcc_generated_files/uart/src/eusart.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  txData          1    wreg     unsigned char 
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;  txData          1    2[BANK0 ] unsigned char 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  1    wreg      void 
  7254 ;; Registers used:
  7255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;Total ram usage:        1 bytes
  7266 ;; Hardware stack levels used: 1
  7267 ;; Hardware stack levels required when called: 5
  7268 ;; This function calls:
  7269 ;;		_EUSART_IsTxReady
  7270 ;;		_EUSART_Write
  7271 ;; This function is called by:
  7272 ;;		_fputc
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276     1EAC                     _putch:	
  7277                           ;psect for function _putch
  7278                           
  7279                           
  7280                           ;incstack = 0
  7281                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7282                           ;putch@txData stored from wreg
  7283     1EAC  0020               	movlb	0	; select bank0
  7284     1EAD  00A2               	movwf	putch@txData
  7285     1EAE                     l4488:
  7286     1EAE                     l4490:	
  7287                           ;mcc_generated_files/uart/src/eusart.c: 401: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 402: {;mcc_generated_files/uart/src/eusart.c: 403:     while(!(EUSAR
      +                          T_IsTxReady()))
  7288                           
  7289                           
  7290                           ;mcc_generated_files/uart/src/eusart.c: 403:     while(!(EUSART_IsTxReady()))
  7291     1EAE  319E  2617  319E   	fcall	_EUSART_IsTxReady
  7292     1EB1  3A00               	xorlw	0
  7293     1EB2  1903               	skipnz
  7294     1EB3  2EB5               	goto	u5781
  7295     1EB4  2EB6               	goto	u5780
  7296     1EB5                     u5781:
  7297     1EB5  2EAE               	goto	l4490
  7298     1EB6                     u5780:
  7299     1EB6                     l4492:
  7300                           
  7301                           ;mcc_generated_files/uart/src/eusart.c: 407:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
  7302     1EB6  0020               	movlb	0	; select bank0
  7303     1EB7  0822               	movf	putch@txData,w
  7304     1EB8  00A0               	movwf	EUSART_Write@txData
  7305     1EB9  3190  20C2  319E   	fcall	_EUSART_Write
  7306     1EBC                     l458:
  7307     1EBC  0008               	return
  7308     1EBD                     __end_of_putch:
  7309                           
  7310                           	psect	text12
  7311     10C2                     __ptext12:	
  7312 ;; *************** function _EUSART_Write *****************
  7313 ;; Defined at:
  7314 ;;		line 345 in file "mcc_generated_files/uart/src/eusart.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  txData          1    0[BANK0 ] unsigned char 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  tempTxHead      1    1[BANK0 ] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7328 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;Total ram usage:        2 bytes
  7333 ;; Hardware stack levels used: 1
  7334 ;; Hardware stack levels required when called: 4
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_putch
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342     10C2                     _EUSART_Write:	
  7343                           ;psect for function _EUSART_Write
  7344                           
  7345                           
  7346                           ;Skip over the trampoline to the duplicate function for level 1
  7347     10C2  1C7E               	btfss	int$flags,0
  7348     10C3  28C6               	goto	_EUSART_Write$intlevel0
  7349     10C4  319F  2FDF         	ljmp	i1_EUSART_Write
  7350     10C6                     _EUSART_Write$intlevel0:
  7351     10C6                     l4472:	
  7352                           ;incstack = 0
  7353                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7354                           
  7355                           
  7356                           ;mcc_generated_files/uart/src/eusart.c: 345: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 346: {;mcc_generated_files/uart/src/eusart.c: 347:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 349:     if(0 == PIE1bits.TXIE)
  7357     10C6  0021               	movlb	1	; select bank1
  7358     10C7  1A11               	btfsc	17,4	;volatile
  7359     10C8  28CA               	goto	u5761
  7360     10C9  28CB               	goto	u5760
  7361     10CA                     u5761:
  7362     10CA  28D0               	goto	l4476
  7363     10CB                     u5760:
  7364     10CB                     l4474:
  7365                           
  7366                           ;mcc_generated_files/uart/src/eusart.c: 350:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 351:         TX1REG = txData;
  7367     10CB  0020               	movlb	0	; select bank0
  7368     10CC  0820               	movf	EUSART_Write@txData,w
  7369     10CD  0023               	movlb	3	; select bank3
  7370     10CE  009A               	movwf	26	;volatile
  7371                           
  7372                           ;mcc_generated_files/uart/src/eusart.c: 352:     }
  7373     10CF  28E7               	goto	l437
  7374     10D0                     l4476:
  7375     10D0  0873               	movf	_eusartTxBufferRemaining,w	;volatile
  7376     10D1  1903               	btfsc	3,2
  7377     10D2  28D4               	goto	u5771
  7378     10D3  28D5               	goto	u5770
  7379     10D4                     u5771:
  7380     10D4  28E7               	goto	l437
  7381     10D5                     u5770:
  7382     10D5                     l4478:
  7383                           
  7384                           ;mcc_generated_files/uart/src/eusart.c: 354:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 355:        eusartTxBuffer[eusartTxHead] = txData;
  7385     10D5  0875               	movf	_eusartTxHead,w
  7386     10D6  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  7387     10D7  0086               	movwf	6
  7388     10D8  3001               	movlw	1	; select bank2/3
  7389     10D9  0087               	movwf	7
  7390     10DA  0020               	movlb	0	; select bank0
  7391     10DB  0820               	movf	EUSART_Write@txData,w
  7392     10DC  0081               	movwf	1
  7393     10DD                     l4480:
  7394                           
  7395                           ;mcc_generated_files/uart/src/eusart.c: 356:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
  7396     10DD  0875               	movf	_eusartTxHead,w	;volatile
  7397     10DE  3E01               	addlw	1
  7398     10DF  3907               	andlw	7
  7399     10E0  00A1               	movwf	EUSART_Write@tempTxHead
  7400     10E1                     l4482:
  7401                           
  7402                           ;mcc_generated_files/uart/src/eusart.c: 358:        eusartTxHead = tempTxHead;
  7403     10E1  0821               	movf	EUSART_Write@tempTxHead,w
  7404     10E2  00F5               	movwf	_eusartTxHead	;volatile
  7405     10E3                     l4484:
  7406                           
  7407                           ;mcc_generated_files/uart/src/eusart.c: 359:        PIE1bits.TXIE = 0;
  7408     10E3  0021               	movlb	1	; select bank1
  7409     10E4  1211               	bcf	17,4	;volatile
  7410     10E5                     l4486:
  7411                           
  7412                           ;mcc_generated_files/uart/src/eusart.c: 360:        eusartTxBufferRemaining--;
  7413     10E5  3001               	movlw	1
  7414     10E6  02F3               	subwf	_eusartTxBufferRemaining,f	;volatile
  7415     10E7                     l437:	
  7416                           ;mcc_generated_files/uart/src/eusart.c: 361:     }
  7417                           
  7418                           
  7419                           ;mcc_generated_files/uart/src/eusart.c: 366:     PIE1bits.TXIE = 1;
  7420     10E7  0021               	movlb	1	; select bank1
  7421     10E8  1611               	bsf	17,4	;volatile
  7422     10E9                     l440:
  7423     10E9  0008               	return
  7424     10EA                     __end_of_EUSART_Write:
  7425                           
  7426                           	psect	text13
  7427     1E17                     __ptext13:	
  7428 ;; *************** function _EUSART_IsTxReady *****************
  7429 ;; Defined at:
  7430 ;;		line 261 in file "mcc_generated_files/uart/src/eusart.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;		None
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;		None
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  1    wreg      _Bool 
  7437 ;; Registers used:
  7438 ;;		wreg, status,2, status,0
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;Total ram usage:        0 bytes
  7449 ;; Hardware stack levels used: 1
  7450 ;; Hardware stack levels required when called: 4
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_putch
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458     1E17                     _EUSART_IsTxReady:	
  7459                           ;psect for function _EUSART_IsTxReady
  7460                           
  7461     1E17                     l4468:	
  7462                           ;incstack = 0
  7463                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
  7464                           
  7465                           
  7466                           ;mcc_generated_files/uart/src/eusart.c: 263:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
  7467     1E17  0873               	movf	_eusartTxBufferRemaining,w	;volatile
  7468     1E18  1D03               	btfss	3,2
  7469     1E19  2E1B               	goto	u5741
  7470     1E1A  2E1D               	goto	u5740
  7471     1E1B                     u5741:
  7472     1E1B  3001               	movlw	1
  7473     1E1C  2E1E               	goto	u5750
  7474     1E1D                     u5740:
  7475     1E1D  3000               	movlw	0
  7476     1E1E                     u5750:
  7477     1E1E                     l413:
  7478     1E1E  0008               	return
  7479     1E1F                     __end_of_EUSART_IsTxReady:
  7480                           
  7481                           	psect	text14
  7482     1057                     __ptext14:	
  7483 ;; *************** function _memcpy *****************
  7484 ;; Defined at:
  7485 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/memcpy.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  d1              1    0[BANK0 ] PTR void 
  7488 ;;		 -> dbuf(80), 
  7489 ;;  s1              1    1[BANK0 ] PTR const void 
  7490 ;;		 -> dbuf(80), 
  7491 ;;  n               2    2[BANK0 ] unsigned int 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  7494 ;;		 -> dbuf(80), 
  7495 ;;  d               1    5[BANK0 ] PTR unsigned char 
  7496 ;;		 -> dbuf(80), 
  7497 ;;  tmp             1    4[BANK0 ] unsigned char 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    0[BANK0 ] PTR void 
  7500 ;; Registers used:
  7501 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;Total ram usage:        7 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; Hardware stack levels required when called: 4
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_efgtoa
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521     1057                     _memcpy:	
  7522                           ;psect for function _memcpy
  7523                           
  7524     1057                     l4762:	
  7525                           ;incstack = 0
  7526                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7527                           
  7528     1057  0020               	movlb	0	; select bank0
  7529     1058  0821               	movf	memcpy@s1,w
  7530     1059  00A6               	movwf	memcpy@s
  7531     105A  0820               	movf	memcpy@d1,w
  7532     105B  00A5               	movwf	memcpy@d
  7533     105C  286D               	goto	l1319
  7534     105D                     l4764:
  7535     105D  0826               	movf	memcpy@s,w
  7536     105E  0086               	movwf	6
  7537     105F  3002               	movlw	2	; select bank4/5
  7538     1060  0087               	movwf	7
  7539     1061  0801               	movf	1,w
  7540     1062  00A4               	movwf	memcpy@tmp
  7541     1063                     l4766:
  7542     1063  3001               	movlw	1
  7543     1064  07A6               	addwf	memcpy@s,f
  7544     1065                     l4768:
  7545     1065  0825               	movf	memcpy@d,w
  7546     1066  0086               	movwf	6
  7547     1067  3002               	movlw	2	; select bank4/5
  7548     1068  0087               	movwf	7
  7549     1069  0824               	movf	memcpy@tmp,w
  7550     106A  0081               	movwf	1
  7551     106B  3001               	movlw	1
  7552     106C  07A5               	addwf	memcpy@d,f
  7553     106D                     l1319:
  7554     106D  3001               	movlw	1
  7555     106E  02A2               	subwf	memcpy@n,f
  7556     106F  3000               	movlw	0
  7557     1070  3BA3               	subwfb	memcpy@n+1,f
  7558     1071  0A22               	incf	memcpy@n,w
  7559     1072  1D03               	skipz
  7560     1073  2878               	goto	u6331
  7561     1074  0A23               	incf	memcpy@n+1,w
  7562     1075  1D03               	btfss	3,2
  7563     1076  2878               	goto	u6331
  7564     1077  2879               	goto	u6330
  7565     1078                     u6331:
  7566     1078  285D               	goto	l4764
  7567     1079                     u6330:
  7568     1079                     l1322:
  7569     1079  0008               	return
  7570     107A                     __end_of_memcpy:
  7571                           
  7572                           	psect	text15
  7573     07EA                     __ptext15:	
  7574 ;; *************** function _labs *****************
  7575 ;; Defined at:
  7576 ;;		line 1 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/labs.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  a               4    0[BANK0 ] long 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  4    0[BANK0 ] long 
  7583 ;; Registers used:
  7584 ;;		wreg, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;Total ram usage:        4 bytes
  7595 ;; Hardware stack levels used: 1
  7596 ;; Hardware stack levels required when called: 4
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_efgtoa
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604     07EA                     _labs:	
  7605                           ;psect for function _labs
  7606                           
  7607     07EA                     l4754:	
  7608                           ;incstack = 0
  7609                           ; Regs used in _labs: [wreg+status,2+status,0]
  7610                           
  7611     07EA  0020               	movlb	0	; select bank0
  7612     07EB  1BA3               	btfsc	labs@a+3,7
  7613     07EC  2FEE               	goto	u6321
  7614     07ED  2FEF               	goto	u6320
  7615     07EE                     u6321:
  7616     07EE  2FF0               	goto	l4758
  7617     07EF                     u6320:
  7618     07EF                     l4756:
  7619     07EF  2FFF               	goto	l1316
  7620     07F0                     l4758:
  7621     07F0  0920               	comf	labs@a,w
  7622     07F1  00A0               	movwf	?_labs
  7623     07F2  0921               	comf	labs@a+1,w
  7624     07F3  00A1               	movwf	?_labs+1
  7625     07F4  0922               	comf	labs@a+2,w
  7626     07F5  00A2               	movwf	?_labs+2
  7627     07F6  0923               	comf	labs@a+3,w
  7628     07F7  00A3               	movwf	?_labs+3
  7629     07F8  0AA0               	incf	?_labs,f
  7630     07F9  1903               	skipnz
  7631     07FA  0AA1               	incf	?_labs+1,f
  7632     07FB  1903               	skipnz
  7633     07FC  0AA2               	incf	?_labs+2,f
  7634     07FD  1903               	skipnz
  7635     07FE  0AA3               	incf	?_labs+3,f
  7636     07FF                     l1316:
  7637     07FF  0008               	return
  7638     0800                     __end_of_labs:
  7639                           
  7640                           	psect	text16
  7641     1461                     __ptext16:	
  7642 ;; *************** function _floorf *****************
  7643 ;; Defined at:
  7644 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/floorf.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  x               4   26[BANK0 ] float 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  u               4   42[BANK0 ] struct .
  7649 ;;  m               4   36[BANK0 ] unsigned long 
  7650 ;;  e               2   40[BANK0 ] int 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  4   26[BANK0 ] float 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;Total ram usage:       20 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; Hardware stack levels required when called: 4
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_efgtoa
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674     1461                     _floorf:	
  7675                           ;psect for function _floorf
  7676                           
  7677     1461                     l3630:	
  7678                           ;incstack = 0
  7679                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7680                           
  7681     1461  0022               	movlb	2	; select bank2
  7682     1462  083B               	movf	(floorf@F521+3)^(0+256),w
  7683     1463  0020               	movlb	0	; select bank0
  7684     1464  00CD               	movwf	floorf@u+3
  7685     1465  0022               	movlb	2	; select bank2
  7686     1466  083A               	movf	(floorf@F521+2)^(0+256),w
  7687     1467  0020               	movlb	0	; select bank0
  7688     1468  00CC               	movwf	floorf@u+2
  7689     1469  0022               	movlb	2	; select bank2
  7690     146A  0839               	movf	(floorf@F521+1)^(0+256),w
  7691     146B  0020               	movlb	0	; select bank0
  7692     146C  00CB               	movwf	floorf@u+1
  7693     146D  0022               	movlb	2	; select bank2
  7694     146E  0838               	movf	floorf@F521^(0+256),w
  7695     146F  0020               	movlb	0	; select bank0
  7696     1470  00CA               	movwf	floorf@u
  7697     1471  083D               	movf	floorf@x+3,w
  7698     1472  00CD               	movwf	floorf@u+3
  7699     1473  083C               	movf	floorf@x+2,w
  7700     1474  00CC               	movwf	floorf@u+2
  7701     1475  083B               	movf	floorf@x+1,w
  7702     1476  00CB               	movwf	floorf@u+1
  7703     1477  083A               	movf	floorf@x,w
  7704     1478  00CA               	movwf	floorf@u
  7705     1479                     l3632:
  7706     1479  084A               	movf	floorf@u,w
  7707     147A  00BE               	movwf	??_floorf
  7708     147B  084B               	movf	floorf@u+1,w
  7709     147C  00BF               	movwf	??_floorf+1
  7710     147D  084C               	movf	floorf@u+2,w
  7711     147E  00C0               	movwf	??_floorf+2
  7712     147F  084D               	movf	floorf@u+3,w
  7713     1480  00C1               	movwf	??_floorf+3
  7714     1481  3017               	movlw	23
  7715     1482                     u4395:
  7716     1482  36C1               	lsrf	??_floorf+3,f
  7717     1483  0CC0               	rrf	??_floorf+2,f
  7718     1484  0CBF               	rrf	??_floorf+1,f
  7719     1485  0CBE               	rrf	??_floorf,f
  7720     1486                     u4390:
  7721     1486  0B89               	decfsz	9,f
  7722     1487  2C82               	goto	u4395
  7723     1488  30FF               	movlw	255
  7724     1489  053E               	andwf	??_floorf,w
  7725     148A  00C2               	movwf	??_floorf+4
  7726     148B  3000               	movlw	0
  7727     148C  053F               	andwf	??_floorf+1,w
  7728     148D  00C3               	movwf	??_floorf+5
  7729     148E  0842               	movf	??_floorf+4,w
  7730     148F  3E81               	addlw	129
  7731     1490  00C8               	movwf	floorf@e
  7732     1491  30FF               	movlw	255
  7733     1492  3D43               	addwfc	??_floorf+5,w
  7734     1493  00C9               	movwf	floorf@e+1
  7735     1494                     l3634:
  7736     1494  0849               	movf	floorf@e+1,w
  7737     1495  3A80               	xorlw	128
  7738     1496  00BE               	movwf	??_floorf
  7739     1497  3080               	movlw	128
  7740     1498  023E               	subwf	??_floorf,w
  7741     1499  1D03               	skipz
  7742     149A  2C9D               	goto	u4405
  7743     149B  3017               	movlw	23
  7744     149C  0248               	subwf	floorf@e,w
  7745     149D                     u4405:
  7746     149D  1C03               	skipc
  7747     149E  2CA0               	goto	u4401
  7748     149F  2CA1               	goto	u4400
  7749     14A0                     u4401:
  7750     14A0  2CA2               	goto	l1301
  7751     14A1                     u4400:
  7752     14A1                     l3636:
  7753     14A1  2D4B               	goto	l1302
  7754     14A2                     l1301:
  7755     14A2  0020               	movlb	0	; select bank0
  7756     14A3  1BC9               	btfsc	floorf@e+1,7
  7757     14A4  2CA6               	goto	u4411
  7758     14A5  2CA7               	goto	u4410
  7759     14A6                     u4411:
  7760     14A6  2D04               	goto	l3650
  7761     14A7                     u4410:
  7762     14A7                     l3638:
  7763     14A7  30FF               	movlw	255
  7764     14A8  00BE               	movwf	??_floorf
  7765     14A9  30FF               	movlw	255
  7766     14AA  00BF               	movwf	??_floorf+1
  7767     14AB  307F               	movlw	127
  7768     14AC  00C0               	movwf	??_floorf+2
  7769     14AD  3000               	movlw	0
  7770     14AE  00C1               	movwf	??_floorf+3
  7771     14AF  0A48               	incf	floorf@e,w
  7772     14B0  2CB5               	goto	u4420
  7773     14B1                     u4425:
  7774     14B1  37C1               	asrf	??_floorf+3,f
  7775     14B2  0CC0               	rrf	??_floorf+2,f
  7776     14B3  0CBF               	rrf	??_floorf+1,f
  7777     14B4  0CBE               	rrf	??_floorf,f
  7778     14B5                     u4420:
  7779     14B5  0B89               	decfsz	9,f
  7780     14B6  2CB1               	goto	u4425
  7781     14B7  0841               	movf	??_floorf+3,w
  7782     14B8  00C7               	movwf	floorf@m+3
  7783     14B9  0840               	movf	??_floorf+2,w
  7784     14BA  00C6               	movwf	floorf@m+2
  7785     14BB  083F               	movf	??_floorf+1,w
  7786     14BC  00C5               	movwf	floorf@m+1
  7787     14BD  083E               	movf	??_floorf,w
  7788     14BE  00C4               	movwf	floorf@m
  7789     14BF                     l3640:
  7790     14BF  084A               	movf	floorf@u,w
  7791     14C0  0544               	andwf	floorf@m,w
  7792     14C1  00BE               	movwf	??_floorf
  7793     14C2  084B               	movf	floorf@u+1,w
  7794     14C3  0545               	andwf	floorf@m+1,w
  7795     14C4  00BF               	movwf	??_floorf+1
  7796     14C5  084C               	movf	floorf@u+2,w
  7797     14C6  0546               	andwf	floorf@m+2,w
  7798     14C7  00C0               	movwf	??_floorf+2
  7799     14C8  084D               	movf	floorf@u+3,w
  7800     14C9  0547               	andwf	floorf@m+3,w
  7801     14CA  00C1               	movwf	??_floorf+3
  7802     14CB  0841               	movf	??_floorf+3,w
  7803     14CC  0440               	iorwf	??_floorf+2,w
  7804     14CD  043F               	iorwf	??_floorf+1,w
  7805     14CE  043E               	iorwf	??_floorf,w
  7806     14CF  1D03               	skipz
  7807     14D0  2CD2               	goto	u4431
  7808     14D1  2CD3               	goto	u4430
  7809     14D2                     u4431:
  7810     14D2  2CD4               	goto	l3644
  7811     14D3                     u4430:
  7812     14D3  2CA1               	goto	l3636
  7813     14D4                     l3644:
  7814     14D4  084A               	movf	floorf@u,w
  7815     14D5  00BE               	movwf	??_floorf
  7816     14D6  084B               	movf	floorf@u+1,w
  7817     14D7  00BF               	movwf	??_floorf+1
  7818     14D8  084C               	movf	floorf@u+2,w
  7819     14D9  00C0               	movwf	??_floorf+2
  7820     14DA  084D               	movf	floorf@u+3,w
  7821     14DB  00C1               	movwf	??_floorf+3
  7822     14DC  301F               	movlw	31
  7823     14DD                     u4445:
  7824     14DD  36C1               	lsrf	??_floorf+3,f
  7825     14DE  0CC0               	rrf	??_floorf+2,f
  7826     14DF  0CBF               	rrf	??_floorf+1,f
  7827     14E0  0CBE               	rrf	??_floorf,f
  7828     14E1                     u4440:
  7829     14E1  0B89               	decfsz	9,f
  7830     14E2  2CDD               	goto	u4445
  7831     14E3  0841               	movf	??_floorf+3,w
  7832     14E4  0440               	iorwf	??_floorf+2,w
  7833     14E5  043F               	iorwf	??_floorf+1,w
  7834     14E6  043E               	iorwf	??_floorf,w
  7835     14E7  1903               	skipnz
  7836     14E8  2CEA               	goto	u4451
  7837     14E9  2CEB               	goto	u4450
  7838     14EA                     u4451:
  7839     14EA  2CF3               	goto	l3648
  7840     14EB                     u4450:
  7841     14EB                     l3646:
  7842     14EB  0844               	movf	floorf@m,w
  7843     14EC  07CA               	addwf	floorf@u,f
  7844     14ED  0845               	movf	floorf@m+1,w
  7845     14EE  3DCB               	addwfc	floorf@u+1,f
  7846     14EF  0846               	movf	floorf@m+2,w
  7847     14F0  3DCC               	addwfc	floorf@u+2,f
  7848     14F1  0847               	movf	floorf@m+3,w
  7849     14F2  3DCD               	addwfc	floorf@u+3,f
  7850     14F3                     l3648:
  7851     14F3  0944               	comf	floorf@m,w
  7852     14F4  00BE               	movwf	??_floorf
  7853     14F5  0945               	comf	floorf@m+1,w
  7854     14F6  00BF               	movwf	??_floorf+1
  7855     14F7  0946               	comf	floorf@m+2,w
  7856     14F8  00C0               	movwf	??_floorf+2
  7857     14F9  0947               	comf	floorf@m+3,w
  7858     14FA  00C1               	movwf	??_floorf+3
  7859     14FB  083E               	movf	??_floorf,w
  7860     14FC  05CA               	andwf	floorf@u,f
  7861     14FD  083F               	movf	??_floorf+1,w
  7862     14FE  05CB               	andwf	floorf@u+1,f
  7863     14FF  0840               	movf	??_floorf+2,w
  7864     1500  05CC               	andwf	floorf@u+2,f
  7865     1501  0841               	movf	??_floorf+3,w
  7866     1502  05CD               	andwf	floorf@u+3,f
  7867     1503  2D43               	goto	l1306
  7868     1504                     l3650:
  7869     1504  084A               	movf	floorf@u,w
  7870     1505  00BE               	movwf	??_floorf
  7871     1506  084B               	movf	floorf@u+1,w
  7872     1507  00BF               	movwf	??_floorf+1
  7873     1508  084C               	movf	floorf@u+2,w
  7874     1509  00C0               	movwf	??_floorf+2
  7875     150A  084D               	movf	floorf@u+3,w
  7876     150B  00C1               	movwf	??_floorf+3
  7877     150C  301F               	movlw	31
  7878     150D                     u4465:
  7879     150D  36C1               	lsrf	??_floorf+3,f
  7880     150E  0CC0               	rrf	??_floorf+2,f
  7881     150F  0CBF               	rrf	??_floorf+1,f
  7882     1510  0CBE               	rrf	??_floorf,f
  7883     1511                     u4460:
  7884     1511  0B89               	decfsz	9,f
  7885     1512  2D0D               	goto	u4465
  7886     1513  0841               	movf	??_floorf+3,w
  7887     1514  0440               	iorwf	??_floorf+2,w
  7888     1515  043F               	iorwf	??_floorf+1,w
  7889     1516  043E               	iorwf	??_floorf,w
  7890     1517  1D03               	skipz
  7891     1518  2D1A               	goto	u4471
  7892     1519  2D1B               	goto	u4470
  7893     151A                     u4471:
  7894     151A  2D24               	goto	l3654
  7895     151B                     u4470:
  7896     151B                     l3652:
  7897     151B  3000               	movlw	0
  7898     151C  00CD               	movwf	floorf@u+3
  7899     151D  3000               	movlw	0
  7900     151E  00CC               	movwf	floorf@u+2
  7901     151F  3000               	movlw	0
  7902     1520  00CB               	movwf	floorf@u+1
  7903     1521  3000               	movlw	0
  7904     1522  00CA               	movwf	floorf@u
  7905     1523  2D43               	goto	l1306
  7906     1524                     l3654:
  7907     1524  084A               	movf	floorf@u,w
  7908     1525  00BE               	movwf	??_floorf
  7909     1526  084B               	movf	floorf@u+1,w
  7910     1527  00BF               	movwf	??_floorf+1
  7911     1528  084C               	movf	floorf@u+2,w
  7912     1529  00C0               	movwf	??_floorf+2
  7913     152A  084D               	movf	floorf@u+3,w
  7914     152B  00C1               	movwf	??_floorf+3
  7915     152C  3001               	movlw	1
  7916     152D                     u4485:
  7917     152D  35BE               	lslf	??_floorf,f
  7918     152E  0DBF               	rlf	??_floorf+1,f
  7919     152F  0DC0               	rlf	??_floorf+2,f
  7920     1530  0DC1               	rlf	??_floorf+3,f
  7921     1531                     u4480:
  7922     1531  0B89               	decfsz	9,f
  7923     1532  2D2D               	goto	u4485
  7924     1533  0841               	movf	??_floorf+3,w
  7925     1534  0440               	iorwf	??_floorf+2,w
  7926     1535  043F               	iorwf	??_floorf+1,w
  7927     1536  043E               	iorwf	??_floorf,w
  7928     1537  1903               	skipnz
  7929     1538  2D3A               	goto	u4491
  7930     1539  2D3B               	goto	u4490
  7931     153A                     u4491:
  7932     153A  2D43               	goto	l1306
  7933     153B                     u4490:
  7934     153B                     l3656:
  7935     153B  30BF               	movlw	191
  7936     153C  00CD               	movwf	floorf@u+3
  7937     153D  3080               	movlw	128
  7938     153E  00CC               	movwf	floorf@u+2
  7939     153F  3000               	movlw	0
  7940     1540  00CB               	movwf	floorf@u+1
  7941     1541  3000               	movlw	0
  7942     1542  00CA               	movwf	floorf@u
  7943     1543                     l1306:
  7944     1543  084D               	movf	floorf@u+3,w
  7945     1544  00BD               	movwf	?_floorf+3
  7946     1545  084C               	movf	floorf@u+2,w
  7947     1546  00BC               	movwf	?_floorf+2
  7948     1547  084B               	movf	floorf@u+1,w
  7949     1548  00BB               	movwf	?_floorf+1
  7950     1549  084A               	movf	floorf@u,w
  7951     154A  00BA               	movwf	?_floorf
  7952     154B                     l1302:
  7953     154B  0008               	return
  7954     154C                     __end_of_floorf:
  7955                           
  7956                           	psect	text17
  7957     1357                     __ptext17:	
  7958 ;; *************** function ___fpclassifyf *****************
  7959 ;; Defined at:
  7960 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/__fpclassifyf.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  x               4    0[BANK0 ] float 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  u               4   12[BANK0 ] struct .
  7965 ;;  e               2   10[BANK0 ] int 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  2    0[BANK0 ] int 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;Total ram usage:       16 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; Hardware stack levels required when called: 4
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_efgtoa
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989     1357                     ___fpclassifyf:	
  7990                           ;psect for function ___fpclassifyf
  7991                           
  7992     1357                     l3594:	
  7993                           ;incstack = 0
  7994                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7995                           
  7996     1357  0022               	movlb	2	; select bank2
  7997     1358  083F               	movf	(___fpclassifyf@F465+3)^(0+256),w
  7998     1359  0020               	movlb	0	; select bank0
  7999     135A  00AF               	movwf	___fpclassifyf@u+3
  8000     135B  0022               	movlb	2	; select bank2
  8001     135C  083E               	movf	(___fpclassifyf@F465+2)^(0+256),w
  8002     135D  0020               	movlb	0	; select bank0
  8003     135E  00AE               	movwf	___fpclassifyf@u+2
  8004     135F  0022               	movlb	2	; select bank2
  8005     1360  083D               	movf	(___fpclassifyf@F465+1)^(0+256),w
  8006     1361  0020               	movlb	0	; select bank0
  8007     1362  00AD               	movwf	___fpclassifyf@u+1
  8008     1363  0022               	movlb	2	; select bank2
  8009     1364  083C               	movf	___fpclassifyf@F465^(0+256),w
  8010     1365  0020               	movlb	0	; select bank0
  8011     1366  00AC               	movwf	___fpclassifyf@u
  8012     1367  0823               	movf	___fpclassifyf@x+3,w
  8013     1368  00AF               	movwf	___fpclassifyf@u+3
  8014     1369  0822               	movf	___fpclassifyf@x+2,w
  8015     136A  00AE               	movwf	___fpclassifyf@u+2
  8016     136B  0821               	movf	___fpclassifyf@x+1,w
  8017     136C  00AD               	movwf	___fpclassifyf@u+1
  8018     136D  0820               	movf	___fpclassifyf@x,w
  8019     136E  00AC               	movwf	___fpclassifyf@u
  8020     136F                     l3596:
  8021     136F  082C               	movf	___fpclassifyf@u,w
  8022     1370  00A4               	movwf	??___fpclassifyf
  8023     1371  082D               	movf	___fpclassifyf@u+1,w
  8024     1372  00A5               	movwf	??___fpclassifyf+1
  8025     1373  082E               	movf	___fpclassifyf@u+2,w
  8026     1374  00A6               	movwf	??___fpclassifyf+2
  8027     1375  082F               	movf	___fpclassifyf@u+3,w
  8028     1376  00A7               	movwf	??___fpclassifyf+3
  8029     1377  3017               	movlw	23
  8030     1378                     u4295:
  8031     1378  36A7               	lsrf	??___fpclassifyf+3,f
  8032     1379  0CA6               	rrf	??___fpclassifyf+2,f
  8033     137A  0CA5               	rrf	??___fpclassifyf+1,f
  8034     137B  0CA4               	rrf	??___fpclassifyf,f
  8035     137C                     u4290:
  8036     137C  0B89               	decfsz	9,f
  8037     137D  2B78               	goto	u4295
  8038     137E  30FF               	movlw	255
  8039     137F  0524               	andwf	??___fpclassifyf,w
  8040     1380  00AA               	movwf	___fpclassifyf@e
  8041     1381  3000               	movlw	0
  8042     1382  0525               	andwf	??___fpclassifyf+1,w
  8043     1383  00AB               	movwf	___fpclassifyf@e+1
  8044     1384                     l3598:
  8045     1384  082A               	movf	___fpclassifyf@e,w
  8046     1385  042B               	iorwf	___fpclassifyf@e+1,w
  8047     1386  1D03               	btfss	3,2
  8048     1387  2B89               	goto	u4301
  8049     1388  2B8A               	goto	u4300
  8050     1389                     u4301:
  8051     1389  2BAB               	goto	l3608
  8052     138A                     u4300:
  8053     138A                     l3600:
  8054     138A  082C               	movf	___fpclassifyf@u,w
  8055     138B  00A4               	movwf	??___fpclassifyf
  8056     138C  082D               	movf	___fpclassifyf@u+1,w
  8057     138D  00A5               	movwf	??___fpclassifyf+1
  8058     138E  082E               	movf	___fpclassifyf@u+2,w
  8059     138F  00A6               	movwf	??___fpclassifyf+2
  8060     1390  082F               	movf	___fpclassifyf@u+3,w
  8061     1391  00A7               	movwf	??___fpclassifyf+3
  8062     1392  3001               	movlw	1
  8063     1393                     u4315:
  8064     1393  35A4               	lslf	??___fpclassifyf,f
  8065     1394  0DA5               	rlf	??___fpclassifyf+1,f
  8066     1395  0DA6               	rlf	??___fpclassifyf+2,f
  8067     1396  0DA7               	rlf	??___fpclassifyf+3,f
  8068     1397                     u4310:
  8069     1397  0B89               	decfsz	9,f
  8070     1398  2B93               	goto	u4315
  8071     1399  0827               	movf	??___fpclassifyf+3,w
  8072     139A  0426               	iorwf	??___fpclassifyf+2,w
  8073     139B  0425               	iorwf	??___fpclassifyf+1,w
  8074     139C  0424               	iorwf	??___fpclassifyf,w
  8075     139D  1D03               	skipz
  8076     139E  2BA0               	goto	u4321
  8077     139F  2BA1               	goto	u4320
  8078     13A0                     u4321:
  8079     13A0  2BA6               	goto	l3604
  8080     13A1                     u4320:
  8081     13A1                     l3602:
  8082     13A1  3002               	movlw	2
  8083     13A2  00A0               	movwf	?___fpclassifyf
  8084     13A3  3000               	movlw	0
  8085     13A4  00A1               	movwf	?___fpclassifyf+1
  8086     13A5  2BD5               	goto	l1295
  8087     13A6                     l3604:
  8088     13A6  3003               	movlw	3
  8089     13A7  00A0               	movwf	?___fpclassifyf
  8090     13A8  3000               	movlw	0
  8091     13A9  00A1               	movwf	?___fpclassifyf+1
  8092     13AA  2BD5               	goto	l1295
  8093     13AB                     l3608:
  8094     13AB  0A2A               	incf	___fpclassifyf@e,w
  8095     13AC  042B               	iorwf	___fpclassifyf@e+1,w
  8096     13AD  1D03               	btfss	3,2
  8097     13AE  2BB0               	goto	u4331
  8098     13AF  2BB1               	goto	u4330
  8099     13B0                     u4331:
  8100     13B0  2BD1               	goto	l3614
  8101     13B1                     u4330:
  8102     13B1                     l3610:
  8103     13B1  082C               	movf	___fpclassifyf@u,w
  8104     13B2  00A4               	movwf	??___fpclassifyf
  8105     13B3  082D               	movf	___fpclassifyf@u+1,w
  8106     13B4  00A5               	movwf	??___fpclassifyf+1
  8107     13B5  082E               	movf	___fpclassifyf@u+2,w
  8108     13B6  00A6               	movwf	??___fpclassifyf+2
  8109     13B7  082F               	movf	___fpclassifyf@u+3,w
  8110     13B8  00A7               	movwf	??___fpclassifyf+3
  8111     13B9  3009               	movlw	9
  8112     13BA                     u4345:
  8113     13BA  35A4               	lslf	??___fpclassifyf,f
  8114     13BB  0DA5               	rlf	??___fpclassifyf+1,f
  8115     13BC  0DA6               	rlf	??___fpclassifyf+2,f
  8116     13BD  0DA7               	rlf	??___fpclassifyf+3,f
  8117     13BE                     u4340:
  8118     13BE  0B89               	decfsz	9,f
  8119     13BF  2BBA               	goto	u4345
  8120     13C0  0827               	movf	??___fpclassifyf+3,w
  8121     13C1  0426               	iorwf	??___fpclassifyf+2,w
  8122     13C2  0425               	iorwf	??___fpclassifyf+1,w
  8123     13C3  0424               	iorwf	??___fpclassifyf,w
  8124     13C4  1903               	skipnz
  8125     13C5  2BC7               	goto	u4351
  8126     13C6  2BC9               	goto	u4350
  8127     13C7                     u4351:
  8128     13C7  3001               	movlw	1
  8129     13C8  2BCA               	goto	u4360
  8130     13C9                     u4350:
  8131     13C9  3000               	movlw	0
  8132     13CA                     u4360:
  8133     13CA  00A8               	movwf	??___fpclassifyf+4
  8134     13CB  01A9               	clrf	??___fpclassifyf+5
  8135     13CC  0828               	movf	??___fpclassifyf+4,w
  8136     13CD  00A0               	movwf	?___fpclassifyf
  8137     13CE  0829               	movf	??___fpclassifyf+5,w
  8138     13CF  00A1               	movwf	?___fpclassifyf+1
  8139     13D0  2BD5               	goto	l1295
  8140     13D1                     l3614:
  8141     13D1  3004               	movlw	4
  8142     13D2  00A0               	movwf	?___fpclassifyf
  8143     13D3  3000               	movlw	0
  8144     13D4  00A1               	movwf	?___fpclassifyf+1
  8145     13D5                     l1295:
  8146     13D5  0008               	return
  8147     13D6                     __end_of___fpclassifyf:
  8148                           
  8149                           	psect	text18
  8150     12E8                     __ptext18:	
  8151 ;; *************** function ___fltol *****************
  8152 ;; Defined at:
  8153 ;;		line 43 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  f1              4    0[BANK0 ] int 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  exp1            1    9[BANK0 ] unsigned char 
  8158 ;;  sign1           1    8[BANK0 ] unsigned char 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  4    0[BANK0 ] long 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8168 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8172 ;;Total ram usage:       10 bytes
  8173 ;; Hardware stack levels used: 1
  8174 ;; Hardware stack levels required when called: 4
  8175 ;; This function calls:
  8176 ;;		Nothing
  8177 ;; This function is called by:
  8178 ;;		_efgtoa
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182     12E8                     ___fltol:	
  8183                           ;psect for function ___fltol
  8184                           
  8185     12E8                     l4556:	
  8186                           ;incstack = 0
  8187                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8188                           
  8189     12E8  1003               	clrc
  8190     12E9  0020               	movlb	0	; select bank0
  8191     12EA  0D22               	rlf	___fltol@f1+2,w
  8192     12EB  0D23               	rlf	___fltol@f1+3,w
  8193     12EC  00A9               	movwf	___fltol@exp1
  8194     12ED  0829               	movf	___fltol@exp1,w
  8195     12EE  1D03               	btfss	3,2
  8196     12EF  2AF1               	goto	u5921
  8197     12F0  2AF2               	goto	u5920
  8198     12F1                     u5921:
  8199     12F1  2AFB               	goto	l4562
  8200     12F2                     u5920:
  8201     12F2                     l4558:
  8202     12F2  3000               	movlw	0
  8203     12F3  00A3               	movwf	?___fltol+3
  8204     12F4  3000               	movlw	0
  8205     12F5  00A2               	movwf	?___fltol+2
  8206     12F6  3000               	movlw	0
  8207     12F7  00A1               	movwf	?___fltol+1
  8208     12F8  3000               	movlw	0
  8209     12F9  00A0               	movwf	?___fltol
  8210     12FA  2B56               	goto	l898
  8211     12FB                     l4562:
  8212     12FB  0820               	movf	___fltol@f1,w
  8213     12FC  00A4               	movwf	??___fltol
  8214     12FD  0821               	movf	___fltol@f1+1,w
  8215     12FE  00A5               	movwf	??___fltol+1
  8216     12FF  0822               	movf	___fltol@f1+2,w
  8217     1300  00A6               	movwf	??___fltol+2
  8218     1301  0823               	movf	___fltol@f1+3,w
  8219     1302  00A7               	movwf	??___fltol+3
  8220     1303  301F               	movlw	31
  8221     1304                     u5935:
  8222     1304  36A7               	lsrf	??___fltol+3,f
  8223     1305  0CA6               	rrf	??___fltol+2,f
  8224     1306  0CA5               	rrf	??___fltol+1,f
  8225     1307  0CA4               	rrf	??___fltol,f
  8226     1308                     u5930:
  8227     1308  0B89               	decfsz	9,f
  8228     1309  2B04               	goto	u5935
  8229     130A  0824               	movf	??___fltol,w
  8230     130B  00A8               	movwf	___fltol@sign1
  8231     130C                     l4564:
  8232     130C  17A2               	bsf	___fltol@f1+2,7
  8233     130D                     l4566:
  8234     130D  30FF               	movlw	255
  8235     130E  05A0               	andwf	___fltol@f1,f
  8236     130F  30FF               	movlw	255
  8237     1310  05A1               	andwf	___fltol@f1+1,f
  8238     1311  30FF               	movlw	255
  8239     1312  05A2               	andwf	___fltol@f1+2,f
  8240     1313  3000               	movlw	0
  8241     1314  05A3               	andwf	___fltol@f1+3,f
  8242     1315                     l4568:
  8243     1315  3096               	movlw	150
  8244     1316  02A9               	subwf	___fltol@exp1,f
  8245     1317                     l4570:
  8246     1317  1FA9               	btfss	___fltol@exp1,7
  8247     1318  2B1A               	goto	u5941
  8248     1319  2B1B               	goto	u5940
  8249     131A                     u5941:
  8250     131A  2B31               	goto	l4580
  8251     131B                     u5940:
  8252     131B                     l4572:
  8253     131B  0829               	movf	___fltol@exp1,w
  8254     131C  3A80               	xorlw	128
  8255     131D  3E97               	addlw	151
  8256     131E  1803               	skipnc
  8257     131F  2B21               	goto	u5951
  8258     1320  2B22               	goto	u5950
  8259     1321                     u5951:
  8260     1321  2B23               	goto	l4578
  8261     1322                     u5950:
  8262     1322  2AF2               	goto	l4558
  8263     1323                     l4578:
  8264     1323  3001               	movlw	1
  8265     1324                     u5965:
  8266     1324  36A3               	lsrf	___fltol@f1+3,f
  8267     1325  0CA2               	rrf	___fltol@f1+2,f
  8268     1326  0CA1               	rrf	___fltol@f1+1,f
  8269     1327  0CA0               	rrf	___fltol@f1,f
  8270     1328  0B89               	decfsz	9,f
  8271     1329  2B24               	goto	u5965
  8272     132A  3001               	movlw	1
  8273     132B  07A9               	addwf	___fltol@exp1,f
  8274     132C  1D03               	btfss	3,2
  8275     132D  2B2F               	goto	u5971
  8276     132E  2B30               	goto	u5970
  8277     132F                     u5971:
  8278     132F  2B23               	goto	l4578
  8279     1330                     u5970:
  8280     1330  2B46               	goto	l4588
  8281     1331                     l4580:
  8282     1331  3020               	movlw	32
  8283     1332  0229               	subwf	___fltol@exp1,w
  8284     1333  1C03               	skipc
  8285     1334  2B36               	goto	u5981
  8286     1335  2B37               	goto	u5980
  8287     1336                     u5981:
  8288     1336  2B41               	goto	l905
  8289     1337                     u5980:
  8290     1337  2AF2               	goto	l4558
  8291     1338                     l4586:
  8292     1338  3001               	movlw	1
  8293     1339                     u5995:
  8294     1339  35A0               	lslf	___fltol@f1,f
  8295     133A  0DA1               	rlf	___fltol@f1+1,f
  8296     133B  0DA2               	rlf	___fltol@f1+2,f
  8297     133C  0DA3               	rlf	___fltol@f1+3,f
  8298     133D  0B89               	decfsz	9,f
  8299     133E  2B39               	goto	u5995
  8300     133F  3001               	movlw	1
  8301     1340  02A9               	subwf	___fltol@exp1,f
  8302     1341                     l905:
  8303     1341  0829               	movf	___fltol@exp1,w
  8304     1342  1D03               	btfss	3,2
  8305     1343  2B45               	goto	u6001
  8306     1344  2B46               	goto	u6000
  8307     1345                     u6001:
  8308     1345  2B38               	goto	l4586
  8309     1346                     u6000:
  8310     1346                     l4588:
  8311     1346  0828               	movf	___fltol@sign1,w
  8312     1347  1903               	btfsc	3,2
  8313     1348  2B4A               	goto	u6011
  8314     1349  2B4B               	goto	u6010
  8315     134A                     u6011:
  8316     134A  2B56               	goto	l908
  8317     134B                     u6010:
  8318     134B                     l4590:
  8319     134B  09A0               	comf	___fltol@f1,f
  8320     134C  09A1               	comf	___fltol@f1+1,f
  8321     134D  09A2               	comf	___fltol@f1+2,f
  8322     134E  09A3               	comf	___fltol@f1+3,f
  8323     134F  0AA0               	incf	___fltol@f1,f
  8324     1350  1903               	skipnz
  8325     1351  0AA1               	incf	___fltol@f1+1,f
  8326     1352  1903               	skipnz
  8327     1353  0AA2               	incf	___fltol@f1+2,f
  8328     1354  1903               	skipnz
  8329     1355  0AA3               	incf	___fltol@f1+3,f
  8330     1356                     l908:
  8331     1356                     l898:
  8332     1356  0008               	return
  8333     1357                     __end_of___fltol:
  8334                           
  8335                           	psect	text19
  8336     1F9F                     __ptext19:	
  8337 ;; *************** function ___flsub *****************
  8338 ;; Defined at:
  8339 ;;		line 242 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  a               4   60[BANK0 ] long 
  8342 ;;  b               4   64[BANK0 ] long 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;		None
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  4   60[BANK0 ] long 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0, pclath, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8354 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;Total ram usage:        8 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; Hardware stack levels required when called: 5
  8361 ;; This function calls:
  8362 ;;		___fladd
  8363 ;; This function is called by:
  8364 ;;		_efgtoa
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368     1F9F                     ___flsub:	
  8369                           ;psect for function ___flsub
  8370                           
  8371     1F9F                     l4592:	
  8372                           ;incstack = 0
  8373                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8374                           
  8375     1F9F  3080               	movlw	128
  8376     1FA0  0020               	movlb	0	; select bank0
  8377     1FA1  06DF               	xorwf	___flsub@a+3,f
  8378     1FA2                     l4594:
  8379     1FA2  0863               	movf	___flsub@b+3,w
  8380     1FA3  00CB               	movwf	___fladd@b+3
  8381     1FA4  0862               	movf	___flsub@b+2,w
  8382     1FA5  00CA               	movwf	___fladd@b+2
  8383     1FA6  0861               	movf	___flsub@b+1,w
  8384     1FA7  00C9               	movwf	___fladd@b+1
  8385     1FA8  0860               	movf	___flsub@b,w
  8386     1FA9  00C8               	movwf	___fladd@b
  8387     1FAA  085F               	movf	___flsub@a+3,w
  8388     1FAB  00CF               	movwf	___fladd@a+3
  8389     1FAC  085E               	movf	___flsub@a+2,w
  8390     1FAD  00CE               	movwf	___fladd@a+2
  8391     1FAE  085D               	movf	___flsub@a+1,w
  8392     1FAF  00CD               	movwf	___fladd@a+1
  8393     1FB0  085C               	movf	___flsub@a,w
  8394     1FB1  00CC               	movwf	___fladd@a
  8395     1FB2  318B  23B9  319F   	fcall	___fladd
  8396     1FB5  0020               	movlb	0	; select bank0
  8397     1FB6  084B               	movf	?___fladd+3,w
  8398     1FB7  00DF               	movwf	?___flsub+3
  8399     1FB8  084A               	movf	?___fladd+2,w
  8400     1FB9  00DE               	movwf	?___flsub+2
  8401     1FBA  0849               	movf	?___fladd+1,w
  8402     1FBB  00DD               	movwf	?___flsub+1
  8403     1FBC  0848               	movf	?___fladd,w
  8404     1FBD  00DC               	movwf	?___flsub
  8405     1FBE                     l1051:
  8406     1FBE  0008               	return
  8407     1FBF                     __end_of___flsub:
  8408                           
  8409                           	psect	text20
  8410     0BB9                     __ptext20:	
  8411 ;; *************** function ___fladd *****************
  8412 ;; Defined at:
  8413 ;;		line 10 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  b               4   40[BANK0 ] long 
  8416 ;;  a               4   44[BANK0 ] long 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  grs             1   59[BANK0 ] unsigned char 
  8419 ;;  bexp            1   58[BANK0 ] unsigned char 
  8420 ;;  aexp            1   57[BANK0 ] unsigned char 
  8421 ;;  signs           1   56[BANK0 ] unsigned char 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  4   40[BANK0 ] unsigned char 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8431 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;Total ram usage:       20 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 4
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_main
  8442 ;;		___flsub
  8443 ;;		_efgtoa
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447     0BB9                     ___fladd:	
  8448                           ;psect for function ___fladd
  8449                           
  8450     0BB9                     l2988:	
  8451                           ;incstack = 0
  8452                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8453                           
  8454     0BB9  0020               	movlb	0	; select bank0
  8455     0BBA  084B               	movf	___fladd@b+3,w
  8456     0BBB  3980               	andlw	128
  8457     0BBC  00D8               	movwf	___fladd@signs
  8458     0BBD                     l2990:
  8459     0BBD  354B               	lslf	___fladd@b+3,w
  8460     0BBE  00DA               	movwf	___fladd@bexp
  8461     0BBF                     l2992:
  8462     0BBF  1FCA               	btfss	___fladd@b+2,7
  8463     0BC0  2BC2               	goto	u2971
  8464     0BC1  2BC3               	goto	u2970
  8465     0BC2                     u2971:
  8466     0BC2  2BC4               	goto	l2996
  8467     0BC3                     u2970:
  8468     0BC3                     l2994:
  8469     0BC3  145A               	bsf	___fladd@bexp,0
  8470     0BC4                     l2996:
  8471     0BC4  085A               	movf	___fladd@bexp,w
  8472     0BC5  1903               	btfsc	3,2
  8473     0BC6  2BC8               	goto	u2981
  8474     0BC7  2BC9               	goto	u2980
  8475     0BC8                     u2981:
  8476     0BC8  2BD9               	goto	l3006
  8477     0BC9                     u2980:
  8478     0BC9                     l2998:
  8479     0BC9  0A5A               	incf	___fladd@bexp,w
  8480     0BCA  1D03               	btfss	3,2
  8481     0BCB  2BCD               	goto	u2991
  8482     0BCC  2BCE               	goto	u2990
  8483     0BCD                     u2991:
  8484     0BCD  2BD6               	goto	l3002
  8485     0BCE                     u2990:
  8486     0BCE                     l3000:
  8487     0BCE  3000               	movlw	0
  8488     0BCF  00CB               	movwf	___fladd@b+3
  8489     0BD0  3000               	movlw	0
  8490     0BD1  00CA               	movwf	___fladd@b+2
  8491     0BD2  3000               	movlw	0
  8492     0BD3  00C9               	movwf	___fladd@b+1
  8493     0BD4  3000               	movlw	0
  8494     0BD5  00C8               	movwf	___fladd@b
  8495     0BD6                     l3002:
  8496     0BD6  17CA               	bsf	___fladd@b+2,7
  8497     0BD7                     l3004:
  8498     0BD7  01CB               	clrf	___fladd@b+3
  8499     0BD8  2BE1               	goto	l3008
  8500     0BD9                     l3006:
  8501     0BD9  3000               	movlw	0
  8502     0BDA  00CB               	movwf	___fladd@b+3
  8503     0BDB  3000               	movlw	0
  8504     0BDC  00CA               	movwf	___fladd@b+2
  8505     0BDD  3000               	movlw	0
  8506     0BDE  00C9               	movwf	___fladd@b+1
  8507     0BDF  3000               	movlw	0
  8508     0BE0  00C8               	movwf	___fladd@b
  8509     0BE1                     l3008:
  8510     0BE1  084F               	movf	___fladd@a+3,w
  8511     0BE2  3980               	andlw	128
  8512     0BE3  00D9               	movwf	___fladd@aexp
  8513     0BE4                     l3010:
  8514     0BE4  0859               	movf	___fladd@aexp,w
  8515     0BE5  0658               	xorwf	___fladd@signs,w
  8516     0BE6  1903               	skipnz
  8517     0BE7  2BE9               	goto	u3001
  8518     0BE8  2BEA               	goto	u3000
  8519     0BE9                     u3001:
  8520     0BE9  2BEB               	goto	l3014
  8521     0BEA                     u3000:
  8522     0BEA                     l3012:
  8523     0BEA  1758               	bsf	___fladd@signs,6
  8524     0BEB                     l3014:
  8525     0BEB  354F               	lslf	___fladd@a+3,w
  8526     0BEC  00D9               	movwf	___fladd@aexp
  8527     0BED                     l3016:
  8528     0BED  1FCE               	btfss	___fladd@a+2,7
  8529     0BEE  2BF0               	goto	u3011
  8530     0BEF  2BF1               	goto	u3010
  8531     0BF0                     u3011:
  8532     0BF0  2BF2               	goto	l3020
  8533     0BF1                     u3010:
  8534     0BF1                     l3018:
  8535     0BF1  1459               	bsf	___fladd@aexp,0
  8536     0BF2                     l3020:
  8537     0BF2  0859               	movf	___fladd@aexp,w
  8538     0BF3  1903               	btfsc	3,2
  8539     0BF4  2BF6               	goto	u3021
  8540     0BF5  2BF7               	goto	u3020
  8541     0BF6                     u3021:
  8542     0BF6  2C07               	goto	l3030
  8543     0BF7                     u3020:
  8544     0BF7                     l3022:
  8545     0BF7  0A59               	incf	___fladd@aexp,w
  8546     0BF8  1D03               	btfss	3,2
  8547     0BF9  2BFB               	goto	u3031
  8548     0BFA  2BFC               	goto	u3030
  8549     0BFB                     u3031:
  8550     0BFB  2C04               	goto	l3026
  8551     0BFC                     u3030:
  8552     0BFC                     l3024:
  8553     0BFC  3000               	movlw	0
  8554     0BFD  00CF               	movwf	___fladd@a+3
  8555     0BFE  3000               	movlw	0
  8556     0BFF  00CE               	movwf	___fladd@a+2
  8557     0C00  3000               	movlw	0
  8558     0C01  00CD               	movwf	___fladd@a+1
  8559     0C02  3000               	movlw	0
  8560     0C03  00CC               	movwf	___fladd@a
  8561     0C04                     l3026:
  8562     0C04  17CE               	bsf	___fladd@a+2,7
  8563     0C05                     l3028:
  8564     0C05  01CF               	clrf	___fladd@a+3
  8565     0C06  2C0F               	goto	l1005
  8566     0C07                     l3030:
  8567     0C07  3000               	movlw	0
  8568     0C08  00CF               	movwf	___fladd@a+3
  8569     0C09  3000               	movlw	0
  8570     0C0A  00CE               	movwf	___fladd@a+2
  8571     0C0B  3000               	movlw	0
  8572     0C0C  00CD               	movwf	___fladd@a+1
  8573     0C0D  3000               	movlw	0
  8574     0C0E  00CC               	movwf	___fladd@a
  8575     0C0F                     l1005:
  8576     0C0F  085A               	movf	___fladd@bexp,w
  8577     0C10  0259               	subwf	___fladd@aexp,w
  8578     0C11  1803               	skipnc
  8579     0C12  2C14               	goto	u3041
  8580     0C13  2C15               	goto	u3040
  8581     0C14                     u3041:
  8582     0C14  2C39               	goto	l3066
  8583     0C15                     u3040:
  8584     0C15                     l3032:
  8585     0C15  1F58               	btfss	___fladd@signs,6
  8586     0C16  2C18               	goto	u3051
  8587     0C17  2C19               	goto	u3050
  8588     0C18                     u3051:
  8589     0C18  2C1B               	goto	l3036
  8590     0C19                     u3050:
  8591     0C19                     l3034:
  8592     0C19  3080               	movlw	128
  8593     0C1A  06D8               	xorwf	___fladd@signs,f
  8594     0C1B                     l3036:
  8595     0C1B  085A               	movf	___fladd@bexp,w
  8596     0C1C  00DB               	movwf	___fladd@grs
  8597     0C1D                     l3038:
  8598     0C1D  0859               	movf	___fladd@aexp,w
  8599     0C1E  00DA               	movwf	___fladd@bexp
  8600     0C1F                     l3040:
  8601     0C1F  085B               	movf	___fladd@grs,w
  8602     0C20  00D9               	movwf	___fladd@aexp
  8603     0C21                     l3042:
  8604     0C21  0848               	movf	___fladd@b,w
  8605     0C22  00DB               	movwf	___fladd@grs
  8606     0C23                     l3044:
  8607     0C23  084C               	movf	___fladd@a,w
  8608     0C24  00C8               	movwf	___fladd@b
  8609     0C25                     l3046:
  8610     0C25  085B               	movf	___fladd@grs,w
  8611     0C26  00CC               	movwf	___fladd@a
  8612     0C27                     l3048:
  8613     0C27  0849               	movf	___fladd@b+1,w
  8614     0C28  00DB               	movwf	___fladd@grs
  8615     0C29                     l3050:
  8616     0C29  084D               	movf	___fladd@a+1,w
  8617     0C2A  00C9               	movwf	___fladd@b+1
  8618     0C2B                     l3052:
  8619     0C2B  085B               	movf	___fladd@grs,w
  8620     0C2C  00CD               	movwf	___fladd@a+1
  8621     0C2D                     l3054:
  8622     0C2D  084A               	movf	___fladd@b+2,w
  8623     0C2E  00DB               	movwf	___fladd@grs
  8624     0C2F                     l3056:
  8625     0C2F  084E               	movf	___fladd@a+2,w
  8626     0C30  00CA               	movwf	___fladd@b+2
  8627     0C31                     l3058:
  8628     0C31  085B               	movf	___fladd@grs,w
  8629     0C32  00CE               	movwf	___fladd@a+2
  8630     0C33                     l3060:
  8631     0C33  084B               	movf	___fladd@b+3,w
  8632     0C34  00DB               	movwf	___fladd@grs
  8633     0C35                     l3062:
  8634     0C35  084F               	movf	___fladd@a+3,w
  8635     0C36  00CB               	movwf	___fladd@b+3
  8636     0C37                     l3064:
  8637     0C37  085B               	movf	___fladd@grs,w
  8638     0C38  00CF               	movwf	___fladd@a+3
  8639     0C39                     l3066:
  8640     0C39  01DB               	clrf	___fladd@grs
  8641     0C3A                     l3068:
  8642     0C3A  0859               	movf	___fladd@aexp,w
  8643     0C3B  00D0               	movwf	??___fladd
  8644     0C3C  01D1               	clrf	??___fladd+1
  8645     0C3D  0851               	movf	??___fladd+1,w
  8646     0C3E  00D3               	movwf	??___fladd+3
  8647     0C3F  085A               	movf	___fladd@bexp,w
  8648     0C40  0250               	subwf	??___fladd,w
  8649     0C41  00D2               	movwf	??___fladd+2
  8650     0C42  1C03               	skipc
  8651     0C43  03D3               	decf	??___fladd+3,f
  8652     0C44  0853               	movf	??___fladd+3,w
  8653     0C45  3A80               	xorlw	128
  8654     0C46  00D4               	movwf	??___fladd+4
  8655     0C47  3080               	movlw	128
  8656     0C48  0254               	subwf	??___fladd+4,w
  8657     0C49  1D03               	skipz
  8658     0C4A  2C4D               	goto	u3065
  8659     0C4B  301A               	movlw	26
  8660     0C4C  0252               	subwf	??___fladd+2,w
  8661     0C4D                     u3065:
  8662     0C4D  1C03               	skipc
  8663     0C4E  2C50               	goto	u3061
  8664     0C4F  2C51               	goto	u3060
  8665     0C50                     u3061:
  8666     0C50  2C87               	goto	l3084
  8667     0C51                     u3060:
  8668     0C51                     l3070:
  8669     0C51  0020               	movlb	0	; select bank0
  8670     0C52  084B               	movf	___fladd@b+3,w
  8671     0C53  044A               	iorwf	___fladd@b+2,w
  8672     0C54  0449               	iorwf	___fladd@b+1,w
  8673     0C55  0448               	iorwf	___fladd@b,w
  8674     0C56  1D03               	skipz
  8675     0C57  2C59               	goto	u3071
  8676     0C58  2C5B               	goto	u3070
  8677     0C59                     u3071:
  8678     0C59  3001               	movlw	1
  8679     0C5A  2C5C               	goto	u3080
  8680     0C5B                     u3070:
  8681     0C5B  3000               	movlw	0
  8682     0C5C                     u3080:
  8683     0C5C  00DB               	movwf	___fladd@grs
  8684     0C5D  3000               	movlw	0
  8685     0C5E  00CB               	movwf	___fladd@b+3
  8686     0C5F  3000               	movlw	0
  8687     0C60  00CA               	movwf	___fladd@b+2
  8688     0C61  3000               	movlw	0
  8689     0C62  00C9               	movwf	___fladd@b+1
  8690     0C63  3000               	movlw	0
  8691     0C64  00C8               	movwf	___fladd@b
  8692     0C65  0859               	movf	___fladd@aexp,w
  8693     0C66  00DA               	movwf	___fladd@bexp
  8694     0C67  2C8E               	goto	l1009
  8695     0C68                     l1011:
  8696     0C68  1C5B               	btfss	___fladd@grs,0
  8697     0C69  2C6B               	goto	u3091
  8698     0C6A  2C6C               	goto	u3090
  8699     0C6B                     u3091:
  8700     0C6B  2C76               	goto	l3074
  8701     0C6C                     u3090:
  8702     0C6C                     l3072:
  8703     0C6C  085B               	movf	___fladd@grs,w
  8704     0C6D  00D0               	movwf	??___fladd
  8705     0C6E  3001               	movlw	1
  8706     0C6F                     u3105:
  8707     0C6F  36D0               	lsrf	??___fladd,f
  8708     0C70  0B89               	decfsz	9,f
  8709     0C71  2C6F               	goto	u3105
  8710     0C72  0850               	movf	??___fladd,w
  8711     0C73  3801               	iorlw	1
  8712     0C74  00DB               	movwf	___fladd@grs
  8713     0C75  2C78               	goto	l3076
  8714     0C76                     l3074:
  8715     0C76  1003               	clrc
  8716     0C77  0CDB               	rrf	___fladd@grs,f
  8717     0C78                     l3076:
  8718     0C78  1C48               	btfss	___fladd@b,0
  8719     0C79  2C7B               	goto	u3111
  8720     0C7A  2C7C               	goto	u3110
  8721     0C7B                     u3111:
  8722     0C7B  2C7D               	goto	l3080
  8723     0C7C                     u3110:
  8724     0C7C                     l3078:
  8725     0C7C  17DB               	bsf	___fladd@grs,7
  8726     0C7D                     l3080:
  8727     0C7D  3001               	movlw	1
  8728     0C7E  00D0               	movwf	??___fladd
  8729     0C7F                     u3125:
  8730     0C7F  37CB               	asrf	___fladd@b+3,f
  8731     0C80  0CCA               	rrf	___fladd@b+2,f
  8732     0C81  0CC9               	rrf	___fladd@b+1,f
  8733     0C82  0CC8               	rrf	___fladd@b,f
  8734     0C83  0BD0               	decfsz	??___fladd& (0+127),f
  8735     0C84  2C7F               	goto	u3125
  8736     0C85                     l3082:
  8737     0C85  3001               	movlw	1
  8738     0C86  07DA               	addwf	___fladd@bexp,f
  8739     0C87                     l3084:
  8740     0C87  0020               	movlb	0	; select bank0
  8741     0C88  0859               	movf	___fladd@aexp,w
  8742     0C89  025A               	subwf	___fladd@bexp,w
  8743     0C8A  1C03               	skipc
  8744     0C8B  2C8D               	goto	u3131
  8745     0C8C  2C8E               	goto	u3130
  8746     0C8D                     u3131:
  8747     0C8D  2C68               	goto	l1011
  8748     0C8E                     u3130:
  8749     0C8E                     l1009:
  8750     0C8E  1B58               	btfsc	___fladd@signs,6
  8751     0C8F  2C91               	goto	u3141
  8752     0C90  2C92               	goto	u3140
  8753     0C91                     u3141:
  8754     0C91  2CCC               	goto	l3110
  8755     0C92                     u3140:
  8756     0C92                     l3086:
  8757     0C92  085A               	movf	___fladd@bexp,w
  8758     0C93  1D03               	btfss	3,2
  8759     0C94  2C96               	goto	u3151
  8760     0C95  2C97               	goto	u3150
  8761     0C96                     u3151:
  8762     0C96  2CA0               	goto	l3092
  8763     0C97                     u3150:
  8764     0C97                     l3088:
  8765     0C97  3000               	movlw	0
  8766     0C98  00CB               	movwf	?___fladd+3
  8767     0C99  3000               	movlw	0
  8768     0C9A  00CA               	movwf	?___fladd+2
  8769     0C9B  3000               	movlw	0
  8770     0C9C  00C9               	movwf	?___fladd+1
  8771     0C9D  3000               	movlw	0
  8772     0C9E  00C8               	movwf	?___fladd
  8773     0C9F  2DC4               	goto	l1018
  8774     0CA0                     l3092:
  8775     0CA0  084C               	movf	___fladd@a,w
  8776     0CA1  07C8               	addwf	___fladd@b,f
  8777     0CA2  084D               	movf	___fladd@a+1,w
  8778     0CA3  3DC9               	addwfc	___fladd@b+1,f
  8779     0CA4  084E               	movf	___fladd@a+2,w
  8780     0CA5  3DCA               	addwfc	___fladd@b+2,f
  8781     0CA6  084F               	movf	___fladd@a+3,w
  8782     0CA7  3DCB               	addwfc	___fladd@b+3,f
  8783     0CA8                     l3094:
  8784     0CA8  1C4B               	btfss	___fladd@b+3,0
  8785     0CA9  2CAB               	goto	u3161
  8786     0CAA  2CAC               	goto	u3160
  8787     0CAB                     u3161:
  8788     0CAB  2D56               	goto	l3146
  8789     0CAC                     u3160:
  8790     0CAC                     l3096:
  8791     0CAC  1C5B               	btfss	___fladd@grs,0
  8792     0CAD  2CAF               	goto	u3171
  8793     0CAE  2CB0               	goto	u3170
  8794     0CAF                     u3171:
  8795     0CAF  2CBA               	goto	l3100
  8796     0CB0                     u3170:
  8797     0CB0                     l3098:
  8798     0CB0  085B               	movf	___fladd@grs,w
  8799     0CB1  00D0               	movwf	??___fladd
  8800     0CB2  3001               	movlw	1
  8801     0CB3                     u3185:
  8802     0CB3  36D0               	lsrf	??___fladd,f
  8803     0CB4  0B89               	decfsz	9,f
  8804     0CB5  2CB3               	goto	u3185
  8805     0CB6  0850               	movf	??___fladd,w
  8806     0CB7  3801               	iorlw	1
  8807     0CB8  00DB               	movwf	___fladd@grs
  8808     0CB9  2CBC               	goto	l3102
  8809     0CBA                     l3100:
  8810     0CBA  1003               	clrc
  8811     0CBB  0CDB               	rrf	___fladd@grs,f
  8812     0CBC                     l3102:
  8813     0CBC  1C48               	btfss	___fladd@b,0
  8814     0CBD  2CBF               	goto	u3191
  8815     0CBE  2CC0               	goto	u3190
  8816     0CBF                     u3191:
  8817     0CBF  2CC1               	goto	l3106
  8818     0CC0                     u3190:
  8819     0CC0                     l3104:
  8820     0CC0  17DB               	bsf	___fladd@grs,7
  8821     0CC1                     l3106:
  8822     0CC1  3001               	movlw	1
  8823     0CC2  00D0               	movwf	??___fladd
  8824     0CC3                     u3205:
  8825     0CC3  37CB               	asrf	___fladd@b+3,f
  8826     0CC4  0CCA               	rrf	___fladd@b+2,f
  8827     0CC5  0CC9               	rrf	___fladd@b+1,f
  8828     0CC6  0CC8               	rrf	___fladd@b,f
  8829     0CC7  0BD0               	decfsz	??___fladd& (0+127),f
  8830     0CC8  2CC3               	goto	u3205
  8831     0CC9                     l3108:
  8832     0CC9  3001               	movlw	1
  8833     0CCA  07DA               	addwf	___fladd@bexp,f
  8834     0CCB  2D56               	goto	l3146
  8835     0CCC                     l3110:
  8836     0CCC  084B               	movf	___fladd@b+3,w
  8837     0CCD  3A80               	xorlw	128
  8838     0CCE  00D0               	movwf	??___fladd
  8839     0CCF  084F               	movf	___fladd@a+3,w
  8840     0CD0  3A80               	xorlw	128
  8841     0CD1  0250               	subwf	??___fladd,w
  8842     0CD2  1D03               	skipz
  8843     0CD3  2CDE               	goto	u3213
  8844     0CD4  084E               	movf	___fladd@a+2,w
  8845     0CD5  024A               	subwf	___fladd@b+2,w
  8846     0CD6  1D03               	skipz
  8847     0CD7  2CDE               	goto	u3213
  8848     0CD8  084D               	movf	___fladd@a+1,w
  8849     0CD9  0249               	subwf	___fladd@b+1,w
  8850     0CDA  1D03               	skipz
  8851     0CDB  2CDE               	goto	u3213
  8852     0CDC  084C               	movf	___fladd@a,w
  8853     0CDD  0248               	subwf	___fladd@b,w
  8854     0CDE                     u3213:
  8855     0CDE  1803               	skipnc
  8856     0CDF  2CE1               	goto	u3211
  8857     0CE0  2CE2               	goto	u3210
  8858     0CE1                     u3211:
  8859     0CE1  2D17               	goto	l3122
  8860     0CE2                     u3210:
  8861     0CE2                     l3112:
  8862     0CE2  30FF               	movlw	255
  8863     0CE3  00D0               	movwf	??___fladd
  8864     0CE4  30FF               	movlw	255
  8865     0CE5  00D1               	movwf	??___fladd+1
  8866     0CE6  30FF               	movlw	255
  8867     0CE7  00D2               	movwf	??___fladd+2
  8868     0CE8  30FF               	movlw	255
  8869     0CE9  00D3               	movwf	??___fladd+3
  8870     0CEA  0848               	movf	___fladd@b,w
  8871     0CEB  024C               	subwf	___fladd@a,w
  8872     0CEC  00D4               	movwf	??___fladd+4
  8873     0CED  0849               	movf	___fladd@b+1,w
  8874     0CEE  3B4D               	subwfb	___fladd@a+1,w
  8875     0CEF  00D5               	movwf	??___fladd+5
  8876     0CF0  084A               	movf	___fladd@b+2,w
  8877     0CF1  3B4E               	subwfb	___fladd@a+2,w
  8878     0CF2  00D6               	movwf	??___fladd+6
  8879     0CF3  084B               	movf	___fladd@b+3,w
  8880     0CF4  3B4F               	subwfb	___fladd@a+3,w
  8881     0CF5  00D7               	movwf	??___fladd+7
  8882     0CF6  0854               	movf	??___fladd+4,w
  8883     0CF7  07D0               	addwf	??___fladd,f
  8884     0CF8  0855               	movf	??___fladd+5,w
  8885     0CF9  3DD1               	addwfc	??___fladd+1,f
  8886     0CFA  0856               	movf	??___fladd+6,w
  8887     0CFB  3DD2               	addwfc	??___fladd+2,f
  8888     0CFC  0857               	movf	??___fladd+7,w
  8889     0CFD  3DD3               	addwfc	??___fladd+3,f
  8890     0CFE  0853               	movf	??___fladd+3,w
  8891     0CFF  00CB               	movwf	___fladd@b+3
  8892     0D00  0852               	movf	??___fladd+2,w
  8893     0D01  00CA               	movwf	___fladd@b+2
  8894     0D02  0851               	movf	??___fladd+1,w
  8895     0D03  00C9               	movwf	___fladd@b+1
  8896     0D04  0850               	movf	??___fladd,w
  8897     0D05  00C8               	movwf	___fladd@b
  8898     0D06                     l3114:
  8899     0D06  3080               	movlw	128
  8900     0D07  06D8               	xorwf	___fladd@signs,f
  8901     0D08                     l3116:
  8902     0D08  035B               	decf	___fladd@grs,w
  8903     0D09  3AFF               	xorlw	255
  8904     0D0A  00DB               	movwf	___fladd@grs
  8905     0D0B                     l3118:
  8906     0D0B  085B               	movf	___fladd@grs,w
  8907     0D0C  1D03               	btfss	3,2
  8908     0D0D  2D0F               	goto	u3221
  8909     0D0E  2D10               	goto	u3220
  8910     0D0F                     u3221:
  8911     0D0F  2D1F               	goto	l1026
  8912     0D10                     u3220:
  8913     0D10                     l3120:
  8914     0D10  3001               	movlw	1
  8915     0D11  07C8               	addwf	___fladd@b,f
  8916     0D12  3000               	movlw	0
  8917     0D13  3DC9               	addwfc	___fladd@b+1,f
  8918     0D14  3DCA               	addwfc	___fladd@b+2,f
  8919     0D15  3DCB               	addwfc	___fladd@b+3,f
  8920     0D16  2D1F               	goto	l1026
  8921     0D17                     l3122:
  8922     0D17  084C               	movf	___fladd@a,w
  8923     0D18  02C8               	subwf	___fladd@b,f
  8924     0D19  084D               	movf	___fladd@a+1,w
  8925     0D1A  3BC9               	subwfb	___fladd@b+1,f
  8926     0D1B  084E               	movf	___fladd@a+2,w
  8927     0D1C  3BCA               	subwfb	___fladd@b+2,f
  8928     0D1D  084F               	movf	___fladd@a+3,w
  8929     0D1E  3BCB               	subwfb	___fladd@b+3,f
  8930     0D1F                     l1026:
  8931     0D1F  084B               	movf	___fladd@b+3,w
  8932     0D20  044A               	iorwf	___fladd@b+2,w
  8933     0D21  0449               	iorwf	___fladd@b+1,w
  8934     0D22  0448               	iorwf	___fladd@b,w
  8935     0D23  1D03               	skipz
  8936     0D24  2D26               	goto	u3231
  8937     0D25  2D27               	goto	u3230
  8938     0D26                     u3231:
  8939     0D26  2D52               	goto	l3144
  8940     0D27                     u3230:
  8941     0D27                     l3124:
  8942     0D27  085B               	movf	___fladd@grs,w
  8943     0D28  1D03               	btfss	3,2
  8944     0D29  2D2B               	goto	u3241
  8945     0D2A  2D2C               	goto	u3240
  8946     0D2B                     u3241:
  8947     0D2B  2D52               	goto	l3144
  8948     0D2C                     u3240:
  8949     0D2C                     l3126:
  8950     0D2C  3000               	movlw	0
  8951     0D2D  00CB               	movwf	?___fladd+3
  8952     0D2E  3000               	movlw	0
  8953     0D2F  00CA               	movwf	?___fladd+2
  8954     0D30  3000               	movlw	0
  8955     0D31  00C9               	movwf	?___fladd+1
  8956     0D32  3000               	movlw	0
  8957     0D33  00C8               	movwf	?___fladd
  8958     0D34  2DC4               	goto	l1018
  8959     0D35                     l3130:
  8960     0D35  3001               	movlw	1
  8961     0D36                     u3255:
  8962     0D36  35C8               	lslf	___fladd@b,f
  8963     0D37  0DC9               	rlf	___fladd@b+1,f
  8964     0D38  0DCA               	rlf	___fladd@b+2,f
  8965     0D39  0DCB               	rlf	___fladd@b+3,f
  8966     0D3A  0B89               	decfsz	9,f
  8967     0D3B  2D36               	goto	u3255
  8968     0D3C                     l3132:
  8969     0D3C  1FDB               	btfss	___fladd@grs,7
  8970     0D3D  2D3F               	goto	u3261
  8971     0D3E  2D40               	goto	u3260
  8972     0D3F                     u3261:
  8973     0D3F  2D41               	goto	l1030
  8974     0D40                     u3260:
  8975     0D40                     l3134:
  8976     0D40  1448               	bsf	___fladd@b,0
  8977     0D41                     l1030:
  8978     0D41  1C5B               	btfss	___fladd@grs,0
  8979     0D42  2D44               	goto	u3271
  8980     0D43  2D45               	goto	u3270
  8981     0D44                     u3271:
  8982     0D44  2D49               	goto	l3138
  8983     0D45                     u3270:
  8984     0D45                     l3136:
  8985     0D45  1403               	setc
  8986     0D46  0D5B               	rlf	___fladd@grs,w
  8987     0D47  00DB               	movwf	___fladd@grs
  8988     0D48  2D4B               	goto	l3140
  8989     0D49                     l3138:
  8990     0D49  1003               	clrc
  8991     0D4A  0DDB               	rlf	___fladd@grs,f
  8992     0D4B                     l3140:
  8993     0D4B  085A               	movf	___fladd@bexp,w
  8994     0D4C  1903               	btfsc	3,2
  8995     0D4D  2D4F               	goto	u3281
  8996     0D4E  2D50               	goto	u3280
  8997     0D4F                     u3281:
  8998     0D4F  2D52               	goto	l3144
  8999     0D50                     u3280:
  9000     0D50                     l3142:
  9001     0D50  3001               	movlw	1
  9002     0D51  02DA               	subwf	___fladd@bexp,f
  9003     0D52                     l3144:
  9004     0D52  1FCA               	btfss	___fladd@b+2,7
  9005     0D53  2D55               	goto	u3291
  9006     0D54  2D56               	goto	u3290
  9007     0D55                     u3291:
  9008     0D55  2D35               	goto	l3130
  9009     0D56                     u3290:
  9010     0D56                     l3146:
  9011     0D56  01D9               	clrf	___fladd@aexp
  9012     0D57                     l3148:
  9013     0D57  1FDB               	btfss	___fladd@grs,7
  9014     0D58  2D5A               	goto	u3301
  9015     0D59  2D5B               	goto	u3300
  9016     0D5A                     u3301:
  9017     0D5A  2D69               	goto	l3156
  9018     0D5B                     u3300:
  9019     0D5B                     l3150:
  9020     0D5B  085B               	movf	___fladd@grs,w
  9021     0D5C  397F               	andlw	127
  9022     0D5D  1903               	btfsc	3,2
  9023     0D5E  2D60               	goto	u3311
  9024     0D5F  2D61               	goto	u3310
  9025     0D60                     u3311:
  9026     0D60  2D64               	goto	l1036
  9027     0D61                     u3310:
  9028     0D61                     l3152:
  9029     0D61  3001               	movlw	1
  9030     0D62  00D9               	movwf	___fladd@aexp
  9031     0D63  2D69               	goto	l3156
  9032     0D64                     l1036:
  9033     0D64  1C48               	btfss	___fladd@b,0
  9034     0D65  2D67               	goto	u3321
  9035     0D66  2D68               	goto	u3320
  9036     0D67                     u3321:
  9037     0D67  2D69               	goto	l3156
  9038     0D68                     u3320:
  9039     0D68  2D61               	goto	l3152
  9040     0D69                     l3156:
  9041     0D69  0859               	movf	___fladd@aexp,w
  9042     0D6A  1903               	btfsc	3,2
  9043     0D6B  2D6D               	goto	u3331
  9044     0D6C  2D6E               	goto	u3330
  9045     0D6D                     u3331:
  9046     0D6D  2D97               	goto	l1039
  9047     0D6E                     u3330:
  9048     0D6E                     l3158:
  9049     0D6E  3001               	movlw	1
  9050     0D6F  07C8               	addwf	___fladd@b,f
  9051     0D70  3000               	movlw	0
  9052     0D71  3DC9               	addwfc	___fladd@b+1,f
  9053     0D72  3DCA               	addwfc	___fladd@b+2,f
  9054     0D73  3DCB               	addwfc	___fladd@b+3,f
  9055     0D74                     l3160:
  9056     0D74  1C4B               	btfss	___fladd@b+3,0
  9057     0D75  2D77               	goto	u3341
  9058     0D76  2D78               	goto	u3340
  9059     0D77                     u3341:
  9060     0D77  2D97               	goto	l1039
  9061     0D78                     u3340:
  9062     0D78                     l3162:
  9063     0D78  0848               	movf	___fladd@b,w
  9064     0D79  00D0               	movwf	??___fladd
  9065     0D7A  0849               	movf	___fladd@b+1,w
  9066     0D7B  00D1               	movwf	??___fladd+1
  9067     0D7C  084A               	movf	___fladd@b+2,w
  9068     0D7D  00D2               	movwf	??___fladd+2
  9069     0D7E  084B               	movf	___fladd@b+3,w
  9070     0D7F  00D3               	movwf	??___fladd+3
  9071     0D80  3001               	movlw	1
  9072     0D81  00D4               	movwf	??___fladd+4
  9073     0D82                     u3355:
  9074     0D82  37D3               	asrf	??___fladd+3,f
  9075     0D83  0CD2               	rrf	??___fladd+2,f
  9076     0D84  0CD1               	rrf	??___fladd+1,f
  9077     0D85  0CD0               	rrf	??___fladd,f
  9078     0D86                     u3350:
  9079     0D86  0BD4               	decfsz	??___fladd+4,f
  9080     0D87  2D82               	goto	u3355
  9081     0D88  0853               	movf	??___fladd+3,w
  9082     0D89  00CB               	movwf	___fladd@b+3
  9083     0D8A  0852               	movf	??___fladd+2,w
  9084     0D8B  00CA               	movwf	___fladd@b+2
  9085     0D8C  0851               	movf	??___fladd+1,w
  9086     0D8D  00C9               	movwf	___fladd@b+1
  9087     0D8E  0850               	movf	??___fladd,w
  9088     0D8F  00C8               	movwf	___fladd@b
  9089     0D90  0A5A               	incf	___fladd@bexp,w
  9090     0D91  1903               	btfsc	3,2
  9091     0D92  2D94               	goto	u3361
  9092     0D93  2D95               	goto	u3360
  9093     0D94                     u3361:
  9094     0D94  2D97               	goto	l1039
  9095     0D95                     u3360:
  9096     0D95                     l3164:
  9097     0D95  3001               	movlw	1
  9098     0D96  07DA               	addwf	___fladd@bexp,f
  9099     0D97                     l1039:
  9100     0D97  0A5A               	incf	___fladd@bexp,w
  9101     0D98  1903               	btfsc	3,2
  9102     0D99  2D9B               	goto	u3371
  9103     0D9A  2D9C               	goto	u3370
  9104     0D9B                     u3371:
  9105     0D9B  2DA1               	goto	l3168
  9106     0D9C                     u3370:
  9107     0D9C                     l3166:
  9108     0D9C  085A               	movf	___fladd@bexp,w
  9109     0D9D  1D03               	btfss	3,2
  9110     0D9E  2DA0               	goto	u3381
  9111     0D9F  2DA1               	goto	u3380
  9112     0DA0                     u3381:
  9113     0DA0  2DAF               	goto	l3174
  9114     0DA1                     u3380:
  9115     0DA1                     l3168:
  9116     0DA1  3000               	movlw	0
  9117     0DA2  00CB               	movwf	___fladd@b+3
  9118     0DA3  3000               	movlw	0
  9119     0DA4  00CA               	movwf	___fladd@b+2
  9120     0DA5  3000               	movlw	0
  9121     0DA6  00C9               	movwf	___fladd@b+1
  9122     0DA7  3000               	movlw	0
  9123     0DA8  00C8               	movwf	___fladd@b
  9124     0DA9                     l3170:
  9125     0DA9  085A               	movf	___fladd@bexp,w
  9126     0DAA  1D03               	btfss	3,2
  9127     0DAB  2DAD               	goto	u3391
  9128     0DAC  2DAE               	goto	u3390
  9129     0DAD                     u3391:
  9130     0DAD  2DAF               	goto	l3174
  9131     0DAE                     u3390:
  9132     0DAE                     l3172:
  9133     0DAE  01D8               	clrf	___fladd@signs
  9134     0DAF                     l3174:
  9135     0DAF  1C5A               	btfss	___fladd@bexp,0
  9136     0DB0  2DB2               	goto	u3401
  9137     0DB1  2DB3               	goto	u3400
  9138     0DB2                     u3401:
  9139     0DB2  2DB5               	goto	l3178
  9140     0DB3                     u3400:
  9141     0DB3                     l3176:
  9142     0DB3  17CA               	bsf	___fladd@b+2,7
  9143     0DB4  2DB7               	goto	l1047
  9144     0DB5                     l3178:
  9145     0DB5  307F               	movlw	127
  9146     0DB6  05CA               	andwf	___fladd@b+2,f
  9147     0DB7                     l1047:
  9148     0DB7  085A               	movf	___fladd@bexp,w
  9149     0DB8  00D0               	movwf	??___fladd
  9150     0DB9  3001               	movlw	1
  9151     0DBA                     u3415:
  9152     0DBA  36D0               	lsrf	??___fladd,f
  9153     0DBB  0B89               	decfsz	9,f
  9154     0DBC  2DBA               	goto	u3415
  9155     0DBD  0850               	movf	??___fladd,w
  9156     0DBE  00CB               	movwf	___fladd@b+3
  9157     0DBF                     l3180:
  9158     0DBF  1FD8               	btfss	___fladd@signs,7
  9159     0DC0  2DC2               	goto	u3421
  9160     0DC1  2DC3               	goto	u3420
  9161     0DC2                     u3421:
  9162     0DC2  2DC4               	goto	l1048
  9163     0DC3                     u3420:
  9164     0DC3                     l3182:
  9165     0DC3  17CB               	bsf	___fladd@b+3,7
  9166     0DC4                     l1048:
  9167     0DC4                     l1018:
  9168     0DC4  0008               	return
  9169     0DC5                     __end_of___fladd:
  9170                           
  9171                           	psect	text21
  9172     0801                     __ptext21:	
  9173 ;; *************** function ___flneg *****************
  9174 ;; Defined at:
  9175 ;;		line 15 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/flneg.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  f1              4    0[BANK0 ] unsigned char 
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  4    0[BANK0 ] unsigned char 
  9182 ;; Registers used:
  9183 ;;		wreg
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9189 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;Total ram usage:        4 bytes
  9194 ;; Hardware stack levels used: 1
  9195 ;; Hardware stack levels required when called: 4
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_efgtoa
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203     0801                     ___flneg:	
  9204                           ;psect for function ___flneg
  9205                           
  9206     0801                     l4548:	
  9207                           ;incstack = 0
  9208                           ; Regs used in ___flneg: [wreg]
  9209                           
  9210     0801  0020               	movlb	0	; select bank0
  9211     0802  0823               	movf	___flneg@f1+3,w
  9212     0803  0422               	iorwf	___flneg@f1+2,w
  9213     0804  0421               	iorwf	___flneg@f1+1,w
  9214     0805  0420               	iorwf	___flneg@f1,w
  9215     0806  1903               	skipnz
  9216     0807  2809               	goto	u5911
  9217     0808  280A               	goto	u5910
  9218     0809                     u5911:
  9219     0809  280C               	goto	l4552
  9220     080A                     u5910:
  9221     080A                     l4550:
  9222     080A  3080               	movlw	128
  9223     080B  06A3               	xorwf	___flneg@f1+3,f
  9224     080C                     l4552:
  9225     080C                     l894:
  9226     080C  0008               	return
  9227     080D                     __end_of___flneg:
  9228                           
  9229                           	psect	text22
  9230     0DC5                     __ptext22:	
  9231 ;; *************** function ___flmul *****************
  9232 ;; Defined at:
  9233 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  b               4   14[BANK0 ] unsigned char 
  9236 ;;  a               4   18[BANK0 ] unsigned char 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  prod            4   34[BANK0 ] struct .
  9239 ;;  grs             4   29[BANK0 ] unsigned long 
  9240 ;;  temp            2   38[BANK0 ] struct .
  9241 ;;  bexp            1   33[BANK0 ] unsigned char 
  9242 ;;  aexp            1   28[BANK0 ] unsigned char 
  9243 ;;  sign            1   27[BANK0 ] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  4   14[BANK0 ] unsigned char 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, pclath, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9253 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;Total ram usage:       26 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 5
  9260 ;; This function calls:
  9261 ;;		__Umul8_16
  9262 ;; This function is called by:
  9263 ;;		_main
  9264 ;;		_efgtoa
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268     0DC5                     ___flmul:	
  9269                           ;psect for function ___flmul
  9270                           
  9271     0DC5                     l4598:	
  9272                           ;incstack = 0
  9273                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9274                           
  9275     0DC5  0020               	movlb	0	; select bank0
  9276     0DC6  0831               	movf	___flmul@b+3,w
  9277     0DC7  3980               	andlw	128
  9278     0DC8  00BB               	movwf	___flmul@sign
  9279     0DC9                     l4600:
  9280     0DC9  3531               	lslf	___flmul@b+3,w
  9281     0DCA  00C1               	movwf	___flmul@bexp
  9282     0DCB                     l4602:
  9283     0DCB  1FB0               	btfss	___flmul@b+2,7
  9284     0DCC  2DCE               	goto	u6021
  9285     0DCD  2DCF               	goto	u6020
  9286     0DCE                     u6021:
  9287     0DCE  2DD0               	goto	l4606
  9288     0DCF                     u6020:
  9289     0DCF                     l4604:
  9290     0DCF  1441               	bsf	___flmul@bexp,0
  9291     0DD0                     l4606:
  9292     0DD0  0841               	movf	___flmul@bexp,w
  9293     0DD1  1903               	btfsc	3,2
  9294     0DD2  2DD4               	goto	u6031
  9295     0DD3  2DD5               	goto	u6030
  9296     0DD4                     u6031:
  9297     0DD4  2DE4               	goto	l4614
  9298     0DD5                     u6030:
  9299     0DD5                     l4608:
  9300     0DD5  0A41               	incf	___flmul@bexp,w
  9301     0DD6  1D03               	btfss	3,2
  9302     0DD7  2DD9               	goto	u6041
  9303     0DD8  2DDA               	goto	u6040
  9304     0DD9                     u6041:
  9305     0DD9  2DE2               	goto	l4612
  9306     0DDA                     u6040:
  9307     0DDA                     l4610:
  9308     0DDA  3000               	movlw	0
  9309     0DDB  00B1               	movwf	___flmul@b+3
  9310     0DDC  3000               	movlw	0
  9311     0DDD  00B0               	movwf	___flmul@b+2
  9312     0DDE  3000               	movlw	0
  9313     0DDF  00AF               	movwf	___flmul@b+1
  9314     0DE0  3000               	movlw	0
  9315     0DE1  00AE               	movwf	___flmul@b
  9316     0DE2                     l4612:
  9317     0DE2  17B0               	bsf	___flmul@b+2,7
  9318     0DE3  2DEC               	goto	l4616
  9319     0DE4                     l4614:
  9320     0DE4  3000               	movlw	0
  9321     0DE5  00B1               	movwf	___flmul@b+3
  9322     0DE6  3000               	movlw	0
  9323     0DE7  00B0               	movwf	___flmul@b+2
  9324     0DE8  3000               	movlw	0
  9325     0DE9  00AF               	movwf	___flmul@b+1
  9326     0DEA  3000               	movlw	0
  9327     0DEB  00AE               	movwf	___flmul@b
  9328     0DEC                     l4616:
  9329     0DEC  0835               	movf	___flmul@a+3,w
  9330     0DED  3980               	andlw	128
  9331     0DEE  06BB               	xorwf	___flmul@sign,f
  9332     0DEF                     l4618:
  9333     0DEF  3535               	lslf	___flmul@a+3,w
  9334     0DF0  00BC               	movwf	___flmul@aexp
  9335     0DF1                     l4620:
  9336     0DF1  1FB4               	btfss	___flmul@a+2,7
  9337     0DF2  2DF4               	goto	u6051
  9338     0DF3  2DF5               	goto	u6050
  9339     0DF4                     u6051:
  9340     0DF4  2DF6               	goto	l4624
  9341     0DF5                     u6050:
  9342     0DF5                     l4622:
  9343     0DF5  143C               	bsf	___flmul@aexp,0
  9344     0DF6                     l4624:
  9345     0DF6  083C               	movf	___flmul@aexp,w
  9346     0DF7  1903               	btfsc	3,2
  9347     0DF8  2DFA               	goto	u6061
  9348     0DF9  2DFB               	goto	u6060
  9349     0DFA                     u6061:
  9350     0DFA  2E0A               	goto	l4632
  9351     0DFB                     u6060:
  9352     0DFB                     l4626:
  9353     0DFB  0A3C               	incf	___flmul@aexp,w
  9354     0DFC  1D03               	btfss	3,2
  9355     0DFD  2DFF               	goto	u6071
  9356     0DFE  2E00               	goto	u6070
  9357     0DFF                     u6071:
  9358     0DFF  2E08               	goto	l4630
  9359     0E00                     u6070:
  9360     0E00                     l4628:
  9361     0E00  3000               	movlw	0
  9362     0E01  00B5               	movwf	___flmul@a+3
  9363     0E02  3000               	movlw	0
  9364     0E03  00B4               	movwf	___flmul@a+2
  9365     0E04  3000               	movlw	0
  9366     0E05  00B3               	movwf	___flmul@a+1
  9367     0E06  3000               	movlw	0
  9368     0E07  00B2               	movwf	___flmul@a
  9369     0E08                     l4630:
  9370     0E08  17B4               	bsf	___flmul@a+2,7
  9371     0E09  2E12               	goto	l4634
  9372     0E0A                     l4632:
  9373     0E0A  3000               	movlw	0
  9374     0E0B  00B5               	movwf	___flmul@a+3
  9375     0E0C  3000               	movlw	0
  9376     0E0D  00B4               	movwf	___flmul@a+2
  9377     0E0E  3000               	movlw	0
  9378     0E0F  00B3               	movwf	___flmul@a+1
  9379     0E10  3000               	movlw	0
  9380     0E11  00B2               	movwf	___flmul@a
  9381     0E12                     l4634:
  9382     0E12  083C               	movf	___flmul@aexp,w
  9383     0E13  1903               	btfsc	3,2
  9384     0E14  2E16               	goto	u6081
  9385     0E15  2E17               	goto	u6080
  9386     0E16                     u6081:
  9387     0E16  2E1C               	goto	l4638
  9388     0E17                     u6080:
  9389     0E17                     l4636:
  9390     0E17  0841               	movf	___flmul@bexp,w
  9391     0E18  1D03               	btfss	3,2
  9392     0E19  2E1B               	goto	u6091
  9393     0E1A  2E1C               	goto	u6090
  9394     0E1B                     u6091:
  9395     0E1B  2E25               	goto	l4642
  9396     0E1C                     u6090:
  9397     0E1C                     l4638:
  9398     0E1C  3000               	movlw	0
  9399     0E1D  00B1               	movwf	?___flmul+3
  9400     0E1E  3000               	movlw	0
  9401     0E1F  00B0               	movwf	?___flmul+2
  9402     0E20  3000               	movlw	0
  9403     0E21  00AF               	movwf	?___flmul+1
  9404     0E22  3000               	movlw	0
  9405     0E23  00AE               	movwf	?___flmul
  9406     0E24  2FFF               	goto	l1101
  9407     0E25                     l4642:
  9408     0E25  082E               	movf	___flmul@b,w
  9409     0E26  00A0               	movwf	__Umul8_16@multiplicand
  9410     0E27  0834               	movf	___flmul@a+2,w
  9411     0E28  3190  207A  318D   	fcall	__Umul8_16
  9412     0E2B  0020               	movlb	0	; select bank0
  9413     0E2C  0821               	movf	?__Umul8_16+1,w
  9414     0E2D  00C7               	movwf	___flmul@temp+1
  9415     0E2E  0820               	movf	?__Umul8_16,w
  9416     0E2F  00C6               	movwf	___flmul@temp
  9417     0E30                     l4644:
  9418     0E30  0846               	movf	___flmul@temp,w
  9419     0E31  00B6               	movwf	??___flmul
  9420     0E32  01B7               	clrf	??___flmul+1
  9421     0E33  01B8               	clrf	??___flmul+2
  9422     0E34  01B9               	clrf	??___flmul+3
  9423     0E35  0839               	movf	??___flmul+3,w
  9424     0E36  00C0               	movwf	___flmul@grs+3
  9425     0E37  0838               	movf	??___flmul+2,w
  9426     0E38  00BF               	movwf	___flmul@grs+2
  9427     0E39  0837               	movf	??___flmul+1,w
  9428     0E3A  00BE               	movwf	___flmul@grs+1
  9429     0E3B  0836               	movf	??___flmul,w
  9430     0E3C  00BD               	movwf	___flmul@grs
  9431     0E3D                     l4646:
  9432     0E3D  0847               	movf	___flmul@temp+1,w
  9433     0E3E  00B6               	movwf	??___flmul
  9434     0E3F  01B7               	clrf	??___flmul+1
  9435     0E40  01B8               	clrf	??___flmul+2
  9436     0E41  01B9               	clrf	??___flmul+3
  9437     0E42  0839               	movf	??___flmul+3,w
  9438     0E43  00C5               	movwf	___flmul@prod+3
  9439     0E44  0838               	movf	??___flmul+2,w
  9440     0E45  00C4               	movwf	___flmul@prod+2
  9441     0E46  0837               	movf	??___flmul+1,w
  9442     0E47  00C3               	movwf	___flmul@prod+1
  9443     0E48  0836               	movf	??___flmul,w
  9444     0E49  00C2               	movwf	___flmul@prod
  9445     0E4A  082F               	movf	___flmul@b+1,w
  9446     0E4B  00A0               	movwf	__Umul8_16@multiplicand
  9447     0E4C  0833               	movf	___flmul@a+1,w
  9448     0E4D  3190  207A  318D   	fcall	__Umul8_16
  9449     0E50  0020               	movlb	0	; select bank0
  9450     0E51  0821               	movf	?__Umul8_16+1,w
  9451     0E52  00C7               	movwf	___flmul@temp+1
  9452     0E53  0820               	movf	?__Umul8_16,w
  9453     0E54  00C6               	movwf	___flmul@temp
  9454     0E55                     l4648:
  9455     0E55  0846               	movf	___flmul@temp,w
  9456     0E56  00B6               	movwf	??___flmul
  9457     0E57  01B7               	clrf	??___flmul+1
  9458     0E58  01B8               	clrf	??___flmul+2
  9459     0E59  01B9               	clrf	??___flmul+3
  9460     0E5A  0836               	movf	??___flmul,w
  9461     0E5B  07BD               	addwf	___flmul@grs,f
  9462     0E5C  0837               	movf	??___flmul+1,w
  9463     0E5D  3DBE               	addwfc	___flmul@grs+1,f
  9464     0E5E  0838               	movf	??___flmul+2,w
  9465     0E5F  3DBF               	addwfc	___flmul@grs+2,f
  9466     0E60  0839               	movf	??___flmul+3,w
  9467     0E61  3DC0               	addwfc	___flmul@grs+3,f
  9468     0E62                     l4650:
  9469     0E62  0847               	movf	___flmul@temp+1,w
  9470     0E63  00B6               	movwf	??___flmul
  9471     0E64  01B7               	clrf	??___flmul+1
  9472     0E65  01B8               	clrf	??___flmul+2
  9473     0E66  01B9               	clrf	??___flmul+3
  9474     0E67  0836               	movf	??___flmul,w
  9475     0E68  07C2               	addwf	___flmul@prod,f
  9476     0E69  0837               	movf	??___flmul+1,w
  9477     0E6A  3DC3               	addwfc	___flmul@prod+1,f
  9478     0E6B  0838               	movf	??___flmul+2,w
  9479     0E6C  3DC4               	addwfc	___flmul@prod+2,f
  9480     0E6D  0839               	movf	??___flmul+3,w
  9481     0E6E  3DC5               	addwfc	___flmul@prod+3,f
  9482     0E6F  0830               	movf	___flmul@b+2,w
  9483     0E70  00A0               	movwf	__Umul8_16@multiplicand
  9484     0E71  0832               	movf	___flmul@a,w
  9485     0E72  3190  207A  318D   	fcall	__Umul8_16
  9486     0E75  0020               	movlb	0	; select bank0
  9487     0E76  0821               	movf	?__Umul8_16+1,w
  9488     0E77  00C7               	movwf	___flmul@temp+1
  9489     0E78  0820               	movf	?__Umul8_16,w
  9490     0E79  00C6               	movwf	___flmul@temp
  9491     0E7A                     l4652:
  9492     0E7A  0846               	movf	___flmul@temp,w
  9493     0E7B  00B6               	movwf	??___flmul
  9494     0E7C  01B7               	clrf	??___flmul+1
  9495     0E7D  01B8               	clrf	??___flmul+2
  9496     0E7E  01B9               	clrf	??___flmul+3
  9497     0E7F  0836               	movf	??___flmul,w
  9498     0E80  07BD               	addwf	___flmul@grs,f
  9499     0E81  0837               	movf	??___flmul+1,w
  9500     0E82  3DBE               	addwfc	___flmul@grs+1,f
  9501     0E83  0838               	movf	??___flmul+2,w
  9502     0E84  3DBF               	addwfc	___flmul@grs+2,f
  9503     0E85  0839               	movf	??___flmul+3,w
  9504     0E86  3DC0               	addwfc	___flmul@grs+3,f
  9505     0E87                     l4654:
  9506     0E87  0847               	movf	___flmul@temp+1,w
  9507     0E88  00B6               	movwf	??___flmul
  9508     0E89  01B7               	clrf	??___flmul+1
  9509     0E8A  01B8               	clrf	??___flmul+2
  9510     0E8B  01B9               	clrf	??___flmul+3
  9511     0E8C  0836               	movf	??___flmul,w
  9512     0E8D  07C2               	addwf	___flmul@prod,f
  9513     0E8E  0837               	movf	??___flmul+1,w
  9514     0E8F  3DC3               	addwfc	___flmul@prod+1,f
  9515     0E90  0838               	movf	??___flmul+2,w
  9516     0E91  3DC4               	addwfc	___flmul@prod+2,f
  9517     0E92  0839               	movf	??___flmul+3,w
  9518     0E93  3DC5               	addwfc	___flmul@prod+3,f
  9519     0E94                     l4656:
  9520     0E94  3008               	movlw	8
  9521     0E95                     u6105:
  9522     0E95  35BD               	lslf	___flmul@grs,f
  9523     0E96  0DBE               	rlf	___flmul@grs+1,f
  9524     0E97  0DBF               	rlf	___flmul@grs+2,f
  9525     0E98  0DC0               	rlf	___flmul@grs+3,f
  9526     0E99  0B89               	decfsz	9,f
  9527     0E9A  2E95               	goto	u6105
  9528     0E9B                     l4658:
  9529     0E9B  082F               	movf	___flmul@b+1,w
  9530     0E9C  00A0               	movwf	__Umul8_16@multiplicand
  9531     0E9D  0832               	movf	___flmul@a,w
  9532     0E9E  3190  207A  318D   	fcall	__Umul8_16
  9533     0EA1  0020               	movlb	0	; select bank0
  9534     0EA2  0821               	movf	?__Umul8_16+1,w
  9535     0EA3  00C7               	movwf	___flmul@temp+1
  9536     0EA4  0820               	movf	?__Umul8_16,w
  9537     0EA5  00C6               	movwf	___flmul@temp
  9538     0EA6                     l4660:
  9539     0EA6  0846               	movf	___flmul@temp,w
  9540     0EA7  07BD               	addwf	___flmul@grs,f
  9541     0EA8  0847               	movf	___flmul@temp+1,w
  9542     0EA9  3DBE               	addwfc	___flmul@grs+1,f
  9543     0EAA  3000               	movlw	0
  9544     0EAB  3DBF               	addwfc	___flmul@grs+2,f
  9545     0EAC  3DC0               	addwfc	___flmul@grs+3,f
  9546     0EAD                     l4662:
  9547     0EAD  082E               	movf	___flmul@b,w
  9548     0EAE  00A0               	movwf	__Umul8_16@multiplicand
  9549     0EAF  0833               	movf	___flmul@a+1,w
  9550     0EB0  3190  207A  318D   	fcall	__Umul8_16
  9551     0EB3  0020               	movlb	0	; select bank0
  9552     0EB4  0821               	movf	?__Umul8_16+1,w
  9553     0EB5  00C7               	movwf	___flmul@temp+1
  9554     0EB6  0820               	movf	?__Umul8_16,w
  9555     0EB7  00C6               	movwf	___flmul@temp
  9556     0EB8                     l4664:
  9557     0EB8  0846               	movf	___flmul@temp,w
  9558     0EB9  07BD               	addwf	___flmul@grs,f
  9559     0EBA  0847               	movf	___flmul@temp+1,w
  9560     0EBB  3DBE               	addwfc	___flmul@grs+1,f
  9561     0EBC  3000               	movlw	0
  9562     0EBD  3DBF               	addwfc	___flmul@grs+2,f
  9563     0EBE  3DC0               	addwfc	___flmul@grs+3,f
  9564     0EBF                     l4666:
  9565     0EBF  3008               	movlw	8
  9566     0EC0                     u6115:
  9567     0EC0  35BD               	lslf	___flmul@grs,f
  9568     0EC1  0DBE               	rlf	___flmul@grs+1,f
  9569     0EC2  0DBF               	rlf	___flmul@grs+2,f
  9570     0EC3  0DC0               	rlf	___flmul@grs+3,f
  9571     0EC4  0B89               	decfsz	9,f
  9572     0EC5  2EC0               	goto	u6115
  9573     0EC6  082E               	movf	___flmul@b,w
  9574     0EC7  00A0               	movwf	__Umul8_16@multiplicand
  9575     0EC8  0832               	movf	___flmul@a,w
  9576     0EC9  3190  207A  318D   	fcall	__Umul8_16
  9577     0ECC  0020               	movlb	0	; select bank0
  9578     0ECD  0821               	movf	?__Umul8_16+1,w
  9579     0ECE  00C7               	movwf	___flmul@temp+1
  9580     0ECF  0820               	movf	?__Umul8_16,w
  9581     0ED0  00C6               	movwf	___flmul@temp
  9582     0ED1                     l4668:
  9583     0ED1  0846               	movf	___flmul@temp,w
  9584     0ED2  07BD               	addwf	___flmul@grs,f
  9585     0ED3  0847               	movf	___flmul@temp+1,w
  9586     0ED4  3DBE               	addwfc	___flmul@grs+1,f
  9587     0ED5  3000               	movlw	0
  9588     0ED6  3DBF               	addwfc	___flmul@grs+2,f
  9589     0ED7  3DC0               	addwfc	___flmul@grs+3,f
  9590     0ED8                     l4670:
  9591     0ED8  082F               	movf	___flmul@b+1,w
  9592     0ED9  00A0               	movwf	__Umul8_16@multiplicand
  9593     0EDA  0834               	movf	___flmul@a+2,w
  9594     0EDB  3190  207A  318D   	fcall	__Umul8_16
  9595     0EDE  0020               	movlb	0	; select bank0
  9596     0EDF  0821               	movf	?__Umul8_16+1,w
  9597     0EE0  00C7               	movwf	___flmul@temp+1
  9598     0EE1  0820               	movf	?__Umul8_16,w
  9599     0EE2  00C6               	movwf	___flmul@temp
  9600     0EE3  0846               	movf	___flmul@temp,w
  9601     0EE4  07C2               	addwf	___flmul@prod,f
  9602     0EE5  0847               	movf	___flmul@temp+1,w
  9603     0EE6  3DC3               	addwfc	___flmul@prod+1,f
  9604     0EE7  3000               	movlw	0
  9605     0EE8  3DC4               	addwfc	___flmul@prod+2,f
  9606     0EE9  3DC5               	addwfc	___flmul@prod+3,f
  9607     0EEA                     l4672:
  9608     0EEA  0830               	movf	___flmul@b+2,w
  9609     0EEB  00A0               	movwf	__Umul8_16@multiplicand
  9610     0EEC  0833               	movf	___flmul@a+1,w
  9611     0EED  3190  207A  318D   	fcall	__Umul8_16
  9612     0EF0  0020               	movlb	0	; select bank0
  9613     0EF1  0821               	movf	?__Umul8_16+1,w
  9614     0EF2  00C7               	movwf	___flmul@temp+1
  9615     0EF3  0820               	movf	?__Umul8_16,w
  9616     0EF4  00C6               	movwf	___flmul@temp
  9617     0EF5                     l4674:
  9618     0EF5  0846               	movf	___flmul@temp,w
  9619     0EF6  07C2               	addwf	___flmul@prod,f
  9620     0EF7  0847               	movf	___flmul@temp+1,w
  9621     0EF8  3DC3               	addwfc	___flmul@prod+1,f
  9622     0EF9  3000               	movlw	0
  9623     0EFA  3DC4               	addwfc	___flmul@prod+2,f
  9624     0EFB  3DC5               	addwfc	___flmul@prod+3,f
  9625     0EFC  0830               	movf	___flmul@b+2,w
  9626     0EFD  00A0               	movwf	__Umul8_16@multiplicand
  9627     0EFE  0834               	movf	___flmul@a+2,w
  9628     0EFF  3190  207A  318D   	fcall	__Umul8_16
  9629     0F02  0020               	movlb	0	; select bank0
  9630     0F03  0821               	movf	?__Umul8_16+1,w
  9631     0F04  00C7               	movwf	___flmul@temp+1
  9632     0F05  0820               	movf	?__Umul8_16,w
  9633     0F06  00C6               	movwf	___flmul@temp
  9634     0F07                     l4676:
  9635     0F07  0846               	movf	___flmul@temp,w
  9636     0F08  00B6               	movwf	??___flmul
  9637     0F09  0847               	movf	___flmul@temp+1,w
  9638     0F0A  00B7               	movwf	??___flmul+1
  9639     0F0B  01B8               	clrf	??___flmul+2
  9640     0F0C  01B9               	clrf	??___flmul+3
  9641     0F0D  3008               	movlw	8
  9642     0F0E                     u6125:
  9643     0F0E  35B6               	lslf	??___flmul,f
  9644     0F0F  0DB7               	rlf	??___flmul+1,f
  9645     0F10  0DB8               	rlf	??___flmul+2,f
  9646     0F11  0DB9               	rlf	??___flmul+3,f
  9647     0F12                     u6120:
  9648     0F12  0B89               	decfsz	9,f
  9649     0F13  2F0E               	goto	u6125
  9650     0F14  0836               	movf	??___flmul,w
  9651     0F15  07C2               	addwf	___flmul@prod,f
  9652     0F16  0837               	movf	??___flmul+1,w
  9653     0F17  3DC3               	addwfc	___flmul@prod+1,f
  9654     0F18  0838               	movf	??___flmul+2,w
  9655     0F19  3DC4               	addwfc	___flmul@prod+2,f
  9656     0F1A  0839               	movf	??___flmul+3,w
  9657     0F1B  3DC5               	addwfc	___flmul@prod+3,f
  9658     0F1C                     l4678:
  9659     0F1C  083D               	movf	___flmul@grs,w
  9660     0F1D  00B6               	movwf	??___flmul
  9661     0F1E  083E               	movf	___flmul@grs+1,w
  9662     0F1F  00B7               	movwf	??___flmul+1
  9663     0F20  083F               	movf	___flmul@grs+2,w
  9664     0F21  00B8               	movwf	??___flmul+2
  9665     0F22  0840               	movf	___flmul@grs+3,w
  9666     0F23  00B9               	movwf	??___flmul+3
  9667     0F24  3018               	movlw	24
  9668     0F25                     u6135:
  9669     0F25  36B9               	lsrf	??___flmul+3,f
  9670     0F26  0CB8               	rrf	??___flmul+2,f
  9671     0F27  0CB7               	rrf	??___flmul+1,f
  9672     0F28  0CB6               	rrf	??___flmul,f
  9673     0F29                     u6130:
  9674     0F29  0B89               	decfsz	9,f
  9675     0F2A  2F25               	goto	u6135
  9676     0F2B  0836               	movf	??___flmul,w
  9677     0F2C  07C2               	addwf	___flmul@prod,f
  9678     0F2D  0837               	movf	??___flmul+1,w
  9679     0F2E  3DC3               	addwfc	___flmul@prod+1,f
  9680     0F2F  0838               	movf	??___flmul+2,w
  9681     0F30  3DC4               	addwfc	___flmul@prod+2,f
  9682     0F31  0839               	movf	??___flmul+3,w
  9683     0F32  3DC5               	addwfc	___flmul@prod+3,f
  9684     0F33                     l4680:
  9685     0F33  3008               	movlw	8
  9686     0F34                     u6145:
  9687     0F34  35BD               	lslf	___flmul@grs,f
  9688     0F35  0DBE               	rlf	___flmul@grs+1,f
  9689     0F36  0DBF               	rlf	___flmul@grs+2,f
  9690     0F37  0DC0               	rlf	___flmul@grs+3,f
  9691     0F38  0B89               	decfsz	9,f
  9692     0F39  2F34               	goto	u6145
  9693     0F3A                     l4682:
  9694     0F3A  0841               	movf	___flmul@bexp,w
  9695     0F3B  073C               	addwf	___flmul@aexp,w
  9696     0F3C  00B6               	movwf	??___flmul
  9697     0F3D  01B7               	clrf	??___flmul+1
  9698     0F3E  0DB7               	rlf	??___flmul+1,f
  9699     0F3F  0836               	movf	??___flmul,w
  9700     0F40  3E82               	addlw	130
  9701     0F41  00C6               	movwf	___flmul@temp
  9702     0F42  30FF               	movlw	255
  9703     0F43  3D37               	addwfc	??___flmul+1,w
  9704     0F44  00C7               	movwf	___flmul@temp+1
  9705     0F45  2F5D               	goto	l4694
  9706     0F46                     l4684:
  9707     0F46  3001               	movlw	1
  9708     0F47                     u6155:
  9709     0F47  35C2               	lslf	___flmul@prod,f
  9710     0F48  0DC3               	rlf	___flmul@prod+1,f
  9711     0F49  0DC4               	rlf	___flmul@prod+2,f
  9712     0F4A  0DC5               	rlf	___flmul@prod+3,f
  9713     0F4B  0B89               	decfsz	9,f
  9714     0F4C  2F47               	goto	u6155
  9715     0F4D                     l4686:
  9716     0F4D  1FC0               	btfss	___flmul@grs+3,7
  9717     0F4E  2F50               	goto	u6161
  9718     0F4F  2F51               	goto	u6160
  9719     0F50                     u6161:
  9720     0F50  2F52               	goto	l4690
  9721     0F51                     u6160:
  9722     0F51                     l4688:
  9723     0F51  1442               	bsf	___flmul@prod,0
  9724     0F52                     l4690:
  9725     0F52  3001               	movlw	1
  9726     0F53                     u6175:
  9727     0F53  35BD               	lslf	___flmul@grs,f
  9728     0F54  0DBE               	rlf	___flmul@grs+1,f
  9729     0F55  0DBF               	rlf	___flmul@grs+2,f
  9730     0F56  0DC0               	rlf	___flmul@grs+3,f
  9731     0F57  0B89               	decfsz	9,f
  9732     0F58  2F53               	goto	u6175
  9733     0F59                     l4692:
  9734     0F59  30FF               	movlw	255
  9735     0F5A  07C6               	addwf	___flmul@temp,f
  9736     0F5B  30FF               	movlw	255
  9737     0F5C  3DC7               	addwfc	___flmul@temp+1,f
  9738     0F5D                     l4694:
  9739     0F5D  1FC4               	btfss	___flmul@prod+2,7
  9740     0F5E  2F60               	goto	u6181
  9741     0F5F  2F61               	goto	u6180
  9742     0F60                     u6181:
  9743     0F60  2F46               	goto	l4684
  9744     0F61                     u6180:
  9745     0F61                     l4696:
  9746     0F61  01BC               	clrf	___flmul@aexp
  9747     0F62                     l4698:
  9748     0F62  1FC0               	btfss	___flmul@grs+3,7
  9749     0F63  2F65               	goto	u6191
  9750     0F64  2F66               	goto	u6190
  9751     0F65                     u6191:
  9752     0F65  2F82               	goto	l4706
  9753     0F66                     u6190:
  9754     0F66                     l4700:
  9755     0F66  30FF               	movlw	255
  9756     0F67  053D               	andwf	___flmul@grs,w
  9757     0F68  00B6               	movwf	??___flmul
  9758     0F69  30FF               	movlw	255
  9759     0F6A  053E               	andwf	___flmul@grs+1,w
  9760     0F6B  00B7               	movwf	??___flmul+1
  9761     0F6C  30FF               	movlw	255
  9762     0F6D  053F               	andwf	___flmul@grs+2,w
  9763     0F6E  00B8               	movwf	??___flmul+2
  9764     0F6F  307F               	movlw	127
  9765     0F70  0540               	andwf	___flmul@grs+3,w
  9766     0F71  00B9               	movwf	??___flmul+3
  9767     0F72  0839               	movf	??___flmul+3,w
  9768     0F73  0438               	iorwf	??___flmul+2,w
  9769     0F74  0437               	iorwf	??___flmul+1,w
  9770     0F75  0436               	iorwf	??___flmul,w
  9771     0F76  1903               	skipnz
  9772     0F77  2F79               	goto	u6201
  9773     0F78  2F7A               	goto	u6200
  9774     0F79                     u6201:
  9775     0F79  2F7D               	goto	l1107
  9776     0F7A                     u6200:
  9777     0F7A                     l4702:
  9778     0F7A  3001               	movlw	1
  9779     0F7B  00BC               	movwf	___flmul@aexp
  9780     0F7C  2F82               	goto	l4706
  9781     0F7D                     l1107:
  9782     0F7D  1C42               	btfss	___flmul@prod,0
  9783     0F7E  2F80               	goto	u6211
  9784     0F7F  2F81               	goto	u6210
  9785     0F80                     u6211:
  9786     0F80  2F82               	goto	l4706
  9787     0F81                     u6210:
  9788     0F81  2F7A               	goto	l4702
  9789     0F82                     l4706:
  9790     0F82  083C               	movf	___flmul@aexp,w
  9791     0F83  1903               	btfsc	3,2
  9792     0F84  2F86               	goto	u6221
  9793     0F85  2F87               	goto	u6220
  9794     0F86                     u6221:
  9795     0F86  2FAD               	goto	l4716
  9796     0F87                     u6220:
  9797     0F87                     l4708:
  9798     0F87  3001               	movlw	1
  9799     0F88  07C2               	addwf	___flmul@prod,f
  9800     0F89  3000               	movlw	0
  9801     0F8A  3DC3               	addwfc	___flmul@prod+1,f
  9802     0F8B  3DC4               	addwfc	___flmul@prod+2,f
  9803     0F8C  3DC5               	addwfc	___flmul@prod+3,f
  9804     0F8D                     l4710:
  9805     0F8D  1C45               	btfss	___flmul@prod+3,0
  9806     0F8E  2F90               	goto	u6231
  9807     0F8F  2F91               	goto	u6230
  9808     0F90                     u6231:
  9809     0F90  2FAD               	goto	l4716
  9810     0F91                     u6230:
  9811     0F91                     l4712:
  9812     0F91  0842               	movf	___flmul@prod,w
  9813     0F92  00B6               	movwf	??___flmul
  9814     0F93  0843               	movf	___flmul@prod+1,w
  9815     0F94  00B7               	movwf	??___flmul+1
  9816     0F95  0844               	movf	___flmul@prod+2,w
  9817     0F96  00B8               	movwf	??___flmul+2
  9818     0F97  0845               	movf	___flmul@prod+3,w
  9819     0F98  00B9               	movwf	??___flmul+3
  9820     0F99  3001               	movlw	1
  9821     0F9A  00BA               	movwf	??___flmul+4
  9822     0F9B                     u6245:
  9823     0F9B  37B9               	asrf	??___flmul+3,f
  9824     0F9C  0CB8               	rrf	??___flmul+2,f
  9825     0F9D  0CB7               	rrf	??___flmul+1,f
  9826     0F9E  0CB6               	rrf	??___flmul,f
  9827     0F9F                     u6240:
  9828     0F9F  0BBA               	decfsz	??___flmul+4,f
  9829     0FA0  2F9B               	goto	u6245
  9830     0FA1  0839               	movf	??___flmul+3,w
  9831     0FA2  00C5               	movwf	___flmul@prod+3
  9832     0FA3  0838               	movf	??___flmul+2,w
  9833     0FA4  00C4               	movwf	___flmul@prod+2
  9834     0FA5  0837               	movf	??___flmul+1,w
  9835     0FA6  00C3               	movwf	___flmul@prod+1
  9836     0FA7  0836               	movf	??___flmul,w
  9837     0FA8  00C2               	movwf	___flmul@prod
  9838     0FA9                     l4714:
  9839     0FA9  3001               	movlw	1
  9840     0FAA  07C6               	addwf	___flmul@temp,f
  9841     0FAB  3000               	movlw	0
  9842     0FAC  3DC7               	addwfc	___flmul@temp+1,f
  9843     0FAD                     l4716:
  9844     0FAD  0847               	movf	___flmul@temp+1,w
  9845     0FAE  3A80               	xorlw	128
  9846     0FAF  00B6               	movwf	??___flmul
  9847     0FB0  3080               	movlw	128
  9848     0FB1  0236               	subwf	??___flmul,w
  9849     0FB2  1D03               	skipz
  9850     0FB3  2FB6               	goto	u6255
  9851     0FB4  30FF               	movlw	255
  9852     0FB5  0246               	subwf	___flmul@temp,w
  9853     0FB6                     u6255:
  9854     0FB6  1C03               	skipc
  9855     0FB7  2FB9               	goto	u6251
  9856     0FB8  2FBA               	goto	u6250
  9857     0FB9                     u6251:
  9858     0FB9  2FC4               	goto	l4720
  9859     0FBA                     u6250:
  9860     0FBA                     l4718:
  9861     0FBA  307F               	movlw	127
  9862     0FBB  0020               	movlb	0	; select bank0
  9863     0FBC  00C5               	movwf	___flmul@prod+3
  9864     0FBD  3080               	movlw	128
  9865     0FBE  00C4               	movwf	___flmul@prod+2
  9866     0FBF  3000               	movlw	0
  9867     0FC0  00C3               	movwf	___flmul@prod+1
  9868     0FC1  3000               	movlw	0
  9869     0FC2  00C2               	movwf	___flmul@prod
  9870     0FC3  2FF5               	goto	l1113
  9871     0FC4                     l4720:
  9872     0FC4  0020               	movlb	0	; select bank0
  9873     0FC5  0847               	movf	___flmul@temp+1,w
  9874     0FC6  3A80               	xorlw	128
  9875     0FC7  00B6               	movwf	??___flmul
  9876     0FC8  3080               	movlw	128
  9877     0FC9  0236               	subwf	??___flmul,w
  9878     0FCA  1D03               	skipz
  9879     0FCB  2FCE               	goto	u6265
  9880     0FCC  3001               	movlw	1
  9881     0FCD  0246               	subwf	___flmul@temp,w
  9882     0FCE                     u6265:
  9883     0FCE  1803               	skipnc
  9884     0FCF  2FD1               	goto	u6261
  9885     0FD0  2FD2               	goto	u6260
  9886     0FD1                     u6261:
  9887     0FD1  2FDD               	goto	l4726
  9888     0FD2                     u6260:
  9889     0FD2                     l4722:
  9890     0FD2  3000               	movlw	0
  9891     0FD3  0020               	movlb	0	; select bank0
  9892     0FD4  00C5               	movwf	___flmul@prod+3
  9893     0FD5  3000               	movlw	0
  9894     0FD6  00C4               	movwf	___flmul@prod+2
  9895     0FD7  3000               	movlw	0
  9896     0FD8  00C3               	movwf	___flmul@prod+1
  9897     0FD9  3000               	movlw	0
  9898     0FDA  00C2               	movwf	___flmul@prod
  9899     0FDB                     l4724:
  9900     0FDB  01BB               	clrf	___flmul@sign
  9901     0FDC  2FF5               	goto	l1113
  9902     0FDD                     l4726:
  9903     0FDD  0020               	movlb	0	; select bank0
  9904     0FDE  0846               	movf	___flmul@temp,w
  9905     0FDF  00C1               	movwf	___flmul@bexp
  9906     0FE0  30FF               	movlw	255
  9907     0FE1  05C2               	andwf	___flmul@prod,f
  9908     0FE2  30FF               	movlw	255
  9909     0FE3  05C3               	andwf	___flmul@prod+1,f
  9910     0FE4  307F               	movlw	127
  9911     0FE5  05C4               	andwf	___flmul@prod+2,f
  9912     0FE6  3000               	movlw	0
  9913     0FE7  05C5               	andwf	___flmul@prod+3,f
  9914     0FE8                     l4728:
  9915     0FE8  1C41               	btfss	___flmul@bexp,0
  9916     0FE9  2FEB               	goto	u6271
  9917     0FEA  2FEC               	goto	u6270
  9918     0FEB                     u6271:
  9919     0FEB  2FED               	goto	l4732
  9920     0FEC                     u6270:
  9921     0FEC                     l4730:
  9922     0FEC  17C4               	bsf	___flmul@prod+2,7
  9923     0FED                     l4732:
  9924     0FED  0841               	movf	___flmul@bexp,w
  9925     0FEE  00B6               	movwf	??___flmul
  9926     0FEF  3001               	movlw	1
  9927     0FF0                     u6285:
  9928     0FF0  36B6               	lsrf	??___flmul,f
  9929     0FF1  0B89               	decfsz	9,f
  9930     0FF2  2FF0               	goto	u6285
  9931     0FF3  0836               	movf	??___flmul,w
  9932     0FF4  00C5               	movwf	___flmul@prod+3
  9933     0FF5                     l1113:
  9934     0FF5  083B               	movf	___flmul@sign,w
  9935     0FF6  04C5               	iorwf	___flmul@prod+3,f
  9936     0FF7                     l4734:
  9937     0FF7  0845               	movf	___flmul@prod+3,w
  9938     0FF8  00B1               	movwf	?___flmul+3
  9939     0FF9  0844               	movf	___flmul@prod+2,w
  9940     0FFA  00B0               	movwf	?___flmul+2
  9941     0FFB  0843               	movf	___flmul@prod+1,w
  9942     0FFC  00AF               	movwf	?___flmul+1
  9943     0FFD  0842               	movf	___flmul@prod,w
  9944     0FFE  00AE               	movwf	?___flmul
  9945     0FFF                     l1101:
  9946     0FFF  0008               	return
  9947     1000                     __end_of___flmul:
  9948                           
  9949                           	psect	text23
  9950     107A                     __ptext23:	
  9951 ;; *************** function __Umul8_16 *****************
  9952 ;; Defined at:
  9953 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/Umul8_16.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  multiplier      1    wreg     unsigned char 
  9956 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9959 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  9960 ;;  product         2    4[BANK0 ] unsigned short 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  2    0[BANK0 ] unsigned int 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9970 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;Total ram usage:        9 bytes
  9975 ;; Hardware stack levels used: 1
  9976 ;; Hardware stack levels required when called: 4
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		___flmul
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984     107A                     __Umul8_16:	
  9985                           ;psect for function __Umul8_16
  9986                           
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9990                           ;__Umul8_16@multiplier stored from wreg
  9991     107A  0020               	movlb	0	; select bank0
  9992     107B  00A8               	movwf	__Umul8_16@multiplier
  9993     107C                     l4512:
  9994     107C  01A4               	clrf	__Umul8_16@product
  9995     107D  01A5               	clrf	__Umul8_16@product+1
  9996     107E                     l4514:
  9997     107E  0820               	movf	__Umul8_16@multiplicand,w
  9998     107F  00A2               	movwf	??__Umul8_16
  9999     1080  01A3               	clrf	??__Umul8_16+1
 10000     1081  0822               	movf	??__Umul8_16,w
 10001     1082  00A6               	movwf	__Umul8_16@word_mpld
 10002     1083  0823               	movf	??__Umul8_16+1,w
 10003     1084  00A7               	movwf	__Umul8_16@word_mpld+1
 10004     1085                     l4516:
 10005     1085  1C28               	btfss	__Umul8_16@multiplier,0
 10006     1086  2888               	goto	u5831
 10007     1087  2889               	goto	u5830
 10008     1088                     u5831:
 10009     1088  288D               	goto	l1120
 10010     1089                     u5830:
 10011     1089                     l4518:
 10012     1089  0826               	movf	__Umul8_16@word_mpld,w
 10013     108A  07A4               	addwf	__Umul8_16@product,f
 10014     108B  0827               	movf	__Umul8_16@word_mpld+1,w
 10015     108C  3DA5               	addwfc	__Umul8_16@product+1,f
 10016     108D                     l1120:
 10017     108D  3001               	movlw	1
 10018     108E                     u5845:
 10019     108E  35A6               	lslf	__Umul8_16@word_mpld,f
 10020     108F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 10021     1090  0B89               	decfsz	9,f
 10022     1091  288E               	goto	u5845
 10023     1092  1003               	clrc
 10024     1093  0CA8               	rrf	__Umul8_16@multiplier,f
 10025     1094                     l4520:
 10026     1094  0828               	movf	__Umul8_16@multiplier,w
 10027     1095  1D03               	btfss	3,2
 10028     1096  2898               	goto	u5851
 10029     1097  2899               	goto	u5850
 10030     1098                     u5851:
 10031     1098  2885               	goto	l4516
 10032     1099                     u5850:
 10033     1099                     l4522:
 10034     1099  0825               	movf	__Umul8_16@product+1,w
 10035     109A  00A1               	movwf	?__Umul8_16+1
 10036     109B  0824               	movf	__Umul8_16@product,w
 10037     109C  00A0               	movwf	?__Umul8_16
 10038     109D                     l1122:
 10039     109D  0008               	return
 10040     109E                     __end_of__Umul8_16:
 10041                           
 10042                           	psect	text24
 10043     1183                     __ptext24:	
 10044 ;; *************** function ___fleq *****************
 10045 ;; Defined at:
 10046 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/fleq.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;  ff1             4    0[BANK0 ] unsigned int 
 10049 ;;  ff2             4    4[BANK0 ] unsigned int 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;		None
 10052 ;; Return value:  Size  Location     Type
 10053 ;;		None               void
 10054 ;; Registers used:
 10055 ;;		wreg, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10061 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;Total ram usage:       12 bytes
 10066 ;; Hardware stack levels used: 1
 10067 ;; Hardware stack levels required when called: 4
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_efgtoa
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075     1183                     ___fleq:	
 10076                           ;psect for function ___fleq
 10077                           
 10078     1183                     l3220:	
 10079                           ;incstack = 0
 10080                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10081                           
 10082     1183  3000               	movlw	0
 10083     1184  0020               	movlb	0	; select bank0
 10084     1185  0520               	andwf	___fleq@ff1,w
 10085     1186  00A8               	movwf	??___fleq
 10086     1187  3000               	movlw	0
 10087     1188  0521               	andwf	___fleq@ff1+1,w
 10088     1189  00A9               	movwf	??___fleq+1
 10089     118A  3080               	movlw	128
 10090     118B  0522               	andwf	___fleq@ff1+2,w
 10091     118C  00AA               	movwf	??___fleq+2
 10092     118D  307F               	movlw	127
 10093     118E  0523               	andwf	___fleq@ff1+3,w
 10094     118F  00AB               	movwf	??___fleq+3
 10095     1190  082B               	movf	??___fleq+3,w
 10096     1191  042A               	iorwf	??___fleq+2,w
 10097     1192  0429               	iorwf	??___fleq+1,w
 10098     1193  0428               	iorwf	??___fleq,w
 10099     1194  1D03               	skipz
 10100     1195  2997               	goto	u3511
 10101     1196  2998               	goto	u3510
 10102     1197                     u3511:
 10103     1197  29A0               	goto	l873
 10104     1198                     u3510:
 10105     1198                     l3222:
 10106     1198  3000               	movlw	0
 10107     1199  00A3               	movwf	___fleq@ff1+3
 10108     119A  3000               	movlw	0
 10109     119B  00A2               	movwf	___fleq@ff1+2
 10110     119C  3000               	movlw	0
 10111     119D  00A1               	movwf	___fleq@ff1+1
 10112     119E  3000               	movlw	0
 10113     119F  00A0               	movwf	___fleq@ff1
 10114     11A0                     l873:
 10115     11A0  3000               	movlw	0
 10116     11A1  0524               	andwf	___fleq@ff2,w
 10117     11A2  00A8               	movwf	??___fleq
 10118     11A3  3000               	movlw	0
 10119     11A4  0525               	andwf	___fleq@ff2+1,w
 10120     11A5  00A9               	movwf	??___fleq+1
 10121     11A6  3080               	movlw	128
 10122     11A7  0526               	andwf	___fleq@ff2+2,w
 10123     11A8  00AA               	movwf	??___fleq+2
 10124     11A9  307F               	movlw	127
 10125     11AA  0527               	andwf	___fleq@ff2+3,w
 10126     11AB  00AB               	movwf	??___fleq+3
 10127     11AC  082B               	movf	??___fleq+3,w
 10128     11AD  042A               	iorwf	??___fleq+2,w
 10129     11AE  0429               	iorwf	??___fleq+1,w
 10130     11AF  0428               	iorwf	??___fleq,w
 10131     11B0  1D03               	skipz
 10132     11B1  29B3               	goto	u3521
 10133     11B2  29B4               	goto	u3520
 10134     11B3                     u3521:
 10135     11B3  29BC               	goto	l874
 10136     11B4                     u3520:
 10137     11B4                     l3224:
 10138     11B4  3000               	movlw	0
 10139     11B5  00A7               	movwf	___fleq@ff2+3
 10140     11B6  3000               	movlw	0
 10141     11B7  00A6               	movwf	___fleq@ff2+2
 10142     11B8  3000               	movlw	0
 10143     11B9  00A5               	movwf	___fleq@ff2+1
 10144     11BA  3000               	movlw	0
 10145     11BB  00A4               	movwf	___fleq@ff2
 10146     11BC                     l874:
 10147     11BC  0827               	movf	___fleq@ff2+3,w
 10148     11BD  0623               	xorwf	___fleq@ff1+3,w
 10149     11BE  1D03               	skipz
 10150     11BF  29CA               	goto	u3535
 10151     11C0  0826               	movf	___fleq@ff2+2,w
 10152     11C1  0622               	xorwf	___fleq@ff1+2,w
 10153     11C2  1D03               	skipz
 10154     11C3  29CA               	goto	u3535
 10155     11C4  0825               	movf	___fleq@ff2+1,w
 10156     11C5  0621               	xorwf	___fleq@ff1+1,w
 10157     11C6  1D03               	skipz
 10158     11C7  29CA               	goto	u3535
 10159     11C8  0824               	movf	___fleq@ff2,w
 10160     11C9  0620               	xorwf	___fleq@ff1,w
 10161     11CA                     u3535:
 10162     11CA  1903               	skipnz
 10163     11CB  29CD               	goto	u3531
 10164     11CC  29CE               	goto	u3530
 10165     11CD                     u3531:
 10166     11CD  29D0               	goto	l3228
 10167     11CE                     u3530:
 10168     11CE                     l3226:
 10169     11CE  1003               	clrc
 10170     11CF  29D1               	goto	l879
 10171     11D0                     l3228:
 10172     11D0  1403               	setc
 10173     11D1                     l879:
 10174     11D1  0008               	return
 10175     11D2                     __end_of___fleq:
 10176                           
 10177                           	psect	text25
 10178     165C                     __ptext25:	
 10179 ;; *************** function ___fldiv *****************
 10180 ;; Defined at:
 10181 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcdiv.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  a               4    0[BANK0 ] unsigned int 
 10184 ;;  b               4    4[BANK0 ] unsigned int 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  grs             4   20[BANK0 ] unsigned long 
 10187 ;;  rem             4   13[BANK0 ] unsigned long 
 10188 ;;  new_exp         2   18[BANK0 ] short 
 10189 ;;  aexp            1   25[BANK0 ] unsigned char 
 10190 ;;  bexp            1   24[BANK0 ] unsigned char 
 10191 ;;  sign            1   17[BANK0 ] unsigned char 
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  4    0[BANK0 ] unsigned char 
 10194 ;; Registers used:
 10195 ;;		wreg, status,2, status,0
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10201 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;Total ram usage:       26 bytes
 10206 ;; Hardware stack levels used: 1
 10207 ;; Hardware stack levels required when called: 4
 10208 ;; This function calls:
 10209 ;;		Nothing
 10210 ;; This function is called by:
 10211 ;;		_efgtoa
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215     165C                     ___fldiv:	
 10216                           ;psect for function ___fldiv
 10217                           
 10218     165C                     l3302:	
 10219                           ;incstack = 0
 10220                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10221                           
 10222     165C  0020               	movlb	0	; select bank0
 10223     165D  0827               	movf	___fldiv@b+3,w
 10224     165E  3980               	andlw	128
 10225     165F  00B1               	movwf	___fldiv@sign
 10226     1660                     l3304:
 10227     1660  3527               	lslf	___fldiv@b+3,w
 10228     1661  00B8               	movwf	___fldiv@bexp
 10229     1662                     l3306:
 10230     1662  1FA6               	btfss	___fldiv@b+2,7
 10231     1663  2E65               	goto	u3701
 10232     1664  2E66               	goto	u3700
 10233     1665                     u3701:
 10234     1665  2E67               	goto	l3310
 10235     1666                     u3700:
 10236     1666                     l3308:
 10237     1666  1438               	bsf	___fldiv@bexp,0
 10238     1667                     l3310:
 10239     1667  0838               	movf	___fldiv@bexp,w
 10240     1668  1903               	btfsc	3,2
 10241     1669  2E6B               	goto	u3711
 10242     166A  2E6C               	goto	u3710
 10243     166B                     u3711:
 10244     166B  2E7C               	goto	l3320
 10245     166C                     u3710:
 10246     166C                     l3312:
 10247     166C  0A38               	incf	___fldiv@bexp,w
 10248     166D  1D03               	btfss	3,2
 10249     166E  2E70               	goto	u3721
 10250     166F  2E71               	goto	u3720
 10251     1670                     u3721:
 10252     1670  2E79               	goto	l3316
 10253     1671                     u3720:
 10254     1671                     l3314:
 10255     1671  3000               	movlw	0
 10256     1672  00A7               	movwf	___fldiv@b+3
 10257     1673  3000               	movlw	0
 10258     1674  00A6               	movwf	___fldiv@b+2
 10259     1675  3000               	movlw	0
 10260     1676  00A5               	movwf	___fldiv@b+1
 10261     1677  3000               	movlw	0
 10262     1678  00A4               	movwf	___fldiv@b
 10263     1679                     l3316:
 10264     1679  17A6               	bsf	___fldiv@b+2,7
 10265     167A                     l3318:
 10266     167A  01A7               	clrf	___fldiv@b+3
 10267     167B  2E84               	goto	l3322
 10268     167C                     l3320:
 10269     167C  3000               	movlw	0
 10270     167D  00A7               	movwf	___fldiv@b+3
 10271     167E  3000               	movlw	0
 10272     167F  00A6               	movwf	___fldiv@b+2
 10273     1680  3000               	movlw	0
 10274     1681  00A5               	movwf	___fldiv@b+1
 10275     1682  3000               	movlw	0
 10276     1683  00A4               	movwf	___fldiv@b
 10277     1684                     l3322:
 10278     1684  0823               	movf	___fldiv@a+3,w
 10279     1685  3980               	andlw	128
 10280     1686  06B1               	xorwf	___fldiv@sign,f
 10281     1687                     l3324:
 10282     1687  3523               	lslf	___fldiv@a+3,w
 10283     1688  00B9               	movwf	___fldiv@aexp
 10284     1689                     l3326:
 10285     1689  1FA2               	btfss	___fldiv@a+2,7
 10286     168A  2E8C               	goto	u3731
 10287     168B  2E8D               	goto	u3730
 10288     168C                     u3731:
 10289     168C  2E8E               	goto	l3330
 10290     168D                     u3730:
 10291     168D                     l3328:
 10292     168D  1439               	bsf	___fldiv@aexp,0
 10293     168E                     l3330:
 10294     168E  0839               	movf	___fldiv@aexp,w
 10295     168F  1903               	btfsc	3,2
 10296     1690  2E92               	goto	u3741
 10297     1691  2E93               	goto	u3740
 10298     1692                     u3741:
 10299     1692  2EA3               	goto	l3340
 10300     1693                     u3740:
 10301     1693                     l3332:
 10302     1693  0A39               	incf	___fldiv@aexp,w
 10303     1694  1D03               	btfss	3,2
 10304     1695  2E97               	goto	u3751
 10305     1696  2E98               	goto	u3750
 10306     1697                     u3751:
 10307     1697  2EA0               	goto	l3336
 10308     1698                     u3750:
 10309     1698                     l3334:
 10310     1698  3000               	movlw	0
 10311     1699  00A3               	movwf	___fldiv@a+3
 10312     169A  3000               	movlw	0
 10313     169B  00A2               	movwf	___fldiv@a+2
 10314     169C  3000               	movlw	0
 10315     169D  00A1               	movwf	___fldiv@a+1
 10316     169E  3000               	movlw	0
 10317     169F  00A0               	movwf	___fldiv@a
 10318     16A0                     l3336:
 10319     16A0  17A2               	bsf	___fldiv@a+2,7
 10320     16A1                     l3338:
 10321     16A1  01A3               	clrf	___fldiv@a+3
 10322     16A2  2EAB               	goto	l1061
 10323     16A3                     l3340:
 10324     16A3  3000               	movlw	0
 10325     16A4  00A3               	movwf	___fldiv@a+3
 10326     16A5  3000               	movlw	0
 10327     16A6  00A2               	movwf	___fldiv@a+2
 10328     16A7  3000               	movlw	0
 10329     16A8  00A1               	movwf	___fldiv@a+1
 10330     16A9  3000               	movlw	0
 10331     16AA  00A0               	movwf	___fldiv@a
 10332     16AB                     l1061:
 10333     16AB  0823               	movf	___fldiv@a+3,w
 10334     16AC  0422               	iorwf	___fldiv@a+2,w
 10335     16AD  0421               	iorwf	___fldiv@a+1,w
 10336     16AE  0420               	iorwf	___fldiv@a,w
 10337     16AF  1D03               	skipz
 10338     16B0  2EB2               	goto	u3761
 10339     16B1  2EB3               	goto	u3760
 10340     16B2                     u3761:
 10341     16B2  2ECA               	goto	l3350
 10342     16B3                     u3760:
 10343     16B3                     l3342:
 10344     16B3  3000               	movlw	0
 10345     16B4  00A7               	movwf	___fldiv@b+3
 10346     16B5  3000               	movlw	0
 10347     16B6  00A6               	movwf	___fldiv@b+2
 10348     16B7  3000               	movlw	0
 10349     16B8  00A5               	movwf	___fldiv@b+1
 10350     16B9  3000               	movlw	0
 10351     16BA  00A4               	movwf	___fldiv@b
 10352     16BB  3080               	movlw	128
 10353     16BC  04A6               	iorwf	___fldiv@b+2,f
 10354     16BD  307F               	movlw	127
 10355     16BE  04A7               	iorwf	___fldiv@b+3,f
 10356     16BF                     l3344:
 10357     16BF  0831               	movf	___fldiv@sign,w
 10358     16C0  04A7               	iorwf	___fldiv@b+3,f
 10359     16C1                     l3346:
 10360     16C1  0827               	movf	___fldiv@b+3,w
 10361     16C2  00A3               	movwf	?___fldiv+3
 10362     16C3  0826               	movf	___fldiv@b+2,w
 10363     16C4  00A2               	movwf	?___fldiv+2
 10364     16C5  0825               	movf	___fldiv@b+1,w
 10365     16C6  00A1               	movwf	?___fldiv+1
 10366     16C7  0824               	movf	___fldiv@b,w
 10367     16C8  00A0               	movwf	?___fldiv
 10368     16C9  2FFF               	goto	l1063
 10369     16CA                     l3350:
 10370     16CA  0838               	movf	___fldiv@bexp,w
 10371     16CB  1D03               	btfss	3,2
 10372     16CC  2ECE               	goto	u3771
 10373     16CD  2ECF               	goto	u3770
 10374     16CE                     u3771:
 10375     16CE  2ED8               	goto	l3356
 10376     16CF                     u3770:
 10377     16CF                     l3352:
 10378     16CF  3000               	movlw	0
 10379     16D0  00A3               	movwf	?___fldiv+3
 10380     16D1  3000               	movlw	0
 10381     16D2  00A2               	movwf	?___fldiv+2
 10382     16D3  3000               	movlw	0
 10383     16D4  00A1               	movwf	?___fldiv+1
 10384     16D5  3000               	movlw	0
 10385     16D6  00A0               	movwf	?___fldiv
 10386     16D7  2FFF               	goto	l1063
 10387     16D8                     l3356:
 10388     16D8  0838               	movf	___fldiv@bexp,w
 10389     16D9  00A8               	movwf	??___fldiv
 10390     16DA  01A9               	clrf	??___fldiv+1
 10391     16DB  0829               	movf	??___fldiv+1,w
 10392     16DC  00AB               	movwf	??___fldiv+3
 10393     16DD  0839               	movf	___fldiv@aexp,w
 10394     16DE  0228               	subwf	??___fldiv,w
 10395     16DF  00AA               	movwf	??___fldiv+2
 10396     16E0  1C03               	skipc
 10397     16E1  03AB               	decf	??___fldiv+3,f
 10398     16E2  082A               	movf	??___fldiv+2,w
 10399     16E3  3E7F               	addlw	127
 10400     16E4  00B2               	movwf	___fldiv@new_exp
 10401     16E5  3000               	movlw	0
 10402     16E6  3D2B               	addwfc	??___fldiv+3,w
 10403     16E7  00B3               	movwf	___fldiv@new_exp+1
 10404     16E8                     l3358:
 10405     16E8  0827               	movf	___fldiv@b+3,w
 10406     16E9  00B0               	movwf	___fldiv@rem+3
 10407     16EA  0826               	movf	___fldiv@b+2,w
 10408     16EB  00AF               	movwf	___fldiv@rem+2
 10409     16EC  0825               	movf	___fldiv@b+1,w
 10410     16ED  00AE               	movwf	___fldiv@rem+1
 10411     16EE  0824               	movf	___fldiv@b,w
 10412     16EF  00AD               	movwf	___fldiv@rem
 10413     16F0                     l3360:
 10414     16F0  3000               	movlw	0
 10415     16F1  00A7               	movwf	___fldiv@b+3
 10416     16F2  3000               	movlw	0
 10417     16F3  00A6               	movwf	___fldiv@b+2
 10418     16F4  3000               	movlw	0
 10419     16F5  00A5               	movwf	___fldiv@b+1
 10420     16F6  3000               	movlw	0
 10421     16F7  00A4               	movwf	___fldiv@b
 10422     16F8                     l3362:
 10423     16F8  3000               	movlw	0
 10424     16F9  00B7               	movwf	___fldiv@grs+3
 10425     16FA  3000               	movlw	0
 10426     16FB  00B6               	movwf	___fldiv@grs+2
 10427     16FC  3000               	movlw	0
 10428     16FD  00B5               	movwf	___fldiv@grs+1
 10429     16FE  3000               	movlw	0
 10430     16FF  00B4               	movwf	___fldiv@grs
 10431     1700                     l3364:
 10432     1700  01B9               	clrf	___fldiv@aexp
 10433     1701  2F3E               	goto	l3384
 10434     1702                     l3366:
 10435     1702  0839               	movf	___fldiv@aexp,w
 10436     1703  1903               	btfsc	3,2
 10437     1704  2F06               	goto	u3781
 10438     1705  2F07               	goto	u3780
 10439     1706                     u3781:
 10440     1706  2F21               	goto	l3376
 10441     1707                     u3780:
 10442     1707                     l3368:
 10443     1707  3001               	movlw	1
 10444     1708                     u3795:
 10445     1708  35AD               	lslf	___fldiv@rem,f
 10446     1709  0DAE               	rlf	___fldiv@rem+1,f
 10447     170A  0DAF               	rlf	___fldiv@rem+2,f
 10448     170B  0DB0               	rlf	___fldiv@rem+3,f
 10449     170C  0B89               	decfsz	9,f
 10450     170D  2F08               	goto	u3795
 10451     170E  3001               	movlw	1
 10452     170F                     u3805:
 10453     170F  35A4               	lslf	___fldiv@b,f
 10454     1710  0DA5               	rlf	___fldiv@b+1,f
 10455     1711  0DA6               	rlf	___fldiv@b+2,f
 10456     1712  0DA7               	rlf	___fldiv@b+3,f
 10457     1713  0B89               	decfsz	9,f
 10458     1714  2F0F               	goto	u3805
 10459     1715                     l3370:
 10460     1715  1FB7               	btfss	___fldiv@grs+3,7
 10461     1716  2F18               	goto	u3811
 10462     1717  2F19               	goto	u3810
 10463     1718                     u3811:
 10464     1718  2F1A               	goto	l3374
 10465     1719                     u3810:
 10466     1719                     l3372:
 10467     1719  1424               	bsf	___fldiv@b,0
 10468     171A                     l3374:
 10469     171A  3001               	movlw	1
 10470     171B                     u3825:
 10471     171B  35B4               	lslf	___fldiv@grs,f
 10472     171C  0DB5               	rlf	___fldiv@grs+1,f
 10473     171D  0DB6               	rlf	___fldiv@grs+2,f
 10474     171E  0DB7               	rlf	___fldiv@grs+3,f
 10475     171F  0B89               	decfsz	9,f
 10476     1720  2F1B               	goto	u3825
 10477     1721                     l3376:
 10478     1721  0823               	movf	___fldiv@a+3,w
 10479     1722  0230               	subwf	___fldiv@rem+3,w
 10480     1723  1D03               	skipz
 10481     1724  2F2F               	goto	u3835
 10482     1725  0822               	movf	___fldiv@a+2,w
 10483     1726  022F               	subwf	___fldiv@rem+2,w
 10484     1727  1D03               	skipz
 10485     1728  2F2F               	goto	u3835
 10486     1729  0821               	movf	___fldiv@a+1,w
 10487     172A  022E               	subwf	___fldiv@rem+1,w
 10488     172B  1D03               	skipz
 10489     172C  2F2F               	goto	u3835
 10490     172D  0820               	movf	___fldiv@a,w
 10491     172E  022D               	subwf	___fldiv@rem,w
 10492     172F                     u3835:
 10493     172F  1C03               	skipc
 10494     1730  2F32               	goto	u3831
 10495     1731  2F33               	goto	u3830
 10496     1732                     u3831:
 10497     1732  2F3C               	goto	l3382
 10498     1733                     u3830:
 10499     1733                     l3378:
 10500     1733  1737               	bsf	___fldiv@grs+3,6
 10501     1734                     l3380:
 10502     1734  0820               	movf	___fldiv@a,w
 10503     1735  02AD               	subwf	___fldiv@rem,f
 10504     1736  0821               	movf	___fldiv@a+1,w
 10505     1737  3BAE               	subwfb	___fldiv@rem+1,f
 10506     1738  0822               	movf	___fldiv@a+2,w
 10507     1739  3BAF               	subwfb	___fldiv@rem+2,f
 10508     173A  0823               	movf	___fldiv@a+3,w
 10509     173B  3BB0               	subwfb	___fldiv@rem+3,f
 10510     173C                     l3382:
 10511     173C  3001               	movlw	1
 10512     173D  07B9               	addwf	___fldiv@aexp,f
 10513     173E                     l3384:
 10514     173E  301A               	movlw	26
 10515     173F  0239               	subwf	___fldiv@aexp,w
 10516     1740  1C03               	skipc
 10517     1741  2F43               	goto	u3841
 10518     1742  2F44               	goto	u3840
 10519     1743                     u3841:
 10520     1743  2F02               	goto	l3366
 10521     1744                     u3840:
 10522     1744                     l3386:
 10523     1744  0830               	movf	___fldiv@rem+3,w
 10524     1745  042F               	iorwf	___fldiv@rem+2,w
 10525     1746  042E               	iorwf	___fldiv@rem+1,w
 10526     1747  042D               	iorwf	___fldiv@rem,w
 10527     1748  1903               	skipnz
 10528     1749  2F4B               	goto	u3851
 10529     174A  2F4C               	goto	u3850
 10530     174B                     u3851:
 10531     174B  2F65               	goto	l3400
 10532     174C                     u3850:
 10533     174C                     l3388:
 10534     174C  1434               	bsf	___fldiv@grs,0
 10535     174D  2F65               	goto	l3400
 10536     174E                     l3390:
 10537     174E  3001               	movlw	1
 10538     174F                     u3865:
 10539     174F  35A4               	lslf	___fldiv@b,f
 10540     1750  0DA5               	rlf	___fldiv@b+1,f
 10541     1751  0DA6               	rlf	___fldiv@b+2,f
 10542     1752  0DA7               	rlf	___fldiv@b+3,f
 10543     1753  0B89               	decfsz	9,f
 10544     1754  2F4F               	goto	u3865
 10545     1755                     l3392:
 10546     1755  1FB7               	btfss	___fldiv@grs+3,7
 10547     1756  2F58               	goto	u3871
 10548     1757  2F59               	goto	u3870
 10549     1758                     u3871:
 10550     1758  2F5A               	goto	l3396
 10551     1759                     u3870:
 10552     1759                     l3394:
 10553     1759  1424               	bsf	___fldiv@b,0
 10554     175A                     l3396:
 10555     175A  3001               	movlw	1
 10556     175B                     u3885:
 10557     175B  35B4               	lslf	___fldiv@grs,f
 10558     175C  0DB5               	rlf	___fldiv@grs+1,f
 10559     175D  0DB6               	rlf	___fldiv@grs+2,f
 10560     175E  0DB7               	rlf	___fldiv@grs+3,f
 10561     175F  0B89               	decfsz	9,f
 10562     1760  2F5B               	goto	u3885
 10563     1761                     l3398:
 10564     1761  30FF               	movlw	255
 10565     1762  07B2               	addwf	___fldiv@new_exp,f
 10566     1763  30FF               	movlw	255
 10567     1764  3DB3               	addwfc	___fldiv@new_exp+1,f
 10568     1765                     l3400:
 10569     1765  1FA6               	btfss	___fldiv@b+2,7
 10570     1766  2F68               	goto	u3891
 10571     1767  2F69               	goto	u3890
 10572     1768                     u3891:
 10573     1768  2F4E               	goto	l3390
 10574     1769                     u3890:
 10575     1769                     l3402:
 10576     1769  01B9               	clrf	___fldiv@aexp
 10577     176A                     l3404:
 10578     176A  1FB7               	btfss	___fldiv@grs+3,7
 10579     176B  2F6D               	goto	u3901
 10580     176C  2F6E               	goto	u3900
 10581     176D                     u3901:
 10582     176D  2F8A               	goto	l3412
 10583     176E                     u3900:
 10584     176E                     l3406:
 10585     176E  30FF               	movlw	255
 10586     176F  0534               	andwf	___fldiv@grs,w
 10587     1770  00A8               	movwf	??___fldiv
 10588     1771  30FF               	movlw	255
 10589     1772  0535               	andwf	___fldiv@grs+1,w
 10590     1773  00A9               	movwf	??___fldiv+1
 10591     1774  30FF               	movlw	255
 10592     1775  0536               	andwf	___fldiv@grs+2,w
 10593     1776  00AA               	movwf	??___fldiv+2
 10594     1777  307F               	movlw	127
 10595     1778  0537               	andwf	___fldiv@grs+3,w
 10596     1779  00AB               	movwf	??___fldiv+3
 10597     177A  082B               	movf	??___fldiv+3,w
 10598     177B  042A               	iorwf	??___fldiv+2,w
 10599     177C  0429               	iorwf	??___fldiv+1,w
 10600     177D  0428               	iorwf	??___fldiv,w
 10601     177E  1903               	skipnz
 10602     177F  2F81               	goto	u3911
 10603     1780  2F82               	goto	u3910
 10604     1781                     u3911:
 10605     1781  2F85               	goto	l1077
 10606     1782                     u3910:
 10607     1782                     l3408:
 10608     1782  3001               	movlw	1
 10609     1783  00B9               	movwf	___fldiv@aexp
 10610     1784  2F8A               	goto	l3412
 10611     1785                     l1077:
 10612     1785  1C24               	btfss	___fldiv@b,0
 10613     1786  2F88               	goto	u3921
 10614     1787  2F89               	goto	u3920
 10615     1788                     u3921:
 10616     1788  2F8A               	goto	l3412
 10617     1789                     u3920:
 10618     1789  2F82               	goto	l3408
 10619     178A                     l3412:
 10620     178A  0839               	movf	___fldiv@aexp,w
 10621     178B  1903               	btfsc	3,2
 10622     178C  2F8E               	goto	u3931
 10623     178D  2F8F               	goto	u3930
 10624     178E                     u3931:
 10625     178E  2FB5               	goto	l3422
 10626     178F                     u3930:
 10627     178F                     l3414:
 10628     178F  3001               	movlw	1
 10629     1790  07A4               	addwf	___fldiv@b,f
 10630     1791  3000               	movlw	0
 10631     1792  3DA5               	addwfc	___fldiv@b+1,f
 10632     1793  3DA6               	addwfc	___fldiv@b+2,f
 10633     1794  3DA7               	addwfc	___fldiv@b+3,f
 10634     1795                     l3416:
 10635     1795  1C27               	btfss	___fldiv@b+3,0
 10636     1796  2F98               	goto	u3941
 10637     1797  2F99               	goto	u3940
 10638     1798                     u3941:
 10639     1798  2FB5               	goto	l3422
 10640     1799                     u3940:
 10641     1799                     l3418:
 10642     1799  0824               	movf	___fldiv@b,w
 10643     179A  00A8               	movwf	??___fldiv
 10644     179B  0825               	movf	___fldiv@b+1,w
 10645     179C  00A9               	movwf	??___fldiv+1
 10646     179D  0826               	movf	___fldiv@b+2,w
 10647     179E  00AA               	movwf	??___fldiv+2
 10648     179F  0827               	movf	___fldiv@b+3,w
 10649     17A0  00AB               	movwf	??___fldiv+3
 10650     17A1  3001               	movlw	1
 10651     17A2  00AC               	movwf	??___fldiv+4
 10652     17A3                     u3955:
 10653     17A3  37AB               	asrf	??___fldiv+3,f
 10654     17A4  0CAA               	rrf	??___fldiv+2,f
 10655     17A5  0CA9               	rrf	??___fldiv+1,f
 10656     17A6  0CA8               	rrf	??___fldiv,f
 10657     17A7                     u3950:
 10658     17A7  0BAC               	decfsz	??___fldiv+4,f
 10659     17A8  2FA3               	goto	u3955
 10660     17A9  082B               	movf	??___fldiv+3,w
 10661     17AA  00A7               	movwf	___fldiv@b+3
 10662     17AB  082A               	movf	??___fldiv+2,w
 10663     17AC  00A6               	movwf	___fldiv@b+2
 10664     17AD  0829               	movf	??___fldiv+1,w
 10665     17AE  00A5               	movwf	___fldiv@b+1
 10666     17AF  0828               	movf	??___fldiv,w
 10667     17B0  00A4               	movwf	___fldiv@b
 10668     17B1                     l3420:
 10669     17B1  3001               	movlw	1
 10670     17B2  07B2               	addwf	___fldiv@new_exp,f
 10671     17B3  3000               	movlw	0
 10672     17B4  3DB3               	addwfc	___fldiv@new_exp+1,f
 10673     17B5                     l3422:
 10674     17B5  0833               	movf	___fldiv@new_exp+1,w
 10675     17B6  3A80               	xorlw	128
 10676     17B7  00A8               	movwf	??___fldiv
 10677     17B8  3080               	movlw	128
 10678     17B9  0228               	subwf	??___fldiv,w
 10679     17BA  1D03               	skipz
 10680     17BB  2FBE               	goto	u3965
 10681     17BC  30FF               	movlw	255
 10682     17BD  0232               	subwf	___fldiv@new_exp,w
 10683     17BE                     u3965:
 10684     17BE  1C03               	skipc
 10685     17BF  2FC1               	goto	u3961
 10686     17C0  2FC2               	goto	u3960
 10687     17C1                     u3961:
 10688     17C1  2FCF               	goto	l1082
 10689     17C2                     u3960:
 10690     17C2                     l3424:
 10691     17C2  30FF               	movlw	255
 10692     17C3  0020               	movlb	0	; select bank0
 10693     17C4  00B2               	movwf	___fldiv@new_exp
 10694     17C5  3000               	movlw	0
 10695     17C6  00B3               	movwf	___fldiv@new_exp+1
 10696     17C7  3000               	movlw	0
 10697     17C8  00A7               	movwf	___fldiv@b+3
 10698     17C9  3000               	movlw	0
 10699     17CA  00A6               	movwf	___fldiv@b+2
 10700     17CB  3000               	movlw	0
 10701     17CC  00A5               	movwf	___fldiv@b+1
 10702     17CD  3000               	movlw	0
 10703     17CE  00A4               	movwf	___fldiv@b
 10704     17CF                     l1082:
 10705     17CF  0020               	movlb	0	; select bank0
 10706     17D0  0833               	movf	___fldiv@new_exp+1,w
 10707     17D1  3A80               	xorlw	128
 10708     17D2  00A8               	movwf	??___fldiv
 10709     17D3  3080               	movlw	128
 10710     17D4  0228               	subwf	??___fldiv,w
 10711     17D5  1D03               	skipz
 10712     17D6  2FD9               	goto	u3975
 10713     17D7  3001               	movlw	1
 10714     17D8  0232               	subwf	___fldiv@new_exp,w
 10715     17D9                     u3975:
 10716     17D9  1803               	skipnc
 10717     17DA  2FDC               	goto	u3971
 10718     17DB  2FDD               	goto	u3970
 10719     17DC                     u3971:
 10720     17DC  2FE9               	goto	l1083
 10721     17DD                     u3970:
 10722     17DD                     l3426:
 10723     17DD  0020               	movlb	0	; select bank0
 10724     17DE  01B2               	clrf	___fldiv@new_exp
 10725     17DF  01B3               	clrf	___fldiv@new_exp+1
 10726     17E0                     l3428:
 10727     17E0  3000               	movlw	0
 10728     17E1  00A7               	movwf	___fldiv@b+3
 10729     17E2  3000               	movlw	0
 10730     17E3  00A6               	movwf	___fldiv@b+2
 10731     17E4  3000               	movlw	0
 10732     17E5  00A5               	movwf	___fldiv@b+1
 10733     17E6  3000               	movlw	0
 10734     17E7  00A4               	movwf	___fldiv@b
 10735     17E8                     l3430:
 10736     17E8  01B1               	clrf	___fldiv@sign
 10737     17E9                     l1083:
 10738     17E9  0020               	movlb	0	; select bank0
 10739     17EA  0832               	movf	___fldiv@new_exp,w
 10740     17EB  00B8               	movwf	___fldiv@bexp
 10741     17EC                     l3432:
 10742     17EC  1C38               	btfss	___fldiv@bexp,0
 10743     17ED  2FEF               	goto	u3981
 10744     17EE  2FF0               	goto	u3980
 10745     17EF                     u3981:
 10746     17EF  2FF2               	goto	l3436
 10747     17F0                     u3980:
 10748     17F0                     l3434:
 10749     17F0  17A6               	bsf	___fldiv@b+2,7
 10750     17F1  2FF4               	goto	l1085
 10751     17F2                     l3436:
 10752     17F2  307F               	movlw	127
 10753     17F3  05A6               	andwf	___fldiv@b+2,f
 10754     17F4                     l1085:
 10755     17F4  0838               	movf	___fldiv@bexp,w
 10756     17F5  00A8               	movwf	??___fldiv
 10757     17F6  3001               	movlw	1
 10758     17F7                     u3995:
 10759     17F7  36A8               	lsrf	??___fldiv,f
 10760     17F8  0B89               	decfsz	9,f
 10761     17F9  2FF7               	goto	u3995
 10762     17FA  0828               	movf	??___fldiv,w
 10763     17FB  00A7               	movwf	___fldiv@b+3
 10764     17FC  0831               	movf	___fldiv@sign,w
 10765     17FD  04A7               	iorwf	___fldiv@b+3,f
 10766     17FE  2EC1               	goto	l3346
 10767     17FF                     l1063:
 10768     17FF  0008               	return
 10769     1800                     __end_of___fldiv:
 10770                           
 10771                           	psect	text26
 10772     0848                     __ptext26:	
 10773 ;; *************** function _handle_voltage *****************
 10774 ;; Defined at:
 10775 ;;		line 81 in file "main.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  voltage         4   52[BANK0 ] unsigned char 
 10778 ;;  threshold       4   56[BANK0 ] unsigned char 
 10779 ;;  mode            1   60[BANK0 ] unsigned char 
 10780 ;;  reset_flg       1   61[BANK0 ] PTR unsigned char 
 10781 ;;		 -> reset_flg_12(1), reset_flg_24(1), 
 10782 ;;  LED_SetHigh     2   62[BANK0 ] PTR FTN()void 
 10783 ;;		 -> LED_12V_On(1), LED_24V_On(1), 
 10784 ;;  LED_SetLow      2   64[BANK0 ] PTR FTN()void 
 10785 ;;		 -> LED_12V_Off(1), LED_24V_Off(1), 
 10786 ;; Auto vars:     Size  Location     Type
 10787 ;;		None
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  1    wreg      void 
 10790 ;; Registers used:
 10791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10797 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;Total ram usage:       14 bytes
 10802 ;; Hardware stack levels used: 1
 10803 ;; Hardware stack levels required when called: 6
 10804 ;; This function calls:
 10805 ;;		_LED_12V_Off
 10806 ;;		_LED_12V_On
 10807 ;;		_LED_24V_Off
 10808 ;;		_LED_24V_On
 10809 ;;		___flge
 10810 ;;		_delay_ms
 10811 ;;		_handle_buzzer
 10812 ;; This function is called by:
 10813 ;;		_main
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817     0848                     _handle_voltage:	
 10818                           ;psect for function _handle_voltage
 10819                           
 10820     0848                     l5218:	
 10821                           ;incstack = 0
 10822                           ; Regs used in _handle_voltage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10823                           
 10824                           
 10825                           ;main.c: 81: void handle_voltage(double voltage, double threshold, char mode, char *rese
      +                          t_flg, void (*LED_SetHigh)(), void (*LED_SetLow)());main.c: 82: {;main.c: 83:     if (vo
      +                          ltage < threshold && *reset_flg == 3) {
 10826     0848  0020               	movlb	0	; select bank0
 10827     0849  0857               	movf	handle_voltage@voltage+3,w
 10828     084A  00CB               	movwf	___flge@ff1+3
 10829     084B  0856               	movf	handle_voltage@voltage+2,w
 10830     084C  00CA               	movwf	___flge@ff1+2
 10831     084D  0855               	movf	handle_voltage@voltage+1,w
 10832     084E  00C9               	movwf	___flge@ff1+1
 10833     084F  0854               	movf	handle_voltage@voltage,w
 10834     0850  00C8               	movwf	___flge@ff1
 10835     0851  085B               	movf	handle_voltage@threshold+3,w
 10836     0852  00CF               	movwf	___flge@ff2+3
 10837     0853  085A               	movf	handle_voltage@threshold+2,w
 10838     0854  00CE               	movwf	___flge@ff2+2
 10839     0855  0859               	movf	handle_voltage@threshold+1,w
 10840     0856  00CD               	movwf	___flge@ff2+1
 10841     0857  0858               	movf	handle_voltage@threshold,w
 10842     0858  00CC               	movwf	___flge@ff2
 10843     0859  3193  23D6  3188   	fcall	___flge
 10844     085C  1803               	btfsc	3,0
 10845     085D  285F               	goto	u6781
 10846     085E  2860               	goto	u6780
 10847     085F                     u6781:
 10848     085F  2879               	goto	l5228
 10849     0860                     u6780:
 10850     0860                     l5220:
 10851     0860  0020               	movlb	0	; select bank0
 10852     0861  085D               	movf	handle_voltage@reset_flg,w
 10853     0862  0086               	movwf	6
 10854     0863  3001               	movlw	1	; select bank2/3
 10855     0864  0087               	movwf	7
 10856     0865  3003               	movlw	3
 10857     0866  0601               	xorwf	1,w
 10858     0867  1D03               	btfss	3,2
 10859     0868  286A               	goto	u6791
 10860     0869  286B               	goto	u6790
 10861     086A                     u6791:
 10862     086A  2879               	goto	l5228
 10863     086B                     u6790:
 10864     086B                     l5222:
 10865                           
 10866                           ;main.c: 84:         *reset_flg = 4;
 10867     086B  085D               	movf	handle_voltage@reset_flg,w
 10868     086C  0086               	movwf	6
 10869     086D  3001               	movlw	1	; select bank2/3
 10870     086E  0087               	movwf	7
 10871     086F  3004               	movlw	4
 10872     0870  0081               	movwf	1
 10873     0871                     l5224:
 10874     0871  0022               	movlb	2	; select bank2
 10875     0872  110C               	bcf	12,2	;volatile
 10876     0873                     l5226:
 10877                           
 10878                           ;main.c: 86:         LED_SetLow();
 10879     0873  0020               	movlb	0	; select bank0
 10880     0874  0861               	movf	handle_voltage@LED_SetLow+1,w
 10881     0875  008A               	movwf	10
 10882     0876  0860               	movf	handle_voltage@LED_SetLow,w
 10883     0877  000A               	callw
 10884     0878  3188               	pagesel	$
 10885     0879                     l5228:
 10886                           
 10887                           ;main.c: 89:     if(*reset_flg == 0){
 10888     0879  0020               	movlb	0	; select bank0
 10889     087A  085D               	movf	handle_voltage@reset_flg,w
 10890     087B  0086               	movwf	6
 10891     087C  3001               	movlw	1	; select bank2/3
 10892     087D  0087               	movwf	7
 10893     087E  0801               	movf	1,w
 10894     087F  1D03               	btfss	3,2
 10895     0880  2882               	goto	u6801
 10896     0881  2883               	goto	u6800
 10897     0882                     u6801:
 10898     0882  2892               	goto	l5236
 10899     0883                     u6800:
 10900     0883                     l5230:
 10901                           
 10902                           ;main.c: 90:         delay_ms(500);
 10903     0883  30F4               	movlw	244
 10904     0884  00A0               	movwf	delay_ms@ms
 10905     0885  3001               	movlw	1
 10906     0886  00A1               	movwf	delay_ms@ms+1
 10907     0887  319F  2706  3188   	fcall	_delay_ms
 10908     088A                     l5232:
 10909                           
 10910                           ;main.c: 91:         *reset_flg = 1;
 10911     088A  0020               	movlb	0	; select bank0
 10912     088B  085D               	movf	handle_voltage@reset_flg,w
 10913     088C  0086               	movwf	6
 10914     088D  3001               	movlw	1	; select bank2/3
 10915     088E  0087               	movwf	7
 10916     088F  3001               	movlw	1
 10917     0890  0081               	movwf	1
 10918     0891  29F3               	goto	l575
 10919     0892                     l5236:
 10920                           
 10921                           ;main.c: 96:     if (((mode == 24 && voltage <= 19.8) || (mode == 12 && voltage <= 9.9))
      +                           && *reset_flg == 1) {
 10922     0892  3018               	movlw	24
 10923     0893  065C               	xorwf	handle_voltage@mode,w
 10924     0894  1D03               	btfss	3,2
 10925     0895  2897               	goto	u6811
 10926     0896  2898               	goto	u6810
 10927     0897                     u6811:
 10928     0897  28AF               	goto	l5240
 10929     0898                     u6810:
 10930     0898                     l5238:
 10931     0898  3041               	movlw	65
 10932     0899  00CB               	movwf	___flge@ff1+3
 10933     089A  309E               	movlw	158
 10934     089B  00CA               	movwf	___flge@ff1+2
 10935     089C  3066               	movlw	102
 10936     089D  00C9               	movwf	___flge@ff1+1
 10937     089E  3066               	movlw	102
 10938     089F  00C8               	movwf	___flge@ff1
 10939     08A0  0857               	movf	handle_voltage@voltage+3,w
 10940     08A1  00CF               	movwf	___flge@ff2+3
 10941     08A2  0856               	movf	handle_voltage@voltage+2,w
 10942     08A3  00CE               	movwf	___flge@ff2+2
 10943     08A4  0855               	movf	handle_voltage@voltage+1,w
 10944     08A5  00CD               	movwf	___flge@ff2+1
 10945     08A6  0854               	movf	handle_voltage@voltage,w
 10946     08A7  00CC               	movwf	___flge@ff2
 10947     08A8  3193  23D6  3188   	fcall	___flge
 10948     08AB  1803               	btfsc	3,0
 10949     08AC  28AE               	goto	u6821
 10950     08AD  28AF               	goto	u6820
 10951     08AE                     u6821:
 10952     08AE  28CD               	goto	l5244
 10953     08AF                     u6820:
 10954     08AF                     l5240:
 10955     08AF  300C               	movlw	12
 10956     08B0  0020               	movlb	0	; select bank0
 10957     08B1  065C               	xorwf	handle_voltage@mode,w
 10958     08B2  1D03               	btfss	3,2
 10959     08B3  28B5               	goto	u6831
 10960     08B4  28B6               	goto	u6830
 10961     08B5                     u6831:
 10962     08B5  28EF               	goto	l5252
 10963     08B6                     u6830:
 10964     08B6                     l5242:
 10965     08B6  3041               	movlw	65
 10966     08B7  00CB               	movwf	___flge@ff1+3
 10967     08B8  301E               	movlw	30
 10968     08B9  00CA               	movwf	___flge@ff1+2
 10969     08BA  3066               	movlw	102
 10970     08BB  00C9               	movwf	___flge@ff1+1
 10971     08BC  3066               	movlw	102
 10972     08BD  00C8               	movwf	___flge@ff1
 10973     08BE  0857               	movf	handle_voltage@voltage+3,w
 10974     08BF  00CF               	movwf	___flge@ff2+3
 10975     08C0  0856               	movf	handle_voltage@voltage+2,w
 10976     08C1  00CE               	movwf	___flge@ff2+2
 10977     08C2  0855               	movf	handle_voltage@voltage+1,w
 10978     08C3  00CD               	movwf	___flge@ff2+1
 10979     08C4  0854               	movf	handle_voltage@voltage,w
 10980     08C5  00CC               	movwf	___flge@ff2
 10981     08C6  3193  23D6  3188   	fcall	___flge
 10982     08C9  1C03               	btfss	3,0
 10983     08CA  28CC               	goto	u6841
 10984     08CB  28CD               	goto	u6840
 10985     08CC                     u6841:
 10986     08CC  28EF               	goto	l5252
 10987     08CD                     u6840:
 10988     08CD                     l5244:
 10989     08CD  0020               	movlb	0	; select bank0
 10990     08CE  085D               	movf	handle_voltage@reset_flg,w
 10991     08CF  0086               	movwf	6
 10992     08D0  3001               	movlw	1	; select bank2/3
 10993     08D1  0087               	movwf	7
 10994     08D2  0301               	decf	1,w
 10995     08D3  1D03               	btfss	3,2
 10996     08D4  28D6               	goto	u6851
 10997     08D5  28D7               	goto	u6850
 10998     08D6                     u6851:
 10999     08D6  28EF               	goto	l5252
 11000     08D7                     u6850:
 11001     08D7                     l5246:
 11002                           
 11003                           ;main.c: 97:         LED_SetHigh();
 11004     08D7  085F               	movf	handle_voltage@LED_SetHigh+1,w
 11005     08D8  008A               	movwf	10
 11006     08D9  085E               	movf	handle_voltage@LED_SetHigh,w
 11007     08DA  000A               	callw
 11008     08DB  3188               	pagesel	$
 11009                           
 11010                           ;main.c: 98:         delay_ms(5000);
 11011     08DC  3088               	movlw	136
 11012     08DD  0020               	movlb	0	; select bank0
 11013     08DE  00A0               	movwf	delay_ms@ms
 11014     08DF  3013               	movlw	19
 11015     08E0  00A1               	movwf	delay_ms@ms+1
 11016     08E1  319F  2706  3188   	fcall	_delay_ms
 11017     08E4                     l5248:
 11018                           
 11019                           ;main.c: 99:         *reset_flg = 2;
 11020     08E4  0020               	movlb	0	; select bank0
 11021     08E5  085D               	movf	handle_voltage@reset_flg,w
 11022     08E6  0086               	movwf	6
 11023     08E7  3001               	movlw	1	; select bank2/3
 11024     08E8  0087               	movwf	7
 11025     08E9  3002               	movlw	2
 11026     08EA  0081               	movwf	1
 11027     08EB                     l5250:
 11028                           
 11029                           ;main.c: 100:         handle_buzzer();
 11030     08EB  319F  277F  3188   	fcall	_handle_buzzer
 11031                           
 11032                           ;main.c: 101:     }else if(((mode == 24 && voltage > 19.8) || (mode == 12 && voltage > 9
      +                          .9)) && *reset_flg == 1){
 11033     08EE  293A               	goto	l5264
 11034     08EF                     l5252:
 11035     08EF  3018               	movlw	24
 11036     08F0  0020               	movlb	0	; select bank0
 11037     08F1  065C               	xorwf	handle_voltage@mode,w
 11038     08F2  1D03               	btfss	3,2
 11039     08F3  28F5               	goto	u6861
 11040     08F4  28F6               	goto	u6860
 11041     08F5                     u6861:
 11042     08F5  290D               	goto	l5256
 11043     08F6                     u6860:
 11044     08F6                     l5254:
 11045     08F6  3041               	movlw	65
 11046     08F7  00CB               	movwf	___flge@ff1+3
 11047     08F8  309E               	movlw	158
 11048     08F9  00CA               	movwf	___flge@ff1+2
 11049     08FA  3066               	movlw	102
 11050     08FB  00C9               	movwf	___flge@ff1+1
 11051     08FC  3066               	movlw	102
 11052     08FD  00C8               	movwf	___flge@ff1
 11053     08FE  0857               	movf	handle_voltage@voltage+3,w
 11054     08FF  00CF               	movwf	___flge@ff2+3
 11055     0900  0856               	movf	handle_voltage@voltage+2,w
 11056     0901  00CE               	movwf	___flge@ff2+2
 11057     0902  0855               	movf	handle_voltage@voltage+1,w
 11058     0903  00CD               	movwf	___flge@ff2+1
 11059     0904  0854               	movf	handle_voltage@voltage,w
 11060     0905  00CC               	movwf	___flge@ff2
 11061     0906  3193  23D6  3188   	fcall	___flge
 11062     0909  1C03               	btfss	3,0
 11063     090A  290C               	goto	u6871
 11064     090B  290D               	goto	u6870
 11065     090C                     u6871:
 11066     090C  292B               	goto	l5260
 11067     090D                     u6870:
 11068     090D                     l5256:
 11069     090D  300C               	movlw	12
 11070     090E  0020               	movlb	0	; select bank0
 11071     090F  065C               	xorwf	handle_voltage@mode,w
 11072     0910  1D03               	btfss	3,2
 11073     0911  2913               	goto	u6881
 11074     0912  2914               	goto	u6880
 11075     0913                     u6881:
 11076     0913  293A               	goto	l5264
 11077     0914                     u6880:
 11078     0914                     l5258:
 11079     0914  3041               	movlw	65
 11080     0915  00CB               	movwf	___flge@ff1+3
 11081     0916  301E               	movlw	30
 11082     0917  00CA               	movwf	___flge@ff1+2
 11083     0918  3066               	movlw	102
 11084     0919  00C9               	movwf	___flge@ff1+1
 11085     091A  3066               	movlw	102
 11086     091B  00C8               	movwf	___flge@ff1
 11087     091C  0857               	movf	handle_voltage@voltage+3,w
 11088     091D  00CF               	movwf	___flge@ff2+3
 11089     091E  0856               	movf	handle_voltage@voltage+2,w
 11090     091F  00CE               	movwf	___flge@ff2+2
 11091     0920  0855               	movf	handle_voltage@voltage+1,w
 11092     0921  00CD               	movwf	___flge@ff2+1
 11093     0922  0854               	movf	handle_voltage@voltage,w
 11094     0923  00CC               	movwf	___flge@ff2
 11095     0924  3193  23D6  3188   	fcall	___flge
 11096     0927  1803               	btfsc	3,0
 11097     0928  292A               	goto	u6891
 11098     0929  292B               	goto	u6890
 11099     092A                     u6891:
 11100     092A  293A               	goto	l5264
 11101     092B                     u6890:
 11102     092B                     l5260:
 11103     092B  0020               	movlb	0	; select bank0
 11104     092C  085D               	movf	handle_voltage@reset_flg,w
 11105     092D  0086               	movwf	6
 11106     092E  3001               	movlw	1	; select bank2/3
 11107     092F  0087               	movwf	7
 11108     0930  0301               	decf	1,w
 11109     0931  1D03               	btfss	3,2
 11110     0932  2934               	goto	u6901
 11111     0933  2935               	goto	u6900
 11112     0934                     u6901:
 11113     0934  293A               	goto	l5264
 11114     0935                     u6900:
 11115     0935                     l5262:
 11116                           
 11117                           ;main.c: 102:         *reset_flg = 0;
 11118     0935  085D               	movf	handle_voltage@reset_flg,w
 11119     0936  0086               	movwf	6
 11120     0937  3001               	movlw	1	; select bank2/3
 11121     0938  0087               	movwf	7
 11122     0939  0181               	clrf	1
 11123     093A                     l5264:
 11124                           
 11125                           ;main.c: 105:     if (((mode == 24 && voltage <= 18.6) || (mode == 12 && voltage <= 9.3)
      +                          ) && *reset_flg <= 2) {
 11126     093A  3018               	movlw	24
 11127     093B  0020               	movlb	0	; select bank0
 11128     093C  065C               	xorwf	handle_voltage@mode,w
 11129     093D  1D03               	btfss	3,2
 11130     093E  2940               	goto	u6911
 11131     093F  2941               	goto	u6910
 11132     0940                     u6911:
 11133     0940  2958               	goto	l5268
 11134     0941                     u6910:
 11135     0941                     l5266:
 11136     0941  3041               	movlw	65
 11137     0942  00CB               	movwf	___flge@ff1+3
 11138     0943  3094               	movlw	148
 11139     0944  00CA               	movwf	___flge@ff1+2
 11140     0945  30CC               	movlw	204
 11141     0946  00C9               	movwf	___flge@ff1+1
 11142     0947  30CD               	movlw	205
 11143     0948  00C8               	movwf	___flge@ff1
 11144     0949  0857               	movf	handle_voltage@voltage+3,w
 11145     094A  00CF               	movwf	___flge@ff2+3
 11146     094B  0856               	movf	handle_voltage@voltage+2,w
 11147     094C  00CE               	movwf	___flge@ff2+2
 11148     094D  0855               	movf	handle_voltage@voltage+1,w
 11149     094E  00CD               	movwf	___flge@ff2+1
 11150     094F  0854               	movf	handle_voltage@voltage,w
 11151     0950  00CC               	movwf	___flge@ff2
 11152     0951  3193  23D6  3188   	fcall	___flge
 11153     0954  1803               	btfsc	3,0
 11154     0955  2957               	goto	u6921
 11155     0956  2958               	goto	u6920
 11156     0957                     u6921:
 11157     0957  2976               	goto	l5272
 11158     0958                     u6920:
 11159     0958                     l5268:
 11160     0958  300C               	movlw	12
 11161     0959  0020               	movlb	0	; select bank0
 11162     095A  065C               	xorwf	handle_voltage@mode,w
 11163     095B  1D03               	btfss	3,2
 11164     095C  295E               	goto	u6931
 11165     095D  295F               	goto	u6930
 11166     095E                     u6931:
 11167     095E  2987               	goto	l5276
 11168     095F                     u6930:
 11169     095F                     l5270:
 11170     095F  3041               	movlw	65
 11171     0960  00CB               	movwf	___flge@ff1+3
 11172     0961  3014               	movlw	20
 11173     0962  00CA               	movwf	___flge@ff1+2
 11174     0963  30CC               	movlw	204
 11175     0964  00C9               	movwf	___flge@ff1+1
 11176     0965  30CD               	movlw	205
 11177     0966  00C8               	movwf	___flge@ff1
 11178     0967  0857               	movf	handle_voltage@voltage+3,w
 11179     0968  00CF               	movwf	___flge@ff2+3
 11180     0969  0856               	movf	handle_voltage@voltage+2,w
 11181     096A  00CE               	movwf	___flge@ff2+2
 11182     096B  0855               	movf	handle_voltage@voltage+1,w
 11183     096C  00CD               	movwf	___flge@ff2+1
 11184     096D  0854               	movf	handle_voltage@voltage,w
 11185     096E  00CC               	movwf	___flge@ff2
 11186     096F  3193  23D6  3188   	fcall	___flge
 11187     0972  1C03               	btfss	3,0
 11188     0973  2975               	goto	u6941
 11189     0974  2976               	goto	u6940
 11190     0975                     u6941:
 11191     0975  2987               	goto	l5276
 11192     0976                     u6940:
 11193     0976                     l5272:
 11194     0976  0020               	movlb	0	; select bank0
 11195     0977  085D               	movf	handle_voltage@reset_flg,w
 11196     0978  0086               	movwf	6
 11197     0979  3001               	movlw	1	; select bank2/3
 11198     097A  0087               	movwf	7
 11199     097B  3003               	movlw	3
 11200     097C  0201               	subwf	1,w
 11201     097D  1803               	skipnc
 11202     097E  2980               	goto	u6951
 11203     097F  2981               	goto	u6950
 11204     0980                     u6951:
 11205     0980  2987               	goto	l5276
 11206     0981                     u6950:
 11207     0981                     l5274:
 11208                           
 11209                           ;main.c: 106:         *reset_flg = 3;
 11210     0981  085D               	movf	handle_voltage@reset_flg,w
 11211     0982  0086               	movwf	6
 11212     0983  3001               	movlw	1	; select bank2/3
 11213     0984  0087               	movwf	7
 11214     0985  3003               	movlw	3
 11215     0986  0081               	movwf	1
 11216     0987                     l5276:
 11217                           
 11218                           ;main.c: 111:     if (((mode == 24 && voltage >= 9.0) || (mode == 12 && voltage >= 6.0))
      +                           && *reset_flg == 4) {
 11219     0987  3018               	movlw	24
 11220     0988  0020               	movlb	0	; select bank0
 11221     0989  065C               	xorwf	handle_voltage@mode,w
 11222     098A  1D03               	btfss	3,2
 11223     098B  298D               	goto	u6961
 11224     098C  298E               	goto	u6960
 11225     098D                     u6961:
 11226     098D  29A5               	goto	l5280
 11227     098E                     u6960:
 11228     098E                     l5278:
 11229     098E  0857               	movf	handle_voltage@voltage+3,w
 11230     098F  00CB               	movwf	___flge@ff1+3
 11231     0990  0856               	movf	handle_voltage@voltage+2,w
 11232     0991  00CA               	movwf	___flge@ff1+2
 11233     0992  0855               	movf	handle_voltage@voltage+1,w
 11234     0993  00C9               	movwf	___flge@ff1+1
 11235     0994  0854               	movf	handle_voltage@voltage,w
 11236     0995  00C8               	movwf	___flge@ff1
 11237     0996  3041               	movlw	65
 11238     0997  00CF               	movwf	___flge@ff2+3
 11239     0998  3010               	movlw	16
 11240     0999  00CE               	movwf	___flge@ff2+2
 11241     099A  3000               	movlw	0
 11242     099B  00CD               	movwf	___flge@ff2+1
 11243     099C  3000               	movlw	0
 11244     099D  00CC               	movwf	___flge@ff2
 11245     099E  3193  23D6  3188   	fcall	___flge
 11246     09A1  1803               	btfsc	3,0
 11247     09A2  29A4               	goto	u6971
 11248     09A3  29A5               	goto	u6970
 11249     09A4                     u6971:
 11250     09A4  29C3               	goto	l5284
 11251     09A5                     u6970:
 11252     09A5                     l5280:
 11253     09A5  300C               	movlw	12
 11254     09A6  0020               	movlb	0	; select bank0
 11255     09A7  065C               	xorwf	handle_voltage@mode,w
 11256     09A8  1D03               	btfss	3,2
 11257     09A9  29AB               	goto	u6981
 11258     09AA  29AC               	goto	u6980
 11259     09AB                     u6981:
 11260     09AB  29F3               	goto	l575
 11261     09AC                     u6980:
 11262     09AC                     l5282:
 11263     09AC  0857               	movf	handle_voltage@voltage+3,w
 11264     09AD  00CB               	movwf	___flge@ff1+3
 11265     09AE  0856               	movf	handle_voltage@voltage+2,w
 11266     09AF  00CA               	movwf	___flge@ff1+2
 11267     09B0  0855               	movf	handle_voltage@voltage+1,w
 11268     09B1  00C9               	movwf	___flge@ff1+1
 11269     09B2  0854               	movf	handle_voltage@voltage,w
 11270     09B3  00C8               	movwf	___flge@ff1
 11271     09B4  3040               	movlw	64
 11272     09B5  00CF               	movwf	___flge@ff2+3
 11273     09B6  30C0               	movlw	192
 11274     09B7  00CE               	movwf	___flge@ff2+2
 11275     09B8  3000               	movlw	0
 11276     09B9  00CD               	movwf	___flge@ff2+1
 11277     09BA  3000               	movlw	0
 11278     09BB  00CC               	movwf	___flge@ff2
 11279     09BC  3193  23D6  3188   	fcall	___flge
 11280     09BF  1C03               	btfss	3,0
 11281     09C0  29C2               	goto	u6991
 11282     09C1  29C3               	goto	u6990
 11283     09C2                     u6991:
 11284     09C2  29F3               	goto	l575
 11285     09C3                     u6990:
 11286     09C3                     l5284:
 11287     09C3  0020               	movlb	0	; select bank0
 11288     09C4  085D               	movf	handle_voltage@reset_flg,w
 11289     09C5  0086               	movwf	6
 11290     09C6  3001               	movlw	1	; select bank2/3
 11291     09C7  0087               	movwf	7
 11292     09C8  3004               	movlw	4
 11293     09C9  0601               	xorwf	1,w
 11294     09CA  1D03               	btfss	3,2
 11295     09CB  29CD               	goto	u7001
 11296     09CC  29CE               	goto	u7000
 11297     09CD                     u7001:
 11298     09CD  29F3               	goto	l575
 11299     09CE                     u7000:
 11300     09CE                     l5286:
 11301                           
 11302                           ;main.c: 112:         *reset_flg = 0;
 11303     09CE  085D               	movf	handle_voltage@reset_flg,w
 11304     09CF  0086               	movwf	6
 11305     09D0  3001               	movlw	1	; select bank2/3
 11306     09D1  0087               	movwf	7
 11307     09D2  0181               	clrf	1
 11308     09D3                     l5288:
 11309     09D3  0022               	movlb	2	; select bank2
 11310     09D4  150C               	bsf	12,2	;volatile
 11311     09D5                     l5290:
 11312                           
 11313                           ;main.c: 114:         LED_SetHigh();
 11314     09D5  0020               	movlb	0	; select bank0
 11315     09D6  085F               	movf	handle_voltage@LED_SetHigh+1,w
 11316     09D7  008A               	movwf	10
 11317     09D8  085E               	movf	handle_voltage@LED_SetHigh,w
 11318     09D9  000A               	callw
 11319     09DA  3188               	pagesel	$
 11320     09DB                     l5292:
 11321                           
 11322                           ;main.c: 115:         delay_ms(500);
 11323     09DB  30F4               	movlw	244
 11324     09DC  0020               	movlb	0	; select bank0
 11325     09DD  00A0               	movwf	delay_ms@ms
 11326     09DE  3001               	movlw	1
 11327     09DF  00A1               	movwf	delay_ms@ms+1
 11328     09E0  319F  2706  3188   	fcall	_delay_ms
 11329     09E3                     l5294:
 11330     09E3  0022               	movlb	2	; select bank2
 11331     09E4  110C               	bcf	12,2	;volatile
 11332     09E5                     l5296:
 11333                           
 11334                           ;main.c: 117:         LED_SetLow();
 11335     09E5  0020               	movlb	0	; select bank0
 11336     09E6  0861               	movf	handle_voltage@LED_SetLow+1,w
 11337     09E7  008A               	movwf	10
 11338     09E8  0860               	movf	handle_voltage@LED_SetLow,w
 11339     09E9  000A               	callw
 11340     09EA  3188               	pagesel	$
 11341     09EB                     l5298:
 11342                           
 11343                           ;main.c: 118:         delay_ms(2000);
 11344     09EB  30D0               	movlw	208
 11345     09EC  0020               	movlb	0	; select bank0
 11346     09ED  00A0               	movwf	delay_ms@ms
 11347     09EE  3007               	movlw	7
 11348     09EF  00A1               	movwf	delay_ms@ms+1
 11349     09F0  319F  2706  3188   	fcall	_delay_ms
 11350     09F3                     l575:
 11351     09F3  0008               	return
 11352     09F4                     __end_of_handle_voltage:
 11353                           
 11354                           	psect	text27
 11355     1F7F                     __ptext27:	
 11356 ;; *************** function _handle_buzzer *****************
 11357 ;; Defined at:
 11358 ;;		line 122 in file "main.c"
 11359 ;; Parameters:    Size  Location     Type
 11360 ;;		None
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;  i               1    5[BANK0 ] unsigned char 
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  1    wreg      void 
 11365 ;; Registers used:
 11366 ;;		wreg, status,2, status,0, pclath, cstack
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;Total ram usage:        1 bytes
 11377 ;; Hardware stack levels used: 1
 11378 ;; Hardware stack levels required when called: 5
 11379 ;; This function calls:
 11380 ;;		_delay_ms
 11381 ;; This function is called by:
 11382 ;;		_handle_voltage
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386     1F7F                     _handle_buzzer:	
 11387                           ;psect for function _handle_buzzer
 11388                           
 11389     1F7F                     l5158:	
 11390                           ;incstack = 0
 11391                           ; Regs used in _handle_buzzer: [wreg+status,2+status,0+pclath+cstack]
 11392                           
 11393                           
 11394                           ;main.c: 123:     for (char i = 0; i < 2; i++) {
 11395     1F7F  0020               	movlb	0	; select bank0
 11396     1F80  01A5               	clrf	handle_buzzer@i
 11397     1F81                     l605:	
 11398                           ;main.c: 124:         do { LATAbits.LATA2 = 1; } while(0);
 11399                           
 11400     1F81  0022               	movlb	2	; select bank2
 11401     1F82  150C               	bsf	12,2	;volatile
 11402     1F83                     l5164:
 11403                           
 11404                           ;main.c: 125:         delay_ms(800);
 11405     1F83  3020               	movlw	32
 11406     1F84  0020               	movlb	0	; select bank0
 11407     1F85  00A0               	movwf	delay_ms@ms
 11408     1F86  3003               	movlw	3
 11409     1F87  00A1               	movwf	delay_ms@ms+1
 11410     1F88  319F  2706  319F   	fcall	_delay_ms
 11411     1F8B                     l5166:
 11412     1F8B  0022               	movlb	2	; select bank2
 11413     1F8C  110C               	bcf	12,2	;volatile
 11414     1F8D                     l608:
 11415                           
 11416                           ;main.c: 127:         delay_ms(500);
 11417     1F8D  30F4               	movlw	244
 11418     1F8E  0020               	movlb	0	; select bank0
 11419     1F8F  00A0               	movwf	delay_ms@ms
 11420     1F90  3001               	movlw	1
 11421     1F91  00A1               	movwf	delay_ms@ms+1
 11422     1F92  319F  2706  319F   	fcall	_delay_ms
 11423     1F95                     l5168:
 11424                           
 11425                           ;main.c: 128:     }
 11426     1F95  3001               	movlw	1
 11427     1F96  0020               	movlb	0	; select bank0
 11428     1F97  07A5               	addwf	handle_buzzer@i,f
 11429     1F98                     l5170:
 11430     1F98  3002               	movlw	2
 11431     1F99  0225               	subwf	handle_buzzer@i,w
 11432     1F9A  1C03               	skipc
 11433     1F9B  2F9D               	goto	u6741
 11434     1F9C  2F9E               	goto	u6740
 11435     1F9D                     u6741:
 11436     1F9D  2F81               	goto	l605
 11437     1F9E                     u6740:
 11438     1F9E                     l609:
 11439     1F9E  0008               	return
 11440     1F9F                     __end_of_handle_buzzer:
 11441                           
 11442                           	psect	text28
 11443     1F06                     __ptext28:	
 11444 ;; *************** function _delay_ms *****************
 11445 ;; Defined at:
 11446 ;;		line 131 in file "main.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  ms              2    0[BANK0 ] unsigned int 
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;  i               2    3[BANK0 ] unsigned int 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;Total ram usage:        5 bytes
 11465 ;; Hardware stack levels used: 1
 11466 ;; Hardware stack levels required when called: 4
 11467 ;; This function calls:
 11468 ;;		Nothing
 11469 ;; This function is called by:
 11470 ;;		_main
 11471 ;;		_handle_voltage
 11472 ;;		_handle_buzzer
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476     1F06                     _delay_ms:	
 11477                           ;psect for function _delay_ms
 11478                           
 11479     1F06                     l5002:	
 11480                           ;incstack = 0
 11481                           ; Regs used in _delay_ms: [wreg+status,2]
 11482                           
 11483                           
 11484                           ;main.c: 132:     for (unsigned int i = 0; i < ms; i++) {
 11485     1F06  0020               	movlb	0	; select bank0
 11486     1F07  01A3               	clrf	delay_ms@i
 11487     1F08  01A4               	clrf	delay_ms@i+1
 11488     1F09  2F18               	goto	l612
 11489     1F0A                     l5004:
 11490                           
 11491                           ;main.c: 133:         _delay((unsigned long)((1)*(16000000/4000.0)));
 11492     1F0A  3006               	movlw	6
 11493     1F0B  0020               	movlb	0	; select bank0
 11494     1F0C  00A2               	movwf	??_delay_ms
 11495     1F0D  3030               	movlw	48
 11496     1F0E                     u7047:
 11497     1F0E  0B89               	decfsz	9,f
 11498     1F0F  2F0E               	goto	u7047
 11499     1F10  0BA2               	decfsz	??_delay_ms,f
 11500     1F11  2F0E               	goto	u7047
 11501     1F12  0000               	nop
 11502                           
 11503                           ;main.c: 134:     }
 11504     1F13  3001               	movlw	1
 11505     1F14  0020               	movlb	0	; select bank0
 11506     1F15  07A3               	addwf	delay_ms@i,f
 11507     1F16  3000               	movlw	0
 11508     1F17  3DA4               	addwfc	delay_ms@i+1,f
 11509     1F18                     l612:
 11510     1F18  0821               	movf	delay_ms@ms+1,w
 11511     1F19  0224               	subwf	delay_ms@i+1,w
 11512     1F1A  1D03               	skipz
 11513     1F1B  2F1E               	goto	u6705
 11514     1F1C  0820               	movf	delay_ms@ms,w
 11515     1F1D  0223               	subwf	delay_ms@i,w
 11516     1F1E                     u6705:
 11517     1F1E  1C03               	skipc
 11518     1F1F  2F21               	goto	u6701
 11519     1F20  2F22               	goto	u6700
 11520     1F21                     u6701:
 11521     1F21  2F0A               	goto	l5004
 11522     1F22                     u6700:
 11523     1F22                     l615:
 11524     1F22  0008               	return
 11525     1F23                     __end_of_delay_ms:
 11526                           
 11527                           	psect	text29
 11528     13D6                     __ptext29:	
 11529 ;; *************** function ___flge *****************
 11530 ;; Defined at:
 11531 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/flge.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;  ff1             4   40[BANK0 ] void 
 11534 ;;  ff2             4   44[BANK0 ] void 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;		None
 11537 ;; Return value:  Size  Location     Type
 11538 ;;		None               void
 11539 ;; Registers used:
 11540 ;;		wreg, status,2, status,0
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11546 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11549 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11550 ;;Total ram usage:       12 bytes
 11551 ;; Hardware stack levels used: 1
 11552 ;; Hardware stack levels required when called: 4
 11553 ;; This function calls:
 11554 ;;		Nothing
 11555 ;; This function is called by:
 11556 ;;		_main
 11557 ;;		_handle_voltage
 11558 ;;		_efgtoa
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562     13D6                     ___flge:	
 11563                           ;psect for function ___flge
 11564                           
 11565     13D6                     l3232:	
 11566                           ;incstack = 0
 11567                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11568                           
 11569     13D6  3000               	movlw	0
 11570     13D7  0020               	movlb	0	; select bank0
 11571     13D8  0548               	andwf	___flge@ff1,w
 11572     13D9  00D0               	movwf	??___flge
 11573     13DA  3000               	movlw	0
 11574     13DB  0549               	andwf	___flge@ff1+1,w
 11575     13DC  00D1               	movwf	??___flge+1
 11576     13DD  3080               	movlw	128
 11577     13DE  054A               	andwf	___flge@ff1+2,w
 11578     13DF  00D2               	movwf	??___flge+2
 11579     13E0  307F               	movlw	127
 11580     13E1  054B               	andwf	___flge@ff1+3,w
 11581     13E2  00D3               	movwf	??___flge+3
 11582     13E3  0853               	movf	??___flge+3,w
 11583     13E4  0452               	iorwf	??___flge+2,w
 11584     13E5  0451               	iorwf	??___flge+1,w
 11585     13E6  0450               	iorwf	??___flge,w
 11586     13E7  1D03               	skipz
 11587     13E8  2BEA               	goto	u3541
 11588     13E9  2BEB               	goto	u3540
 11589     13EA                     u3541:
 11590     13EA  2BF3               	goto	l882
 11591     13EB                     u3540:
 11592     13EB                     l3234:
 11593     13EB  3000               	movlw	0
 11594     13EC  00CB               	movwf	___flge@ff1+3
 11595     13ED  3000               	movlw	0
 11596     13EE  00CA               	movwf	___flge@ff1+2
 11597     13EF  3000               	movlw	0
 11598     13F0  00C9               	movwf	___flge@ff1+1
 11599     13F1  3000               	movlw	0
 11600     13F2  00C8               	movwf	___flge@ff1
 11601     13F3                     l882:
 11602     13F3  3000               	movlw	0
 11603     13F4  054C               	andwf	___flge@ff2,w
 11604     13F5  00D0               	movwf	??___flge
 11605     13F6  3000               	movlw	0
 11606     13F7  054D               	andwf	___flge@ff2+1,w
 11607     13F8  00D1               	movwf	??___flge+1
 11608     13F9  3080               	movlw	128
 11609     13FA  054E               	andwf	___flge@ff2+2,w
 11610     13FB  00D2               	movwf	??___flge+2
 11611     13FC  307F               	movlw	127
 11612     13FD  054F               	andwf	___flge@ff2+3,w
 11613     13FE  00D3               	movwf	??___flge+3
 11614     13FF  0853               	movf	??___flge+3,w
 11615     1400  0452               	iorwf	??___flge+2,w
 11616     1401  0451               	iorwf	??___flge+1,w
 11617     1402  0450               	iorwf	??___flge,w
 11618     1403  1D03               	skipz
 11619     1404  2C06               	goto	u3551
 11620     1405  2C07               	goto	u3550
 11621     1406                     u3551:
 11622     1406  2C0F               	goto	l3238
 11623     1407                     u3550:
 11624     1407                     l3236:
 11625     1407  3000               	movlw	0
 11626     1408  00CF               	movwf	___flge@ff2+3
 11627     1409  3000               	movlw	0
 11628     140A  00CE               	movwf	___flge@ff2+2
 11629     140B  3000               	movlw	0
 11630     140C  00CD               	movwf	___flge@ff2+1
 11631     140D  3000               	movlw	0
 11632     140E  00CC               	movwf	___flge@ff2
 11633     140F                     l3238:
 11634     140F  1FCB               	btfss	___flge@ff1+3,7
 11635     1410  2C12               	goto	u3561
 11636     1411  2C13               	goto	u3560
 11637     1412                     u3561:
 11638     1412  2C2B               	goto	l3242
 11639     1413                     u3560:
 11640     1413                     l3240:
 11641     1413  3000               	movlw	0
 11642     1414  00D0               	movwf	??___flge
 11643     1415  3000               	movlw	0
 11644     1416  00D1               	movwf	??___flge+1
 11645     1417  3000               	movlw	0
 11646     1418  00D2               	movwf	??___flge+2
 11647     1419  3080               	movlw	128
 11648     141A  00D3               	movwf	??___flge+3
 11649     141B  0848               	movf	___flge@ff1,w
 11650     141C  02D0               	subwf	??___flge,f
 11651     141D  0849               	movf	___flge@ff1+1,w
 11652     141E  3BD1               	subwfb	??___flge+1,f
 11653     141F  084A               	movf	___flge@ff1+2,w
 11654     1420  3BD2               	subwfb	??___flge+2,f
 11655     1421  084B               	movf	___flge@ff1+3,w
 11656     1422  3BD3               	subwfb	??___flge+3,f
 11657     1423  0853               	movf	??___flge+3,w
 11658     1424  00CB               	movwf	___flge@ff1+3
 11659     1425  0852               	movf	??___flge+2,w
 11660     1426  00CA               	movwf	___flge@ff1+2
 11661     1427  0851               	movf	??___flge+1,w
 11662     1428  00C9               	movwf	___flge@ff1+1
 11663     1429  0850               	movf	??___flge,w
 11664     142A  00C8               	movwf	___flge@ff1
 11665     142B                     l3242:
 11666     142B  1FCF               	btfss	___flge@ff2+3,7
 11667     142C  2C2E               	goto	u3571
 11668     142D  2C2F               	goto	u3570
 11669     142E                     u3571:
 11670     142E  2C47               	goto	l885
 11671     142F                     u3570:
 11672     142F                     l3244:
 11673     142F  3000               	movlw	0
 11674     1430  00D0               	movwf	??___flge
 11675     1431  3000               	movlw	0
 11676     1432  00D1               	movwf	??___flge+1
 11677     1433  3000               	movlw	0
 11678     1434  00D2               	movwf	??___flge+2
 11679     1435  3080               	movlw	128
 11680     1436  00D3               	movwf	??___flge+3
 11681     1437  084C               	movf	___flge@ff2,w
 11682     1438  02D0               	subwf	??___flge,f
 11683     1439  084D               	movf	___flge@ff2+1,w
 11684     143A  3BD1               	subwfb	??___flge+1,f
 11685     143B  084E               	movf	___flge@ff2+2,w
 11686     143C  3BD2               	subwfb	??___flge+2,f
 11687     143D  084F               	movf	___flge@ff2+3,w
 11688     143E  3BD3               	subwfb	??___flge+3,f
 11689     143F  0853               	movf	??___flge+3,w
 11690     1440  00CF               	movwf	___flge@ff2+3
 11691     1441  0852               	movf	??___flge+2,w
 11692     1442  00CE               	movwf	___flge@ff2+2
 11693     1443  0851               	movf	??___flge+1,w
 11694     1444  00CD               	movwf	___flge@ff2+1
 11695     1445  0850               	movf	??___flge,w
 11696     1446  00CC               	movwf	___flge@ff2
 11697     1447                     l885:
 11698     1447  3080               	movlw	128
 11699     1448  06CB               	xorwf	___flge@ff1+3,f
 11700     1449  3080               	movlw	128
 11701     144A  06CF               	xorwf	___flge@ff2+3,f
 11702     144B  084F               	movf	___flge@ff2+3,w
 11703     144C  024B               	subwf	___flge@ff1+3,w
 11704     144D  1D03               	skipz
 11705     144E  2C59               	goto	u3585
 11706     144F  084E               	movf	___flge@ff2+2,w
 11707     1450  024A               	subwf	___flge@ff1+2,w
 11708     1451  1D03               	skipz
 11709     1452  2C59               	goto	u3585
 11710     1453  084D               	movf	___flge@ff2+1,w
 11711     1454  0249               	subwf	___flge@ff1+1,w
 11712     1455  1D03               	skipz
 11713     1456  2C59               	goto	u3585
 11714     1457  084C               	movf	___flge@ff2,w
 11715     1458  0248               	subwf	___flge@ff1,w
 11716     1459                     u3585:
 11717     1459  1803               	skipnc
 11718     145A  2C5C               	goto	u3581
 11719     145B  2C5D               	goto	u3580
 11720     145C                     u3581:
 11721     145C  2C5F               	goto	l3248
 11722     145D                     u3580:
 11723     145D                     l3246:
 11724     145D  1003               	clrc
 11725     145E  2C60               	goto	l890
 11726     145F                     l3248:
 11727     145F  1403               	setc
 11728     1460                     l890:
 11729     1460  0008               	return
 11730     1461                     __end_of___flge:
 11731                           
 11732                           	psect	text30
 11733     1E02                     __ptext30:	
 11734 ;; *************** function _LED_12V_On *****************
 11735 ;; Defined at:
 11736 ;;		line 23 in file "main.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;		None
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;		None
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      void 
 11743 ;; Registers used:
 11744 ;;		None
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;Total ram usage:        0 bytes
 11755 ;; Hardware stack levels used: 1
 11756 ;; Hardware stack levels required when called: 4
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_main
 11761 ;;		_handle_voltage
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765     1E02                     _LED_12V_On:	
 11766                           ;psect for function _LED_12V_On
 11767                           
 11768     1E02                     l531:	
 11769                           ;incstack = 0
 11770                           ; Regs used in _LED_12V_On: []
 11771                           
 11772     1E02  0022               	movlb	2	; select bank2
 11773     1E03  168C               	bsf	12,5	;volatile
 11774     1E04                     l533:
 11775     1E04  0008               	return
 11776     1E05                     __end_of_LED_12V_On:
 11777                           
 11778                           	psect	text31
 11779     1DFF                     __ptext31:	
 11780 ;; *************** function _LED_24V_On *****************
 11781 ;; Defined at:
 11782 ;;		line 21 in file "main.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;		None
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;		None
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  1    wreg      void 
 11789 ;; Registers used:
 11790 ;;		None
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;Total ram usage:        0 bytes
 11801 ;; Hardware stack levels used: 1
 11802 ;; Hardware stack levels required when called: 4
 11803 ;; This function calls:
 11804 ;;		Nothing
 11805 ;; This function is called by:
 11806 ;;		_main
 11807 ;;		_handle_voltage
 11808 ;; This function uses a non-reentrant model
 11809 ;;
 11810                           
 11811     1DFF                     _LED_24V_On:	
 11812                           ;psect for function _LED_24V_On
 11813                           
 11814     1DFF                     l521:	
 11815                           ;incstack = 0
 11816                           ; Regs used in _LED_24V_On: []
 11817                           
 11818     1DFF  0022               	movlb	2	; select bank2
 11819     1E00  160C               	bsf	12,4	;volatile
 11820     1E01                     l523:
 11821     1E01  0008               	return
 11822     1E02                     __end_of_LED_24V_On:
 11823                           
 11824                           	psect	text32
 11825     1DFC                     __ptext32:	
 11826 ;; *************** function _LED_12V_Off *****************
 11827 ;; Defined at:
 11828 ;;		line 24 in file "main.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;		None
 11831 ;; Auto vars:     Size  Location     Type
 11832 ;;		None
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  1    wreg      void 
 11835 ;; Registers used:
 11836 ;;		None
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/0
 11839 ;;		On exit  : 0/0
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;Total ram usage:        0 bytes
 11847 ;; Hardware stack levels used: 1
 11848 ;; Hardware stack levels required when called: 4
 11849 ;; This function calls:
 11850 ;;		Nothing
 11851 ;; This function is called by:
 11852 ;;		_main
 11853 ;;		_handle_voltage
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857     1DFC                     _LED_12V_Off:	
 11858                           ;psect for function _LED_12V_Off
 11859                           
 11860     1DFC                     l536:	
 11861                           ;incstack = 0
 11862                           ; Regs used in _LED_12V_Off: []
 11863                           
 11864     1DFC  0022               	movlb	2	; select bank2
 11865     1DFD  128C               	bcf	12,5	;volatile
 11866     1DFE                     l538:
 11867     1DFE  0008               	return
 11868     1DFF                     __end_of_LED_12V_Off:
 11869                           
 11870                           	psect	text33
 11871     1DF9                     __ptext33:	
 11872 ;; *************** function _LED_24V_Off *****************
 11873 ;; Defined at:
 11874 ;;		line 22 in file "main.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		None
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;Total ram usage:        0 bytes
 11893 ;; Hardware stack levels used: 1
 11894 ;; Hardware stack levels required when called: 4
 11895 ;; This function calls:
 11896 ;;		Nothing
 11897 ;; This function is called by:
 11898 ;;		_main
 11899 ;;		_handle_voltage
 11900 ;; This function uses a non-reentrant model
 11901 ;;
 11902                           
 11903     1DF9                     _LED_24V_Off:	
 11904                           ;psect for function _LED_24V_Off
 11905                           
 11906     1DF9                     l526:	
 11907                           ;incstack = 0
 11908                           ; Regs used in _LED_24V_Off: []
 11909                           
 11910     1DF9  0022               	movlb	2	; select bank2
 11911     1DFA  120C               	bcf	12,4	;volatile
 11912     1DFB                     l528:
 11913     1DFB  0008               	return
 11914     1DFC                     __end_of_LED_24V_Off:
 11915                           
 11916                           	psect	text34
 11917     0745                     __ptext34:	
 11918 ;; *************** function ___xxtofl *****************
 11919 ;; Defined at:
 11920 ;;		line 10 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/xxtofl.c"
 11921 ;; Parameters:    Size  Location     Type
 11922 ;;  sign            1    wreg     unsigned char 
 11923 ;;  val             4    0[BANK0 ] long 
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;  sign            1    8[BANK0 ] unsigned char 
 11926 ;;  arg             4   10[BANK0 ] unsigned long 
 11927 ;;  exp             1    9[BANK0 ] unsigned char 
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  4    0[BANK0 ] unsigned char 
 11930 ;; Registers used:
 11931 ;;		wreg, status,2, status,0
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11937 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;Total ram usage:       14 bytes
 11942 ;; Hardware stack levels used: 1
 11943 ;; Hardware stack levels required when called: 4
 11944 ;; This function calls:
 11945 ;;		Nothing
 11946 ;; This function is called by:
 11947 ;;		_main
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951     0745                     ___xxtofl:	
 11952                           ;psect for function ___xxtofl
 11953                           
 11954                           
 11955                           ;incstack = 0
 11956                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11957                           ;___xxtofl@sign stored from wreg
 11958     0745  0020               	movlb	0	; select bank0
 11959     0746  00A8               	movwf	___xxtofl@sign
 11960     0747                     l4334:
 11961     0747  0828               	movf	___xxtofl@sign,w
 11962     0748  1903               	btfsc	3,2
 11963     0749  2F4B               	goto	u5451
 11964     074A  2F4C               	goto	u5450
 11965     074B                     u5451:
 11966     074B  2F60               	goto	l4340
 11967     074C                     u5450:
 11968     074C                     l4336:
 11969     074C  1FA3               	btfss	___xxtofl@val+3,7
 11970     074D  2F4F               	goto	u5461
 11971     074E  2F50               	goto	u5460
 11972     074F                     u5461:
 11973     074F  2F60               	goto	l4340
 11974     0750                     u5460:
 11975     0750                     l4338:
 11976     0750  0920               	comf	___xxtofl@val,w
 11977     0751  00AA               	movwf	___xxtofl@arg
 11978     0752  0921               	comf	___xxtofl@val+1,w
 11979     0753  00AB               	movwf	___xxtofl@arg+1
 11980     0754  0922               	comf	___xxtofl@val+2,w
 11981     0755  00AC               	movwf	___xxtofl@arg+2
 11982     0756  0923               	comf	___xxtofl@val+3,w
 11983     0757  00AD               	movwf	___xxtofl@arg+3
 11984     0758  0AAA               	incf	___xxtofl@arg,f
 11985     0759  1903               	skipnz
 11986     075A  0AAB               	incf	___xxtofl@arg+1,f
 11987     075B  1903               	skipnz
 11988     075C  0AAC               	incf	___xxtofl@arg+2,f
 11989     075D  1903               	skipnz
 11990     075E  0AAD               	incf	___xxtofl@arg+3,f
 11991     075F  2F68               	goto	l1145
 11992     0760                     l4340:
 11993     0760  0823               	movf	___xxtofl@val+3,w
 11994     0761  00AD               	movwf	___xxtofl@arg+3
 11995     0762  0822               	movf	___xxtofl@val+2,w
 11996     0763  00AC               	movwf	___xxtofl@arg+2
 11997     0764  0821               	movf	___xxtofl@val+1,w
 11998     0765  00AB               	movwf	___xxtofl@arg+1
 11999     0766  0820               	movf	___xxtofl@val,w
 12000     0767  00AA               	movwf	___xxtofl@arg
 12001     0768                     l1145:
 12002     0768  0823               	movf	___xxtofl@val+3,w
 12003     0769  0422               	iorwf	___xxtofl@val+2,w
 12004     076A  0421               	iorwf	___xxtofl@val+1,w
 12005     076B  0420               	iorwf	___xxtofl@val,w
 12006     076C  1D03               	skipz
 12007     076D  2F6F               	goto	u5471
 12008     076E  2F70               	goto	u5470
 12009     076F                     u5471:
 12010     076F  2F79               	goto	l1146
 12011     0770                     u5470:
 12012     0770                     l4342:
 12013     0770  3000               	movlw	0
 12014     0771  00A3               	movwf	?___xxtofl+3
 12015     0772  3000               	movlw	0
 12016     0773  00A2               	movwf	?___xxtofl+2
 12017     0774  3000               	movlw	0
 12018     0775  00A1               	movwf	?___xxtofl+1
 12019     0776  3000               	movlw	0
 12020     0777  00A0               	movwf	?___xxtofl
 12021     0778  2FE9               	goto	l1147
 12022     0779                     l1146:
 12023     0779  3096               	movlw	150
 12024     077A  00A9               	movwf	___xxtofl@exp
 12025     077B  2F85               	goto	l4348
 12026     077C                     l4346:
 12027     077C  3001               	movlw	1
 12028     077D  07A9               	addwf	___xxtofl@exp,f
 12029     077E  3001               	movlw	1
 12030     077F                     u5485:
 12031     077F  36AD               	lsrf	___xxtofl@arg+3,f
 12032     0780  0CAC               	rrf	___xxtofl@arg+2,f
 12033     0781  0CAB               	rrf	___xxtofl@arg+1,f
 12034     0782  0CAA               	rrf	___xxtofl@arg,f
 12035     0783  0B89               	decfsz	9,f
 12036     0784  2F7F               	goto	u5485
 12037     0785                     l4348:
 12038     0785  30FE               	movlw	254
 12039     0786  052D               	andwf	___xxtofl@arg+3,w
 12040     0787  1D03               	btfss	3,2
 12041     0788  2F8A               	goto	u5491
 12042     0789  2F8B               	goto	u5490
 12043     078A                     u5491:
 12044     078A  2F7C               	goto	l4346
 12045     078B                     u5490:
 12046     078B  2F9B               	goto	l4352
 12047     078C                     l4350:
 12048     078C  3001               	movlw	1
 12049     078D  07A9               	addwf	___xxtofl@exp,f
 12050     078E  3001               	movlw	1
 12051     078F  07AA               	addwf	___xxtofl@arg,f
 12052     0790  3000               	movlw	0
 12053     0791  3DAB               	addwfc	___xxtofl@arg+1,f
 12054     0792  3DAC               	addwfc	___xxtofl@arg+2,f
 12055     0793  3DAD               	addwfc	___xxtofl@arg+3,f
 12056     0794  3001               	movlw	1
 12057     0795                     u5505:
 12058     0795  36AD               	lsrf	___xxtofl@arg+3,f
 12059     0796  0CAC               	rrf	___xxtofl@arg+2,f
 12060     0797  0CAB               	rrf	___xxtofl@arg+1,f
 12061     0798  0CAA               	rrf	___xxtofl@arg,f
 12062     0799  0B89               	decfsz	9,f
 12063     079A  2F95               	goto	u5505
 12064     079B                     l4352:
 12065     079B  30FF               	movlw	255
 12066     079C  052D               	andwf	___xxtofl@arg+3,w
 12067     079D  1D03               	btfss	3,2
 12068     079E  2FA0               	goto	u5511
 12069     079F  2FA1               	goto	u5510
 12070     07A0                     u5511:
 12071     07A0  2F8C               	goto	l4350
 12072     07A1                     u5510:
 12073     07A1  2FAB               	goto	l4356
 12074     07A2                     l4354:
 12075     07A2  3001               	movlw	1
 12076     07A3  02A9               	subwf	___xxtofl@exp,f
 12077     07A4  3001               	movlw	1
 12078     07A5                     u5525:
 12079     07A5  35AA               	lslf	___xxtofl@arg,f
 12080     07A6  0DAB               	rlf	___xxtofl@arg+1,f
 12081     07A7  0DAC               	rlf	___xxtofl@arg+2,f
 12082     07A8  0DAD               	rlf	___xxtofl@arg+3,f
 12083     07A9  0B89               	decfsz	9,f
 12084     07AA  2FA5               	goto	u5525
 12085     07AB                     l4356:
 12086     07AB  1BAC               	btfsc	___xxtofl@arg+2,7
 12087     07AC  2FAE               	goto	u5531
 12088     07AD  2FAF               	goto	u5530
 12089     07AE                     u5531:
 12090     07AE  2FB5               	goto	l1158
 12091     07AF                     u5530:
 12092     07AF                     l4358:
 12093     07AF  3002               	movlw	2
 12094     07B0  0229               	subwf	___xxtofl@exp,w
 12095     07B1  1803               	skipnc
 12096     07B2  2FB4               	goto	u5541
 12097     07B3  2FB5               	goto	u5540
 12098     07B4                     u5541:
 12099     07B4  2FA2               	goto	l4354
 12100     07B5                     u5540:
 12101     07B5                     l1158:
 12102     07B5  1829               	btfsc	___xxtofl@exp,0
 12103     07B6  2FB8               	goto	u5551
 12104     07B7  2FB9               	goto	u5550
 12105     07B8                     u5551:
 12106     07B8  2FC1               	goto	l1159
 12107     07B9                     u5550:
 12108     07B9                     l4360:
 12109     07B9  30FF               	movlw	255
 12110     07BA  05AA               	andwf	___xxtofl@arg,f
 12111     07BB  30FF               	movlw	255
 12112     07BC  05AB               	andwf	___xxtofl@arg+1,f
 12113     07BD  307F               	movlw	127
 12114     07BE  05AC               	andwf	___xxtofl@arg+2,f
 12115     07BF  30FF               	movlw	255
 12116     07C0  05AD               	andwf	___xxtofl@arg+3,f
 12117     07C1                     l1159:
 12118     07C1  1003               	clrc
 12119     07C2  0CA9               	rrf	___xxtofl@exp,f
 12120     07C3                     l4362:
 12121     07C3  0829               	movf	___xxtofl@exp,w
 12122     07C4  00A4               	movwf	??___xxtofl
 12123     07C5  01A5               	clrf	??___xxtofl+1
 12124     07C6  01A6               	clrf	??___xxtofl+2
 12125     07C7  01A7               	clrf	??___xxtofl+3
 12126     07C8  3018               	movlw	24
 12127     07C9                     u5565:
 12128     07C9  35A4               	lslf	??___xxtofl,f
 12129     07CA  0DA5               	rlf	??___xxtofl+1,f
 12130     07CB  0DA6               	rlf	??___xxtofl+2,f
 12131     07CC  0DA7               	rlf	??___xxtofl+3,f
 12132     07CD                     u5560:
 12133     07CD  0B89               	decfsz	9,f
 12134     07CE  2FC9               	goto	u5565
 12135     07CF  0824               	movf	??___xxtofl,w
 12136     07D0  04AA               	iorwf	___xxtofl@arg,f
 12137     07D1  0825               	movf	??___xxtofl+1,w
 12138     07D2  04AB               	iorwf	___xxtofl@arg+1,f
 12139     07D3  0826               	movf	??___xxtofl+2,w
 12140     07D4  04AC               	iorwf	___xxtofl@arg+2,f
 12141     07D5  0827               	movf	??___xxtofl+3,w
 12142     07D6  04AD               	iorwf	___xxtofl@arg+3,f
 12143     07D7                     l4364:
 12144     07D7  0828               	movf	___xxtofl@sign,w
 12145     07D8  1903               	btfsc	3,2
 12146     07D9  2FDB               	goto	u5571
 12147     07DA  2FDC               	goto	u5570
 12148     07DB                     u5571:
 12149     07DB  2FE1               	goto	l4370
 12150     07DC                     u5570:
 12151     07DC                     l4366:
 12152     07DC  1FA3               	btfss	___xxtofl@val+3,7
 12153     07DD  2FDF               	goto	u5581
 12154     07DE  2FE0               	goto	u5580
 12155     07DF                     u5581:
 12156     07DF  2FE1               	goto	l4370
 12157     07E0                     u5580:
 12158     07E0                     l4368:
 12159     07E0  17AD               	bsf	___xxtofl@arg+3,7
 12160     07E1                     l4370:
 12161     07E1  082D               	movf	___xxtofl@arg+3,w
 12162     07E2  00A3               	movwf	?___xxtofl+3
 12163     07E3  082C               	movf	___xxtofl@arg+2,w
 12164     07E4  00A2               	movwf	?___xxtofl+2
 12165     07E5  082B               	movf	___xxtofl@arg+1,w
 12166     07E6  00A1               	movwf	?___xxtofl+1
 12167     07E7  082A               	movf	___xxtofl@arg,w
 12168     07E8  00A0               	movwf	?___xxtofl
 12169     07E9                     l1147:
 12170     07E9  0008               	return
 12171     07EA                     __end_of___xxtofl:
 12172                           
 12173                           	psect	text35
 12174     1DF6                     __ptext35:	
 12175 ;; *************** function _TMR4_Start *****************
 12176 ;; Defined at:
 12177 ;;		line 69 in file "mcc_generated_files/timer/src/tmr4.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;		None
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		None
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;Total ram usage:        0 bytes
 12196 ;; Hardware stack levels used: 1
 12197 ;; Hardware stack levels required when called: 4
 12198 ;; This function calls:
 12199 ;;		Nothing
 12200 ;; This function is called by:
 12201 ;;		_main
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205     1DF6                     _TMR4_Start:	
 12206                           ;psect for function _TMR4_Start
 12207                           
 12208     1DF6                     l5204:	
 12209                           ;incstack = 0
 12210                           ; Regs used in _TMR4_Start: []
 12211                           
 12212                           
 12213                           ;mcc_generated_files/timer/src/tmr4.c: 71:     T4CONbits.TMR4ON = 1;
 12214     1DF6  0028               	movlb	8	; select bank8
 12215     1DF7  1517               	bsf	23,2	;volatile
 12216     1DF8                     l218:
 12217     1DF8  0008               	return
 12218     1DF9                     __end_of_TMR4_Start:
 12219                           
 12220                           	psect	text36
 12221     1E3A                     __ptext36:	
 12222 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 12223 ;; Defined at:
 12224 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;  CallbackHand    2    0[BANK0 ] PTR FTN()void 
 12227 ;;		 -> timer_interrupt(1), 
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;		None
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  1    wreg      void 
 12232 ;; Registers used:
 12233 ;;		wreg
 12234 ;; Tracked objects:
 12235 ;;		On entry : 0/0
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12243 ;;Total ram usage:        2 bytes
 12244 ;; Hardware stack levels used: 1
 12245 ;; Hardware stack levels required when called: 4
 12246 ;; This function calls:
 12247 ;;		Nothing
 12248 ;; This function is called by:
 12249 ;;		_main
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253     1E3A                     _TMR4_PeriodMatchCallbackRegister:	
 12254                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 12255                           
 12256     1E3A                     l5206:	
 12257                           ;incstack = 0
 12258                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 12259                           
 12260                           
 12261                           ;mcc_generated_files/timer/src/tmr4.c: 129: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 130: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 131:    TMR4_PeriodMatchCallback = CallbackHandler;
 12262     1E3A  0020               	movlb	0	; select bank0
 12263     1E3B  0821               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler+1,w
 12264     1E3C  0022               	movlb	2	; select bank2
 12265     1E3D  00DE               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 12266     1E3E  0020               	movlb	0	; select bank0
 12267     1E3F  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler,w
 12268     1E40  0022               	movlb	2	; select bank2
 12269     1E41  00DD               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 12270     1E42                     l252:
 12271     1E42  0008               	return
 12272     1E43                     __end_of_TMR4_PeriodMatchCallbackRegister:
 12273                           
 12274                           	psect	text37
 12275     1000                     __ptext37:	
 12276 ;; *************** function _SYSTEM_Initialize *****************
 12277 ;; Defined at:
 12278 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 12279 ;; Parameters:    Size  Location     Type
 12280 ;;		None
 12281 ;; Auto vars:     Size  Location     Type
 12282 ;;		None
 12283 ;; Return value:  Size  Location     Type
 12284 ;;                  1    wreg      void 
 12285 ;; Registers used:
 12286 ;;		wreg, status,2, status,0, pclath, cstack
 12287 ;; Tracked objects:
 12288 ;;		On entry : 0/0
 12289 ;;		On exit  : 0/0
 12290 ;;		Unchanged: 0/0
 12291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;Total ram usage:        0 bytes
 12297 ;; Hardware stack levels used: 1
 12298 ;; Hardware stack levels required when called: 6
 12299 ;; This function calls:
 12300 ;;		_ADC_Initialize
 12301 ;;		_CLOCK_Initialize
 12302 ;;		_EUSART_Initialize
 12303 ;;		_INTERRUPT_Initialize
 12304 ;;		_PIN_MANAGER_Initialize
 12305 ;;		_TMR4_Initialize
 12306 ;; This function is called by:
 12307 ;;		_main
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311     1000                     _SYSTEM_Initialize:	
 12312                           ;psect for function _SYSTEM_Initialize
 12313                           
 12314     1000                     l5194:	
 12315                           ;incstack = 0
 12316                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12317                           
 12318                           
 12319                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 12320     1000  319E  2628  3190   	fcall	_CLOCK_Initialize
 12321                           
 12322                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 12323     1003  3190  20EA  3190   	fcall	_PIN_MANAGER_Initialize
 12324     1006                     l5196:
 12325                           
 12326                           ;mcc_generated_files/system/src/system.c: 43:     TMR4_Initialize();
 12327     1006  319E  269B  3190   	fcall	_TMR4_Initialize
 12328     1009                     l5198:
 12329                           
 12330                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
 12331     1009  319E  26BD  3190   	fcall	_ADC_Initialize
 12332     100C                     l5200:
 12333                           
 12334                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
 12335     100C  3191  214D  3190   	fcall	_EUSART_Initialize
 12336     100F                     l5202:
 12337                           
 12338                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
 12339     100F  319E  2643  3190   	fcall	_INTERRUPT_Initialize
 12340     1012                     l193:
 12341     1012  0008               	return
 12342     1013                     __end_of_SYSTEM_Initialize:
 12343                           
 12344                           	psect	text38
 12345     1E9B                     __ptext38:	
 12346 ;; *************** function _TMR4_Initialize *****************
 12347 ;; Defined at:
 12348 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		wreg, status,2
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used: 1
 12368 ;; Hardware stack levels required when called: 4
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_SYSTEM_Initialize
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376     1E9B                     _TMR4_Initialize:	
 12377                           ;psect for function _TMR4_Initialize
 12378                           
 12379     1E9B                     l5110:	
 12380                           ;incstack = 0
 12381                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 12382                           
 12383                           
 12384                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xC3;
 12385     1E9B  30C3               	movlw	195
 12386     1E9C  0028               	movlb	8	; select bank8
 12387     1E9D  0096               	movwf	22	;volatile
 12388     1E9E                     l5112:
 12389                           
 12390                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 12391     1E9E  0195               	clrf	21	;volatile
 12392     1E9F                     l5114:
 12393                           
 12394                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 12395     1E9F  3003               	movlw	low _TMR4_DefaultPeriodMatchCallback
 12396     1EA0  0022               	movlb	2	; select bank2
 12397     1EA1  00DD               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 12398     1EA2  3000               	movlw	high _TMR4_DefaultPeriodMatchCallback
 12399     1EA3  00DE               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 12400     1EA4                     l5116:
 12401                           
 12402                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 12403     1EA4  0020               	movlb	0	; select bank0
 12404     1EA5  1092               	bcf	18,1	;volatile
 12405     1EA6                     l5118:
 12406                           
 12407                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 12408     1EA6  0021               	movlb	1	; select bank1
 12409     1EA7  1492               	bsf	18,1	;volatile
 12410     1EA8                     l5120:
 12411                           
 12412                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (3 << 0x0)
 12413     1EA8  307F               	movlw	127
 12414     1EA9  0028               	movlb	8	; select bank8
 12415     1EAA  0097               	movwf	23	;volatile
 12416     1EAB                     l212:
 12417     1EAB  0008               	return
 12418     1EAC                     __end_of_TMR4_Initialize:
 12419                           
 12420                           	psect	text39
 12421     10EA                     __ptext39:	
 12422 ;; *************** function _PIN_MANAGER_Initialize *****************
 12423 ;; Defined at:
 12424 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;		None
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;		None
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		status,2
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;Total ram usage:        0 bytes
 12443 ;; Hardware stack levels used: 1
 12444 ;; Hardware stack levels required when called: 4
 12445 ;; This function calls:
 12446 ;;		Nothing
 12447 ;; This function is called by:
 12448 ;;		_SYSTEM_Initialize
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452     10EA                     _PIN_MANAGER_Initialize:	
 12453                           ;psect for function _PIN_MANAGER_Initialize
 12454                           
 12455     10EA                     l5078:	
 12456                           ;incstack = 0
 12457                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 12458                           
 12459                           
 12460                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 12461     10EA  0022               	movlb	2	; select bank2
 12462     10EB  018C               	clrf	12	;volatile
 12463                           
 12464                           ;mcc_generated_files/system/src/pins.c: 44:     LATC = 0x0;
 12465     10EC  018E               	clrf	14	;volatile
 12466     10ED                     l5080:
 12467                           
 12468                           ;mcc_generated_files/system/src/pins.c: 49:     TRISA = 0xB;
 12469     10ED  300B               	movlw	11
 12470     10EE  0021               	movlb	1	; select bank1
 12471     10EF  008C               	movwf	12	;volatile
 12472     10F0                     l5082:
 12473                           
 12474                           ;mcc_generated_files/system/src/pins.c: 50:     TRISC = 0x37;
 12475     10F0  3037               	movlw	55
 12476     10F1  008E               	movwf	14	;volatile
 12477     10F2                     l5084:
 12478                           
 12479                           ;mcc_generated_files/system/src/pins.c: 55:     ANSELA = 0x23;
 12480     10F2  3023               	movlw	35
 12481     10F3  0023               	movlb	3	; select bank3
 12482     10F4  008C               	movwf	12	;volatile
 12483     10F5                     l5086:
 12484                           
 12485                           ;mcc_generated_files/system/src/pins.c: 56:     ANSELC = 0x1F;
 12486     10F5  301F               	movlw	31
 12487     10F6  008E               	movwf	14	;volatile
 12488     10F7                     l5088:
 12489                           
 12490                           ;mcc_generated_files/system/src/pins.c: 61:     WPUA = 0xF;
 12491     10F7  300F               	movlw	15
 12492     10F8  0024               	movlb	4	; select bank4
 12493     10F9  008C               	movwf	12	;volatile
 12494     10FA                     l5090:
 12495                           
 12496                           ;mcc_generated_files/system/src/pins.c: 62:     WPUC = 0x3F;
 12497     10FA  303F               	movlw	63
 12498     10FB  008E               	movwf	14	;volatile
 12499     10FC                     l5092:
 12500                           
 12501                           ;mcc_generated_files/system/src/pins.c: 63:     OPTION_REGbits.nWPUEN = 0x0;
 12502     10FC  0021               	movlb	1	; select bank1
 12503     10FD  1395               	bcf	21,7	;volatile
 12504                           
 12505                           ;mcc_generated_files/system/src/pins.c: 69:     ODCONA = 0x0;
 12506     10FE  0025               	movlb	5	; select bank5
 12507     10FF  018C               	clrf	12	;volatile
 12508                           
 12509                           ;mcc_generated_files/system/src/pins.c: 70:     ODCONC = 0x0;
 12510     1100  018E               	clrf	14	;volatile
 12511     1101                     l5094:
 12512                           
 12513                           ;mcc_generated_files/system/src/pins.c: 74:     SLRCONA = 0x37;
 12514     1101  3037               	movlw	55
 12515     1102  0026               	movlb	6	; select bank6
 12516     1103  008C               	movwf	12	;volatile
 12517     1104                     l5096:
 12518                           
 12519                           ;mcc_generated_files/system/src/pins.c: 75:     SLRCONC = 0x3F;
 12520     1104  303F               	movlw	63
 12521     1105  008E               	movwf	14	;volatile
 12522     1106                     l5098:
 12523                           
 12524                           ;mcc_generated_files/system/src/pins.c: 79:     INLVLA = 0x3F;
 12525     1106  303F               	movlw	63
 12526     1107  0027               	movlb	7	; select bank7
 12527     1108  008C               	movwf	12	;volatile
 12528     1109                     l5100:
 12529                           
 12530                           ;mcc_generated_files/system/src/pins.c: 80:     INLVLC = 0x3F;
 12531     1109  303F               	movlw	63
 12532     110A  008E               	movwf	14	;volatile
 12533     110B                     l5102:
 12534                           
 12535                           ;mcc_generated_files/system/src/pins.c: 85:     RXPPS = 0x15;
 12536     110B  3015               	movlw	21
 12537     110C  003C               	movlb	28	; select bank28
 12538     110D  00A4               	movwf	36	;volatile
 12539     110E                     l5104:
 12540                           
 12541                           ;mcc_generated_files/system/src/pins.c: 86:     RC3PPS = 20;
 12542     110E  3014               	movlw	20
 12543     110F  003D               	movlb	29	; select bank29
 12544     1110  00A3               	movwf	35	;volatile
 12545                           
 12546                           ;mcc_generated_files/system/src/pins.c: 95:     IOCAP = 0x0;
 12547     1111  0027               	movlb	7	; select bank7
 12548     1112  0191               	clrf	17	;volatile
 12549                           
 12550                           ;mcc_generated_files/system/src/pins.c: 96:     IOCAN = 0x0;
 12551     1113  0192               	clrf	18	;volatile
 12552                           
 12553                           ;mcc_generated_files/system/src/pins.c: 97:     IOCAF = 0x0;
 12554     1114  0193               	clrf	19	;volatile
 12555                           
 12556                           ;mcc_generated_files/system/src/pins.c: 98:     IOCCP = 0x0;
 12557     1115  0197               	clrf	23	;volatile
 12558                           
 12559                           ;mcc_generated_files/system/src/pins.c: 99:     IOCCN = 0x0;
 12560     1116  0198               	clrf	24	;volatile
 12561                           
 12562                           ;mcc_generated_files/system/src/pins.c: 100:     IOCCF = 0x0;
 12563     1117  0199               	clrf	25	;volatile
 12564     1118                     l116:
 12565     1118  0008               	return
 12566     1119                     __end_of_PIN_MANAGER_Initialize:
 12567                           
 12568                           	psect	text40
 12569     1E43                     __ptext40:	
 12570 ;; *************** function _INTERRUPT_Initialize *****************
 12571 ;; Defined at:
 12572 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;		None
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  1    wreg      void 
 12579 ;; Registers used:
 12580 ;;		wreg, status,2, status,0, pclath, cstack
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;Total ram usage:        0 bytes
 12591 ;; Hardware stack levels used: 1
 12592 ;; Hardware stack levels required when called: 5
 12593 ;; This function calls:
 12594 ;;		_INT_SetInterruptHandler
 12595 ;; This function is called by:
 12596 ;;		_SYSTEM_Initialize
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600     1E43                     _INTERRUPT_Initialize:	
 12601                           ;psect for function _INTERRUPT_Initialize
 12602                           
 12603     1E43                     l5106:	
 12604                           ;incstack = 0
 12605                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12606                           
 12607                           
 12608                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
 12609     1E43  108B               	bcf	11,1	;volatile
 12610                           
 12611                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
 12612     1E44  0021               	movlb	1	; select bank1
 12613     1E45  1715               	bsf	21,6	;volatile
 12614     1E46                     l5108:
 12615                           
 12616                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 12617     1E46  3000               	movlw	0
 12618     1E47  0020               	movlb	0	; select bank0
 12619     1E48  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
 12620     1E49  3000               	movlw	0
 12621     1E4A  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 12622     1E4B  319E  2631  319E   	fcall	_INT_SetInterruptHandler
 12623     1E4E                     l150:
 12624     1E4E  0008               	return
 12625     1E4F                     __end_of_INTERRUPT_Initialize:
 12626                           
 12627                           	psect	text41
 12628     1E31                     __ptext41:	
 12629 ;; *************** function _INT_SetInterruptHandler *****************
 12630 ;; Defined at:
 12631 ;;		line 109 in file "mcc_generated_files/system/src/interrupt.c"
 12632 ;; Parameters:    Size  Location     Type
 12633 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 12634 ;;		 -> INT_DefaultInterruptHandler(1), 
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;		None
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  1    wreg      void 
 12639 ;; Registers used:
 12640 ;;		wreg
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;Total ram usage:        2 bytes
 12651 ;; Hardware stack levels used: 1
 12652 ;; Hardware stack levels required when called: 4
 12653 ;; This function calls:
 12654 ;;		Nothing
 12655 ;; This function is called by:
 12656 ;;		_INTERRUPT_Initialize
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660     1E31                     _INT_SetInterruptHandler:	
 12661                           ;psect for function _INT_SetInterruptHandler
 12662                           
 12663     1E31                     l4992:	
 12664                           ;incstack = 0
 12665                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 12666                           
 12667                           
 12668                           ;mcc_generated_files/system/src/interrupt.c: 110:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 12669     1E31  0020               	movlb	0	; select bank0
 12670     1E32  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 12671     1E33  0021               	movlb	1	; select bank1
 12672     1E34  00EE               	movwf	(_INT_InterruptHandler+1)^(0+128)
 12673     1E35  0020               	movlb	0	; select bank0
 12674     1E36  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
 12675     1E37  0021               	movlb	1	; select bank1
 12676     1E38  00ED               	movwf	_INT_InterruptHandler^(0+128)
 12677     1E39                     l175:
 12678     1E39  0008               	return
 12679     1E3A                     __end_of_INT_SetInterruptHandler:
 12680                           
 12681                           	psect	text42
 12682     114D                     __ptext42:	
 12683 ;; *************** function _EUSART_Initialize *****************
 12684 ;; Defined at:
 12685 ;;		line 120 in file "mcc_generated_files/uart/src/eusart.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;		None
 12688 ;; Auto vars:     Size  Location     Type
 12689 ;;		None
 12690 ;; Return value:  Size  Location     Type
 12691 ;;                  1    wreg      void 
 12692 ;; Registers used:
 12693 ;;		wreg, status,2, status,0, pclath, cstack
 12694 ;; Tracked objects:
 12695 ;;		On entry : 0/0
 12696 ;;		On exit  : 0/0
 12697 ;;		Unchanged: 0/0
 12698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12703 ;;Total ram usage:        0 bytes
 12704 ;; Hardware stack levels used: 1
 12705 ;; Hardware stack levels required when called: 5
 12706 ;; This function calls:
 12707 ;;		_EUSART_FramingErrorCallbackRegister
 12708 ;;		_EUSART_OverrunErrorCallbackRegister
 12709 ;; This function is called by:
 12710 ;;		_SYSTEM_Initialize
 12711 ;; This function uses a non-reentrant model
 12712 ;;
 12713                           
 12714     114D                     _EUSART_Initialize:	
 12715                           ;psect for function _EUSART_Initialize
 12716                           
 12717     114D                     l5122:	
 12718                           ;incstack = 0
 12719                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12720                           
 12721                           
 12722                           ;mcc_generated_files/uart/src/eusart.c: 122:     PIE1bits.RCIE = 0;
 12723     114D  0021               	movlb	1	; select bank1
 12724     114E  1291               	bcf	17,5	;volatile
 12725     114F                     l5124:
 12726                           
 12727                           ;mcc_generated_files/uart/src/eusart.c: 123:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 12728     114F  30D2               	movlw	low _EUSART_ReceiveISR
 12729     1150  0022               	movlb	2	; select bank2
 12730     1151  00E1               	movwf	_EUSART_RxInterruptHandler^(0+256)
 12731     1152  3011               	movlw	high _EUSART_ReceiveISR
 12732     1153  00E2               	movwf	(_EUSART_RxInterruptHandler^(0+256)+1)
 12733     1154                     l5126:
 12734                           
 12735                           ;mcc_generated_files/uart/src/eusart.c: 125:     PIE1bits.TXIE = 0;
 12736     1154  0021               	movlb	1	; select bank1
 12737     1155  1211               	bcf	17,4	;volatile
 12738                           
 12739                           ;mcc_generated_files/uart/src/eusart.c: 126:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 12740     1156  30D1               	movlw	low _EUSART_TransmitISR
 12741     1157  0022               	movlb	2	; select bank2
 12742     1158  00DF               	movwf	_EUSART_TxInterruptHandler^(0+256)
 12743     1159  301E               	movlw	high _EUSART_TransmitISR
 12744     115A  00E0               	movwf	(_EUSART_TxInterruptHandler^(0+256)+1)
 12745     115B                     l5128:
 12746                           
 12747                           ;mcc_generated_files/uart/src/eusart.c: 131:     BAUD1CON = 0x48;
 12748     115B  3048               	movlw	72
 12749     115C  0023               	movlb	3	; select bank3
 12750     115D  009F               	movwf	31	;volatile
 12751     115E                     l5130:
 12752                           
 12753                           ;mcc_generated_files/uart/src/eusart.c: 133:     RC1STA = 0x90;
 12754     115E  3090               	movlw	144
 12755     115F  009D               	movwf	29	;volatile
 12756     1160                     l5132:
 12757                           
 12758                           ;mcc_generated_files/uart/src/eusart.c: 135:     TX1STA = 0x26;
 12759     1160  3026               	movlw	38
 12760     1161  009E               	movwf	30	;volatile
 12761     1162                     l5134:
 12762                           
 12763                           ;mcc_generated_files/uart/src/eusart.c: 137:     SP1BRGL = 0xA0;
 12764     1162  30A0               	movlw	160
 12765     1163  009B               	movwf	27	;volatile
 12766     1164                     l5136:
 12767                           
 12768                           ;mcc_generated_files/uart/src/eusart.c: 139:     SP1BRGH = 0x1;
 12769     1164  3001               	movlw	1
 12770     1165  009C               	movwf	28	;volatile
 12771     1166                     l5138:
 12772                           
 12773                           ;mcc_generated_files/uart/src/eusart.c: 141:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 12774     1166  3000               	movlw	low _EUSART_DefaultFramingErrorCallback
 12775     1167  0020               	movlb	0	; select bank0
 12776     1168  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
 12777     1169  3008               	movlw	high _EUSART_DefaultFramingErrorCallback
 12778     116A  00A1               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
 12779     116B  319E  266D  3191   	fcall	_EUSART_FramingErrorCallbackRegister
 12780     116E                     l5140:
 12781                           
 12782                           ;mcc_generated_files/uart/src/eusart.c: 142:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 12783     116E  3005               	movlw	low _EUSART_DefaultOverrunErrorCallback
 12784     116F  0020               	movlb	0	; select bank0
 12785     1170  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
 12786     1171  301E               	movlw	high _EUSART_DefaultOverrunErrorCallback
 12787     1172  00A1               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
 12788     1173  319E  267C  3191   	fcall	_EUSART_OverrunErrorCallbackRegister
 12789     1176                     l5142:
 12790                           
 12791                           ;mcc_generated_files/uart/src/eusart.c: 143:     eusartRxLastError.status = 0;
 12792     1176  0022               	movlb	2	; select bank2
 12793     1177  01D8               	clrf	_eusartRxLastError^(0+256)	;volatile
 12794     1178  01D9               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 12795     1179                     l5144:
 12796                           
 12797                           ;mcc_generated_files/uart/src/eusart.c: 145:     eusartTxHead = 0;
 12798     1179  01F5               	clrf	_eusartTxHead	;volatile
 12799     117A                     l5146:
 12800                           
 12801                           ;mcc_generated_files/uart/src/eusart.c: 146:     eusartTxTail = 0;
 12802     117A  01F4               	clrf	_eusartTxTail	;volatile
 12803     117B                     l5148:
 12804                           
 12805                           ;mcc_generated_files/uart/src/eusart.c: 147:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 12806     117B  3008               	movlw	8
 12807     117C  00F3               	movwf	_eusartTxBufferRemaining	;volatile
 12808     117D                     l5150:
 12809                           
 12810                           ;mcc_generated_files/uart/src/eusart.c: 149:     eusartRxHead = 0;
 12811     117D  01F2               	clrf	_eusartRxHead	;volatile
 12812     117E                     l5152:
 12813                           
 12814                           ;mcc_generated_files/uart/src/eusart.c: 150:     eusartRxTail = 0;
 12815     117E  01F1               	clrf	_eusartRxTail	;volatile
 12816     117F                     l5154:
 12817                           
 12818                           ;mcc_generated_files/uart/src/eusart.c: 151:     eusartRxCount = 0;
 12819     117F  01F0               	clrf	_eusartRxCount	;volatile
 12820     1180                     l5156:
 12821                           
 12822                           ;mcc_generated_files/uart/src/eusart.c: 153:     PIE1bits.RCIE = 1;
 12823     1180  0021               	movlb	1	; select bank1
 12824     1181  1691               	bsf	17,5	;volatile
 12825     1182                     l354:
 12826     1182  0008               	return
 12827     1183                     __end_of_EUSART_Initialize:
 12828                           
 12829                           	psect	text43
 12830     1E7C                     __ptext43:	
 12831 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 12832 ;; Defined at:
 12833 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
 12836 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 12837 ;; Auto vars:     Size  Location     Type
 12838 ;;		None
 12839 ;; Return value:  Size  Location     Type
 12840 ;;                  1    wreg      void 
 12841 ;; Registers used:
 12842 ;;		wreg, status,2, status,0
 12843 ;; Tracked objects:
 12844 ;;		On entry : 0/0
 12845 ;;		On exit  : 0/0
 12846 ;;		Unchanged: 0/0
 12847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12852 ;;Total ram usage:        2 bytes
 12853 ;; Hardware stack levels used: 1
 12854 ;; Hardware stack levels required when called: 4
 12855 ;; This function calls:
 12856 ;;		Nothing
 12857 ;; This function is called by:
 12858 ;;		_EUSART_Initialize
 12859 ;; This function uses a non-reentrant model
 12860 ;;
 12861                           
 12862     1E7C                     _EUSART_OverrunErrorCallbackRegister:	
 12863                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 12864                           
 12865     1E7C                     l4998:	
 12866                           ;incstack = 0
 12867                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 12868                           
 12869                           
 12870                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 12871     1E7C  0020               	movlb	0	; select bank0
 12872     1E7D  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
 12873     1E7E  0421               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
 12874     1E7F  1903               	btfsc	3,2
 12875     1E80  2E82               	goto	u6691
 12876     1E81  2E83               	goto	u6690
 12877     1E82                     u6691:
 12878     1E82  2E8A               	goto	l472
 12879     1E83                     u6690:
 12880     1E83                     l5000:
 12881                           
 12882                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_OverrunErrorHandler = callbackHandler;
 12883     1E83  0821               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
 12884     1E84  0022               	movlb	2	; select bank2
 12885     1E85  00D1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 12886     1E86  0020               	movlb	0	; select bank0
 12887     1E87  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
 12888     1E88  0022               	movlb	2	; select bank2
 12889     1E89  00D0               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 12890     1E8A                     l472:
 12891     1E8A  0008               	return
 12892     1E8B                     __end_of_EUSART_OverrunErrorCallbackRegister:
 12893                           
 12894                           	psect	text44
 12895     1E6D                     __ptext44:	
 12896 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 12897 ;; Defined at:
 12898 ;;		line 422 in file "mcc_generated_files/uart/src/eusart.c"
 12899 ;; Parameters:    Size  Location     Type
 12900 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
 12901 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;		None
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      void 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2, status,0
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;Total ram usage:        2 bytes
 12918 ;; Hardware stack levels used: 1
 12919 ;; Hardware stack levels required when called: 4
 12920 ;; This function calls:
 12921 ;;		Nothing
 12922 ;; This function is called by:
 12923 ;;		_EUSART_Initialize
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927     1E6D                     _EUSART_FramingErrorCallbackRegister:	
 12928                           ;psect for function _EUSART_FramingErrorCallbackRegister
 12929                           
 12930     1E6D                     l4994:	
 12931                           ;incstack = 0
 12932                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 12933                           
 12934                           
 12935                           ;mcc_generated_files/uart/src/eusart.c: 422: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 423: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 424:     if(((void*)0) != callbackHandler)
 12936     1E6D  0020               	movlb	0	; select bank0
 12937     1E6E  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
 12938     1E6F  0421               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
 12939     1E70  1903               	btfsc	3,2
 12940     1E71  2E73               	goto	u6681
 12941     1E72  2E74               	goto	u6680
 12942     1E73                     u6681:
 12943     1E73  2E7B               	goto	l468
 12944     1E74                     u6680:
 12945     1E74                     l4996:
 12946                           
 12947                           ;mcc_generated_files/uart/src/eusart.c: 425:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 426:         EUSART_FramingErrorHandler = callbackHandler;
 12948     1E74  0821               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
 12949     1E75  0022               	movlb	2	; select bank2
 12950     1E76  00D3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 12951     1E77  0020               	movlb	0	; select bank0
 12952     1E78  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
 12953     1E79  0022               	movlb	2	; select bank2
 12954     1E7A  00D2               	movwf	_EUSART_FramingErrorHandler^(0+256)
 12955     1E7B                     l468:
 12956     1E7B  0008               	return
 12957     1E7C                     __end_of_EUSART_FramingErrorCallbackRegister:
 12958                           
 12959                           	psect	text45
 12960     1E28                     __ptext45:	
 12961 ;; *************** function _CLOCK_Initialize *****************
 12962 ;; Defined at:
 12963 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;		None
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  1    wreg      void 
 12970 ;; Registers used:
 12971 ;;		status,2
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12981 ;;Total ram usage:        0 bytes
 12982 ;; Hardware stack levels used: 1
 12983 ;; Hardware stack levels required when called: 4
 12984 ;; This function calls:
 12985 ;;		Nothing
 12986 ;; This function is called by:
 12987 ;;		_SYSTEM_Initialize
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991     1E28                     _CLOCK_Initialize:	
 12992                           ;psect for function _CLOCK_Initialize
 12993                           
 12994     1E28                     l5074:	
 12995                           ;incstack = 0
 12996                           ; Regs used in _CLOCK_Initialize: [status,2]
 12997                           
 12998                           
 12999                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
 13000     1E28  3078               	movlw	120
 13001     1E29  0021               	movlb	1	; select bank1
 13002     1E2A  0099               	movwf	25	;volatile
 13003                           
 13004                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (1 << 0x7)
 13005     1E2B  3080               	movlw	128
 13006     1E2C  0022               	movlb	2	; select bank2
 13007     1E2D  0096               	movwf	22	;volatile
 13008     1E2E                     l5076:
 13009                           
 13010                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
 13011     1E2E  0021               	movlb	1	; select bank1
 13012     1E2F  0198               	clrf	24	;volatile
 13013     1E30                     l67:
 13014     1E30  0008               	return
 13015     1E31                     __end_of_CLOCK_Initialize:
 13016                           
 13017                           	psect	text46
 13018     1EBD                     __ptext46:	
 13019 ;; *************** function _ADC_Initialize *****************
 13020 ;; Defined at:
 13021 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;		None
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;		None
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  1    wreg      void 
 13028 ;; Registers used:
 13029 ;;		wreg, status,2, status,0, pclath, cstack
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13039 ;;Total ram usage:        0 bytes
 13040 ;; Hardware stack levels used: 1
 13041 ;; Hardware stack levels required when called: 5
 13042 ;; This function calls:
 13043 ;;		_ADC_SetInterruptHandler
 13044 ;; This function is called by:
 13045 ;;		_SYSTEM_Initialize
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049     1EBD                     _ADC_Initialize:	
 13050                           ;psect for function _ADC_Initialize
 13051                           
 13052     1EBD                     l5062:	
 13053                           ;incstack = 0
 13054                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13055                           
 13056                           
 13057                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
 13058     1EBD  3060               	movlw	96
 13059     1EBE  0021               	movlb	1	; select bank1
 13060     1EBF  009E               	movwf	30	;volatile
 13061     1EC0                     l5064:
 13062                           
 13063                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 13064     1EC0  019B               	clrf	27	;volatile
 13065                           
 13066                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 13067     1EC1  019C               	clrf	28	;volatile
 13068                           
 13069                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
 13070     1EC2  019F               	clrf	31	;volatile
 13071     1EC3                     l5066:
 13072                           
 13073                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 13074     1EC3  3001               	movlw	1
 13075     1EC4  009D               	movwf	29	;volatile
 13076     1EC5                     l5068:
 13077                           
 13078                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 13079     1EC5  0020               	movlb	0	; select bank0
 13080     1EC6  1311               	bcf	17,6	;volatile
 13081     1EC7                     l5070:
 13082                           
 13083                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 13084     1EC7  30F3               	movlw	low _ADC_DefaultInterruptHandler
 13085     1EC8  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler
 13086     1EC9  301D               	movlw	high _ADC_DefaultInterruptHandler
 13087     1ECA  00A1               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 13088     1ECB  319E  261F  319E   	fcall	_ADC_SetInterruptHandler
 13089     1ECE                     l5072:
 13090                           
 13091                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 13092     1ECE  0021               	movlb	1	; select bank1
 13093     1ECF  1711               	bsf	17,6	;volatile
 13094     1ED0                     l27:
 13095     1ED0  0008               	return
 13096     1ED1                     __end_of_ADC_Initialize:
 13097                           
 13098                           	psect	text47
 13099     1E1F                     __ptext47:	
 13100 ;; *************** function _ADC_SetInterruptHandler *****************
 13101 ;; Defined at:
 13102 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13105 ;;		 -> ADC_DefaultInterruptHandler(1), 
 13106 ;; Auto vars:     Size  Location     Type
 13107 ;;		None
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1    wreg      void 
 13110 ;; Registers used:
 13111 ;;		wreg
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13121 ;;Total ram usage:        2 bytes
 13122 ;; Hardware stack levels used: 1
 13123 ;; Hardware stack levels required when called: 4
 13124 ;; This function calls:
 13125 ;;		Nothing
 13126 ;; This function is called by:
 13127 ;;		_ADC_Initialize
 13128 ;; This function uses a non-reentrant model
 13129 ;;
 13130                           
 13131     1E1F                     _ADC_SetInterruptHandler:	
 13132                           ;psect for function _ADC_SetInterruptHandler
 13133                           
 13134     1E1F                     l4990:	
 13135                           ;incstack = 0
 13136                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 13137                           
 13138                           
 13139                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 13140     1E1F  0020               	movlb	0	; select bank0
 13141     1E20  0821               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
 13142     1E21  0022               	movlb	2	; select bank2
 13143     1E22  00E4               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 13144     1E23  0020               	movlb	0	; select bank0
 13145     1E24  0820               	movf	ADC_SetInterruptHandler@InterruptHandler,w
 13146     1E25  0022               	movlb	2	; select bank2
 13147     1E26  00E3               	movwf	_ADC_InterruptHandler^(0+256)
 13148     1E27                     l55:
 13149     1E27  0008               	return
 13150     1E28                     __end_of_ADC_SetInterruptHandler:
 13151                           
 13152                           	psect	text48
 13153     1E5E                     __ptext48:	
 13154 ;; *************** function _EUSART_RxCompleteCallbackRegister *****************
 13155 ;; Defined at:
 13156 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
 13159 ;;		 -> check_RX_Data(1), 
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;		None
 13162 ;; Return value:  Size  Location     Type
 13163 ;;                  1    wreg      void 
 13164 ;; Registers used:
 13165 ;;		wreg, status,2, status,0
 13166 ;; Tracked objects:
 13167 ;;		On entry : 0/0
 13168 ;;		On exit  : 0/0
 13169 ;;		Unchanged: 0/0
 13170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;Total ram usage:        2 bytes
 13176 ;; Hardware stack levels used: 1
 13177 ;; Hardware stack levels required when called: 4
 13178 ;; This function calls:
 13179 ;;		Nothing
 13180 ;; This function is called by:
 13181 ;;		_main
 13182 ;; This function uses a non-reentrant model
 13183 ;;
 13184                           
 13185     1E5E                     _EUSART_RxCompleteCallbackRegister:	
 13186                           ;psect for function _EUSART_RxCompleteCallbackRegister
 13187                           
 13188     1E5E                     l5208:	
 13189                           ;incstack = 0
 13190                           ; Regs used in _EUSART_RxCompleteCallbackRegister: [wreg+status,2+status,0]
 13191                           
 13192                           
 13193                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_RxCompleteCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generated_
      +                          files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 13194     1E5E  0020               	movlb	0	; select bank0
 13195     1E5F  0820               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler,w
 13196     1E60  0421               	iorwf	EUSART_RxCompleteCallbackRegister@callbackHandler+1,w
 13197     1E61  1903               	btfsc	3,2
 13198     1E62  2E64               	goto	u6771
 13199     1E63  2E65               	goto	u6770
 13200     1E64                     u6771:
 13201     1E64  2E6C               	goto	l476
 13202     1E65                     u6770:
 13203     1E65                     l5210:
 13204                           
 13205                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:        EUSART_RxCompleteInterruptHandler = callbackHandler;
 13206     1E65  0821               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler+1,w
 13207     1E66  0022               	movlb	2	; select bank2
 13208     1E67  00D5               	movwf	(_EUSART_RxCompleteInterruptHandler+1)^(0+256)
 13209     1E68  0020               	movlb	0	; select bank0
 13210     1E69  0820               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler,w
 13211     1E6A  0022               	movlb	2	; select bank2
 13212     1E6B  00D4               	movwf	_EUSART_RxCompleteInterruptHandler^(0+256)
 13213     1E6C                     l476:
 13214     1E6C  0008               	return
 13215     1E6D                     __end_of_EUSART_RxCompleteCallbackRegister:
 13216                           
 13217                           	psect	text49
 13218     1013                     __ptext49:	
 13219 ;; *************** function _ADC_GetConversion *****************
 13220 ;; Defined at:
 13221 ;;		line 106 in file "mcc_generated_files/adc/src/adc.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  channel         1    wreg     enum E4170
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;  channel         1    3[BANK0 ] enum E4170
 13226 ;; Return value:  Size  Location     Type
 13227 ;;                  2    0[BANK0 ] unsigned short 
 13228 ;; Registers used:
 13229 ;;		wreg, status,2, status,0
 13230 ;; Tracked objects:
 13231 ;;		On entry : 0/0
 13232 ;;		On exit  : 0/0
 13233 ;;		Unchanged: 0/0
 13234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;Total ram usage:        4 bytes
 13240 ;; Hardware stack levels used: 1
 13241 ;; Hardware stack levels required when called: 4
 13242 ;; This function calls:
 13243 ;;		Nothing
 13244 ;; This function is called by:
 13245 ;;		_main
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249     1013                     _ADC_GetConversion:	
 13250                           ;psect for function _ADC_GetConversion
 13251                           
 13252                           
 13253                           ;incstack = 0
 13254                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13255                           ;ADC_GetConversion@channel stored from wreg
 13256     1013  0020               	movlb	0	; select bank0
 13257     1014  00A3               	movwf	ADC_GetConversion@channel
 13258     1015                     l5182:
 13259                           
 13260                           ;mcc_generated_files/adc/src/adc.c: 106: adc_result_t ADC_GetConversion(adc_channel_t ch
      +                          annel);mcc_generated_files/adc/src/adc.c: 107: {;mcc_generated_files/adc/src/adc.c: 109:
      +                               ADCON0bits.CHS = channel;
 13261     1015  0823               	movf	ADC_GetConversion@channel,w
 13262     1016  00A2               	movwf	??_ADC_GetConversion
 13263     1017  0DA2               	rlf	??_ADC_GetConversion,f
 13264     1018  0DA2               	rlf	??_ADC_GetConversion,f
 13265     1019  0021               	movlb	1	; select bank1
 13266     101A  081D               	movf	29,w	;volatile
 13267     101B  0020               	movlb	0	; select bank0
 13268     101C  0622               	xorwf	??_ADC_GetConversion,w
 13269     101D  3983               	andlw	-125
 13270     101E  0622               	xorwf	??_ADC_GetConversion,w
 13271     101F  0021               	movlb	1	; select bank1
 13272     1020  009D               	movwf	29	;volatile
 13273     1021                     l5184:
 13274                           
 13275                           ;mcc_generated_files/adc/src/adc.c: 112:     ADCON0bits.ADON = 1;
 13276     1021  141D               	bsf	29,0	;volatile
 13277     1022                     l5186:
 13278                           
 13279                           ;mcc_generated_files/adc/src/adc.c: 115:     _delay((unsigned long)((5)*(16000000/400000
      +                          0.0)));
 13280     1022  3006               	movlw	6
 13281     1023                     u7057:
 13282     1023  0B89               	decfsz	9,f
 13283     1024  2823               	goto	u7057
 13284     1025  3200               	nop2
 13285     1026                     l5188:
 13286                           
 13287                           ;mcc_generated_files/adc/src/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 13288     1026  0021               	movlb	1	; select bank1
 13289     1027  149D               	bsf	29,1	;volatile
 13290     1028                     l42:	
 13291                           ;mcc_generated_files/adc/src/adc.c: 122:     {;mcc_generated_files/adc/src/adc.c: 123:  
      +                             }
 13292                           
 13293                           
 13294                           ;mcc_generated_files/adc/src/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 13295     1028  189D               	btfsc	29,1	;volatile
 13296     1029  282B               	goto	u6761
 13297     102A  282C               	goto	u6760
 13298     102B                     u6761:
 13299     102B  2828               	goto	l42
 13300     102C                     u6760:
 13301     102C                     l5190:
 13302                           
 13303                           ;mcc_generated_files/adc/src/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 13304     102C  081C               	movf	28,w	;volatile
 13305     102D  0020               	movlb	0	; select bank0
 13306     102E  00A1               	movwf	?_ADC_GetConversion+1
 13307     102F  0021               	movlb	1	; select bank1
 13308     1030  081B               	movf	27,w	;volatile
 13309     1031  0020               	movlb	0	; select bank0
 13310     1032  00A0               	movwf	?_ADC_GetConversion
 13311     1033                     l45:
 13312     1033  0008               	return
 13313     1034                     __end_of_ADC_GetConversion:
 13314                           
 13315                           	psect	intentry
 13316     0004                     __pintentry:	
 13317 ;; *************** function _INTERRUPT_InterruptManager *****************
 13318 ;; Defined at:
 13319 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 13320 ;; Parameters:    Size  Location     Type
 13321 ;;		None
 13322 ;; Auto vars:     Size  Location     Type
 13323 ;;		None
 13324 ;; Return value:  Size  Location     Type
 13325 ;;                  1    wreg      void 
 13326 ;; Registers used:
 13327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13328 ;; Tracked objects:
 13329 ;;		On entry : 0/0
 13330 ;;		On exit  : 0/0
 13331 ;;		Unchanged: 0/0
 13332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13337 ;;Total ram usage:        0 bytes
 13338 ;; Hardware stack levels used: 1
 13339 ;; Hardware stack levels required when called: 3
 13340 ;; This function calls:
 13341 ;;		NULL
 13342 ;;		_ADC_ISR
 13343 ;;		_EUSART_ReceiveISR
 13344 ;;		_EUSART_TransmitISR
 13345 ;;		_TMR4_ISR
 13346 ;; This function is called by:
 13347 ;;		Interrupt level 1
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351     0004                     _INTERRUPT_InterruptManager:
 13352                           
 13353                           ;incstack = 0
 13354     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13355                           
 13356                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13357     0005  3180               	pagesel	$
 13358     0006                     i1l4374:
 13359                           
 13360                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 13361     0006  1F0B               	btfss	11,6	;volatile
 13362     0007  2809               	goto	u559_21
 13363     0008  280A               	goto	u559_20
 13364     0009                     u559_21:
 13365     0009  2848               	goto	i1l165
 13366     000A                     u559_20:
 13367     000A                     i1l4376:
 13368                           
 13369                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 13370     000A  0021               	movlb	1	; select bank1
 13371     000B  1E91               	btfss	17,5	;volatile
 13372     000C  280E               	goto	u560_21
 13373     000D  280F               	goto	u560_20
 13374     000E                     u560_21:
 13375     000E  281B               	goto	i1l156
 13376     000F                     u560_20:
 13377     000F                     i1l4378:
 13378     000F  0020               	movlb	0	; select bank0
 13379     0010  1E91               	btfss	17,5	;volatile
 13380     0011  2813               	goto	u561_21
 13381     0012  2814               	goto	u561_20
 13382     0013                     u561_21:
 13383     0013  281B               	goto	i1l156
 13384     0014                     u561_20:
 13385     0014                     i1l4380:
 13386                           
 13387                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_RxInterruptHandler();
 13388     0014  0022               	movlb	2	; select bank2
 13389     0015  0862               	movf	(_EUSART_RxInterruptHandler+1)^(0+256),w
 13390     0016  008A               	movwf	10
 13391     0017  0861               	movf	_EUSART_RxInterruptHandler^(0+256),w
 13392     0018  000A               	callw
 13393     0019  3180               	pagesel	$
 13394                           
 13395                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 13396     001A  2848               	goto	i1l165
 13397     001B                     i1l156:	
 13398                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.TXIE == 1 && P
      +                          IR1bits.TXIF == 1)
 13399                           
 13400     001B  0021               	movlb	1	; select bank1
 13401     001C  1E11               	btfss	17,4	;volatile
 13402     001D  281F               	goto	u562_21
 13403     001E  2820               	goto	u562_20
 13404     001F                     u562_21:
 13405     001F  282C               	goto	i1l158
 13406     0020                     u562_20:
 13407     0020                     i1l4382:
 13408     0020  0020               	movlb	0	; select bank0
 13409     0021  1E11               	btfss	17,4	;volatile
 13410     0022  2824               	goto	u563_21
 13411     0023  2825               	goto	u563_20
 13412     0024                     u563_21:
 13413     0024  282C               	goto	i1l158
 13414     0025                     u563_20:
 13415     0025                     i1l4384:
 13416                           
 13417                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_TxInterruptHandler();
 13418     0025  0022               	movlb	2	; select bank2
 13419     0026  0860               	movf	(_EUSART_TxInterruptHandler+1)^(0+256),w
 13420     0027  008A               	movwf	10
 13421     0028  085F               	movf	_EUSART_TxInterruptHandler^(0+256),w
 13422     0029  000A               	callw
 13423     002A  3180               	pagesel	$
 13424                           
 13425                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 13426     002B  2848               	goto	i1l165
 13427     002C                     i1l158:	
 13428                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 13429                           
 13430     002C  0021               	movlb	1	; select bank1
 13431     002D  1F11               	btfss	17,6	;volatile
 13432     002E  2830               	goto	u564_21
 13433     002F  2831               	goto	u564_20
 13434     0030                     u564_21:
 13435     0030  283A               	goto	i1l160
 13436     0031                     u564_20:
 13437     0031                     i1l4386:
 13438     0031  0020               	movlb	0	; select bank0
 13439     0032  1F11               	btfss	17,6	;volatile
 13440     0033  2835               	goto	u565_21
 13441     0034  2836               	goto	u565_20
 13442     0035                     u565_21:
 13443     0035  283A               	goto	i1l160
 13444     0036                     u565_20:
 13445     0036                     i1l4388:
 13446                           
 13447                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             ADC_ISR();
 13448     0036  319E  264F  3180   	fcall	_ADC_ISR
 13449                           
 13450                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 13451     0039  2848               	goto	i1l165
 13452     003A                     i1l160:	
 13453                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 13454                           
 13455     003A  0021               	movlb	1	; select bank1
 13456     003B  1C92               	btfss	18,1	;volatile
 13457     003C  283E               	goto	u566_21
 13458     003D  283F               	goto	u566_20
 13459     003E                     u566_21:
 13460     003E  2848               	goto	i1l159
 13461     003F                     u566_20:
 13462     003F                     i1l4390:
 13463     003F  0020               	movlb	0	; select bank0
 13464     0040  1C92               	btfss	18,1	;volatile
 13465     0041  2843               	goto	u567_21
 13466     0042  2844               	goto	u567_20
 13467     0043                     u567_21:
 13468     0043  2848               	goto	i1l159
 13469     0044                     u567_20:
 13470     0044                     i1l4392:
 13471                           
 13472                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR4_ISR();
 13473     0044  319F  2760  3180   	fcall	_TMR4_ISR
 13474                           
 13475                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 13476     0047  2848               	goto	i1l165
 13477     0048                     i1l159:
 13478     0048                     i1l165:
 13479     0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13480     0049  0009               	retfie
 13481     004A                     __end_of_INTERRUPT_InterruptManager:
 13482                           
 13483                           	psect	text51
 13484     1F60                     __ptext51:	
 13485 ;; *************** function _TMR4_ISR *****************
 13486 ;; Defined at:
 13487 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		wreg, status,2, status,0, pclath, cstack
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; Hardware stack levels required when called: 1
 13508 ;; This function calls:
 13509 ;;		NULL
 13510 ;;		_TMR4_DefaultPeriodMatchCallback
 13511 ;;		_timer_interrupt
 13512 ;; This function is called by:
 13513 ;;		_INTERRUPT_InterruptManager
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517     1F60                     _TMR4_ISR:	
 13518                           ;psect for function _TMR4_ISR
 13519                           
 13520     1F60                     i1l4170:	
 13521                           ;incstack = 0
 13522                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 13523                           
 13524                           
 13525                           ;mcc_generated_files/timer/src/tmr4.c: 116:     static volatile uint16_t CountCallBack =
      +                           0;;mcc_generated_files/timer/src/tmr4.c: 118:     if(++CountCallBack >= (20U))
 13526     1F60  3001               	movlw	1
 13527     1F61  0022               	movlb	2	; select bank2
 13528     1F62  07DA               	addwf	TMR4_ISR@CountCallBack^(0+256),f	;volatile
 13529     1F63  3000               	movlw	0
 13530     1F64  3DDB               	addwfc	(TMR4_ISR@CountCallBack+1)^(0+256),f	;volatile
 13531     1F65  3000               	movlw	0
 13532     1F66  025B               	subwf	(TMR4_ISR@CountCallBack+1)^(0+256),w	;volatile
 13533     1F67  3014               	movlw	20
 13534     1F68  1903               	skipnz
 13535     1F69  025A               	subwf	TMR4_ISR@CountCallBack^(0+256),w	;volatile
 13536     1F6A  1C03               	skipc
 13537     1F6B  2F6D               	goto	u512_21
 13538     1F6C  2F6E               	goto	u512_20
 13539     1F6D                     u512_21:
 13540     1F6D  2F7C               	goto	i1l4178
 13541     1F6E                     u512_20:
 13542     1F6E                     i1l4172:
 13543                           
 13544                           ;mcc_generated_files/timer/src/tmr4.c: 119:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          120:         if(((void*)0) != TMR4_PeriodMatchCallback)
 13545     1F6E  085D               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 13546     1F6F  045E               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 13547     1F70  1903               	btfsc	3,2
 13548     1F71  2F73               	goto	u513_21
 13549     1F72  2F74               	goto	u513_20
 13550     1F73                     u513_21:
 13551     1F73  2F79               	goto	i1l4176
 13552     1F74                     u513_20:
 13553     1F74                     i1l4174:
 13554                           
 13555                           ;mcc_generated_files/timer/src/tmr4.c: 121:         {;mcc_generated_files/timer/src/tmr4
      +                          .c: 122:             TMR4_PeriodMatchCallback();
 13556     1F74  085E               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 13557     1F75  008A               	movwf	10
 13558     1F76  085D               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 13559     1F77  000A               	callw
 13560     1F78  319F               	pagesel	$
 13561     1F79                     i1l4176:
 13562                           
 13563                           ;mcc_generated_files/timer/src/tmr4.c: 124:         CountCallBack = 0;
 13564     1F79  0022               	movlb	2	; select bank2
 13565     1F7A  01DA               	clrf	TMR4_ISR@CountCallBack^(0+256)	;volatile
 13566     1F7B  01DB               	clrf	(TMR4_ISR@CountCallBack+1)^(0+256)	;volatile
 13567     1F7C                     i1l4178:
 13568                           
 13569                           ;mcc_generated_files/timer/src/tmr4.c: 126:     PIR2bits.TMR4IF = 0;
 13570     1F7C  0020               	movlb	0	; select bank0
 13571     1F7D  1092               	bcf	18,1	;volatile
 13572     1F7E                     i1l249:
 13573     1F7E  0008               	return
 13574     1F7F                     __end_of_TMR4_ISR:
 13575                           
 13576                           	psect	text52
 13577     0003                     __ptext52:	
 13578 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 13579 ;; Defined at:
 13580 ;;		line 134 in file "mcc_generated_files/timer/src/tmr4.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;		None
 13583 ;; Auto vars:     Size  Location     Type
 13584 ;;		None
 13585 ;; Return value:  Size  Location     Type
 13586 ;;                  1    wreg      void 
 13587 ;; Registers used:
 13588 ;;		None
 13589 ;; Tracked objects:
 13590 ;;		On entry : 0/0
 13591 ;;		On exit  : 0/0
 13592 ;;		Unchanged: 0/0
 13593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;Total ram usage:        0 bytes
 13599 ;; Hardware stack levels used: 1
 13600 ;; This function calls:
 13601 ;;		Nothing
 13602 ;; This function is called by:
 13603 ;;		_TMR4_Initialize
 13604 ;;		_TMR4_ISR
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608     0003                     _TMR4_DefaultPeriodMatchCallback:	
 13609                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 13610                           
 13611     0003                     i1l255:	
 13612                           ;incstack = 0
 13613                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 13614                           
 13615     0003  0008               	return
 13616     0004                     __end_of_TMR4_DefaultPeriodMatchCallback:
 13617                           
 13618                           	psect	text53
 13619     080D                     __ptext53:	
 13620 ;; *************** function _timer_interrupt *****************
 13621 ;; Defined at:
 13622 ;;		line 137 in file "main.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;		None
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;		None
 13627 ;; Return value:  Size  Location     Type
 13628 ;;                  1    wreg      void 
 13629 ;; Registers used:
 13630 ;;		wreg, status,2, status,0
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13640 ;;Total ram usage:        0 bytes
 13641 ;; Hardware stack levels used: 1
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_main
 13646 ;;		_TMR4_ISR
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650     080D                     _timer_interrupt:	
 13651                           ;psect for function _timer_interrupt
 13652                           
 13653     080D                     i1l4114:	
 13654                           ;incstack = 0
 13655                           ; Regs used in _timer_interrupt: [wreg+status,2+status,0]
 13656                           
 13657                           
 13658                           ;main.c: 138:     if (reset_flg_24 == 3) do { LATAbits.LATA4 = ~LATAbits.LATA4; } while(
      +                          0);
 13659     080D  3003               	movlw	3
 13660     080E  0022               	movlb	2	; select bank2
 13661     080F  066E               	xorwf	_reset_flg_24^(0+256),w
 13662     0810  1D03               	btfss	3,2
 13663     0811  2813               	goto	u497_21
 13664     0812  2814               	goto	u497_20
 13665     0813                     u497_21:
 13666     0813  281F               	goto	i1l4118
 13667     0814                     u497_20:
 13668     0814                     i1l4116:
 13669     0814  1003               	clrc
 13670     0815  1E0C               	btfss	12,4	;volatile
 13671     0816  1403               	setc
 13672     0817  1803               	btfsc	3,0
 13673     0818  281A               	goto	u498_21
 13674     0819  281D               	goto	u498_20
 13675     081A                     u498_21:
 13676     081A  0022               	movlb	2	; select bank2
 13677     081B  160C               	bsf	12,4	;volatile
 13678     081C  281F               	goto	u499_24
 13679     081D                     u498_20:
 13680     081D  0022               	movlb	2	; select bank2
 13681     081E  120C               	bcf	12,4	;volatile
 13682     081F                     u499_24:
 13683     081F                     i1l4118:
 13684                           
 13685                           ;main.c: 139:     if (reset_flg_12 == 3) do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(
      +                          0);
 13686     081F  3003               	movlw	3
 13687     0820  066D               	xorwf	_reset_flg_12^(0+256),w
 13688     0821  1D03               	btfss	3,2
 13689     0822  2824               	goto	u500_21
 13690     0823  2825               	goto	u500_20
 13691     0824                     u500_21:
 13692     0824  2830               	goto	i1l4122
 13693     0825                     u500_20:
 13694     0825                     i1l4120:
 13695     0825  1003               	clrc
 13696     0826  1E8C               	btfss	12,5	;volatile
 13697     0827  1403               	setc
 13698     0828  1803               	btfsc	3,0
 13699     0829  282B               	goto	u501_21
 13700     082A  282E               	goto	u501_20
 13701     082B                     u501_21:
 13702     082B  0022               	movlb	2	; select bank2
 13703     082C  168C               	bsf	12,5	;volatile
 13704     082D  2830               	goto	u502_24
 13705     082E                     u501_20:
 13706     082E  0022               	movlb	2	; select bank2
 13707     082F  128C               	bcf	12,5	;volatile
 13708     0830                     u502_24:
 13709     0830                     i1l4122:
 13710                           
 13711                           ;main.c: 140:     if (reset_flg_24 == 3 || reset_flg_12 == 3) do { LATAbits.LATA2 = ~LAT
      +                          Abits.LATA2; } while(0);
 13712     0830  3003               	movlw	3
 13713     0831  066E               	xorwf	_reset_flg_24^(0+256),w
 13714     0832  1903               	btfsc	3,2
 13715     0833  2835               	goto	u503_21
 13716     0834  2836               	goto	u503_20
 13717     0835                     u503_21:
 13718     0835  283C               	goto	i1l4126
 13719     0836                     u503_20:
 13720     0836                     i1l4124:
 13721     0836  3003               	movlw	3
 13722     0837  066D               	xorwf	_reset_flg_12^(0+256),w
 13723     0838  1D03               	btfss	3,2
 13724     0839  283B               	goto	u504_21
 13725     083A  283C               	goto	u504_20
 13726     083B                     u504_21:
 13727     083B  2847               	goto	i1l629
 13728     083C                     u504_20:
 13729     083C                     i1l4126:
 13730     083C  1003               	clrc
 13731     083D  1D0C               	btfss	12,2	;volatile
 13732     083E  1403               	setc
 13733     083F  1803               	btfsc	3,0
 13734     0840  2842               	goto	u505_21
 13735     0841  2845               	goto	u505_20
 13736     0842                     u505_21:
 13737     0842  0022               	movlb	2	; select bank2
 13738     0843  150C               	bsf	12,2	;volatile
 13739     0844  2847               	goto	u506_24
 13740     0845                     u505_20:
 13741     0845  0022               	movlb	2	; select bank2
 13742     0846  110C               	bcf	12,2	;volatile
 13743     0847                     u506_24:
 13744     0847                     i1l629:
 13745     0847  0008               	return
 13746     0848                     __end_of_timer_interrupt:
 13747                           
 13748                           	psect	text54
 13749     1ED1                     __ptext54:	
 13750 ;; *************** function _EUSART_TransmitISR *****************
 13751 ;; Defined at:
 13752 ;;		line 369 in file "mcc_generated_files/uart/src/eusart.c"
 13753 ;; Parameters:    Size  Location     Type
 13754 ;;		None
 13755 ;; Auto vars:     Size  Location     Type
 13756 ;;  tempTxTail      1    0[COMMON] unsigned char 
 13757 ;; Return value:  Size  Location     Type
 13758 ;;                  1    wreg      void 
 13759 ;; Registers used:
 13760 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13761 ;; Tracked objects:
 13762 ;;		On entry : 0/0
 13763 ;;		On exit  : 0/0
 13764 ;;		Unchanged: 0/0
 13765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;Total ram usage:        1 bytes
 13771 ;; Hardware stack levels used: 1
 13772 ;; This function calls:
 13773 ;;		Nothing
 13774 ;; This function is called by:
 13775 ;;		_EUSART_Initialize
 13776 ;;		_INTERRUPT_InterruptManager
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780     1ED1                     _EUSART_TransmitISR:	
 13781                           ;psect for function _EUSART_TransmitISR
 13782                           
 13783     1ED1                     i1l4230:	
 13784                           ;incstack = 0
 13785                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 13786                           
 13787                           
 13788                           ;mcc_generated_files/uart/src/eusart.c: 371:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 373:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 13789     1ED1  3008               	movlw	8
 13790     1ED2  0273               	subwf	_eusartTxBufferRemaining,w	;volatile
 13791     1ED3  1803               	skipnc
 13792     1ED4  2ED6               	goto	u520_21
 13793     1ED5  2ED7               	goto	u520_20
 13794     1ED6                     u520_21:
 13795     1ED6  2EE8               	goto	i1l443
 13796     1ED7                     u520_20:
 13797     1ED7                     i1l4232:
 13798                           
 13799                           ;mcc_generated_files/uart/src/eusart.c: 374:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 375:        TX1REG = eusartTxBuffer[eusartTxTail];
 13800     1ED7  0874               	movf	_eusartTxTail,w
 13801     1ED8  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 13802     1ED9  0086               	movwf	6
 13803     1EDA  3001               	movlw	1	; select bank2/3
 13804     1EDB  0087               	movwf	7
 13805     1EDC  0801               	movf	1,w
 13806     1EDD  0023               	movlb	3	; select bank3
 13807     1EDE  009A               	movwf	26	;volatile
 13808     1EDF                     i1l4234:
 13809                           
 13810                           ;mcc_generated_files/uart/src/eusart.c: 376:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 13811     1EDF  0874               	movf	_eusartTxTail,w	;volatile
 13812     1EE0  3E01               	addlw	1
 13813     1EE1  3907               	andlw	7
 13814     1EE2  00F6               	movwf	EUSART_TransmitISR@tempTxTail
 13815     1EE3                     i1l4236:
 13816                           
 13817                           ;mcc_generated_files/uart/src/eusart.c: 378:        eusartTxTail = tempTxTail;
 13818     1EE3  0876               	movf	EUSART_TransmitISR@tempTxTail,w
 13819     1EE4  00F4               	movwf	_eusartTxTail	;volatile
 13820     1EE5                     i1l4238:
 13821                           
 13822                           ;mcc_generated_files/uart/src/eusart.c: 379:        eusartTxBufferRemaining++;
 13823     1EE5  3001               	movlw	1
 13824     1EE6  07F3               	addwf	_eusartTxBufferRemaining,f	;volatile
 13825                           
 13826                           ;mcc_generated_files/uart/src/eusart.c: 380:     }
 13827     1EE7  2EEA               	goto	i1l446
 13828     1EE8                     i1l443:	
 13829                           ;mcc_generated_files/uart/src/eusart.c: 381:     else
 13830                           
 13831                           
 13832                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:         PIE1bits.TXIE = 0;
 13833     1EE8  0021               	movlb	1	; select bank1
 13834     1EE9  1211               	bcf	17,4	;volatile
 13835     1EEA                     i1l446:
 13836     1EEA  0008               	return
 13837     1EEB                     __end_of_EUSART_TransmitISR:
 13838                           
 13839                           	psect	text55
 13840     11D2                     __ptext55:	
 13841 ;; *************** function _EUSART_ReceiveISR *****************
 13842 ;; Defined at:
 13843 ;;		line 300 in file "mcc_generated_files/uart/src/eusart.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;		None
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;  tempRxHead      1    5[COMMON] unsigned char 
 13848 ;;  regValue        1    4[COMMON] unsigned char 
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  1    wreg      void 
 13851 ;; Registers used:
 13852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;Total ram usage:        2 bytes
 13863 ;; Hardware stack levels used: 1
 13864 ;; Hardware stack levels required when called: 2
 13865 ;; This function calls:
 13866 ;;		NULL
 13867 ;;		_EUSART_DefaultFramingErrorCallback
 13868 ;;		_EUSART_DefaultOverrunErrorCallback
 13869 ;;		_check_RX_Data
 13870 ;; This function is called by:
 13871 ;;		_EUSART_Initialize
 13872 ;;		_INTERRUPT_InterruptManager
 13873 ;; This function uses a non-reentrant model
 13874 ;;
 13875                           
 13876     11D2                     _EUSART_ReceiveISR:	
 13877                           ;psect for function _EUSART_ReceiveISR
 13878                           
 13879     11D2                     i1l4194:	
 13880                           ;incstack = 0
 13881                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13882                           
 13883                           
 13884                           ;mcc_generated_files/uart/src/eusart.c: 302:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 303:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 306: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 13885     11D2  3572               	lslf	_eusartRxHead,w	;volatile
 13886     11D3  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 13887     11D4  0086               	movwf	6
 13888     11D5  3001               	movlw	1	; select bank2/3
 13889     11D6  0087               	movwf	7
 13890     11D7  3000               	movlw	0
 13891     11D8  3FC0               	movwi [0]fsr1
 13892     11D9  3FC1               	movwi [1]fsr1
 13893     11DA                     i1l4196:
 13894                           
 13895                           ;mcc_generated_files/uart/src/eusart.c: 308:     if(1 == RC1STAbits.OERR)
 13896     11DA  0023               	movlb	3	; select bank3
 13897     11DB  1C9D               	btfss	29,1	;volatile
 13898     11DC  29DE               	goto	u514_21
 13899     11DD  29DF               	goto	u514_20
 13900     11DE                     u514_21:
 13901     11DE  29F1               	goto	i1l4204
 13902     11DF                     u514_20:
 13903     11DF                     i1l4198:
 13904                           
 13905                           ;mcc_generated_files/uart/src/eusart.c: 309:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 310:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 13906     11DF  3572               	lslf	_eusartRxHead,w	;volatile
 13907     11E0  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 13908     11E1  0086               	movwf	6
 13909     11E2  3001               	movlw	1	; select bank2/3
 13910     11E3  0087               	movwf	7
 13911     11E4  1501               	bsf	1,2
 13912     11E5                     i1l4200:
 13913                           
 13914                           ;mcc_generated_files/uart/src/eusart.c: 311:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 13915     11E5  0022               	movlb	2	; select bank2
 13916     11E6  0850               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 13917     11E7  0451               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 13918     11E8  1903               	btfsc	3,2
 13919     11E9  29EB               	goto	u515_21
 13920     11EA  29EC               	goto	u515_20
 13921     11EB                     u515_21:
 13922     11EB  29F1               	goto	i1l4204
 13923     11EC                     u515_20:
 13924     11EC                     i1l4202:
 13925                           
 13926                           ;mcc_generated_files/uart/src/eusart.c: 312:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 313:             EUSART_OverrunErrorHandler();
 13927     11EC  0851               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 13928     11ED  008A               	movwf	10
 13929     11EE  0850               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 13930     11EF  000A               	callw
 13931     11F0  3191               	pagesel	$
 13932     11F1                     i1l4204:
 13933                           
 13934                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.FERR)
 13935     11F1  0023               	movlb	3	; select bank3
 13936     11F2  1D1D               	btfss	29,2	;volatile
 13937     11F3  29F5               	goto	u516_21
 13938     11F4  29F6               	goto	u516_20
 13939     11F5                     u516_21:
 13940     11F5  2A08               	goto	i1l4212
 13941     11F6                     u516_20:
 13942     11F6                     i1l4206:
 13943                           
 13944                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13945     11F6  3572               	lslf	_eusartRxHead,w	;volatile
 13946     11F7  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 13947     11F8  0086               	movwf	6
 13948     11F9  3001               	movlw	1	; select bank2/3
 13949     11FA  0087               	movwf	7
 13950     11FB  1481               	bsf	1,1
 13951     11FC                     i1l4208:
 13952                           
 13953                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 13954     11FC  0022               	movlb	2	; select bank2
 13955     11FD  0852               	movf	_EUSART_FramingErrorHandler^(0+256),w
 13956     11FE  0453               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 13957     11FF  1903               	btfsc	3,2
 13958     1200  2A02               	goto	u517_21
 13959     1201  2A03               	goto	u517_20
 13960     1202                     u517_21:
 13961     1202  2A08               	goto	i1l4212
 13962     1203                     u517_20:
 13963     1203                     i1l4210:
 13964                           
 13965                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_FramingErrorHandler();
 13966     1203  0853               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 13967     1204  008A               	movwf	10
 13968     1205  0852               	movf	_EUSART_FramingErrorHandler^(0+256),w
 13969     1206  000A               	callw
 13970     1207  3191               	pagesel	$
 13971     1208                     i1l4212:
 13972                           
 13973                           ;mcc_generated_files/uart/src/eusart.c: 325:     regValue = RC1REG;
 13974     1208  0023               	movlb	3	; select bank3
 13975     1209  0819               	movf	25,w	;volatile
 13976     120A  00FA               	movwf	EUSART_ReceiveISR@regValue
 13977     120B                     i1l4214:
 13978                           
 13979                           ;mcc_generated_files/uart/src/eusart.c: 327:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 13980     120B  0872               	movf	_eusartRxHead,w	;volatile
 13981     120C  3E01               	addlw	1
 13982     120D  3907               	andlw	7
 13983     120E  00FB               	movwf	EUSART_ReceiveISR@tempRxHead
 13984     120F                     i1l4216:
 13985                           
 13986                           ;mcc_generated_files/uart/src/eusart.c: 328:     if (tempRxHead == eusartRxTail)
 13987     120F  087B               	movf	EUSART_ReceiveISR@tempRxHead,w
 13988     1210  0671               	xorwf	_eusartRxTail,w	;volatile
 13989     1211  1D03               	skipz
 13990     1212  2A14               	goto	u518_21
 13991     1213  2A15               	goto	u518_20
 13992     1214                     u518_21:
 13993     1214  2A16               	goto	i1l4220
 13994     1215                     u518_20:
 13995     1215  2A21               	goto	i1l4226
 13996     1216                     i1l4220:
 13997                           
 13998                           ;mcc_generated_files/uart/src/eusart.c: 333:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 334:         eusartRxBuffer[eusartRxHead] = regValue;
 13999     1216  0872               	movf	_eusartRxHead,w
 14000     1217  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 14001     1218  0086               	movwf	6
 14002     1219  3001               	movlw	1	; select bank3/4
 14003     121A  0087               	movwf	7
 14004     121B  087A               	movf	EUSART_ReceiveISR@regValue,w
 14005     121C  0081               	movwf	1
 14006     121D                     i1l4222:
 14007                           
 14008                           ;mcc_generated_files/uart/src/eusart.c: 335:   eusartRxHead = tempRxHead;
 14009     121D  087B               	movf	EUSART_ReceiveISR@tempRxHead,w
 14010     121E  00F2               	movwf	_eusartRxHead	;volatile
 14011     121F                     i1l4224:
 14012                           
 14013                           ;mcc_generated_files/uart/src/eusart.c: 336:   eusartRxCount++;
 14014     121F  3001               	movlw	1
 14015     1220  07F0               	addwf	_eusartRxCount,f	;volatile
 14016     1221                     i1l4226:
 14017                           
 14018                           ;mcc_generated_files/uart/src/eusart.c: 339:     if(((void*)0) != EUSART_RxCompleteInter
      +                          ruptHandler)
 14019     1221  0022               	movlb	2	; select bank2
 14020     1222  0854               	movf	_EUSART_RxCompleteInterruptHandler^(0+256),w
 14021     1223  0455               	iorwf	(_EUSART_RxCompleteInterruptHandler+1)^(0+256),w
 14022     1224  1903               	btfsc	3,2
 14023     1225  2A27               	goto	u519_21
 14024     1226  2A28               	goto	u519_20
 14025     1227                     u519_21:
 14026     1227  2A2D               	goto	i1l433
 14027     1228                     u519_20:
 14028     1228                     i1l4228:
 14029                           
 14030                           ;mcc_generated_files/uart/src/eusart.c: 340:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 341:         (*EUSART_RxCompleteInterruptHandler)();
 14031     1228  0855               	movf	(_EUSART_RxCompleteInterruptHandler+1)^(0+256),w
 14032     1229  008A               	movwf	10
 14033     122A  0854               	movf	_EUSART_RxCompleteInterruptHandler^(0+256),w
 14034     122B  000A               	callw
 14035     122C  3191               	pagesel	$
 14036     122D                     i1l433:
 14037     122D  0008               	return
 14038     122E                     __end_of_EUSART_ReceiveISR:
 14039                           
 14040                           	psect	text56
 14041     1F41                     __ptext56:	
 14042 ;; *************** function _check_RX_Data *****************
 14043 ;; Defined at:
 14044 ;;		line 143 in file "main.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;  i               1    2[COMMON] unsigned char 
 14049 ;;  buf             1    3[COMMON] unsigned char 
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  1    wreg      void 
 14052 ;; Registers used:
 14053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;Total ram usage:        2 bytes
 14064 ;; Hardware stack levels used: 1
 14065 ;; Hardware stack levels required when called: 1
 14066 ;; This function calls:
 14067 ;;		_EUSART_IsRxReady
 14068 ;;		_EUSART_Read
 14069 ;;		i1_EUSART_Write
 14070 ;; This function is called by:
 14071 ;;		_main
 14072 ;;		_EUSART_ReceiveISR
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076     1F41                     _check_RX_Data:	
 14077                           ;psect for function _check_RX_Data
 14078                           
 14079     1F41                     i1l4128:	
 14080                           ;incstack = 0
 14081                           ; Regs used in _check_RX_Data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14082                           
 14083                           
 14084                           ;main.c: 144:     char buf;;main.c: 145:     EUSART_Write('C');
 14085     1F41  3043               	movlw	67
 14086     1F42  00F6               	movwf	i1EUSART_Write@txData
 14087     1F43  319F  27DF  319F   	fcall	i1_EUSART_Write
 14088                           
 14089                           ;main.c: 146:     while(EUSART_IsRxReady()){
 14090     1F46  2F4E               	goto	i1l4136
 14091     1F47                     i1l4130:
 14092                           
 14093                           ;main.c: 147:         char i=0;
 14094     1F47  01F8               	clrf	check_RX_Data@i
 14095     1F48                     i1l4132:
 14096                           
 14097                           ;main.c: 148:         buf=EUSART_Read();
 14098     1F48  3190  2034  319F   	fcall	_EUSART_Read
 14099     1F4B  00F9               	movwf	check_RX_Data@buf
 14100     1F4C                     i1l4134:
 14101                           
 14102                           ;main.c: 149:         i++;
 14103     1F4C  3001               	movlw	1
 14104     1F4D  07F8               	addwf	check_RX_Data@i,f
 14105     1F4E                     i1l4136:
 14106                           
 14107                           ;main.c: 146:     while(EUSART_IsRxReady()){
 14108     1F4E  319E  260F  319F   	fcall	_EUSART_IsRxReady
 14109     1F51  3A00               	xorlw	0
 14110     1F52  1D03               	skipz
 14111     1F53  2F55               	goto	u507_21
 14112     1F54  2F56               	goto	u507_20
 14113     1F55                     u507_21:
 14114     1F55  2F47               	goto	i1l4130
 14115     1F56                     u507_20:
 14116     1F56                     i1l4138:
 14117                           
 14118                           ;main.c: 151:     if(buf == 'c'){
 14119     1F56  3063               	movlw	99
 14120     1F57  0679               	xorwf	check_RX_Data@buf,w
 14121     1F58  1D03               	btfss	3,2
 14122     1F59  2F5B               	goto	u508_21
 14123     1F5A  2F5C               	goto	u508_20
 14124     1F5B                     u508_21:
 14125     1F5B  2F5F               	goto	i1l636
 14126     1F5C                     u508_20:
 14127     1F5C                     i1l4140:
 14128                           
 14129                           ;main.c: 152:         config_flg = 1;
 14130     1F5C  3001               	movlw	1
 14131     1F5D  0022               	movlb	2	; select bank2
 14132     1F5E  00DC               	movwf	_config_flg^(0+256)
 14133     1F5F                     i1l636:
 14134     1F5F  0008               	return
 14135     1F60                     __end_of_check_RX_Data:
 14136                           
 14137                           	psect	text57
 14138     1FDF                     __ptext57:	
 14139 ;; *************** function i1_EUSART_Write *****************
 14140 ;; Defined at:
 14141 ;;		line 345 in file "mcc_generated_files/uart/src/eusart.c"
 14142 ;; Parameters:    Size  Location     Type
 14143 ;;  txData          1    0[COMMON] unsigned char 
 14144 ;; Auto vars:     Size  Location     Type
 14145 ;;  tempTxHead      1    1[COMMON] unsigned char 
 14146 ;; Return value:  Size  Location     Type
 14147 ;;                  1    wreg      void 
 14148 ;; Registers used:
 14149 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14150 ;; Tracked objects:
 14151 ;;		On entry : 0/0
 14152 ;;		On exit  : 0/0
 14153 ;;		Unchanged: 0/0
 14154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;Total ram usage:        2 bytes
 14160 ;; Hardware stack levels used: 1
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_check_RX_Data
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168     1FDF                     i1_EUSART_Write:	
 14169                           ;psect for function i1_EUSART_Write
 14170                           
 14171     1FDF                     i1l3986:	
 14172                           ;incstack = 0
 14173                           ; Regs used in i1_EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14174                           
 14175                           
 14176                           ;mcc_generated_files/uart/src/eusart.c: 345: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 346: {;mcc_generated_files/uart/src/eusart.c: 347:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 349:     if(0 == PIE1bits.TXIE)
 14177     1FDF  0021               	movlb	1	; select bank1
 14178     1FE0  1A11               	btfsc	17,4	;volatile
 14179     1FE1  2FE3               	goto	u494_21
 14180     1FE2  2FE4               	goto	u494_20
 14181     1FE3                     u494_21:
 14182     1FE3  2FE8               	goto	i1l3990
 14183     1FE4                     u494_20:
 14184     1FE4                     i1l3988:
 14185                           
 14186                           ;mcc_generated_files/uart/src/eusart.c: 350:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 351:         TX1REG = txData;
 14187     1FE4  0876               	movf	i1EUSART_Write@txData,w
 14188     1FE5  0023               	movlb	3	; select bank3
 14189     1FE6  009A               	movwf	26	;volatile
 14190                           
 14191                           ;mcc_generated_files/uart/src/eusart.c: 352:     }
 14192     1FE7  2FFD               	goto	i1l437
 14193     1FE8                     i1l3990:
 14194     1FE8  0873               	movf	_eusartTxBufferRemaining,w	;volatile
 14195     1FE9  1903               	btfsc	3,2
 14196     1FEA  2FEC               	goto	u495_21
 14197     1FEB  2FED               	goto	u495_20
 14198     1FEC                     u495_21:
 14199     1FEC  2FFD               	goto	i1l437
 14200     1FED                     u495_20:
 14201     1FED                     i1l3992:
 14202                           
 14203                           ;mcc_generated_files/uart/src/eusart.c: 354:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 355:        eusartTxBuffer[eusartTxHead] = txData;
 14204     1FED  0875               	movf	_eusartTxHead,w
 14205     1FEE  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14206     1FEF  0086               	movwf	6
 14207     1FF0  3001               	movlw	1	; select bank2/3
 14208     1FF1  0087               	movwf	7
 14209     1FF2  0876               	movf	i1EUSART_Write@txData,w
 14210     1FF3  0081               	movwf	1
 14211     1FF4                     i1l3994:
 14212                           
 14213                           ;mcc_generated_files/uart/src/eusart.c: 356:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 14214     1FF4  0875               	movf	_eusartTxHead,w	;volatile
 14215     1FF5  3E01               	addlw	1
 14216     1FF6  3907               	andlw	7
 14217     1FF7  00F7               	movwf	i1EUSART_Write@tempTxHead
 14218     1FF8                     i1l3996:
 14219                           
 14220                           ;mcc_generated_files/uart/src/eusart.c: 358:        eusartTxHead = tempTxHead;
 14221     1FF8  0877               	movf	i1EUSART_Write@tempTxHead,w
 14222     1FF9  00F5               	movwf	_eusartTxHead	;volatile
 14223     1FFA                     i1l3998:
 14224                           
 14225                           ;mcc_generated_files/uart/src/eusart.c: 359:        PIE1bits.TXIE = 0;
 14226     1FFA  1211               	bcf	17,4	;volatile
 14227     1FFB                     i1l4000:
 14228                           
 14229                           ;mcc_generated_files/uart/src/eusart.c: 360:        eusartTxBufferRemaining--;
 14230     1FFB  3001               	movlw	1
 14231     1FFC  02F3               	subwf	_eusartTxBufferRemaining,f	;volatile
 14232     1FFD                     i1l437:	
 14233                           ;mcc_generated_files/uart/src/eusart.c: 361:     }
 14234                           
 14235                           
 14236                           ;mcc_generated_files/uart/src/eusart.c: 366:     PIE1bits.TXIE = 1;
 14237     1FFD  0021               	movlb	1	; select bank1
 14238     1FFE  1611               	bsf	17,4	;volatile
 14239     1FFF                     i1l440:
 14240     1FFF  0008               	return
 14241     2000                     __end_ofi1_EUSART_Write:
 14242                           
 14243                           	psect	text58
 14244     1034                     __ptext58:	
 14245 ;; *************** function _EUSART_Read *****************
 14246 ;; Defined at:
 14247 ;;		line 277 in file "mcc_generated_files/uart/src/eusart.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;		None
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;  readValue       1    1[COMMON] unsigned char 
 14252 ;;  tempRxTail      1    0[COMMON] unsigned char 
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  1    wreg      unsigned char 
 14255 ;; Registers used:
 14256 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14266 ;;Total ram usage:        2 bytes
 14267 ;; Hardware stack levels used: 1
 14268 ;; This function calls:
 14269 ;;		Nothing
 14270 ;; This function is called by:
 14271 ;;		_check_RX_Data
 14272 ;;		_getch
 14273 ;; This function uses a non-reentrant model
 14274 ;;
 14275                           
 14276     1034                     _EUSART_Read:	
 14277                           ;psect for function _EUSART_Read
 14278                           
 14279     1034                     i1l3904:	
 14280                           ;incstack = 0
 14281                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 14282                           
 14283     1034                     i1l3906:
 14284                           
 14285                           ;mcc_generated_files/uart/src/eusart.c: 280:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 282:     readValue = eusartRxBuffer[eusartRxTail];
 14286     1034  0871               	movf	_eusartRxTail,w
 14287     1035  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 14288     1036  0086               	movwf	6
 14289     1037  3001               	movlw	1	; select bank3/4
 14290     1038  0087               	movwf	7
 14291     1039  0801               	movf	1,w
 14292     103A  00F7               	movwf	EUSART_Read@readValue
 14293     103B                     i1l3908:
 14294                           
 14295                           ;mcc_generated_files/uart/src/eusart.c: 284:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 14296     103B  0871               	movf	_eusartRxTail,w	;volatile
 14297     103C  3E01               	addlw	1
 14298     103D  3907               	andlw	7
 14299     103E  00F6               	movwf	EUSART_Read@tempRxTail
 14300     103F                     i1l3910:
 14301                           
 14302                           ;mcc_generated_files/uart/src/eusart.c: 286:     eusartRxTail = tempRxTail;
 14303     103F  0876               	movf	EUSART_Read@tempRxTail,w
 14304     1040  00F1               	movwf	_eusartRxTail	;volatile
 14305     1041                     i1l3912:
 14306                           
 14307                           ;mcc_generated_files/uart/src/eusart.c: 288:     eusartRxLastError = eusartRxStatusBuffe
      +                          r[eusartRxTail];
 14308     1041  3571               	lslf	_eusartRxTail,w	;volatile
 14309     1042  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 14310     1043  0086               	movwf	6
 14311     1044  3001               	movlw	1	; select bank2/3
 14312     1045  0087               	movwf	7
 14313     1046  3F40               	moviw [0]fsr1
 14314     1047  0022               	movlb	2	; select bank2
 14315     1048  00D8               	movwf	_eusartRxLastError^(0+256)	;volatile
 14316     1049  3F41               	moviw [1]fsr1
 14317     104A  00D9               	movwf	(_eusartRxLastError+1)^(0+256)	;volatile
 14318     104B                     i1l3914:
 14319                           
 14320                           ;mcc_generated_files/uart/src/eusart.c: 291:     PIE1bits.RCIE = 0;
 14321     104B  0021               	movlb	1	; select bank1
 14322     104C  1291               	bcf	17,5	;volatile
 14323     104D                     i1l3916:
 14324                           
 14325                           ;mcc_generated_files/uart/src/eusart.c: 292:     if(0U != eusartRxCount)
 14326     104D  0870               	movf	_eusartRxCount,w	;volatile
 14327     104E  1903               	btfsc	3,2
 14328     104F  2851               	goto	u489_21
 14329     1050  2852               	goto	u489_20
 14330     1051                     u489_21:
 14331     1051  2854               	goto	i1l3920
 14332     1052                     u489_20:
 14333     1052                     i1l3918:
 14334                           
 14335                           ;mcc_generated_files/uart/src/eusart.c: 293:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 294:         eusartRxCount--;
 14336     1052  3001               	movlw	1
 14337     1053  02F0               	subwf	_eusartRxCount,f	;volatile
 14338     1054                     i1l3920:
 14339                           
 14340                           ;mcc_generated_files/uart/src/eusart.c: 296:     PIE1bits.RCIE = 1;
 14341     1054  1691               	bsf	17,5	;volatile
 14342     1055                     i1l3922:
 14343                           
 14344                           ;mcc_generated_files/uart/src/eusart.c: 297:     return readValue;
 14345     1055  0877               	movf	EUSART_Read@readValue,w
 14346     1056                     i1l423:
 14347     1056  0008               	return
 14348     1057                     __end_of_EUSART_Read:
 14349                           
 14350                           	psect	text59
 14351     1E0F                     __ptext59:	
 14352 ;; *************** function _EUSART_IsRxReady *****************
 14353 ;; Defined at:
 14354 ;;		line 256 in file "mcc_generated_files/uart/src/eusart.c"
 14355 ;; Parameters:    Size  Location     Type
 14356 ;;		None
 14357 ;; Auto vars:     Size  Location     Type
 14358 ;;		None
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  1    wreg      _Bool 
 14361 ;; Registers used:
 14362 ;;		wreg, status,2, status,0
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14372 ;;Total ram usage:        0 bytes
 14373 ;; Hardware stack levels used: 1
 14374 ;; This function calls:
 14375 ;;		Nothing
 14376 ;; This function is called by:
 14377 ;;		_check_RX_Data
 14378 ;;		_getch
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382     1E0F                     _EUSART_IsRxReady:	
 14383                           ;psect for function _EUSART_IsRxReady
 14384                           
 14385     1E0F                     i1l3900:	
 14386                           ;incstack = 0
 14387                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 14388                           
 14389                           
 14390                           ;mcc_generated_files/uart/src/eusart.c: 258:     return (eusartRxCount ? 1 : 0);
 14391     1E0F  0870               	movf	_eusartRxCount,w	;volatile
 14392     1E10  1D03               	btfss	3,2
 14393     1E11  2E13               	goto	u487_21
 14394     1E12  2E15               	goto	u487_20
 14395     1E13                     u487_21:
 14396     1E13  3001               	movlw	1
 14397     1E14  2E16               	goto	u488_20
 14398     1E15                     u487_20:
 14399     1E15  3000               	movlw	0
 14400     1E16                     u488_20:
 14401     1E16                     i1l410:
 14402     1E16  0008               	return
 14403     1E17                     __end_of_EUSART_IsRxReady:
 14404                           
 14405                           	psect	text60
 14406     1E05                     __ptext60:	
 14407 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 14408 ;; Defined at:
 14409 ;;		line 415 in file "mcc_generated_files/uart/src/eusart.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      void 
 14416 ;; Registers used:
 14417 ;;		None
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14427 ;;Total ram usage:        0 bytes
 14428 ;; Hardware stack levels used: 1
 14429 ;; This function calls:
 14430 ;;		Nothing
 14431 ;; This function is called by:
 14432 ;;		_EUSART_Initialize
 14433 ;;		_EUSART_ReceiveISR
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437     1E05                     _EUSART_DefaultOverrunErrorCallback:	
 14438                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 14439                           
 14440     1E05                     i1l4098:	
 14441                           ;incstack = 0
 14442                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 14443                           
 14444                           
 14445                           ;mcc_generated_files/uart/src/eusart.c: 418:     RC1STAbits.CREN = 0;
 14446     1E05  0023               	movlb	3	; select bank3
 14447     1E06  121D               	bcf	29,4	;volatile
 14448                           
 14449                           ;mcc_generated_files/uart/src/eusart.c: 419:     RC1STAbits.CREN = 1;
 14450     1E07  161D               	bsf	29,4	;volatile
 14451     1E08                     i1l464:
 14452     1E08  0008               	return
 14453     1E09                     __end_of_EUSART_DefaultOverrunErrorCallback:
 14454                           
 14455                           	psect	text61
 14456     0800                     __ptext61:	
 14457 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 14458 ;; Defined at:
 14459 ;;		line 410 in file "mcc_generated_files/uart/src/eusart.c"
 14460 ;; Parameters:    Size  Location     Type
 14461 ;;		None
 14462 ;; Auto vars:     Size  Location     Type
 14463 ;;		None
 14464 ;; Return value:  Size  Location     Type
 14465 ;;                  1    wreg      void 
 14466 ;; Registers used:
 14467 ;;		None
 14468 ;; Tracked objects:
 14469 ;;		On entry : 0/0
 14470 ;;		On exit  : 0/0
 14471 ;;		Unchanged: 0/0
 14472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;Total ram usage:        0 bytes
 14478 ;; Hardware stack levels used: 1
 14479 ;; This function calls:
 14480 ;;		Nothing
 14481 ;; This function is called by:
 14482 ;;		_EUSART_Initialize
 14483 ;;		_EUSART_ReceiveISR
 14484 ;; This function uses a non-reentrant model
 14485 ;;
 14486                           
 14487     0800                     _EUSART_DefaultFramingErrorCallback:	
 14488                           ;psect for function _EUSART_DefaultFramingErrorCallback
 14489                           
 14490     0800                     i1l461:	
 14491                           ;incstack = 0
 14492                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 14493                           
 14494     0800  0008               	return
 14495     0801                     __end_of_EUSART_DefaultFramingErrorCallback:
 14496                           
 14497                           	psect	text62
 14498     1E4F                     __ptext62:	
 14499 ;; *************** function _ADC_ISR *****************
 14500 ;; Defined at:
 14501 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;		None
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;		None
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      void 
 14508 ;; Registers used:
 14509 ;;		wreg, status,2, status,0, pclath, cstack
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/0
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;Total ram usage:        0 bytes
 14520 ;; Hardware stack levels used: 1
 14521 ;; Hardware stack levels required when called: 1
 14522 ;; This function calls:
 14523 ;;		NULL
 14524 ;;		_ADC_DefaultInterruptHandler
 14525 ;; This function is called by:
 14526 ;;		_INTERRUPT_InterruptManager
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530     1E4F                     _ADC_ISR:	
 14531                           ;psect for function _ADC_ISR
 14532                           
 14533     1E4F                     i1l4164:	
 14534                           ;incstack = 0
 14535                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 14536                           
 14537                           
 14538                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 14539     1E4F  0020               	movlb	0	; select bank0
 14540     1E50  1311               	bcf	17,6	;volatile
 14541     1E51                     i1l4166:
 14542                           
 14543                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 14544     1E51  0022               	movlb	2	; select bank2
 14545     1E52  0863               	movf	_ADC_InterruptHandler^(0+256),w
 14546     1E53  0464               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 14547     1E54  1903               	btfsc	3,2
 14548     1E55  2E57               	goto	u511_21
 14549     1E56  2E58               	goto	u511_20
 14550     1E57                     u511_21:
 14551     1E57  2E5D               	goto	i1l52
 14552     1E58                     u511_20:
 14553     1E58                     i1l4168:
 14554                           
 14555                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 14556     1E58  0864               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 14557     1E59  008A               	movwf	10
 14558     1E5A  0863               	movf	_ADC_InterruptHandler^(0+256),w
 14559     1E5B  000A               	callw
 14560     1E5C  319E               	pagesel	$
 14561     1E5D                     i1l52:
 14562     1E5D  0008               	return
 14563     1E5E                     __end_of_ADC_ISR:
 14564                           
 14565                           	psect	text63
 14566     1DF3                     __ptext63:	
 14567 ;; *************** function _ADC_DefaultInterruptHandler *****************
 14568 ;; Defined at:
 14569 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;		None
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      void 
 14576 ;; Registers used:
 14577 ;;		None
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;Total ram usage:        0 bytes
 14588 ;; Hardware stack levels used: 1
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		_ADC_Initialize
 14593 ;;		_ADC_ISR
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597     1DF3                     _ADC_DefaultInterruptHandler:	
 14598                           ;psect for function _ADC_DefaultInterruptHandler
 14599                           
 14600     1DF3                     i1l58:	
 14601                           ;incstack = 0
 14602                           ; Regs used in _ADC_DefaultInterruptHandler: []
 14603                           
 14604     1DF3  0008               	return
 14605     1DF4                     __end_of_ADC_DefaultInterruptHandler:
 14606     0002                     ___latbits      equ	2
 14607     007E                     btemp           set	126	;btemp
 14608     007E                     int$flags       set	126
 14609     007E                     wtemp0          set	126
 14610                           
 14611                           	psect	config
 14612                           
 14613                           ;Config register CONFIG1 @ 0x8007
 14614                           ;	Oscillator Selection Bits
 14615                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 14616                           ;	Watchdog Timer Enable
 14617                           ;	WDTE = OFF, WDT disabled
 14618                           ;	Power-up Timer Enable
 14619                           ;	PWRTE = OFF, PWRT disabled
 14620                           ;	MCLR Pin Function Select
 14621                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 14622                           ;	Flash Program Memory Code Protection
 14623                           ;	CP = OFF, Program memory code protection is disabled
 14624                           ;	Brown-out Reset Enable
 14625                           ;	BOREN = ON, Brown-out Reset enabled
 14626                           ;	Clock Out Enable
 14627                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 14628                           ;	Internal/External Switchover Mode
 14629                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 14630                           ;	Fail-Safe Clock Monitor Enable
 14631                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 14632     8007                     	org	32775
 14633     8007  3FE4               	dw	16356
 14634                           
 14635                           ;Config register CONFIG2 @ 0x8008
 14636                           ;	Flash Memory Self-Write Protection
 14637                           ;	WRT = OFF, Write protection off
 14638                           ;	Peripheral Pin Select one-way control
 14639                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 14640                           ;	Zero-cross detect disable
 14641                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 14642                           ;	Phase Lock Loop enable
 14643                           ;	PLLEN = OFF, 4x PLL is disabled
 14644                           ;	Stack Overflow/Underflow Reset Enable
 14645                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 14646                           ;	Brown-out Reset Voltage Selection
 14647                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 14648                           ;	Low-Power Brown Out Reset
 14649                           ;	LPBOR = OFF, Low-Power BOR is disabled
 14650                           ;	In-Circuit Debugger Mode
 14651                           ;	DEBUG = 0x1, unprogrammed default
 14652                           ;	Low-Voltage Programming Enable
 14653                           ;	LVP = ON, Low-voltage programming enabled
 14654     8008                     	org	32776
 14655     8008  3EFF               	dw	16127

Data Sizes:
    Strings     96
    Constant    48
    Data        2
    BSS         158
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80      8      79
    BANK3            80      0       8
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> check_RX_Data(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> check_RX_Data(), NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    handle_voltage@LED_SetHigh	PTR FTN()void  size(2) Largest target is 1
		 -> LED_12V_On(), LED_24V_On(), 

    handle_voltage@LED_SetLow	PTR FTN()void  size(2) Largest target is 1
		 -> LED_12V_Off(), LED_24V_Off(), 

    handle_voltage@reset_flg	PTR unsigned char  size(1) Largest target is 1
		 -> reset_flg_12(BANK2[1]), reset_flg_24(BANK2[1]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1448$buffer	PTR unsigned char  size(2) Largest target is 0

    S1448$source	PTR const unsigned char  size(2) Largest target is 0

    S575$17$0	PTR FTN()void  size(2) Largest target is 0

    S575$18$0	PTR FTN()void  size(2) Largest target is 1
		 -> check_RX_Data(), 

    S575$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S575$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S575$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S575$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S575$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S575$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S575$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S575$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S575$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S575$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S575$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S575$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S575$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S575$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S575$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S575$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S575$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S575$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S575$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S575$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S575$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_8(CODE[4]), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> timer_interrupt(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_interrupt(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), i1_EUSART_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_ReceiveISR
    _EUSART_ReceiveISR->_check_RX_Data
    _check_RX_Data->_EUSART_Read
    _check_RX_Data->i1_EUSART_Write

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___flsub
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    _handle_voltage->___flge
    _handle_buzzer->_delay_ms
    ___flge->___flmul
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   22929
                                              0 BANK2      8     8      0
                  _ADC_GetConversion
  _EUSART_RxCompleteCallbackRegister
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR4_Start
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
                           _delay_ms
                     _handle_voltage
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              13     3     10   15855
                                             66 BANK1     11     1     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5   15750
                                             79 BANK0      1     1      0
                                             59 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4   15523
                                             44 BANK1     15    11      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     6      2     408
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     142
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   13891
                                             68 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     115
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1330
                                             20 BANK0      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     627
                                             12 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     481
                                              3 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     146
                                              2 BANK0      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     1      1      99
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _EUSART_IsTxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     217
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4     102
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             26 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     137
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     346
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2069
                                             60 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1992
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    2473
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     232
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1131
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _handle_voltage                                      14     0     14    1550
                                             52 BANK0     14     0     14
                        _LED_12V_Off *
                         _LED_12V_On *
                        _LED_24V_Off *
                         _LED_24V_On *
                             ___flge
                           _delay_ms
                      _handle_buzzer
 ---------------------------------------------------------------------------------
 (2) _handle_buzzer                                        1     1      0     157
                                              5 BANK0      1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             5     3      2      89
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     214
                                             40 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_24V_On                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_24V_Off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_12V_On                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_12V_Off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     198
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      34
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     130
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      34
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_RxCompleteCallbackRegister                    2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      47
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     231
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR4_ISR                                            0     0      0       0
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                    _timer_interrupt *
 ---------------------------------------------------------------------------------
 (12) _timer_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_ReceiveISR                                   2     2      0     208
                                              4 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
                      _check_RX_Data *
 ---------------------------------------------------------------------------------
 (12) _check_RX_Data                                       2     2      0     140
                                              2 COMMON     2     2      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (13) i1_EUSART_Write                                      2     1      1      68
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (13) _EUSART_Read                                         2     2      0      47
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_IsRxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_RxCompleteCallbackRegister
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR4_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR4_Start
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _delay_ms
   _handle_voltage
     _LED_12V_Off *
     _LED_12V_On *
     _LED_24V_Off *
     _LED_24V_On *
     ___flge *
     _delay_ms *
     _handle_buzzer *
       _delay_ms
   _printf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _EUSART_IsTxReady
                 _EUSART_Write
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
     _check_RX_Data *
       _EUSART_IsRxReady
       _EUSART_Read
       i1_EUSART_Write
   _EUSART_TransmitISR *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _timer_interrupt *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      6      12     85.7%
BANK0               80     80      80    100.0%
BANK1               80     77      80    100.0%
BANK2               80      8      79     98.8%
BANK3               80      0       8     10.0%
BANK4               80      0      80    100.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     341      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 19 18:23:31 2024

                                  ??i1_EUSART_Write 0077             __end_of_TMR4_DefaultPeriodMatchCallback 0004  
                 ??_TMR4_DefaultPeriodMatchCallback 0076                    ?_TMR4_DefaultPeriodMatchCallback 0076  
                   _TMR4_DefaultPeriodMatchCallback 0003                                        ___fldiv@aexp 0039  
                                      ___fldiv@bexp 0038                                        ___fldiv@sign 0031  
                                                l42 1028                                                  l27 1ED0  
                                                l45 1033                                                  l55 1E27  
                                                l67 1E30         __end_of_EUSART_OverrunErrorCallbackRegister 1E8B  
             ??_EUSART_OverrunErrorCallbackRegister 0022                ?_EUSART_OverrunErrorCallbackRegister 0020  
               _EUSART_OverrunErrorCallbackRegister 1E7C                                 ___wmul@multiplicand 0022  
                               __Umul8_16@word_mpld 0026                                                 l116 1118  
                                               l212 1EAB                                                 l150 1E4E  
                                               l218 1DF8                                                 l252 1E42  
                                               l413 1E1E                                                 l175 1E39  
                                               l440 10E9                                                 l193 1012  
                                               l521 1DFF                                                 l354 1182  
                                               l523 1E01                                                 l531 1E02  
                                               l612 1F18                                                 l533 1E04  
                                               l605 1F81                                                 l437 10E7  
                                               l526 1DF9                                                 l615 1F22  
                                               l472 1E8A                                                 l528 1DFB  
                                               l536 1DFC                                                 l608 1F8D  
                                               l704 1FCA                                                 l609 1F9E  
                                               l538 1DFE                                                 l458 1EBC  
                                               l706 1FDE                                                 l476 1E6C  
                                               l468 1E7B                                                 l575 09F3  
                                               l905 1341                                                 l908 1356  
                                               l873 11A0                                                 l890 1460  
                                               l882 13F3                                                 l874 11BC  
                                               l885 1447                                                 l894 080C  
                                               l879 11D1                                                 l898 1356  
                                               _PR4 0416                                                 _pad 1119  
                                   __end_of_ADC_ISR 1E5E                     __end_of_ADC_SetInterruptHandler 1E28  
                                               wreg 0009                                        ___flmul@aexp 003C  
                                      ___flmul@bexp 0041                        ?_ADC_DefaultInterruptHandler 0076  
                                      ___flmul@sign 003B                                        ___flmul@temp 0046  
                                      ___flmul@prod 0042                                        ?_EUSART_Read 0076  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 0029  
                                              l1011 0C68                                                l1101 0FFF  
                                              l1005 0C0F                                                l1030 0D41  
                                              l1120 108D                                                l1113 0FF5  
                                              l1009 0C8E                                                l1122 109D  
                                              l1026 0D1F                                                l1018 0DC4  
                                              l1107 0F7D                                                l1051 1FBE  
                                              l1036 0D64                                                l1061 16AB  
                                              l1301 14A2                                                l1302 154B  
                                              l1206 00EE                                                l1063 17FF  
                                              l1047 0DB7                                                l1039 0D97  
                                              l1048 0DC4                                                l3000 0BCE  
                                              l1145 0768                                                l1225 030B  
                                              l1209 0744                                                l1146 0779  
                                              l1082 17CF                                                l3010 0BE4  
                                              l3002 0BD6                                                l1306 1543  
                                              l1322 1079                                                l1147 07E9  
                                              l1083 17E9                                                l1235 0565  
                                              l3100 0CBA                                                l3020 0BF2  
                                              l3012 0BEA                                                l3004 0BD7  
                                              l1316 07FF                                                l1085 17F4  
                                              l1077 1785                                                l1158 07B5  
                                              l3102 0CBC                                                l3110 0CCC  
                                              l3022 0BF7                                                l3030 0C07  
                                              l3014 0BEB                                                l3006 0BD9  
                                              l1334 12E7                                                l1342 10C1  
                                              l1159 07C1                                                l1319 106D  
                                              l1167 1E9A                                                l3120 0D10  
                                              l3112 0CE2                                                l3104 0CC0  
                                              l3040 0C1F                                                l3032 0C15  
                                              l3024 0BFC                                                l3016 0BED  
                                              l3008 0BE1                                                l3130 0D35  
                                              l3114 0D06                                                l3122 0D17  
                                              l3106 0CC1                                                l3050 0C29  
                                              l3042 0C21                                                l3034 0C19  
                                              l3026 0C04                                                l3018 0BF1  
                                              l1194 1120                                                l1258 1289  
                                              l1267 15B1                                                l3220 1183  
                                              l3140 0D4B                                                l3132 0D3C  
                                              l3124 0D27                                                l3116 0D08  
                                              l3108 0CC9                                                l3060 0C33  
                                              l3052 0C2B                                                l3044 0C23  
                                              l3036 0C1B                                                l3028 0C05  
                                              l1348 1F05                                                l1285 1F40  
                                              l3310 1667                                                l3302 165C  
                                              l3222 1198                                                l3150 0D5B  
                                              l3142 0D50                                                l3134 0D40  
                                              l3126 0D2C                                                l3118 0D0B  
                                              l3070 0C51                                                l3062 0C35  
                                              l3054 0C2D                                                l3046 0C25  
                                              l3038 0C1D                                                l1198 114C  
                                              l1278 165B                                                l1295 13D5  
                                              l5000 1E83                                                l3240 1413  
                                              l3232 13D6                                                l3400 1765  
                                              l3312 166C                                                l3320 167C  
                                              l3304 1660                                                l3224 11B4  
                                              l3160 0D74                                                l3152 0D61  
                                              l3136 0D45                                                l3144 0D52  
                                              l3080 0C7D                                                l3072 0C6C  
                                              l3064 0C37                                                l3056 0C2F  
                                              l3048 0C27                                                l3242 142B  
                                              l3234 13EB                                                l5002 1F06  
                                              l3402 1769                                                l3330 168E  
                                              l3322 1684                                                l3314 1671  
                                              l3306 1662                                                l3226 11CE  
                                              l3170 0DA9                                                l3162 0D78  
                                              l3138 0D49                                                l3146 0D56  
                                              l3082 0C85                                                l3074 0C76  
                                              l3058 0C31                                                l3066 0C39  
                                              l5010 1566                                                l5100 1109  
                                              l3244 142F                                                l3236 1407  
                                              l5004 1F0A                                                l3420 17B1  
                                              l3412 178A                                                l3404 176A  
                                              l3332 1693                                                l3340 16A3  
                                              l3324 1687                                                l3316 1679  
                                              l3308 1666                                                l3228 11D0  
                                              l3180 0DBF                                                l3172 0DAE  
                                              l3164 0D95                                                l3156 0D69  
                                              l3148 0D57                                                l3092 0CA0  
                                              l3076 0C78                                                l3084 0C87  
                                              l3068 0C3A                                                l5020 159D  
                                              l5012 156C                                                l5102 110B  
                                              l5110 1E9B                                                l3246 145D  
                                              l3238 140F                                                l3430 17E8  
                                              l3414 178F                                                l3422 17B5  
                                              l3406 176E                                                l3342 16B3  
                                              l3350 16CA                                                l3334 1698  
                                              l3326 1689                                                l3318 167A  
                                              l3182 0DC3                                                l3174 0DAF  
                                              l3166 0D9C                                                l3158 0D6E  
                                              l3094 0CA8                                                l3086 0C92  
                                              l3078 0C7C                                                l5030 15B6  
                                              l5022 15A5                                                l5014 1571  
                                              l5006 154C                                                l5104 110E  
                                              l5120 1EA8                                                l5112 1E9E  
                                              l5200 100C                                                l3248 145F  
                                              l3432 17EC                                                l3424 17C2  
                                              l3416 1795                                                l3408 1782  
                                              l3360 16F0                                                l3352 16CF  
                                              l3344 16BF                                                l3336 16A0  
                                              l3328 168D                                                l3176 0DB3  
                                              l3168 0DA1                                                l3096 0CAC  
                                              l3088 0C97                                                l3600 138A  
                                              l5040 15EE                                                l5032 15C1  
                                              l5024 15AC                                                l5016 1583  
                                              l5008 155E                                                l5210 1E65  
                                              l5130 115E                                                l5122 114D  
                                              l5106 1E43                                                l5114 1E9F  
                                              l5202 100F                                                l3434 17F0  
                                              l3426 17DD                                                l3418 1799  
                                              l3370 1715                                                l3362 16F8  
                                              l3346 16C1                                                l3338 16A1  
                                              l3178 0DB5                                                l3098 0CB0  
                                              l3610 13B1                                                l3602 13A1  
                                              l5050 1627                                                l5042 15F6  
                                              l5034 15CC                                                l5026 15B4  
                                              l5018 158B                                                l5140 116E  
                                              l5132 1160                                                l5124 114F  
                                              l5108 1E46                                                l5116 1EA4  
                                              l5204 1DF6                                                l4340 0760  
                                              l5220 0860                                                l3436 17F2  
                                              l3428 17E0                                                l3380 1734  
                                              l3372 1719                                                l3364 1700  
                                              l3356 16D8                                                l3604 13A6  
                                              l4500 1297                                                l5044 1604  
                                              l5036 15DD                                                l5052 1630  
                                              l5212 1E8B                                                l5300 09F4  
                                              l5070 1EC7                                                l5062 1EBD  
                                              l5150 117D                                                l5142 1176  
                                              l5134 1162                                                l5126 1154  
                                              l5118 1EA6                                                l5206 1E3A  
                                              l4350 078C                                                l4342 0770  
                                              l4334 0747                                                l5230 0883  
                                              l5222 086B                                                l3390 174E  
                                              l3382 173C                                                l3374 171A  
                                              l3366 1702                                                l3358 16E8  
                                              l3614 13D1                                                l3630 1461  
                                              l4502 129C                                                l5214 1E8E  
                                              l5310 0A04                                                l5302 09F7  
                                              l5208 1E5E                                                l5072 1ECE  
                                              l5064 1EC0                                                l5152 117E  
                                              l5144 1179                                                l5136 1164  
                                              l5128 115B                                                l5080 10ED  
                                              l4360 07B9                                                l4352 079B  
                                              l4336 074C                                                l5240 08AF  
                                              l5232 088A                                                l5224 0871  
                                              l3392 1755                                                l3368 1707  
                                              l3376 1721                                                l3384 173E  
                                              l4520 1094                                                l4512 107C  
                                              l4600 0DC9                                                l3608 13AB  
                                              l3640 14BF                                                l3632 1479  
                                              l4504 12A7                                                l5056 163A  
                                              l5320 0A34                                                l5312 0A0C  
                                              l5304 09F8                                                l5066 1EC3  
                                              l5074 1E28                                                l5154 117F  
                                              l5146 117A                                                l5138 1166  
                                              l5090 10FA                                                l5082 10F0  
                                              l4370 07E1                                                l4362 07C3  
                                              l4354 07A2                                                l4346 077C  
                                              l4338 0750                                                l5170 1F98  
                                              l5250 08EB                                                l5242 08B6  
                                              l5226 0873                                                l5218 0848  
                                              l3394 1759                                                l3386 1744  
                                              l3378 1733                                                l4522 1099  
                                              l4514 107E                                                l4610 0DDA  
                                              l4602 0DCB                                                l3650 1504  
                                              l3634 1494                                                l4506 12C7  
                                              l4530 10B0                                                l5330 0AF5  
                                              l5322 0A7B                                                l5314 0A14  
                                              l5306 09F9                                                l5068 1EC5  
                                              l5076 1E2E                                                l5156 1180  
                                              l5148 117B                                                l5092 10FC  
                                              l5084 10F2                                                l4364 07D7  
                                              l4356 07AB                                                l4348 0785  
                                              l5164 1F83                                                l5260 092B  
                                              l5252 08EF                                                l5244 08CD  
                                              l5236 0892                                                l5228 0879  
                                              l3396 175A                                                l3388 174C  
                                              l4516 1085                                                l4700 0F66  
                                              l4620 0DF1                                                l4612 0DE2  
                                              l4604 0DCF                                                l3652 151B  
                                              l3644 14D4                                                l3636 14A1  
                                              l4508 12DD                                                l4532 10B5  
                                              l4540 1FCF                                                l5172 1F23  
                                              l5340 0B77                                                l5332 0B15  
                                              l5324 0AC2                                                l5316 0A1C  
                                              l5308 09FC                                                l5190 102C  
                                              l5182 1015                                                l5094 1101  
                                              l5086 10F5                                                l5078 10EA  
                                              l4366 07DC                                                l4358 07AF  
                                              l5166 1F8B                                                l5158 1F7F  
                                              l5270 095F                                                l5262 0935  
                                              l5254 08F6                                                l5246 08D7  
                                              l5238 0898                                                l3398 1761  
                                              l4518 1089                                                l4710 0F8D  
                                              l4702 0F7A                                                l4630 0E08  
                                              l4622 0DF5                                                l4614 0DE4  
                                              l4606 0DD0                                                l4550 080A  
                                              l3654 1524                                                l3646 14EB  
                                              l3638 14A7                                                l4526 109E  
                                              l4542 1FD4                                                l4534 1FBF  
                                              l5174 1F29                                                l5342 0B9E  
                                              l5334 0B1F                                                l5326 0AE2  
                                              l5318 0A28                                                ?_pad 0034  
                                              l5184 1021                                                l5096 1104  
                                              l5088 10F7                                                l4368 07E0  
                                              l5168 1F95                                                l5280 09A5  
                                              l5272 0976                                                l5256 090D  
                                              l5264 093A                                                l5248 08E4  
                                              l4720 0FC4                                                l4712 0F91  
                                              l4632 0E0A                                                l4624 0DF6  
                                              l4616 0DEC                                                l4608 0DD5  
                                              l4552 080C                                                l3656 153B  
                                              l3648 14F3                                                l4480 10DD  
                                              l4472 10C6                                                l4528 10A2  
                                              l4800 0126                                                l4544 1FDA  
                                              l4536 1FC2                                                l5176 1F34  
                                              l5336 0B28                                                l5328 0AEC  
                                              l5186 1022                                                l5098 1106  
                                              l5194 1000                                                l5290 09D5  
                                              l5282 09AC                                                l5274 0981  
                                              l5266 0941                                                l5258 0914  
                                              l4730 0FEC                                                l4722 0FD2  
                                              l4714 0FA9                                                l4706 0F82  
                                              l4650 0E62                                                l4642 0E25  
                                              l4634 0E12                                                l4626 0DFB  
                                              l4618 0DEF                                                l4570 1317  
                                              l4562 12FB                                                l3594 1357  
                                              l4482 10E1                                                l4474 10CB  
                                              l4490 1EAE                                                l4810 016A  
                                              l4538 1FC6                                                l5178 1F3E  
                                              l5346 0BA5                                                l5338 0B50  
                                              l5188 1026                                                l5196 1006  
                                              l5292 09DB                                                l5284 09C3  
                                              l5276 0987                                                l5268 0958  
                                              l4732 0FED                                                l4724 0FDB  
                                              l4708 0F87                                                l4716 0FAD  
                                              l4660 0EA6                                                l4652 0E7A  
                                              l4644 0E30                                                l4636 0E17  
                                              l4628 0E00                                                l4548 0801  
                                              l4572 131B                                                l4580 1331  
                                              l4564 130C                                                l4556 12E8  
                                              l3596 136F                                                l4468 1E17  
                                              l4484 10E3                                                l4476 10D0  
                                              l4492 1EB6                                                l4740 111E  
                                              l4900 0572                                                l4820 0181  
                                              l4804 013E                                                l5348 0BAE  
                                              l5198 1009                                                l5294 09E3  
                                              l5286 09CE                                                l5278 098E  
                                              l4734 0FF7                                                l4726 0FDD  
                                              l4718 0FBA                                                l4670 0ED8  
                                              l4662 0EAD                                                l4654 0E87  
                                              l4646 0E3D                                                l4638 0E1C  
                                              l2990 0BBD                                                l4590 134B  
                                              l4566 130D                                                l4558 12F2  
                                              l3598 1384                                                l4486 10E5  
                                              l4478 10D5                                                l4742 1123  
                                              l4750 1EEB                                                l4910 05F3  
                                              l4902 0573                                                l4830 0209  
                                              l4806 0158                                                l5296 09E5  
                                              l5288 09D3                                                l4728 0FE8  
                                              l4680 0F33                                                l4672 0EEA  
                                              l4664 0EB8                                                l4656 0E94  
                                              l4648 0E55                                                l2992 0BBF  
                                              l4592 1F9F                                                l4568 1315  
                                              l4488 1EAE                                                l4496 128A  
                                              l4744 112F                                                l4752 1EEE  
                                              l4920 060C                                                l4912 05F8  
                                              l4904 0575                                                l4840 029B  
                                              l4832 0230                                                l4824 01A0  
                                              l4808 015E                                                l4816 0176  
                                              l5298 09EB                                                l4690 0F52  
                                              l4682 0F3A                                                l4674 0EF5  
                                              l4666 0EBF                                                l4658 0E9B  
                                              l2994 0BC3                                                l4594 1FA2  
                                              l4586 1338                                                l4578 1323  
                                              l4754 07EA                                                l4762 1057  
                                              l4498 1291                                                l4746 1134  
                                              l4738 1119                                                l4930 0622  
                                              l4922 0610                                                l4914 05FD  
                                              l4906 0578                                                l4850 02FE  
                                              l4834 0261                                                l4826 01AD  
                                              l4818 017F                                                l4770 007B  
                                              l4692 0F59                                                l4684 0F46  
                                              l4676 0F07                                                l4668 0ED1  
                                              l2996 0BC4                                                l2988 0BB9  
                                              l4588 1346                                                l4756 07EF  
                                              l4764 105D                                                l4748 1142  
                                              l4940 063C                                                l4924 0613  
                                              l4916 0601                                                l4932 0626  
                                              l4908 05D7                                                l4860 0325  
                                              l4852 0306                                                l4836 026B  
                                              l4844 02CC                                                l4828 01D9  
                                              l4780 00D0                                                l4772 007D  
                                              l4686 0F4D                                                l4694 0F5D  
                                              l4678 0F1C                                                l4598 0DC5  
                                              l2998 0BC9                                                l4758 07F0  
                                              l4766 1063                                                l4950 06D0  
                                              l4942 068A                                                l4934 062C  
                                              l4926 061A                                                l4918 0608  
                                              l4870 033B                                                l4862 0327  
                                              l4854 0313                                                l4838 0297  
                                              l4846 02F3                                                l4790 00EA  
                                              l4782 00D3                                                l4774 008D  
                                              l4696 0F61                                                l4688 0F51  
                                              l4768 1065                                                l4960 070A  
                                              l4952 06E0                                                l4944 06B6  
                                              l4936 0634                                                l4928 061E  
                                              l4880 047F                                                l4872 0344  
                                              l4864 032D                                                l4856 0319  
                                              l4848 02F9                                                l4792 00F0  
                                              l4784 00DB                                                l4776 00AB  
                                              l4698 0F62                                                l4962 071B  
                                              l4954 06E5                                                l4946 06BA  
                                              l4938 0638                                                l4890 04F0  
                                              l4882 0489                                                l4874 0417  
                                              l4858 031D                                                l4866 0331  
                                              l4794 0109                                                l4786 00E0  
                                              l4778 00AE                                                l4964 0720  
                                              l4956 06EB                                                l4948 06BE  
                                              l4892 052A                                                l4884 04B0  
                                              l4876 041B                                                l4868 0333  
                                              l4796 010F                                                l4788 00E5  
                                              l4980 1257                                                l4972 122E  
                                              l4990 1E1F                                                l4966 072B  
                                              l4958 0703                                                l4894 052F  
                                              l4886 04B5                                                l4878 042D  
                                              l4798 011B                                                l4982 1269  
                                              l4974 1231                                                l4992 1E31  
                                              l4968 072F                                                l4896 055B  
                                              l4888 04BD                                                l4976 1242  
                                              l4984 1271                                                l4994 1E6D  
                                              l4898 0561                                                l4986 1285  
                                              l4978 124A                                                l4996 1E74  
                                              l4998 1E7C                                                STR_1 184B  
                                              STR_2 1830                                                STR_3 1877  
                                              STR_4 1863                                                STR_5 1888  
                                              STR_8 188C                                                u3000 0BEA  
                                              u3001 0BE9                                                u3010 0BF1  
                                              u3011 0BF0                                                u3020 0BF7  
                                              u3021 0BF6                                                _LATA 010C  
                                              u3110 0C7C                                                u3030 0BFC  
                                              u3111 0C7B                                                u3031 0BFB  
                                              _LATC 010E                                                u3040 0C15  
                                              u3105 0C6F                                                u3041 0C14  
                                              u3210 0CE2                                                u3130 0C8E  
                                              u3050 0C19                                                u3211 0CE1  
                                              u3131 0C8D                                                u3051 0C18  
                                              u3300 0D5B                                                u3220 0D10  
                                              u3140 0C92                                                u3060 0C51  
                                              u3301 0D5A                                                u3221 0D0F  
                                              u3213 0CDE                                                u3205 0CC3  
                                              u3141 0C91                                                u3125 0C7F  
                                              u3061 0C50                                                u3310 0D61  
                                              u3230 0D27                                                u3150 0C97  
                                              u3070 0C5B                                                u3311 0D60  
                                              u3231 0D26                                                u3151 0C96  
                                              u3071 0C59                                                u3400 0DB3  
                                              u3320 0D68                                                u3240 0D2C  
                                              u3160 0CAC                                                u3080 0C5C  
                                              u3401 0DB2                                                u3321 0D67  
                                              u3241 0D2B                                                u3161 0CAB  
                                              u3065 0C4D                                                u3330 0D6E  
                                              u3170 0CB0                                                u3090 0C6C  
                                              u3331 0D6D                                                u3171 0CAF  
                                              u3091 0C6B                                                u3420 0DC3  
                                              u3340 0D78                                                u3260 0D40  
                                              u4300 138A                                                u3421 0DC2  
                                              u3341 0D77                                                u3261 0D3F  
                                              u4301 1389                                                u3510 1198  
                                              u3350 0D86                                                u3270 0D45  
                                              u3190 0CC0                                                u4310 1397  
                                              u3511 1197                                                u3415 0DBA  
                                              u3271 0D44                                                u3255 0D36  
                                              u3191 0CBF                                                u3520 11B4  
                                              u3360 0D95                                                u3280 0D50  
                                              u6000 1346                                                u4320 13A1  
                                              u4400 14A1                                                u3521 11B3  
                                              u3361 0D94                                                u3281 0D4F  
                                              u3185 0CB3                                                u6001 1345  
                                              u4321 13A0                                                u4401 14A0  
                                              u3530 11CE                                                u3370 0D9C  
                                              u3290 0D56                                                u6010 134B  
                                              u4330 13B1                                                u4410 14A7  
                                              u3531 11CD                                                u3371 0D9B  
                                              u3355 0D82                                                u3291 0D55  
                                              u6011 134A                                                u4331 13B0  
                                              u4315 1393                                                u4411 14A6  
                                              u3540 13EB                                                u3700 1666  
                                              u6020 0DCF                                                u3380 0DA1  
                                              u4340 13BE                                                u4420 14B5  
                                              u3541 13EA                                                u3701 1665  
                                              u6021 0DCE                                                u3381 0DA0  
                                              u4405 149D                                                u3550 1407  
                                              u3710 166C                                                u6030 0DD5  
                                              u3390 0DAE                                                u4350 13C9  
                                              u4430 14D3                                                u3551 1406  
                                              u3711 166B                                                u3535 11CA  
                                              u6031 0DD4                                                u3391 0DAD  
                                              u4351 13C7                                                u4431 14D2  
                                              u3560 1413                                                u7000 09CE  
                                              u3720 1671                                                u6200 0F7A  
                                              u6120 0F12                                                u6040 0DDA  
                                              u4360 13CA                                                u4440 14E1  
                                              u3561 1412                                                u7001 09CD  
                                              u3721 1670                                                u6201 0F79  
                                              u6105 0E95                                                u6041 0DD9  
                                              u4345 13BA                                                u4425 14B1  
                                              u3570 142F                                                u3810 1719  
                                              u3730 168D                                                u6210 0F81  
                                              u6130 0F29                                                u6050 0DF5  
                                              u4290 137C                                                u4450 14EB  
                                              u7010 0AE2                                                u3571 142E  
                                              u3811 1718                                                u3731 168C  
                                              u6211 0F80                                                u6115 0EC0  
                                              u6051 0DF4                                                u4451 14EA  
                                              u7011 0AE1                                                u3580 145D  
                                              u3900 176E                                                u3740 1693  
                                              u6220 0F87                                                u6060 0DFB  
                                              u4460 1511                                                u6300 1142  
                                              u7020 0B15                                                u3581 145C  
                                              u3901 176D                                                u3805 170F  
                                              u3741 1692                                                u6221 0F86  
                                              u6125 0F0E                                                u6061 0DFA  
                                              u4445 14DD                                                u6301 1141  
                                              u7021 0B14                                                u5510 07A1  
                                              u3910 1782                                                u3830 1733  
                                              u3750 1698                                                u6230 0F91  
                                              u6070 0E00                                                u4470 151B  
                                              u4390 1486                                                u6310 1F05  
                                              u7030 0BA4                                                u5511 07A0  
                                              u3911 1781                                                u3831 1732  
                                              u3751 1697                                                u6231 0F90  
                                              u6135 0F25                                                u6071 0DFF  
                                              u4295 1378                                                u4471 151A  
                                              u6311 1F04                                                u7031 0BA3  
                                              u3920 1789                                                u3840 1744  
                                              u3760 16B3                                                u6240 0F9F  
                                              u6160 0F51                                                u6080 0E17  
                                              u4480 1531                                                u6320 07EF  
                                              u6400 015E                                                u5505 0795  
                                              u3585 1459                                                u3921 1788  
                                              u3841 1743                                                u3825 171B  
                                              u3761 16B2                                                u6161 0F50  
                                              u6145 0F34                                                u6081 0E16  
                                              u4465 150D                                                u6321 07EE  
                                              u6305 113E                                                u6401 015D  
                                              u5530 07AF                                                u5450 074C  
                                              u3930 178F                                                u3850 174C  
                                              u3770 16CF                                                u6250 0FBA  
                                              u6090 0E1C                                                u2970 0BC3  
                                              u4490 153B                                                u6330 1079  
                                              u6410 019F                                                u5531 07AE  
                                              u5451 074B                                                u3931 178E  
                                              u3851 174B                                                u3835 172F  
                                              u3771 16CE                                                u6251 0FB9  
                                              u6155 0F47                                                u6091 0E1B  
                                              u2971 0BC2                                                u4491 153A  
                                              u4395 1482                                                u6331 1078  
                                              u6411 019E                                                i1l52 1E5D  
                                              u5540 07B5                                                u5460 0750  
                                              u3940 1799                                                u3780 1707  
                                              u6260 0FD2                                                u6180 0F61  
                                              u2980 0BC9                                                u6500 032D  
                                              u6420 0209                                                u6340 00AB  
                                              u5541 07B4                                                u5525 07A5  
                                              u5461 074F                                                u3941 1798  
                                              u3781 1706                                                u6261 0FD1  
                                              u6245 0F9B                                                u6181 0F60  
                                              u2981 0BC8                                                u4485 152D  
                                              u6501 032C                                                u6421 0208  
                                              u6341 00AA                                                u5550 07B9  
                                              u5470 0770                                                u3950 17A7  
                                              u3870 1759                                                u6270 0FEC  
                                              u6190 0F66                                                u2990 0BCE  
                                              u6510 042D                                                u6430 0230  
                                              u6350 00E0                                                u5551 07B8  
                                              u5471 076F                                                u7047 1F0E  
                                              u3871 1758                                                u6271 0FEB  
                                              u6255 0FB6                                                u6191 0F65  
                                              u6175 0F53                                                u2991 0BCD  
                                              u6511 042C                                                u6431 022F  
                                              u6351 00DF                                                u5560 07CD  
                                              u3960 17C2                                                u5800 1297  
                                              u6600 062C                                                u6520 047F  
                                              u6440 0261                                                u6360 00E5  
                                              u7057 1023                                                u3961 17C1  
                                              u3865 174F                                                u6265 0FCE  
                                              u5801 1296                                                u6601 062B  
                                              u6521 047E                                                u6441 0260  
                                              u6361 00E4                                                i1l58 1DF3  
                                              u5570 07DC                                                u5490 078B  
                                              u3970 17DD                                                u3890 1769  
                                              u5810 12A7                                                u6290 111E  
                                              u6610 06D0                                                u6530 04B0  
                                              u6450 02CB                                                u6370 0109  
                                              u5571 07DB                                                u5491 078A  
                                              u3971 17DC                                                u3955 17A3  
                                              u3891 1768                                                u3795 1708  
                                              u5811 12A6                                                u6291 111D  
                                              u6611 06CF                                                u6531 04AF  
                                              u6515 0429                                                u6451 02CA  
                                              u6371 0108                                                u5580 07E0  
                                              u6700 1F22                                                u3980 17F0  
                                              u5740 1E1D                                                u5820 12C7  
                                              u6620 06E0                                                u6540 04B5  
                                              u6460 02F3                                                u6380 010F  
                                              u5900 1FDA                                                u5581 07DF  
                                              u5565 07C9                                                u5485 077F  
                                              u6701 1F21                                                u3981 17EF  
                                              u3965 17BE                                                u3885 175B  
                                              u6285 0FF0                                                u5741 1E1B  
                                              u5821 12C6                                                u6621 06DF  
                                              u6541 04B4                                                u6461 02F2  
                                              u6381 010E                                                u5901 1FD9  
                                              u5830 1089                                                u5910 080A  
                                              u5750 1E1E                                                u6630 0710  
                                              u6550 052A                                                u6470 02FE  
                                              u6390 0158                                                u6710 155E  
                                              u3975 17D9                                                u5831 1088  
                                              u5911 0809                                                u6631 070E  
                                              u6615 06CC                                                u6551 0529  
                                              u6471 02FD                                                u6391 0157  
                                              u6711 155D                                                u6800 0883  
                                              u5920 12F2                                                u5760 10CB  
                                              u6640 0711                                                u6560 0561  
                                              u6480 0319                                                u6720 1583  
                                              u6705 1F1E                                                u6801 0882  
                                              u5921 12F1                                                u5761 10CA  
                                              u5825 12C3                                                u6625 06DC  
                                              u6561 0560                                                u6481 0318  
                                              u6721 1582                                                u6810 0898  
                                              u5850 1099                                                u5930 1308  
                                              u5770 10D5                                                u6650 0720  
                                              u6570 05D7                                                u6490 031D  
                                              u6730 15CB                                                u6811 0897  
                                              u3995 17F7                                                u5851 1098  
                                              u5771 10D4                                                u6651 071F  
                                              u6571 05D6                                                u6491 031C  
                                              u6731 15CA                                                u6740 1F9E  
                                              u6900 0935                                                u6820 08AF  
                                              u5940 131B                                                u5780 1EB6  
                                              u5860 10C1                                                u6580 05FD  
                                              u6660 1242                                                u6741 1F9D  
                                              u6901 0934                                                u6821 08AE  
                                              u5845 108E                                                u5941 131A  
                                              u5781 1EB5                                                u5861 10C0  
                                              u6581 05FC                                                u6661 1241  
                                              u6910 0941                                                u6830 08B6  
                                              u5950 1322                                                u5790 1291  
                                              u6590 0601                                                u5870 1FC6  
                                              u6670 1285                                                u6750 1F3E  
                                              u6911 0940                                                u6831 08B5  
                                              u5951 1321                                                u5935 1304  
                                              u5791 1290                                                u6591 0600  
                                              u6575 05D3                                                u5871 1FC5  
                                              u6671 1284                                                u6751 1F3D  
                                              u6760 102C                                                u6680 1E74  
                                              u6920 0958                                                u6840 08CD  
                                              u6761 102B                                                u6681 1E73  
                                              u6921 0957                                                u6841 08CC  
                                              u6770 1E65                                                u6690 1E83  
                                              u6930 095F                                                u6850 08D7  
                                              u5970 1330                                                u6771 1E64  
                                              u6691 1E82                                                u6931 095E  
                                              u6851 08D6                                                u5971 132F  
                                              u6940 0976                                                u6860 08F6  
                                              u6780 0860                                                u5980 1337  
                                              u6941 0975                                                u6861 08F5  
                                              u6781 085F                                                u5981 1336  
                                              u5965 1324                                                u5885 1FCB  
                                              u6950 0981                                                u6870 090D  
                                              u6790 086B                                                u6951 0980  
                                              u6871 090C                                                u6791 086A  
                                              u5895 1FD0                                                u6960 098E  
                                              u6880 0914                                                u6961 098D  
                                              u6881 0913                                                u6970 09A5  
                                              u6890 092B                                                u6971 09A4  
                                              u6891 092A                                                u5995 1339  
                                              u6980 09AC                                                u6981 09AB  
                                              u6990 09C3                                                u6991 09C2  
                                              _TMR4 0415                                                _WPUA 020C  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 007A  
                                              _dbuf 0220                                                _labs 07EA  
                                              _main 09F4                                                _prec 014A  
                                              pad@i 003A                                                pad@p 0037  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                     ___fpclassifyf 1357                            handle_voltage@LED_SetLow 0060  
                                              start 004A          __end_of_EUSART_DefaultOverrunErrorCallback 1E09  
              ??_EUSART_DefaultOverrunErrorCallback 0076                 ?_EUSART_DefaultOverrunErrorCallback 0076  
                _EUSART_DefaultOverrunErrorCallback 1E05                                     ___fldiv@new_exp 0032  
                   __end_of_INT_SetInterruptHandler 1E3A                                               ??_pad 0039  
                                     ?_EUSART_Write 0020                                       ___fltol@sign1 0028  
                                             ?_labs 0020                                     __end_of___fladd 0DC5  
                                             ?_main 0076                                     __end_of___fldiv 1800  
                                   __end_of___flneg 080D                                     __end_of___flmul 1000  
                                   __end_of___flsub 1FBF                                     __end_of___fltol 1357  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCCN 0398  
                                             _IOCCP 0397                                               i1l160 003A  
                                             i1l410 1E16                                               i1l156 001B  
                                             i1l165 0048                                               i1l158 002C  
                                             i1l423 1056                                               i1l255 0003  
                                             i1l159 0048                                               i1l440 1FFF  
                                             i1l433 122D                                               i1l249 1F7E  
                                             i1l443 1EE8                                               i1l461 0800  
                                             i1l437 1FFD                                               i1l446 1EEA  
                                             i1l464 1E08                                               i1l636 1F5F  
                                             i1l629 0847                                               _UART1 1800  
                                      vfpfcnvrt@fmt 00CE                                               _TRISA 008C  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 1E9B                                    __end_of_TMR4_ISR 1F7F  
                                             _flags 00EF                                  _EUSART_TransmitISR 1ED1  
                               read_prec_or_width@c 002B                                 read_prec_or_width@n 002C  
                                             _fputc 128A                                               _fputs 109E  
                                       ?_TMR4_Start 0076                                               labs@a 0020  
                                             pad@fp 0034                                               _width 0148  
                                             _putch 1EAC                                               pclath 000A  
                                             status 0003                                               wtemp0 007E  
                                    ?___fpclassifyf 0020                                 ?_EUSART_TransmitISR 0076  
                                   __initialization 004C                                        __end_of_labs 0800  
                                      __end_of_main 0BB9                                      ??_EUSART_Write 0021  
                 _EUSART_TxCompleteInterruptHandler 0156                                           ??_ADC_ISR 0076  
                       ?_INTERRUPT_InterruptManager 0076                                              ??_labs 0024  
                              ??_EUSART_TransmitISR 0076                                              ??_main 0070  
                        __end_of_read_prec_or_width 128A    EUSART_RxCompleteCallbackRegister@callbackHandler 0020  
EUSART_OverrunErrorCallbackRegister@callbackHandler 0020  EUSART_FramingErrorCallbackRegister@callbackHandler 0020  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 0150  
                                            ?_fputc 0023                                              ?_fputs 002C  
                                            _ADRESH 009C                                              _ADRESL 009B  
                                            _ANSELA 018C                                              ?_putch 0076  
                                            _ANSELC 018E                                              _BORCON 0116  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RC3PPS 0EA3                                              i1l4000 1FFB  
                                            _ODCONA 028C                                              _ODCONC 028E  
                                            i1l4200 11E5                                              i1l4120 0825  
                                            i1l4130 1F47                                              i1l4210 1203  
                                            i1l4202 11EC                                              i1l4122 0830  
                                            i1l4114 080D                                              i1l4140 1F5C  
                                            i1l4132 1F48                                              i1l4220 1216  
                                            i1l4212 1208                                              i1l4204 11F1  
                                            i1l4124 0836                                              i1l4116 0814  
                                            i1l4134 1F4C                                              i1l4222 121D  
                                            i1l4214 120B                                              i1l4206 11F6  
                                            i1l4230 1ED1                                              i1l4126 083C  
                                            i1l4118 081F                                              i1l4136 1F4E  
                                            i1l4128 1F41                                              i1l4224 121F  
                                            i1l4216 120F                                              i1l4208 11FC  
                                            i1l4232 1ED7                                              i1l4138 1F56  
                                            i1l4226 1221                                              i1l4234 1EDF  
                                            i1l4170 1F60                                              i1l4164 1E4F  
                                            i1l4228 1228                                              i1l4236 1EE3  
                                            i1l4172 1F6E                                              i1l4166 1E51  
                                            i1l4238 1EE5                                              i1l4174 1F74  
                                            i1l4168 1E58                                              i1l4176 1F79  
                                            i1l4098 1E05                                              i1l4194 11D2  
                                            i1l4178 1F7C                                              i1l3900 1E0F  
                                            i1l4196 11DA                                              i1l4380 0014  
                                            i1l3910 103F                                              i1l4198 11DF  
                                            i1l4390 003F                                              i1l4382 0020  
                                            i1l4374 0006                                              i1l3920 1054  
                                            i1l3912 1041                                              i1l3904 1034  
                                            i1l4392 0044                                              i1l4384 0025  
                                            i1l4376 000A                                              i1l3922 1055  
                                            i1l3914 104B                                              i1l3906 1034  
                                            i1l4386 0031                                              i1l4378 000F  
                                            i1l3916 104D                                              i1l3908 103B  
                                            i1l4388 0036                                              i1l3918 1052  
                                            i1l3990 1FE8                                              i1l3992 1FED  
                                            i1l3994 1FF4                                              i1l3986 1FDF  
                                            i1l3996 1FF8                                              i1l3988 1FE4  
                                            i1l3998 1FFA                                              _INLVLA 038C  
                                            _INLVLC 038E                                              u500_20 0825  
                                            u500_21 0824                                              u501_20 082E  
                                            u501_21 082B                                              u502_24 0830  
                                            u511_20 1E58                                              u503_20 0836  
                                            u511_21 1E57                                              u503_21 0835  
                                            u520_20 1ED7                                              u504_20 083C  
                                            u512_20 1F6E                                              u520_21 1ED6  
                                            u504_21 083B                                              u512_21 1F6D  
                                            u505_20 0845                                              u513_20 1F74  
                                            u505_21 0842                                              u513_21 1F73  
                                            u514_20 11DF                                              u514_21 11DE  
                                            u506_24 0847                                              u507_20 1F56  
                                            u515_20 11EC                                              u507_21 1F55  
                                            u515_21 11EB                                              u508_20 1F5C  
                                            u516_20 11F6                                              u508_21 1F5B  
                                            u516_21 11F5                                              u517_20 1203  
                                            u517_21 1202                                              u518_20 1215  
                                            u518_21 1214                                              u519_20 1228  
                                            u519_21 1227                                              u560_20 000F  
                                            u560_21 000E                                              u561_20 0014  
                                            u561_21 0013                                              u562_20 0020  
                                            _OSCCON 0099                                              u562_21 001F  
                                            u563_20 0025                                              u563_21 0024  
                                            u564_20 0031                                              u564_21 0030  
                                            u565_20 0036                                              u565_21 0035  
                                            u494_20 1FE4                                              u566_20 003F  
                                            u494_21 1FE3                                              u566_21 003E  
                                            u487_20 1E15                                              u495_20 1FED  
                                            u567_20 0044                                              u559_20 000A  
                                            u487_21 1E13                                              u495_21 1FEC  
                                            u567_21 0043                                              u559_21 0009  
                                            u488_20 1E16                                              u489_20 1052  
                                            u497_20 0814                                              u489_21 1051  
                                            u497_21 0813                                              u498_20 081D  
                                            u498_21 081A                                              u499_24 081F  
                                            _TX1REG 019A                                              _TX1STA 019E  
                                  __end_of___xxtofl 07EA                                    __end_of_delay_ms 1F23  
                                      vfprintf@cfmt 00E0                                              ___flge 13D6  
                                            ___fleq 1183                                           ??___fladd 0050  
                                            ___wmul 1FBF                                           ??___fldiv 0028  
                                         ??___flneg 0024                                           ??___flmul 0036  
                                         ??___flsub 0064                                           ??___fltol 0024  
                                            _efgtoa 007B                                              _floorf 1461  
                                            _memcpy 1057                                read_prec_or_width@ap 0027  
                           __end_of_TMR4_Initialize 1EAC                                   ?_EUSART_IsRxReady 0076  
                                 ?_EUSART_IsTxReady 0076                                              _printf 1E8B  
                                            pad@buf 0036                                   ?_CLOCK_Initialize 0076  
                                            _strcpy 1EEB                                  ??_EUSART_IsRxReady 0076  
                                            fputc@c 0023                                  ??_EUSART_IsTxReady 0020  
                                            fputs@c 0031                                              fputs@i 0032  
                                            fputs@s 002C                                  ??_CLOCK_Initialize 0020  
                                   ___fpclassifyf@e 002A                                     ___fpclassifyf@u 002C  
                                   ___fpclassifyf@x 0020                            ADC_GetConversion@channel 0023  
                       EUSART_ReceiveISR@tempRxHead 007B                                    __end_of_vfprintf 1F41  
           INT_SetInterruptHandler@InterruptHandler 0020             ADC_SetInterruptHandler@InterruptHandler 0020  
                                handle_voltage@mode 005C                                          ___flge@ff1 0048  
                                        ___flge@ff2 004C                                     ??___fpclassifyf 0024  
                                      ___xxtofl@arg 002A                                        ___xxtofl@exp 0029  
                                 _SYSTEM_Initialize 1000                                        ___xxtofl@val 0020  
                                        ___fleq@ff1 0020                                          ___fleq@ff2 0024  
                                      ??_LED_12V_On 0020                                        ??_LED_24V_On 0020  
                           __end_of__initialization 0077                                          ___flneg@f1 0020  
                                ?_SYSTEM_Initialize 0076                                          ___fltol@f1 0020  
                                     __end_of_UART1 1830                                      __pcstackCOMMON 0076  
                                      __pidataBANK2 1DF4                                 ??_SYSTEM_Initialize 0022  
                                         ?_TMR4_ISR 0076                                       __end_of_fputc 12E8  
                                     __end_of_fputs 10C2                                       __end_of_putch 1EBD  
                                __end_of_LED_12V_On 1E05                                  __end_of_LED_24V_On 1E02  
                                    _OPTION_REGbits 0095                                _eusartRxStatusBuffer 0120  
                                 ??_timer_interrupt 0076                                             ??_fputc 0027  
                         __end_of_SYSTEM_Initialize 1013                                             ??_fputs 002F  
                                           ??_putch 0022                                          __pbssBANK1 00ED  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                                        __pbssBANK4 0220                               __end_of_handle_buzzer 1F9F  
                              __end_of_EUSART_Write 10EA                                   __end_of__Umul8_16 109E  
                                        __pmaintext 09F4                                             ?___flge 0048  
                                           ?___fleq 0020                                             ?___wmul 0020  
                                        ??_TMR4_ISR 0076                                          __pintentry 0004  
                                           ?_efgtoa 0064                                _EUSART_AutoBaudQuery 0000  
                                           ?_floorf 003A                                             ?_memcpy 0020  
                                           _ADC_ISR 1E4F                                    ?_TMR4_Initialize 0076  
                                           ?_printf 00E2                                             ?_strcpy 0020  
                                   _EUSART_IsTxDone 0000                                       _eusartRxCount 0070  
         __end_of_EUSART_RxCompleteCallbackRegister 1E6D                 ??_EUSART_RxCompleteCallbackRegister 0022  
                ?_EUSART_RxCompleteCallbackRegister 0020                   _EUSART_RxCompleteCallbackRegister 1E5E  
                                         ?___xxtofl 0020                                     _EUSART_ErrorGet 0000  
                                           _SP1BRGH 019C                                             _SP1BRGL 019B  
                                        _config_flg 015C                                           ?_delay_ms 0020  
                                           _OSCTUNE 0098                                             _SLRCONA 030C  
                                           _SLRCONC 030E                            i1EUSART_Write@tempTxHead 0077  
                                      ??_TMR4_Start 0020                               EUSART_Read@tempRxTail 0076  
                              _ADC_InterruptHandler 0163                             _ADC_SetInterruptHandler 1E1F  
                                           ___fladd 0BB9                                             ___fldiv 165C  
                                           ___flneg 0801                                             ___flmul 0DC5  
                                           ___flsub 1F9F                                             ___fltol 12E8  
                                         ?_vfprintf 00DB                                  __end_of_TMR4_Start 1DF9  
                                           __ptext1 1E8B                                             __ptext2 1F23  
                                           __ptext3 154C                                             __ptext4 122E  
                                           __ptext5 1FBF                                             __ptext6 007B  
                                           __ptext7 1EEB                                             __ptext8 1119  
                                           __ptext9 109E                                      check_RX_Data@i 0078  
                             read_prec_or_width@fmt 0026                                          ??___xxtofl 0024  
                                         _T4CONbits 0417                            ??_PIN_MANAGER_Initialize 0020  
                           _INT_SetInterruptHandler 1E31                                          ??_delay_ms 0022  
                                           efgtoa@c 006A                                             efgtoa@d 00AB  
                                           efgtoa@e 00AF                                             efgtoa@f 0066  
                                           efgtoa@g 00C2                                             efgtoa@h 00B9  
                                           efgtoa@i 00B7                                             efgtoa@l 00BD  
                                           efgtoa@m 00AD                                             efgtoa@n 00C6  
                                           efgtoa@p 00A2                                             efgtoa@t 00A4  
                                           efgtoa@u 00C8                              _EUSART_Write$intlevel0 10C6  
                                           efgtoa@w 00B1                                             clrloop0 1E0A  
                                        delay_ms@ms 0020                                end_of_initialization 0077  
                                           floorf@e 0048                                             floorf@m 0044  
                                           floorf@u 004A                                             floorf@x 003A  
                                           memcpy@d 0025                                             memcpy@n 0022  
                                           memcpy@s 0026                                             fputc@fp 0025  
                                           fputs@fp 002D                                  _read_prec_or_width 122E  
                                 _EUSART_Initialize 114D                                  ?_EUSART_Initialize 0076  
                                 __end_of_vfpfcnvrt 165C                                          efgtoa@mode 00A9  
                                        efgtoa@sign 00C1                                   _EUSART_ReceiveISR 11D2  
                                     _check_RX_Data 1F41                                 ?_read_prec_or_width 0026  
                                  vfpfcnvrt@convarg 00D4                                          ??_vfprintf 006F  
                                ?_EUSART_ReceiveISR 0076                                             strcpy@d 0025  
                               ??_EUSART_Initialize 0022                                         ___fladd@grs 005B  
                               ??_EUSART_ReceiveISR 007A                 __end_of_ADC_DefaultInterruptHandler 1DF4  
                       _ADC_DefaultInterruptHandler 1DF3                                       ___xxtofl@sign 0028  
                                     ??_LED_12V_Off 0020     TMR4_PeriodMatchCallbackRegister@CallbackHandler 0020  
                                     ??_LED_24V_Off 0020                                ??_read_prec_or_width 0028  
                                       ___fldiv@grs 0034                                         ___fldiv@rem 002D  
                               _EUSART_Deinitialize 0000                                         ___flmul@grs 003D  
                         __end_of_EUSART_Initialize 1183                       ??_ADC_DefaultInterruptHandler 0076  
                         ??_ADC_SetInterruptHandler 0022                           __end_of_EUSART_ReceiveISR 122E  
                                    _voltage_raw_12 014C                                      _voltage_raw_24 014E  
                                        _voltage_12 0144                                          _voltage_24 0140  
                                    ?_check_RX_Data 0076                        __end_of_INTERRUPT_Initialize 1E4F  
                                    __end_of___flge 1461                                      __end_of___fleq 11D2  
                                   _timer_interrupt 080D                                         vfpfcnvrt@ap 00CF  
                                       vfpfcnvrt@cp 00D9                                         vfpfcnvrt@fp 00CC  
                                    __end_of___wmul 1FDF                                      __end_of_efgtoa 0745  
                                      _EUSART_Write 10C2                                      _ADC_Initialize 1EBD  
                                    __end_of_floorf 154C                                      __end_of_memcpy 107A  
                                        floorf@F521 0138                           ??_INT_SetInterruptHandler 0022  
                                    __end_of_printf 1E9B                                      __end_of_strcpy 1F06  
                               start_initialization 004C                                         __end_of_pad 114D  
                                     ??_EUSART_Read 0076            __end_of_TMR4_PeriodMatchCallbackRegister 1E43  
                ??_TMR4_PeriodMatchCallbackRegister 0022                   ?_TMR4_PeriodMatchCallbackRegister 0020  
                  _TMR4_PeriodMatchCallbackRegister 1E3A                                         putch@txData 0022  
                                    _handle_voltage 0848                                 __end_of_LED_12V_Off 1DFF  
                               __end_of_LED_24V_Off 1DFC                           _EUSART_RxInterruptHandler 0161  
                             __end_of___fpclassifyf 13D6                                         vfprintf@fmt 00DD  
                        _EUSART_FramingErrorHandler 0152                                            ??___flge 0050  
                                          ??___fleq 0028                                            ??___wmul 0024  
                                          ??_efgtoa 006B                              __end_of_ADC_Initialize 1ED1  
                                         __Umul8_16 107A                                         __pdataBANK2 016D  
                                          ??_floorf 003E                                            ??_memcpy 0024  
                                          ?_ADC_ISR 0076                                            ??_printf 0070  
                                          ??_strcpy 0023                                           ___fladd@a 004C  
                                         ___fladd@b 0048                                      i1_EUSART_Write 1FDF  
                                         ___fldiv@a 0020                                           ___fldiv@b 0024  
                             TMR4_ISR@CountCallBack 015A                                           ___flmul@a 0032  
                                         ___flmul@b 002E                                         __pbssCOMMON 0070  
                                         ___flsub@a 005C                                           ___flsub@b 0060  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                                       __pcstackBANK2 0165  
                            __end_of_handle_voltage 09F4                                 __end_of_EUSART_Read 1057  
                            EUSART_Write@tempTxHead 0021                                           __pnvBANK2 015D  
                                   ??_check_RX_Data 0078                             __end_of_timer_interrupt 0848  
                                       _efgtoa$1559 00A6                                           _main$1111 0165  
                                         _main$1112 0169                              _PIN_MANAGER_Initialize 10EA  
                          _TMR4_PeriodMatchCallback 015D                                EUSART_Read@readValue 0077  
                                          ?___fladd 0048                                            ?___fldiv 0020  
                                          ?___flneg 0020                                            ?___flmul 002E  
                                          ?___flsub 005C                                            ?___fltol 0020  
                                        ?__Umul8_16 0020                                      handle_buzzer@i 0025  
                                   ?_ADC_Initialize 0076                                        _eusartRxHead 0072  
                                      _eusartTxHead 0075                                        _eusartRxTail 0071  
                                      _eusartTxTail 0074                              __end_ofi1_EUSART_Write 2000  
                      ??_INTERRUPT_InterruptManager 007C                        EUSART_TransmitISR@tempTxTail 0076  
                           _eusartTxBufferRemaining 0073                                            _BAUD1CON 019F  
                            _EUSART_TransmitDisable 0000                                         _LED_12V_Off 1DFC  
                                  check_RX_Data@buf 0079                                         _LED_24V_Off 1DF9  
                         handle_voltage@LED_SetHigh 005E                                     ?_handle_voltage 0054  
                              i1EUSART_Write@txData 0076                                    _EUSART_IsRxReady 1E0F  
                              _INTERRUPT_Initialize 1E43                                    _EUSART_IsTxReady 1E17  
                                    _eusartRxBuffer 01A0                                    _CLOCK_Initialize 1E28  
                                    _eusartTxBuffer 0130                                      ___wmul@product 0024  
                                          _LATAbits 010C                                           delay_ms@i 0023  
                                         clear_ram0 1E09                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 0158                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                            _TMR4_ISR 1F60  
                                         _vfpfcnvrt 154C                                     ?i1_EUSART_Write 0076  
                                        _ADCON0bits 009D                                   ___wmul@multiplier 0020  
                                       _EUSART_Read 1034                                          vfpfcnvrt@c 00D8  
                             ?_INTERRUPT_Initialize 0076                   _EUSART_RxCompleteInterruptHandler 0154  
                                     _handle_buzzer 1F7F                                    ?_timer_interrupt 0076  
                                         memcpy@tmp 0024                                          vfprintf@ap 00DF  
                                        vfprintf@fp 00DB                                   _ADC_GetConversion 1013  
                                       ??__Umul8_16 0022                                  ?_ADC_GetConversion 0020  
                        __end_of_EUSART_TransmitISR 1EEB                                          ?_vfpfcnvrt 00CC  
                           handle_voltage@reset_flg 005D                                  ___fpclassifyf@F465 013C  
                               ??_ADC_GetConversion 0022                                            ___xxtofl 0745  
                                          _delay_ms 1F06                             handle_voltage@threshold 0058  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 128A  
                                          __ptext11 1EAC                                            __ptext20 0BB9  
                                          __ptext12 10C2                                            __ptext21 0801  
                                          __ptext13 1E17                                            __ptext30 1E02  
                                          __ptext22 0DC5                                            __ptext14 1057  
                                          __ptext31 1DFF                                            __ptext23 107A  
                                          __ptext15 07EA                                            __ptext40 1E43  
                                          __ptext32 1DFC                                            __ptext24 1183  
                                          __ptext16 1461                                            __ptext41 1E31  
                                          __ptext33 1DF9                                            __ptext25 165C  
                                          __ptext17 1357                                            __ptext42 114D  
                                          __ptext34 0745                                            __ptext26 0848  
                                          __ptext18 12E8                                            __ptext51 1F60  
                                          __ptext43 1E7C                                            __ptext35 1DF6  
                                          __ptext27 1F7F                                            __ptext19 1F9F  
                                          __ptext60 1E05                                            __ptext52 0003  
                                          __ptext44 1E6D                                            __ptext36 1E3A  
                                          __ptext28 1F06                                            __ptext61 0800  
                                          __ptext53 080D                                            __ptext45 1E28  
                                          __ptext37 1000                                            __ptext29 13D6  
                                          __ptext62 1E4F                                            __ptext54 1ED1  
                                          __ptext46 1EBD                                            __ptext38 1E9B  
                                          __ptext63 1DF3                                            __ptext55 11D2  
                                          __ptext47 1E1F                                            __ptext39 10EA  
                                          __ptext56 1F41                                            __ptext48 1E5E  
                                          __ptext57 1FDF                                            __ptext49 1013  
                                          __ptext58 1034                                            __ptext59 1E0F  
                             _EUSART_TransmitEnable 0000                                          strcpy@dest 0020  
                                    ?_handle_buzzer 0076                                          _LED_12V_On 1E02  
                                        _LED_24V_On 1DFF                                   ??_TMR4_Initialize 0020  
                                      _reset_flg_12 016D                                        _reset_flg_24 016E  
                         __end_of_ADC_GetConversion 1034                                          _RC1STAbits 019D  
                                          efgtoa@fp 0064                                            efgtoa@ne 00A0  
                                          efgtoa@pp 00A8                                            efgtoa@ou 00B3  
                                          int$flags 007E                                            _vfprintf 1F23  
                __end_of_INTERRUPT_InterruptManager 004A                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1E7C               ??_EUSART_FramingErrorCallbackRegister 0022  
              ?_EUSART_FramingErrorCallbackRegister 0020                 _EUSART_FramingErrorCallbackRegister 1E6D  
                                         printf@fmt 00E2                                          _INTCONbits 000B  
                                          memcpy@d1 0020                                            memcpy@s1 0021  
                              _INT_InterruptHandler 00ED                              ??_INTERRUPT_Initialize 0022  
                          ?_ADC_SetInterruptHandler 0020                                            intlevel1 0000  
                         _EUSART_TxInterruptHandler 015F                             ?_PIN_MANAGER_Initialize 0076  
        __end_of_EUSART_DefaultFramingErrorCallback 0801                ??_EUSART_DefaultFramingErrorCallback 0076  
               ?_EUSART_DefaultFramingErrorCallback 0076                  _EUSART_DefaultFramingErrorCallback 0800  
                                         strcpy@src 0021                                    ??_ADC_Initialize 0022  
                                       efgtoa@nmode 00AA                                            printf@ap 00EC  
                          ?_INT_SetInterruptHandler 0020                            __end_of_EUSART_IsRxReady 1E17  
                                       ??_vfpfcnvrt 00D0                            __end_of_EUSART_IsTxReady 1E1F  
                          __end_of_CLOCK_Initialize 1E31                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 184B  
                                     __pstringtext4 1863                                       __pstringtext5 1877  
                                     __pstringtext6 1888                                       __pstringtext7 188C  
                                     __pstringtext8 0000                              __Umul8_16@multiplicand 0020  
                                  ??_handle_voltage 0062                               handle_voltage@voltage 0054  
                                      ?_LED_12V_Off 0076                                        ?_LED_24V_Off 0076  
                                        _TX1STAbits 019E                                     ??_handle_buzzer 0025  
                                     ___fladd@signs 0058                                          _TMR4_Start 1DF6  
                                EUSART_Write@txData 0020                      __end_of_PIN_MANAGER_Initialize 1119  
                                       ?_LED_12V_On 0076                                         ?_LED_24V_On 0076  
                                      ___fladd@aexp 0059                                        ___fladd@bexp 005A  
                              __Umul8_16@multiplier 0028                                   __Umul8_16@product 0024  
                             __end_of_check_RX_Data 1F60  
