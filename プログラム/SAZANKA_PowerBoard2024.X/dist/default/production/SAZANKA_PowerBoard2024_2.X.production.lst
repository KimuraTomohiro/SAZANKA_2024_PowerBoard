

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Nov 17 15:08:01 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F1705
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,space=0,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,space=0,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    22                           	psect	clrtext,global,class=CODE,space=0,delta=2
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    36                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    37                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    38                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    39                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    43                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    44                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    45                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=3
    46                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    48                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    49                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    50                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    51                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    52                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    53                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    54                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    58                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=2
    63                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,space=0,delta=2
    79                           	psect	text51,local,class=CODE,space=0,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,space=0,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,space=0,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,space=0,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,space=0,merge=1,delta=2
    84                           	psect	text56,local,class=CODE,space=0,merge=1,delta=2
    85                           	psect	text57,local,class=CODE,space=0,merge=1,delta=2
    86                           	psect	text58,local,class=CODE,space=0,merge=1,delta=2
    87                           	psect	text59,local,class=CODE,space=0,merge=1,delta=2
    88                           	psect	text60,local,class=CODE,space=0,merge=1,delta=2
    89                           	psect	text61,local,class=CODE,space=0,merge=1,delta=2
    90                           	psect	text62,local,class=CODE,space=0,merge=1,delta=2
    91                           	psect	text63,local,class=CODE,space=0,merge=1,delta=2
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    93                           	dabs	1,0x7E,2
    94     0000                     
    95                           ; Generated 07/09/2023 GMT
    96                           ; 
    97                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F1705 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129     0008                     bsr             equ	8
   130     0005                     fsr0h           equ	5
   131     0004                     fsr0l           equ	4
   132     0007                     fsr1h           equ	7
   133     0006                     fsr1l           equ	6
   134     0000                     indf            equ	0
   135     0000                     indf0           equ	0
   136     0001                     indf1           equ	1
   137     000B                     intcon          equ	11
   138     0002                     pc              equ	2
   139     0002                     pcl             equ	2
   140     000A                     pclath          equ	10
   141     0003                     status          equ	3
   142     0009                     wreg            equ	9
   143     0000                     INDF0           equ	0	;# 
   144     0001                     INDF1           equ	1	;# 
   145     0002                     PCL             equ	2	;# 
   146     0003                     STATUS          equ	3	;# 
   147     0004                     FSR0L           equ	4	;# 
   148     0005                     FSR0H           equ	5	;# 
   149     0006                     FSR1L           equ	6	;# 
   150     0007                     FSR1H           equ	7	;# 
   151     0008                     BSR             equ	8	;# 
   152     0009                     WREG            equ	9	;# 
   153     000A                     PCLATH          equ	10	;# 
   154     000B                     INTCON          equ	11	;# 
   155     000C                     PORTA           equ	12	;# 
   156     000E                     PORTC           equ	14	;# 
   157     0011                     PIR1            equ	17	;# 
   158     0012                     PIR2            equ	18	;# 
   159     0013                     PIR3            equ	19	;# 
   160     0015                     TMR0            equ	21	;# 
   161     0016                     TMR1            equ	22	;# 
   162     0016                     TMR1L           equ	22	;# 
   163     0017                     TMR1H           equ	23	;# 
   164     0018                     T1CON           equ	24	;# 
   165     0019                     T1GCON          equ	25	;# 
   166     001A                     TMR2            equ	26	;# 
   167     001B                     PR2             equ	27	;# 
   168     001C                     T2CON           equ	28	;# 
   169     008C                     TRISA           equ	140	;# 
   170     008E                     TRISC           equ	142	;# 
   171     0091                     PIE1            equ	145	;# 
   172     0092                     PIE2            equ	146	;# 
   173     0093                     PIE3            equ	147	;# 
   174     0095                     OPTION_REG      equ	149	;# 
   175     0096                     PCON            equ	150	;# 
   176     0097                     WDTCON          equ	151	;# 
   177     0098                     OSCTUNE         equ	152	;# 
   178     0099                     OSCCON          equ	153	;# 
   179     009A                     OSCSTAT         equ	154	;# 
   180     009B                     ADRES           equ	155	;# 
   181     009B                     ADRESL          equ	155	;# 
   182     009C                     ADRESH          equ	156	;# 
   183     009D                     ADCON0          equ	157	;# 
   184     009E                     ADCON1          equ	158	;# 
   185     009F                     ADCON2          equ	159	;# 
   186     010C                     LATA            equ	268	;# 
   187     010E                     LATC            equ	270	;# 
   188     0111                     CM1CON0         equ	273	;# 
   189     0112                     CM1CON1         equ	274	;# 
   190     0113                     CM2CON0         equ	275	;# 
   191     0114                     CM2CON1         equ	276	;# 
   192     0115                     CMOUT           equ	277	;# 
   193     0116                     BORCON          equ	278	;# 
   194     0117                     FVRCON          equ	279	;# 
   195     0118                     DAC1CON0        equ	280	;# 
   196     0119                     DAC1CON1        equ	281	;# 
   197     011C                     ZCD1CON         equ	284	;# 
   198     018C                     ANSELA          equ	396	;# 
   199     018E                     ANSELC          equ	398	;# 
   200     0191                     PMADR           equ	401	;# 
   201     0191                     PMADRL          equ	401	;# 
   202     0192                     PMADRH          equ	402	;# 
   203     0193                     PMDAT           equ	403	;# 
   204     0193                     PMDATL          equ	403	;# 
   205     0194                     PMDATH          equ	404	;# 
   206     0195                     PMCON1          equ	405	;# 
   207     0196                     PMCON2          equ	406	;# 
   208     0197                     VREGCON         equ	407	;# 
   209     0199                     RC1REG          equ	409	;# 
   210     0199                     RCREG           equ	409	;# 
   211     0199                     RCREG1          equ	409	;# 
   212     019A                     TX1REG          equ	410	;# 
   213     019A                     TXREG1          equ	410	;# 
   214     019A                     TXREG           equ	410	;# 
   215     019B                     SP1BRG          equ	411	;# 
   216     019B                     SPBRG           equ	411	;# 
   217     019B                     SP1BRGL         equ	411	;# 
   218     019B                     SPBRG1          equ	411	;# 
   219     019B                     SPBRGL          equ	411	;# 
   220     019C                     SP1BRGH         equ	412	;# 
   221     019C                     SPBRGH          equ	412	;# 
   222     019C                     SPBRGH1         equ	412	;# 
   223     019D                     RC1STA          equ	413	;# 
   224     019D                     RCSTA1          equ	413	;# 
   225     019D                     RCSTA           equ	413	;# 
   226     019E                     TX1STA          equ	414	;# 
   227     019E                     TXSTA1          equ	414	;# 
   228     019E                     TXSTA           equ	414	;# 
   229     019F                     BAUD1CON        equ	415	;# 
   230     019F                     BAUDCON1        equ	415	;# 
   231     019F                     BAUDCTL1        equ	415	;# 
   232     019F                     BAUDCON         equ	415	;# 
   233     019F                     BAUDCTL         equ	415	;# 
   234     020C                     WPUA            equ	524	;# 
   235     020E                     WPUC            equ	526	;# 
   236     0211                     SSP1BUF         equ	529	;# 
   237     0211                     SSPBUF          equ	529	;# 
   238     0212                     SSP1ADD         equ	530	;# 
   239     0212                     SSPADD          equ	530	;# 
   240     0213                     SSP1MSK         equ	531	;# 
   241     0213                     SSPMSK          equ	531	;# 
   242     0214                     SSP1STAT        equ	532	;# 
   243     0214                     SSPSTAT         equ	532	;# 
   244     0215                     SSP1CON1        equ	533	;# 
   245     0215                     SSPCON          equ	533	;# 
   246     0215                     SSPCON1         equ	533	;# 
   247     0215                     SSP1CON         equ	533	;# 
   248     0216                     SSP1CON2        equ	534	;# 
   249     0216                     SSPCON2         equ	534	;# 
   250     0217                     SSP1CON3        equ	535	;# 
   251     0217                     SSPCON3         equ	535	;# 
   252     028C                     ODCONA          equ	652	;# 
   253     028E                     ODCONC          equ	654	;# 
   254     0291                     CCPR1           equ	657	;# 
   255     0291                     CCPR1L          equ	657	;# 
   256     0292                     CCPR1H          equ	658	;# 
   257     0293                     CCP1CON         equ	659	;# 
   258     0293                     ECCP1CON        equ	659	;# 
   259     0298                     CCPR2           equ	664	;# 
   260     0298                     CCPR2L          equ	664	;# 
   261     0299                     CCPR2H          equ	665	;# 
   262     029A                     CCP2CON         equ	666	;# 
   263     029A                     ECCP2CON        equ	666	;# 
   264     029E                     CCPTMRS         equ	670	;# 
   265     030C                     SLRCONA         equ	780	;# 
   266     030E                     SLRCONC         equ	782	;# 
   267     038C                     INLVLA          equ	908	;# 
   268     038E                     INLVLC          equ	910	;# 
   269     0391                     IOCAP           equ	913	;# 
   270     0392                     IOCAN           equ	914	;# 
   271     0393                     IOCAF           equ	915	;# 
   272     0397                     IOCCP           equ	919	;# 
   273     0398                     IOCCN           equ	920	;# 
   274     0399                     IOCCF           equ	921	;# 
   275     0415                     TMR4            equ	1045	;# 
   276     0416                     PR4             equ	1046	;# 
   277     0417                     T4CON           equ	1047	;# 
   278     041C                     TMR6            equ	1052	;# 
   279     041D                     PR6             equ	1053	;# 
   280     041E                     T6CON           equ	1054	;# 
   281     0511                     OPA1CON         equ	1297	;# 
   282     0515                     OPA2CON         equ	1301	;# 
   283     0617                     PWM3DCL         equ	1559	;# 
   284     0618                     PWM3DCH         equ	1560	;# 
   285     0619                     PWM3CON         equ	1561	;# 
   286     0619                     PWM3CON0        equ	1561	;# 
   287     061A                     PWM4DCL         equ	1562	;# 
   288     061B                     PWM4DCH         equ	1563	;# 
   289     061C                     PWM4CON         equ	1564	;# 
   290     061C                     PWM4CON0        equ	1564	;# 
   291     0691                     COG1PHR         equ	1681	;# 
   292     0692                     COG1PHF         equ	1682	;# 
   293     0693                     COG1BLKR        equ	1683	;# 
   294     0694                     COG1BLKF        equ	1684	;# 
   295     0695                     COG1DBR         equ	1685	;# 
   296     0696                     COG1DBF         equ	1686	;# 
   297     0697                     COG1CON0        equ	1687	;# 
   298     0698                     COG1CON1        equ	1688	;# 
   299     0699                     COG1RIS         equ	1689	;# 
   300     069A                     COG1RSIM        equ	1690	;# 
   301     069B                     COG1FIS         equ	1691	;# 
   302     069C                     COG1FSIM        equ	1692	;# 
   303     069D                     COG1ASD0        equ	1693	;# 
   304     069E                     COG1ASD1        equ	1694	;# 
   305     069F                     COG1STR         equ	1695	;# 
   306     0E0F                     PPSLOCK         equ	3599	;# 
   307     0E10                     INTPPS          equ	3600	;# 
   308     0E11                     T0CKIPPS        equ	3601	;# 
   309     0E12                     T1CKIPPS        equ	3602	;# 
   310     0E13                     T1GPPS          equ	3603	;# 
   311     0E14                     CCP1PPS         equ	3604	;# 
   312     0E15                     CCP2PPS         equ	3605	;# 
   313     0E17                     COGINPPS        equ	3607	;# 
   314     0E20                     SSPCLKPPS       equ	3616	;# 
   315     0E21                     SSPDATPPS       equ	3617	;# 
   316     0E22                     SSPSSPPS        equ	3618	;# 
   317     0E24                     RXPPS           equ	3620	;# 
   318     0E25                     CKPPS           equ	3621	;# 
   319     0E28                     CLCIN0PPS       equ	3624	;# 
   320     0E29                     CLCIN1PPS       equ	3625	;# 
   321     0E2A                     CLCIN2PPS       equ	3626	;# 
   322     0E2B                     CLCIN3PPS       equ	3627	;# 
   323     0E90                     RA0PPS          equ	3728	;# 
   324     0E91                     RA1PPS          equ	3729	;# 
   325     0E92                     RA2PPS          equ	3730	;# 
   326     0E94                     RA4PPS          equ	3732	;# 
   327     0E95                     RA5PPS          equ	3733	;# 
   328     0EA0                     RC0PPS          equ	3744	;# 
   329     0EA1                     RC1PPS          equ	3745	;# 
   330     0EA2                     RC2PPS          equ	3746	;# 
   331     0EA3                     RC3PPS          equ	3747	;# 
   332     0EA4                     RC4PPS          equ	3748	;# 
   333     0EA5                     RC5PPS          equ	3749	;# 
   334     0F0F                     CLCDATA         equ	3855	;# 
   335     0F10                     CLC1CON         equ	3856	;# 
   336     0F11                     CLC1POL         equ	3857	;# 
   337     0F12                     CLC1SEL0        equ	3858	;# 
   338     0F13                     CLC1SEL1        equ	3859	;# 
   339     0F14                     CLC1SEL2        equ	3860	;# 
   340     0F15                     CLC1SEL3        equ	3861	;# 
   341     0F16                     CLC1GLS0        equ	3862	;# 
   342     0F17                     CLC1GLS1        equ	3863	;# 
   343     0F18                     CLC1GLS2        equ	3864	;# 
   344     0F19                     CLC1GLS3        equ	3865	;# 
   345     0F1A                     CLC2CON         equ	3866	;# 
   346     0F1B                     CLC2POL         equ	3867	;# 
   347     0F1C                     CLC2SEL0        equ	3868	;# 
   348     0F1D                     CLC2SEL1        equ	3869	;# 
   349     0F1E                     CLC2SEL2        equ	3870	;# 
   350     0F1F                     CLC2SEL3        equ	3871	;# 
   351     0F20                     CLC2GLS0        equ	3872	;# 
   352     0F21                     CLC2GLS1        equ	3873	;# 
   353     0F22                     CLC2GLS2        equ	3874	;# 
   354     0F23                     CLC2GLS3        equ	3875	;# 
   355     0F24                     CLC3CON         equ	3876	;# 
   356     0F25                     CLC3POL         equ	3877	;# 
   357     0F26                     CLC3SEL0        equ	3878	;# 
   358     0F27                     CLC3SEL1        equ	3879	;# 
   359     0F28                     CLC3SEL2        equ	3880	;# 
   360     0F29                     CLC3SEL3        equ	3881	;# 
   361     0F2A                     CLC3GLS0        equ	3882	;# 
   362     0F2B                     CLC3GLS1        equ	3883	;# 
   363     0F2C                     CLC3GLS2        equ	3884	;# 
   364     0F2D                     CLC3GLS3        equ	3885	;# 
   365     0F9E                     ICDBK0H         equ	3998	;# 
   366     0FE4                     STATUS_SHAD     equ	4068	;# 
   367     0FE5                     WREG_SHAD       equ	4069	;# 
   368     0FE6                     BSR_SHAD        equ	4070	;# 
   369     0FE7                     PCLATH_SHAD     equ	4071	;# 
   370     0FE8                     FSR0L_SHAD      equ	4072	;# 
   371     0FE9                     FSR0H_SHAD      equ	4073	;# 
   372     0FEA                     FSR1L_SHAD      equ	4074	;# 
   373     0FEB                     FSR1H_SHAD      equ	4075	;# 
   374     0FED                     STKPTR          equ	4077	;# 
   375     0FEE                     TOSL            equ	4078	;# 
   376     0FEF                     TOSH            equ	4079	;# 
   377     0000                     INDF0           equ	0	;# 
   378     0001                     INDF1           equ	1	;# 
   379     0002                     PCL             equ	2	;# 
   380     0003                     STATUS          equ	3	;# 
   381     0004                     FSR0L           equ	4	;# 
   382     0005                     FSR0H           equ	5	;# 
   383     0006                     FSR1L           equ	6	;# 
   384     0007                     FSR1H           equ	7	;# 
   385     0008                     BSR             equ	8	;# 
   386     0009                     WREG            equ	9	;# 
   387     000A                     PCLATH          equ	10	;# 
   388     000B                     INTCON          equ	11	;# 
   389     000C                     PORTA           equ	12	;# 
   390     000E                     PORTC           equ	14	;# 
   391     0011                     PIR1            equ	17	;# 
   392     0012                     PIR2            equ	18	;# 
   393     0013                     PIR3            equ	19	;# 
   394     0015                     TMR0            equ	21	;# 
   395     0016                     TMR1            equ	22	;# 
   396     0016                     TMR1L           equ	22	;# 
   397     0017                     TMR1H           equ	23	;# 
   398     0018                     T1CON           equ	24	;# 
   399     0019                     T1GCON          equ	25	;# 
   400     001A                     TMR2            equ	26	;# 
   401     001B                     PR2             equ	27	;# 
   402     001C                     T2CON           equ	28	;# 
   403     008C                     TRISA           equ	140	;# 
   404     008E                     TRISC           equ	142	;# 
   405     0091                     PIE1            equ	145	;# 
   406     0092                     PIE2            equ	146	;# 
   407     0093                     PIE3            equ	147	;# 
   408     0095                     OPTION_REG      equ	149	;# 
   409     0096                     PCON            equ	150	;# 
   410     0097                     WDTCON          equ	151	;# 
   411     0098                     OSCTUNE         equ	152	;# 
   412     0099                     OSCCON          equ	153	;# 
   413     009A                     OSCSTAT         equ	154	;# 
   414     009B                     ADRES           equ	155	;# 
   415     009B                     ADRESL          equ	155	;# 
   416     009C                     ADRESH          equ	156	;# 
   417     009D                     ADCON0          equ	157	;# 
   418     009E                     ADCON1          equ	158	;# 
   419     009F                     ADCON2          equ	159	;# 
   420     010C                     LATA            equ	268	;# 
   421     010E                     LATC            equ	270	;# 
   422     0111                     CM1CON0         equ	273	;# 
   423     0112                     CM1CON1         equ	274	;# 
   424     0113                     CM2CON0         equ	275	;# 
   425     0114                     CM2CON1         equ	276	;# 
   426     0115                     CMOUT           equ	277	;# 
   427     0116                     BORCON          equ	278	;# 
   428     0117                     FVRCON          equ	279	;# 
   429     0118                     DAC1CON0        equ	280	;# 
   430     0119                     DAC1CON1        equ	281	;# 
   431     011C                     ZCD1CON         equ	284	;# 
   432     018C                     ANSELA          equ	396	;# 
   433     018E                     ANSELC          equ	398	;# 
   434     0191                     PMADR           equ	401	;# 
   435     0191                     PMADRL          equ	401	;# 
   436     0192                     PMADRH          equ	402	;# 
   437     0193                     PMDAT           equ	403	;# 
   438     0193                     PMDATL          equ	403	;# 
   439     0194                     PMDATH          equ	404	;# 
   440     0195                     PMCON1          equ	405	;# 
   441     0196                     PMCON2          equ	406	;# 
   442     0197                     VREGCON         equ	407	;# 
   443     0199                     RC1REG          equ	409	;# 
   444     0199                     RCREG           equ	409	;# 
   445     0199                     RCREG1          equ	409	;# 
   446     019A                     TX1REG          equ	410	;# 
   447     019A                     TXREG1          equ	410	;# 
   448     019A                     TXREG           equ	410	;# 
   449     019B                     SP1BRG          equ	411	;# 
   450     019B                     SPBRG           equ	411	;# 
   451     019B                     SP1BRGL         equ	411	;# 
   452     019B                     SPBRG1          equ	411	;# 
   453     019B                     SPBRGL          equ	411	;# 
   454     019C                     SP1BRGH         equ	412	;# 
   455     019C                     SPBRGH          equ	412	;# 
   456     019C                     SPBRGH1         equ	412	;# 
   457     019D                     RC1STA          equ	413	;# 
   458     019D                     RCSTA1          equ	413	;# 
   459     019D                     RCSTA           equ	413	;# 
   460     019E                     TX1STA          equ	414	;# 
   461     019E                     TXSTA1          equ	414	;# 
   462     019E                     TXSTA           equ	414	;# 
   463     019F                     BAUD1CON        equ	415	;# 
   464     019F                     BAUDCON1        equ	415	;# 
   465     019F                     BAUDCTL1        equ	415	;# 
   466     019F                     BAUDCON         equ	415	;# 
   467     019F                     BAUDCTL         equ	415	;# 
   468     020C                     WPUA            equ	524	;# 
   469     020E                     WPUC            equ	526	;# 
   470     0211                     SSP1BUF         equ	529	;# 
   471     0211                     SSPBUF          equ	529	;# 
   472     0212                     SSP1ADD         equ	530	;# 
   473     0212                     SSPADD          equ	530	;# 
   474     0213                     SSP1MSK         equ	531	;# 
   475     0213                     SSPMSK          equ	531	;# 
   476     0214                     SSP1STAT        equ	532	;# 
   477     0214                     SSPSTAT         equ	532	;# 
   478     0215                     SSP1CON1        equ	533	;# 
   479     0215                     SSPCON          equ	533	;# 
   480     0215                     SSPCON1         equ	533	;# 
   481     0215                     SSP1CON         equ	533	;# 
   482     0216                     SSP1CON2        equ	534	;# 
   483     0216                     SSPCON2         equ	534	;# 
   484     0217                     SSP1CON3        equ	535	;# 
   485     0217                     SSPCON3         equ	535	;# 
   486     028C                     ODCONA          equ	652	;# 
   487     028E                     ODCONC          equ	654	;# 
   488     0291                     CCPR1           equ	657	;# 
   489     0291                     CCPR1L          equ	657	;# 
   490     0292                     CCPR1H          equ	658	;# 
   491     0293                     CCP1CON         equ	659	;# 
   492     0293                     ECCP1CON        equ	659	;# 
   493     0298                     CCPR2           equ	664	;# 
   494     0298                     CCPR2L          equ	664	;# 
   495     0299                     CCPR2H          equ	665	;# 
   496     029A                     CCP2CON         equ	666	;# 
   497     029A                     ECCP2CON        equ	666	;# 
   498     029E                     CCPTMRS         equ	670	;# 
   499     030C                     SLRCONA         equ	780	;# 
   500     030E                     SLRCONC         equ	782	;# 
   501     038C                     INLVLA          equ	908	;# 
   502     038E                     INLVLC          equ	910	;# 
   503     0391                     IOCAP           equ	913	;# 
   504     0392                     IOCAN           equ	914	;# 
   505     0393                     IOCAF           equ	915	;# 
   506     0397                     IOCCP           equ	919	;# 
   507     0398                     IOCCN           equ	920	;# 
   508     0399                     IOCCF           equ	921	;# 
   509     0415                     TMR4            equ	1045	;# 
   510     0416                     PR4             equ	1046	;# 
   511     0417                     T4CON           equ	1047	;# 
   512     041C                     TMR6            equ	1052	;# 
   513     041D                     PR6             equ	1053	;# 
   514     041E                     T6CON           equ	1054	;# 
   515     0511                     OPA1CON         equ	1297	;# 
   516     0515                     OPA2CON         equ	1301	;# 
   517     0617                     PWM3DCL         equ	1559	;# 
   518     0618                     PWM3DCH         equ	1560	;# 
   519     0619                     PWM3CON         equ	1561	;# 
   520     0619                     PWM3CON0        equ	1561	;# 
   521     061A                     PWM4DCL         equ	1562	;# 
   522     061B                     PWM4DCH         equ	1563	;# 
   523     061C                     PWM4CON         equ	1564	;# 
   524     061C                     PWM4CON0        equ	1564	;# 
   525     0691                     COG1PHR         equ	1681	;# 
   526     0692                     COG1PHF         equ	1682	;# 
   527     0693                     COG1BLKR        equ	1683	;# 
   528     0694                     COG1BLKF        equ	1684	;# 
   529     0695                     COG1DBR         equ	1685	;# 
   530     0696                     COG1DBF         equ	1686	;# 
   531     0697                     COG1CON0        equ	1687	;# 
   532     0698                     COG1CON1        equ	1688	;# 
   533     0699                     COG1RIS         equ	1689	;# 
   534     069A                     COG1RSIM        equ	1690	;# 
   535     069B                     COG1FIS         equ	1691	;# 
   536     069C                     COG1FSIM        equ	1692	;# 
   537     069D                     COG1ASD0        equ	1693	;# 
   538     069E                     COG1ASD1        equ	1694	;# 
   539     069F                     COG1STR         equ	1695	;# 
   540     0E0F                     PPSLOCK         equ	3599	;# 
   541     0E10                     INTPPS          equ	3600	;# 
   542     0E11                     T0CKIPPS        equ	3601	;# 
   543     0E12                     T1CKIPPS        equ	3602	;# 
   544     0E13                     T1GPPS          equ	3603	;# 
   545     0E14                     CCP1PPS         equ	3604	;# 
   546     0E15                     CCP2PPS         equ	3605	;# 
   547     0E17                     COGINPPS        equ	3607	;# 
   548     0E20                     SSPCLKPPS       equ	3616	;# 
   549     0E21                     SSPDATPPS       equ	3617	;# 
   550     0E22                     SSPSSPPS        equ	3618	;# 
   551     0E24                     RXPPS           equ	3620	;# 
   552     0E25                     CKPPS           equ	3621	;# 
   553     0E28                     CLCIN0PPS       equ	3624	;# 
   554     0E29                     CLCIN1PPS       equ	3625	;# 
   555     0E2A                     CLCIN2PPS       equ	3626	;# 
   556     0E2B                     CLCIN3PPS       equ	3627	;# 
   557     0E90                     RA0PPS          equ	3728	;# 
   558     0E91                     RA1PPS          equ	3729	;# 
   559     0E92                     RA2PPS          equ	3730	;# 
   560     0E94                     RA4PPS          equ	3732	;# 
   561     0E95                     RA5PPS          equ	3733	;# 
   562     0EA0                     RC0PPS          equ	3744	;# 
   563     0EA1                     RC1PPS          equ	3745	;# 
   564     0EA2                     RC2PPS          equ	3746	;# 
   565     0EA3                     RC3PPS          equ	3747	;# 
   566     0EA4                     RC4PPS          equ	3748	;# 
   567     0EA5                     RC5PPS          equ	3749	;# 
   568     0F0F                     CLCDATA         equ	3855	;# 
   569     0F10                     CLC1CON         equ	3856	;# 
   570     0F11                     CLC1POL         equ	3857	;# 
   571     0F12                     CLC1SEL0        equ	3858	;# 
   572     0F13                     CLC1SEL1        equ	3859	;# 
   573     0F14                     CLC1SEL2        equ	3860	;# 
   574     0F15                     CLC1SEL3        equ	3861	;# 
   575     0F16                     CLC1GLS0        equ	3862	;# 
   576     0F17                     CLC1GLS1        equ	3863	;# 
   577     0F18                     CLC1GLS2        equ	3864	;# 
   578     0F19                     CLC1GLS3        equ	3865	;# 
   579     0F1A                     CLC2CON         equ	3866	;# 
   580     0F1B                     CLC2POL         equ	3867	;# 
   581     0F1C                     CLC2SEL0        equ	3868	;# 
   582     0F1D                     CLC2SEL1        equ	3869	;# 
   583     0F1E                     CLC2SEL2        equ	3870	;# 
   584     0F1F                     CLC2SEL3        equ	3871	;# 
   585     0F20                     CLC2GLS0        equ	3872	;# 
   586     0F21                     CLC2GLS1        equ	3873	;# 
   587     0F22                     CLC2GLS2        equ	3874	;# 
   588     0F23                     CLC2GLS3        equ	3875	;# 
   589     0F24                     CLC3CON         equ	3876	;# 
   590     0F25                     CLC3POL         equ	3877	;# 
   591     0F26                     CLC3SEL0        equ	3878	;# 
   592     0F27                     CLC3SEL1        equ	3879	;# 
   593     0F28                     CLC3SEL2        equ	3880	;# 
   594     0F29                     CLC3SEL3        equ	3881	;# 
   595     0F2A                     CLC3GLS0        equ	3882	;# 
   596     0F2B                     CLC3GLS1        equ	3883	;# 
   597     0F2C                     CLC3GLS2        equ	3884	;# 
   598     0F2D                     CLC3GLS3        equ	3885	;# 
   599     0F9E                     ICDBK0H         equ	3998	;# 
   600     0FE4                     STATUS_SHAD     equ	4068	;# 
   601     0FE5                     WREG_SHAD       equ	4069	;# 
   602     0FE6                     BSR_SHAD        equ	4070	;# 
   603     0FE7                     PCLATH_SHAD     equ	4071	;# 
   604     0FE8                     FSR0L_SHAD      equ	4072	;# 
   605     0FE9                     FSR0H_SHAD      equ	4073	;# 
   606     0FEA                     FSR1L_SHAD      equ	4074	;# 
   607     0FEB                     FSR1H_SHAD      equ	4075	;# 
   608     0FED                     STKPTR          equ	4077	;# 
   609     0FEE                     TOSL            equ	4078	;# 
   610     0FEF                     TOSH            equ	4079	;# 
   611     0000                     INDF0           equ	0	;# 
   612     0001                     INDF1           equ	1	;# 
   613     0002                     PCL             equ	2	;# 
   614     0003                     STATUS          equ	3	;# 
   615     0004                     FSR0L           equ	4	;# 
   616     0005                     FSR0H           equ	5	;# 
   617     0006                     FSR1L           equ	6	;# 
   618     0007                     FSR1H           equ	7	;# 
   619     0008                     BSR             equ	8	;# 
   620     0009                     WREG            equ	9	;# 
   621     000A                     PCLATH          equ	10	;# 
   622     000B                     INTCON          equ	11	;# 
   623     000C                     PORTA           equ	12	;# 
   624     000E                     PORTC           equ	14	;# 
   625     0011                     PIR1            equ	17	;# 
   626     0012                     PIR2            equ	18	;# 
   627     0013                     PIR3            equ	19	;# 
   628     0015                     TMR0            equ	21	;# 
   629     0016                     TMR1            equ	22	;# 
   630     0016                     TMR1L           equ	22	;# 
   631     0017                     TMR1H           equ	23	;# 
   632     0018                     T1CON           equ	24	;# 
   633     0019                     T1GCON          equ	25	;# 
   634     001A                     TMR2            equ	26	;# 
   635     001B                     PR2             equ	27	;# 
   636     001C                     T2CON           equ	28	;# 
   637     008C                     TRISA           equ	140	;# 
   638     008E                     TRISC           equ	142	;# 
   639     0091                     PIE1            equ	145	;# 
   640     0092                     PIE2            equ	146	;# 
   641     0093                     PIE3            equ	147	;# 
   642     0095                     OPTION_REG      equ	149	;# 
   643     0096                     PCON            equ	150	;# 
   644     0097                     WDTCON          equ	151	;# 
   645     0098                     OSCTUNE         equ	152	;# 
   646     0099                     OSCCON          equ	153	;# 
   647     009A                     OSCSTAT         equ	154	;# 
   648     009B                     ADRES           equ	155	;# 
   649     009B                     ADRESL          equ	155	;# 
   650     009C                     ADRESH          equ	156	;# 
   651     009D                     ADCON0          equ	157	;# 
   652     009E                     ADCON1          equ	158	;# 
   653     009F                     ADCON2          equ	159	;# 
   654     010C                     LATA            equ	268	;# 
   655     010E                     LATC            equ	270	;# 
   656     0111                     CM1CON0         equ	273	;# 
   657     0112                     CM1CON1         equ	274	;# 
   658     0113                     CM2CON0         equ	275	;# 
   659     0114                     CM2CON1         equ	276	;# 
   660     0115                     CMOUT           equ	277	;# 
   661     0116                     BORCON          equ	278	;# 
   662     0117                     FVRCON          equ	279	;# 
   663     0118                     DAC1CON0        equ	280	;# 
   664     0119                     DAC1CON1        equ	281	;# 
   665     011C                     ZCD1CON         equ	284	;# 
   666     018C                     ANSELA          equ	396	;# 
   667     018E                     ANSELC          equ	398	;# 
   668     0191                     PMADR           equ	401	;# 
   669     0191                     PMADRL          equ	401	;# 
   670     0192                     PMADRH          equ	402	;# 
   671     0193                     PMDAT           equ	403	;# 
   672     0193                     PMDATL          equ	403	;# 
   673     0194                     PMDATH          equ	404	;# 
   674     0195                     PMCON1          equ	405	;# 
   675     0196                     PMCON2          equ	406	;# 
   676     0197                     VREGCON         equ	407	;# 
   677     0199                     RC1REG          equ	409	;# 
   678     0199                     RCREG           equ	409	;# 
   679     0199                     RCREG1          equ	409	;# 
   680     019A                     TX1REG          equ	410	;# 
   681     019A                     TXREG1          equ	410	;# 
   682     019A                     TXREG           equ	410	;# 
   683     019B                     SP1BRG          equ	411	;# 
   684     019B                     SPBRG           equ	411	;# 
   685     019B                     SP1BRGL         equ	411	;# 
   686     019B                     SPBRG1          equ	411	;# 
   687     019B                     SPBRGL          equ	411	;# 
   688     019C                     SP1BRGH         equ	412	;# 
   689     019C                     SPBRGH          equ	412	;# 
   690     019C                     SPBRGH1         equ	412	;# 
   691     019D                     RC1STA          equ	413	;# 
   692     019D                     RCSTA1          equ	413	;# 
   693     019D                     RCSTA           equ	413	;# 
   694     019E                     TX1STA          equ	414	;# 
   695     019E                     TXSTA1          equ	414	;# 
   696     019E                     TXSTA           equ	414	;# 
   697     019F                     BAUD1CON        equ	415	;# 
   698     019F                     BAUDCON1        equ	415	;# 
   699     019F                     BAUDCTL1        equ	415	;# 
   700     019F                     BAUDCON         equ	415	;# 
   701     019F                     BAUDCTL         equ	415	;# 
   702     020C                     WPUA            equ	524	;# 
   703     020E                     WPUC            equ	526	;# 
   704     0211                     SSP1BUF         equ	529	;# 
   705     0211                     SSPBUF          equ	529	;# 
   706     0212                     SSP1ADD         equ	530	;# 
   707     0212                     SSPADD          equ	530	;# 
   708     0213                     SSP1MSK         equ	531	;# 
   709     0213                     SSPMSK          equ	531	;# 
   710     0214                     SSP1STAT        equ	532	;# 
   711     0214                     SSPSTAT         equ	532	;# 
   712     0215                     SSP1CON1        equ	533	;# 
   713     0215                     SSPCON          equ	533	;# 
   714     0215                     SSPCON1         equ	533	;# 
   715     0215                     SSP1CON         equ	533	;# 
   716     0216                     SSP1CON2        equ	534	;# 
   717     0216                     SSPCON2         equ	534	;# 
   718     0217                     SSP1CON3        equ	535	;# 
   719     0217                     SSPCON3         equ	535	;# 
   720     028C                     ODCONA          equ	652	;# 
   721     028E                     ODCONC          equ	654	;# 
   722     0291                     CCPR1           equ	657	;# 
   723     0291                     CCPR1L          equ	657	;# 
   724     0292                     CCPR1H          equ	658	;# 
   725     0293                     CCP1CON         equ	659	;# 
   726     0293                     ECCP1CON        equ	659	;# 
   727     0298                     CCPR2           equ	664	;# 
   728     0298                     CCPR2L          equ	664	;# 
   729     0299                     CCPR2H          equ	665	;# 
   730     029A                     CCP2CON         equ	666	;# 
   731     029A                     ECCP2CON        equ	666	;# 
   732     029E                     CCPTMRS         equ	670	;# 
   733     030C                     SLRCONA         equ	780	;# 
   734     030E                     SLRCONC         equ	782	;# 
   735     038C                     INLVLA          equ	908	;# 
   736     038E                     INLVLC          equ	910	;# 
   737     0391                     IOCAP           equ	913	;# 
   738     0392                     IOCAN           equ	914	;# 
   739     0393                     IOCAF           equ	915	;# 
   740     0397                     IOCCP           equ	919	;# 
   741     0398                     IOCCN           equ	920	;# 
   742     0399                     IOCCF           equ	921	;# 
   743     0415                     TMR4            equ	1045	;# 
   744     0416                     PR4             equ	1046	;# 
   745     0417                     T4CON           equ	1047	;# 
   746     041C                     TMR6            equ	1052	;# 
   747     041D                     PR6             equ	1053	;# 
   748     041E                     T6CON           equ	1054	;# 
   749     0511                     OPA1CON         equ	1297	;# 
   750     0515                     OPA2CON         equ	1301	;# 
   751     0617                     PWM3DCL         equ	1559	;# 
   752     0618                     PWM3DCH         equ	1560	;# 
   753     0619                     PWM3CON         equ	1561	;# 
   754     0619                     PWM3CON0        equ	1561	;# 
   755     061A                     PWM4DCL         equ	1562	;# 
   756     061B                     PWM4DCH         equ	1563	;# 
   757     061C                     PWM4CON         equ	1564	;# 
   758     061C                     PWM4CON0        equ	1564	;# 
   759     0691                     COG1PHR         equ	1681	;# 
   760     0692                     COG1PHF         equ	1682	;# 
   761     0693                     COG1BLKR        equ	1683	;# 
   762     0694                     COG1BLKF        equ	1684	;# 
   763     0695                     COG1DBR         equ	1685	;# 
   764     0696                     COG1DBF         equ	1686	;# 
   765     0697                     COG1CON0        equ	1687	;# 
   766     0698                     COG1CON1        equ	1688	;# 
   767     0699                     COG1RIS         equ	1689	;# 
   768     069A                     COG1RSIM        equ	1690	;# 
   769     069B                     COG1FIS         equ	1691	;# 
   770     069C                     COG1FSIM        equ	1692	;# 
   771     069D                     COG1ASD0        equ	1693	;# 
   772     069E                     COG1ASD1        equ	1694	;# 
   773     069F                     COG1STR         equ	1695	;# 
   774     0E0F                     PPSLOCK         equ	3599	;# 
   775     0E10                     INTPPS          equ	3600	;# 
   776     0E11                     T0CKIPPS        equ	3601	;# 
   777     0E12                     T1CKIPPS        equ	3602	;# 
   778     0E13                     T1GPPS          equ	3603	;# 
   779     0E14                     CCP1PPS         equ	3604	;# 
   780     0E15                     CCP2PPS         equ	3605	;# 
   781     0E17                     COGINPPS        equ	3607	;# 
   782     0E20                     SSPCLKPPS       equ	3616	;# 
   783     0E21                     SSPDATPPS       equ	3617	;# 
   784     0E22                     SSPSSPPS        equ	3618	;# 
   785     0E24                     RXPPS           equ	3620	;# 
   786     0E25                     CKPPS           equ	3621	;# 
   787     0E28                     CLCIN0PPS       equ	3624	;# 
   788     0E29                     CLCIN1PPS       equ	3625	;# 
   789     0E2A                     CLCIN2PPS       equ	3626	;# 
   790     0E2B                     CLCIN3PPS       equ	3627	;# 
   791     0E90                     RA0PPS          equ	3728	;# 
   792     0E91                     RA1PPS          equ	3729	;# 
   793     0E92                     RA2PPS          equ	3730	;# 
   794     0E94                     RA4PPS          equ	3732	;# 
   795     0E95                     RA5PPS          equ	3733	;# 
   796     0EA0                     RC0PPS          equ	3744	;# 
   797     0EA1                     RC1PPS          equ	3745	;# 
   798     0EA2                     RC2PPS          equ	3746	;# 
   799     0EA3                     RC3PPS          equ	3747	;# 
   800     0EA4                     RC4PPS          equ	3748	;# 
   801     0EA5                     RC5PPS          equ	3749	;# 
   802     0F0F                     CLCDATA         equ	3855	;# 
   803     0F10                     CLC1CON         equ	3856	;# 
   804     0F11                     CLC1POL         equ	3857	;# 
   805     0F12                     CLC1SEL0        equ	3858	;# 
   806     0F13                     CLC1SEL1        equ	3859	;# 
   807     0F14                     CLC1SEL2        equ	3860	;# 
   808     0F15                     CLC1SEL3        equ	3861	;# 
   809     0F16                     CLC1GLS0        equ	3862	;# 
   810     0F17                     CLC1GLS1        equ	3863	;# 
   811     0F18                     CLC1GLS2        equ	3864	;# 
   812     0F19                     CLC1GLS3        equ	3865	;# 
   813     0F1A                     CLC2CON         equ	3866	;# 
   814     0F1B                     CLC2POL         equ	3867	;# 
   815     0F1C                     CLC2SEL0        equ	3868	;# 
   816     0F1D                     CLC2SEL1        equ	3869	;# 
   817     0F1E                     CLC2SEL2        equ	3870	;# 
   818     0F1F                     CLC2SEL3        equ	3871	;# 
   819     0F20                     CLC2GLS0        equ	3872	;# 
   820     0F21                     CLC2GLS1        equ	3873	;# 
   821     0F22                     CLC2GLS2        equ	3874	;# 
   822     0F23                     CLC2GLS3        equ	3875	;# 
   823     0F24                     CLC3CON         equ	3876	;# 
   824     0F25                     CLC3POL         equ	3877	;# 
   825     0F26                     CLC3SEL0        equ	3878	;# 
   826     0F27                     CLC3SEL1        equ	3879	;# 
   827     0F28                     CLC3SEL2        equ	3880	;# 
   828     0F29                     CLC3SEL3        equ	3881	;# 
   829     0F2A                     CLC3GLS0        equ	3882	;# 
   830     0F2B                     CLC3GLS1        equ	3883	;# 
   831     0F2C                     CLC3GLS2        equ	3884	;# 
   832     0F2D                     CLC3GLS3        equ	3885	;# 
   833     0F9E                     ICDBK0H         equ	3998	;# 
   834     0FE4                     STATUS_SHAD     equ	4068	;# 
   835     0FE5                     WREG_SHAD       equ	4069	;# 
   836     0FE6                     BSR_SHAD        equ	4070	;# 
   837     0FE7                     PCLATH_SHAD     equ	4071	;# 
   838     0FE8                     FSR0L_SHAD      equ	4072	;# 
   839     0FE9                     FSR0H_SHAD      equ	4073	;# 
   840     0FEA                     FSR1L_SHAD      equ	4074	;# 
   841     0FEB                     FSR1H_SHAD      equ	4075	;# 
   842     0FED                     STKPTR          equ	4077	;# 
   843     0FEE                     TOSL            equ	4078	;# 
   844     0FEF                     TOSH            equ	4079	;# 
   845     0000                     INDF0           equ	0	;# 
   846     0001                     INDF1           equ	1	;# 
   847     0002                     PCL             equ	2	;# 
   848     0003                     STATUS          equ	3	;# 
   849     0004                     FSR0L           equ	4	;# 
   850     0005                     FSR0H           equ	5	;# 
   851     0006                     FSR1L           equ	6	;# 
   852     0007                     FSR1H           equ	7	;# 
   853     0008                     BSR             equ	8	;# 
   854     0009                     WREG            equ	9	;# 
   855     000A                     PCLATH          equ	10	;# 
   856     000B                     INTCON          equ	11	;# 
   857     000C                     PORTA           equ	12	;# 
   858     000E                     PORTC           equ	14	;# 
   859     0011                     PIR1            equ	17	;# 
   860     0012                     PIR2            equ	18	;# 
   861     0013                     PIR3            equ	19	;# 
   862     0015                     TMR0            equ	21	;# 
   863     0016                     TMR1            equ	22	;# 
   864     0016                     TMR1L           equ	22	;# 
   865     0017                     TMR1H           equ	23	;# 
   866     0018                     T1CON           equ	24	;# 
   867     0019                     T1GCON          equ	25	;# 
   868     001A                     TMR2            equ	26	;# 
   869     001B                     PR2             equ	27	;# 
   870     001C                     T2CON           equ	28	;# 
   871     008C                     TRISA           equ	140	;# 
   872     008E                     TRISC           equ	142	;# 
   873     0091                     PIE1            equ	145	;# 
   874     0092                     PIE2            equ	146	;# 
   875     0093                     PIE3            equ	147	;# 
   876     0095                     OPTION_REG      equ	149	;# 
   877     0096                     PCON            equ	150	;# 
   878     0097                     WDTCON          equ	151	;# 
   879     0098                     OSCTUNE         equ	152	;# 
   880     0099                     OSCCON          equ	153	;# 
   881     009A                     OSCSTAT         equ	154	;# 
   882     009B                     ADRES           equ	155	;# 
   883     009B                     ADRESL          equ	155	;# 
   884     009C                     ADRESH          equ	156	;# 
   885     009D                     ADCON0          equ	157	;# 
   886     009E                     ADCON1          equ	158	;# 
   887     009F                     ADCON2          equ	159	;# 
   888     010C                     LATA            equ	268	;# 
   889     010E                     LATC            equ	270	;# 
   890     0111                     CM1CON0         equ	273	;# 
   891     0112                     CM1CON1         equ	274	;# 
   892     0113                     CM2CON0         equ	275	;# 
   893     0114                     CM2CON1         equ	276	;# 
   894     0115                     CMOUT           equ	277	;# 
   895     0116                     BORCON          equ	278	;# 
   896     0117                     FVRCON          equ	279	;# 
   897     0118                     DAC1CON0        equ	280	;# 
   898     0119                     DAC1CON1        equ	281	;# 
   899     011C                     ZCD1CON         equ	284	;# 
   900     018C                     ANSELA          equ	396	;# 
   901     018E                     ANSELC          equ	398	;# 
   902     0191                     PMADR           equ	401	;# 
   903     0191                     PMADRL          equ	401	;# 
   904     0192                     PMADRH          equ	402	;# 
   905     0193                     PMDAT           equ	403	;# 
   906     0193                     PMDATL          equ	403	;# 
   907     0194                     PMDATH          equ	404	;# 
   908     0195                     PMCON1          equ	405	;# 
   909     0196                     PMCON2          equ	406	;# 
   910     0197                     VREGCON         equ	407	;# 
   911     0199                     RC1REG          equ	409	;# 
   912     0199                     RCREG           equ	409	;# 
   913     0199                     RCREG1          equ	409	;# 
   914     019A                     TX1REG          equ	410	;# 
   915     019A                     TXREG1          equ	410	;# 
   916     019A                     TXREG           equ	410	;# 
   917     019B                     SP1BRG          equ	411	;# 
   918     019B                     SPBRG           equ	411	;# 
   919     019B                     SP1BRGL         equ	411	;# 
   920     019B                     SPBRG1          equ	411	;# 
   921     019B                     SPBRGL          equ	411	;# 
   922     019C                     SP1BRGH         equ	412	;# 
   923     019C                     SPBRGH          equ	412	;# 
   924     019C                     SPBRGH1         equ	412	;# 
   925     019D                     RC1STA          equ	413	;# 
   926     019D                     RCSTA1          equ	413	;# 
   927     019D                     RCSTA           equ	413	;# 
   928     019E                     TX1STA          equ	414	;# 
   929     019E                     TXSTA1          equ	414	;# 
   930     019E                     TXSTA           equ	414	;# 
   931     019F                     BAUD1CON        equ	415	;# 
   932     019F                     BAUDCON1        equ	415	;# 
   933     019F                     BAUDCTL1        equ	415	;# 
   934     019F                     BAUDCON         equ	415	;# 
   935     019F                     BAUDCTL         equ	415	;# 
   936     020C                     WPUA            equ	524	;# 
   937     020E                     WPUC            equ	526	;# 
   938     0211                     SSP1BUF         equ	529	;# 
   939     0211                     SSPBUF          equ	529	;# 
   940     0212                     SSP1ADD         equ	530	;# 
   941     0212                     SSPADD          equ	530	;# 
   942     0213                     SSP1MSK         equ	531	;# 
   943     0213                     SSPMSK          equ	531	;# 
   944     0214                     SSP1STAT        equ	532	;# 
   945     0214                     SSPSTAT         equ	532	;# 
   946     0215                     SSP1CON1        equ	533	;# 
   947     0215                     SSPCON          equ	533	;# 
   948     0215                     SSPCON1         equ	533	;# 
   949     0215                     SSP1CON         equ	533	;# 
   950     0216                     SSP1CON2        equ	534	;# 
   951     0216                     SSPCON2         equ	534	;# 
   952     0217                     SSP1CON3        equ	535	;# 
   953     0217                     SSPCON3         equ	535	;# 
   954     028C                     ODCONA          equ	652	;# 
   955     028E                     ODCONC          equ	654	;# 
   956     0291                     CCPR1           equ	657	;# 
   957     0291                     CCPR1L          equ	657	;# 
   958     0292                     CCPR1H          equ	658	;# 
   959     0293                     CCP1CON         equ	659	;# 
   960     0293                     ECCP1CON        equ	659	;# 
   961     0298                     CCPR2           equ	664	;# 
   962     0298                     CCPR2L          equ	664	;# 
   963     0299                     CCPR2H          equ	665	;# 
   964     029A                     CCP2CON         equ	666	;# 
   965     029A                     ECCP2CON        equ	666	;# 
   966     029E                     CCPTMRS         equ	670	;# 
   967     030C                     SLRCONA         equ	780	;# 
   968     030E                     SLRCONC         equ	782	;# 
   969     038C                     INLVLA          equ	908	;# 
   970     038E                     INLVLC          equ	910	;# 
   971     0391                     IOCAP           equ	913	;# 
   972     0392                     IOCAN           equ	914	;# 
   973     0393                     IOCAF           equ	915	;# 
   974     0397                     IOCCP           equ	919	;# 
   975     0398                     IOCCN           equ	920	;# 
   976     0399                     IOCCF           equ	921	;# 
   977     0415                     TMR4            equ	1045	;# 
   978     0416                     PR4             equ	1046	;# 
   979     0417                     T4CON           equ	1047	;# 
   980     041C                     TMR6            equ	1052	;# 
   981     041D                     PR6             equ	1053	;# 
   982     041E                     T6CON           equ	1054	;# 
   983     0511                     OPA1CON         equ	1297	;# 
   984     0515                     OPA2CON         equ	1301	;# 
   985     0617                     PWM3DCL         equ	1559	;# 
   986     0618                     PWM3DCH         equ	1560	;# 
   987     0619                     PWM3CON         equ	1561	;# 
   988     0619                     PWM3CON0        equ	1561	;# 
   989     061A                     PWM4DCL         equ	1562	;# 
   990     061B                     PWM4DCH         equ	1563	;# 
   991     061C                     PWM4CON         equ	1564	;# 
   992     061C                     PWM4CON0        equ	1564	;# 
   993     0691                     COG1PHR         equ	1681	;# 
   994     0692                     COG1PHF         equ	1682	;# 
   995     0693                     COG1BLKR        equ	1683	;# 
   996     0694                     COG1BLKF        equ	1684	;# 
   997     0695                     COG1DBR         equ	1685	;# 
   998     0696                     COG1DBF         equ	1686	;# 
   999     0697                     COG1CON0        equ	1687	;# 
  1000     0698                     COG1CON1        equ	1688	;# 
  1001     0699                     COG1RIS         equ	1689	;# 
  1002     069A                     COG1RSIM        equ	1690	;# 
  1003     069B                     COG1FIS         equ	1691	;# 
  1004     069C                     COG1FSIM        equ	1692	;# 
  1005     069D                     COG1ASD0        equ	1693	;# 
  1006     069E                     COG1ASD1        equ	1694	;# 
  1007     069F                     COG1STR         equ	1695	;# 
  1008     0E0F                     PPSLOCK         equ	3599	;# 
  1009     0E10                     INTPPS          equ	3600	;# 
  1010     0E11                     T0CKIPPS        equ	3601	;# 
  1011     0E12                     T1CKIPPS        equ	3602	;# 
  1012     0E13                     T1GPPS          equ	3603	;# 
  1013     0E14                     CCP1PPS         equ	3604	;# 
  1014     0E15                     CCP2PPS         equ	3605	;# 
  1015     0E17                     COGINPPS        equ	3607	;# 
  1016     0E20                     SSPCLKPPS       equ	3616	;# 
  1017     0E21                     SSPDATPPS       equ	3617	;# 
  1018     0E22                     SSPSSPPS        equ	3618	;# 
  1019     0E24                     RXPPS           equ	3620	;# 
  1020     0E25                     CKPPS           equ	3621	;# 
  1021     0E28                     CLCIN0PPS       equ	3624	;# 
  1022     0E29                     CLCIN1PPS       equ	3625	;# 
  1023     0E2A                     CLCIN2PPS       equ	3626	;# 
  1024     0E2B                     CLCIN3PPS       equ	3627	;# 
  1025     0E90                     RA0PPS          equ	3728	;# 
  1026     0E91                     RA1PPS          equ	3729	;# 
  1027     0E92                     RA2PPS          equ	3730	;# 
  1028     0E94                     RA4PPS          equ	3732	;# 
  1029     0E95                     RA5PPS          equ	3733	;# 
  1030     0EA0                     RC0PPS          equ	3744	;# 
  1031     0EA1                     RC1PPS          equ	3745	;# 
  1032     0EA2                     RC2PPS          equ	3746	;# 
  1033     0EA3                     RC3PPS          equ	3747	;# 
  1034     0EA4                     RC4PPS          equ	3748	;# 
  1035     0EA5                     RC5PPS          equ	3749	;# 
  1036     0F0F                     CLCDATA         equ	3855	;# 
  1037     0F10                     CLC1CON         equ	3856	;# 
  1038     0F11                     CLC1POL         equ	3857	;# 
  1039     0F12                     CLC1SEL0        equ	3858	;# 
  1040     0F13                     CLC1SEL1        equ	3859	;# 
  1041     0F14                     CLC1SEL2        equ	3860	;# 
  1042     0F15                     CLC1SEL3        equ	3861	;# 
  1043     0F16                     CLC1GLS0        equ	3862	;# 
  1044     0F17                     CLC1GLS1        equ	3863	;# 
  1045     0F18                     CLC1GLS2        equ	3864	;# 
  1046     0F19                     CLC1GLS3        equ	3865	;# 
  1047     0F1A                     CLC2CON         equ	3866	;# 
  1048     0F1B                     CLC2POL         equ	3867	;# 
  1049     0F1C                     CLC2SEL0        equ	3868	;# 
  1050     0F1D                     CLC2SEL1        equ	3869	;# 
  1051     0F1E                     CLC2SEL2        equ	3870	;# 
  1052     0F1F                     CLC2SEL3        equ	3871	;# 
  1053     0F20                     CLC2GLS0        equ	3872	;# 
  1054     0F21                     CLC2GLS1        equ	3873	;# 
  1055     0F22                     CLC2GLS2        equ	3874	;# 
  1056     0F23                     CLC2GLS3        equ	3875	;# 
  1057     0F24                     CLC3CON         equ	3876	;# 
  1058     0F25                     CLC3POL         equ	3877	;# 
  1059     0F26                     CLC3SEL0        equ	3878	;# 
  1060     0F27                     CLC3SEL1        equ	3879	;# 
  1061     0F28                     CLC3SEL2        equ	3880	;# 
  1062     0F29                     CLC3SEL3        equ	3881	;# 
  1063     0F2A                     CLC3GLS0        equ	3882	;# 
  1064     0F2B                     CLC3GLS1        equ	3883	;# 
  1065     0F2C                     CLC3GLS2        equ	3884	;# 
  1066     0F2D                     CLC3GLS3        equ	3885	;# 
  1067     0F9E                     ICDBK0H         equ	3998	;# 
  1068     0FE4                     STATUS_SHAD     equ	4068	;# 
  1069     0FE5                     WREG_SHAD       equ	4069	;# 
  1070     0FE6                     BSR_SHAD        equ	4070	;# 
  1071     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1072     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1073     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1074     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1075     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1076     0FED                     STKPTR          equ	4077	;# 
  1077     0FEE                     TOSL            equ	4078	;# 
  1078     0FEF                     TOSH            equ	4079	;# 
  1079     0000                     INDF0           equ	0	;# 
  1080     0001                     INDF1           equ	1	;# 
  1081     0002                     PCL             equ	2	;# 
  1082     0003                     STATUS          equ	3	;# 
  1083     0004                     FSR0L           equ	4	;# 
  1084     0005                     FSR0H           equ	5	;# 
  1085     0006                     FSR1L           equ	6	;# 
  1086     0007                     FSR1H           equ	7	;# 
  1087     0008                     BSR             equ	8	;# 
  1088     0009                     WREG            equ	9	;# 
  1089     000A                     PCLATH          equ	10	;# 
  1090     000B                     INTCON          equ	11	;# 
  1091     000C                     PORTA           equ	12	;# 
  1092     000E                     PORTC           equ	14	;# 
  1093     0011                     PIR1            equ	17	;# 
  1094     0012                     PIR2            equ	18	;# 
  1095     0013                     PIR3            equ	19	;# 
  1096     0015                     TMR0            equ	21	;# 
  1097     0016                     TMR1            equ	22	;# 
  1098     0016                     TMR1L           equ	22	;# 
  1099     0017                     TMR1H           equ	23	;# 
  1100     0018                     T1CON           equ	24	;# 
  1101     0019                     T1GCON          equ	25	;# 
  1102     001A                     TMR2            equ	26	;# 
  1103     001B                     PR2             equ	27	;# 
  1104     001C                     T2CON           equ	28	;# 
  1105     008C                     TRISA           equ	140	;# 
  1106     008E                     TRISC           equ	142	;# 
  1107     0091                     PIE1            equ	145	;# 
  1108     0092                     PIE2            equ	146	;# 
  1109     0093                     PIE3            equ	147	;# 
  1110     0095                     OPTION_REG      equ	149	;# 
  1111     0096                     PCON            equ	150	;# 
  1112     0097                     WDTCON          equ	151	;# 
  1113     0098                     OSCTUNE         equ	152	;# 
  1114     0099                     OSCCON          equ	153	;# 
  1115     009A                     OSCSTAT         equ	154	;# 
  1116     009B                     ADRES           equ	155	;# 
  1117     009B                     ADRESL          equ	155	;# 
  1118     009C                     ADRESH          equ	156	;# 
  1119     009D                     ADCON0          equ	157	;# 
  1120     009E                     ADCON1          equ	158	;# 
  1121     009F                     ADCON2          equ	159	;# 
  1122     010C                     LATA            equ	268	;# 
  1123     010E                     LATC            equ	270	;# 
  1124     0111                     CM1CON0         equ	273	;# 
  1125     0112                     CM1CON1         equ	274	;# 
  1126     0113                     CM2CON0         equ	275	;# 
  1127     0114                     CM2CON1         equ	276	;# 
  1128     0115                     CMOUT           equ	277	;# 
  1129     0116                     BORCON          equ	278	;# 
  1130     0117                     FVRCON          equ	279	;# 
  1131     0118                     DAC1CON0        equ	280	;# 
  1132     0119                     DAC1CON1        equ	281	;# 
  1133     011C                     ZCD1CON         equ	284	;# 
  1134     018C                     ANSELA          equ	396	;# 
  1135     018E                     ANSELC          equ	398	;# 
  1136     0191                     PMADR           equ	401	;# 
  1137     0191                     PMADRL          equ	401	;# 
  1138     0192                     PMADRH          equ	402	;# 
  1139     0193                     PMDAT           equ	403	;# 
  1140     0193                     PMDATL          equ	403	;# 
  1141     0194                     PMDATH          equ	404	;# 
  1142     0195                     PMCON1          equ	405	;# 
  1143     0196                     PMCON2          equ	406	;# 
  1144     0197                     VREGCON         equ	407	;# 
  1145     0199                     RC1REG          equ	409	;# 
  1146     0199                     RCREG           equ	409	;# 
  1147     0199                     RCREG1          equ	409	;# 
  1148     019A                     TX1REG          equ	410	;# 
  1149     019A                     TXREG1          equ	410	;# 
  1150     019A                     TXREG           equ	410	;# 
  1151     019B                     SP1BRG          equ	411	;# 
  1152     019B                     SPBRG           equ	411	;# 
  1153     019B                     SP1BRGL         equ	411	;# 
  1154     019B                     SPBRG1          equ	411	;# 
  1155     019B                     SPBRGL          equ	411	;# 
  1156     019C                     SP1BRGH         equ	412	;# 
  1157     019C                     SPBRGH          equ	412	;# 
  1158     019C                     SPBRGH1         equ	412	;# 
  1159     019D                     RC1STA          equ	413	;# 
  1160     019D                     RCSTA1          equ	413	;# 
  1161     019D                     RCSTA           equ	413	;# 
  1162     019E                     TX1STA          equ	414	;# 
  1163     019E                     TXSTA1          equ	414	;# 
  1164     019E                     TXSTA           equ	414	;# 
  1165     019F                     BAUD1CON        equ	415	;# 
  1166     019F                     BAUDCON1        equ	415	;# 
  1167     019F                     BAUDCTL1        equ	415	;# 
  1168     019F                     BAUDCON         equ	415	;# 
  1169     019F                     BAUDCTL         equ	415	;# 
  1170     020C                     WPUA            equ	524	;# 
  1171     020E                     WPUC            equ	526	;# 
  1172     0211                     SSP1BUF         equ	529	;# 
  1173     0211                     SSPBUF          equ	529	;# 
  1174     0212                     SSP1ADD         equ	530	;# 
  1175     0212                     SSPADD          equ	530	;# 
  1176     0213                     SSP1MSK         equ	531	;# 
  1177     0213                     SSPMSK          equ	531	;# 
  1178     0214                     SSP1STAT        equ	532	;# 
  1179     0214                     SSPSTAT         equ	532	;# 
  1180     0215                     SSP1CON1        equ	533	;# 
  1181     0215                     SSPCON          equ	533	;# 
  1182     0215                     SSPCON1         equ	533	;# 
  1183     0215                     SSP1CON         equ	533	;# 
  1184     0216                     SSP1CON2        equ	534	;# 
  1185     0216                     SSPCON2         equ	534	;# 
  1186     0217                     SSP1CON3        equ	535	;# 
  1187     0217                     SSPCON3         equ	535	;# 
  1188     028C                     ODCONA          equ	652	;# 
  1189     028E                     ODCONC          equ	654	;# 
  1190     0291                     CCPR1           equ	657	;# 
  1191     0291                     CCPR1L          equ	657	;# 
  1192     0292                     CCPR1H          equ	658	;# 
  1193     0293                     CCP1CON         equ	659	;# 
  1194     0293                     ECCP1CON        equ	659	;# 
  1195     0298                     CCPR2           equ	664	;# 
  1196     0298                     CCPR2L          equ	664	;# 
  1197     0299                     CCPR2H          equ	665	;# 
  1198     029A                     CCP2CON         equ	666	;# 
  1199     029A                     ECCP2CON        equ	666	;# 
  1200     029E                     CCPTMRS         equ	670	;# 
  1201     030C                     SLRCONA         equ	780	;# 
  1202     030E                     SLRCONC         equ	782	;# 
  1203     038C                     INLVLA          equ	908	;# 
  1204     038E                     INLVLC          equ	910	;# 
  1205     0391                     IOCAP           equ	913	;# 
  1206     0392                     IOCAN           equ	914	;# 
  1207     0393                     IOCAF           equ	915	;# 
  1208     0397                     IOCCP           equ	919	;# 
  1209     0398                     IOCCN           equ	920	;# 
  1210     0399                     IOCCF           equ	921	;# 
  1211     0415                     TMR4            equ	1045	;# 
  1212     0416                     PR4             equ	1046	;# 
  1213     0417                     T4CON           equ	1047	;# 
  1214     041C                     TMR6            equ	1052	;# 
  1215     041D                     PR6             equ	1053	;# 
  1216     041E                     T6CON           equ	1054	;# 
  1217     0511                     OPA1CON         equ	1297	;# 
  1218     0515                     OPA2CON         equ	1301	;# 
  1219     0617                     PWM3DCL         equ	1559	;# 
  1220     0618                     PWM3DCH         equ	1560	;# 
  1221     0619                     PWM3CON         equ	1561	;# 
  1222     0619                     PWM3CON0        equ	1561	;# 
  1223     061A                     PWM4DCL         equ	1562	;# 
  1224     061B                     PWM4DCH         equ	1563	;# 
  1225     061C                     PWM4CON         equ	1564	;# 
  1226     061C                     PWM4CON0        equ	1564	;# 
  1227     0691                     COG1PHR         equ	1681	;# 
  1228     0692                     COG1PHF         equ	1682	;# 
  1229     0693                     COG1BLKR        equ	1683	;# 
  1230     0694                     COG1BLKF        equ	1684	;# 
  1231     0695                     COG1DBR         equ	1685	;# 
  1232     0696                     COG1DBF         equ	1686	;# 
  1233     0697                     COG1CON0        equ	1687	;# 
  1234     0698                     COG1CON1        equ	1688	;# 
  1235     0699                     COG1RIS         equ	1689	;# 
  1236     069A                     COG1RSIM        equ	1690	;# 
  1237     069B                     COG1FIS         equ	1691	;# 
  1238     069C                     COG1FSIM        equ	1692	;# 
  1239     069D                     COG1ASD0        equ	1693	;# 
  1240     069E                     COG1ASD1        equ	1694	;# 
  1241     069F                     COG1STR         equ	1695	;# 
  1242     0E0F                     PPSLOCK         equ	3599	;# 
  1243     0E10                     INTPPS          equ	3600	;# 
  1244     0E11                     T0CKIPPS        equ	3601	;# 
  1245     0E12                     T1CKIPPS        equ	3602	;# 
  1246     0E13                     T1GPPS          equ	3603	;# 
  1247     0E14                     CCP1PPS         equ	3604	;# 
  1248     0E15                     CCP2PPS         equ	3605	;# 
  1249     0E17                     COGINPPS        equ	3607	;# 
  1250     0E20                     SSPCLKPPS       equ	3616	;# 
  1251     0E21                     SSPDATPPS       equ	3617	;# 
  1252     0E22                     SSPSSPPS        equ	3618	;# 
  1253     0E24                     RXPPS           equ	3620	;# 
  1254     0E25                     CKPPS           equ	3621	;# 
  1255     0E28                     CLCIN0PPS       equ	3624	;# 
  1256     0E29                     CLCIN1PPS       equ	3625	;# 
  1257     0E2A                     CLCIN2PPS       equ	3626	;# 
  1258     0E2B                     CLCIN3PPS       equ	3627	;# 
  1259     0E90                     RA0PPS          equ	3728	;# 
  1260     0E91                     RA1PPS          equ	3729	;# 
  1261     0E92                     RA2PPS          equ	3730	;# 
  1262     0E94                     RA4PPS          equ	3732	;# 
  1263     0E95                     RA5PPS          equ	3733	;# 
  1264     0EA0                     RC0PPS          equ	3744	;# 
  1265     0EA1                     RC1PPS          equ	3745	;# 
  1266     0EA2                     RC2PPS          equ	3746	;# 
  1267     0EA3                     RC3PPS          equ	3747	;# 
  1268     0EA4                     RC4PPS          equ	3748	;# 
  1269     0EA5                     RC5PPS          equ	3749	;# 
  1270     0F0F                     CLCDATA         equ	3855	;# 
  1271     0F10                     CLC1CON         equ	3856	;# 
  1272     0F11                     CLC1POL         equ	3857	;# 
  1273     0F12                     CLC1SEL0        equ	3858	;# 
  1274     0F13                     CLC1SEL1        equ	3859	;# 
  1275     0F14                     CLC1SEL2        equ	3860	;# 
  1276     0F15                     CLC1SEL3        equ	3861	;# 
  1277     0F16                     CLC1GLS0        equ	3862	;# 
  1278     0F17                     CLC1GLS1        equ	3863	;# 
  1279     0F18                     CLC1GLS2        equ	3864	;# 
  1280     0F19                     CLC1GLS3        equ	3865	;# 
  1281     0F1A                     CLC2CON         equ	3866	;# 
  1282     0F1B                     CLC2POL         equ	3867	;# 
  1283     0F1C                     CLC2SEL0        equ	3868	;# 
  1284     0F1D                     CLC2SEL1        equ	3869	;# 
  1285     0F1E                     CLC2SEL2        equ	3870	;# 
  1286     0F1F                     CLC2SEL3        equ	3871	;# 
  1287     0F20                     CLC2GLS0        equ	3872	;# 
  1288     0F21                     CLC2GLS1        equ	3873	;# 
  1289     0F22                     CLC2GLS2        equ	3874	;# 
  1290     0F23                     CLC2GLS3        equ	3875	;# 
  1291     0F24                     CLC3CON         equ	3876	;# 
  1292     0F25                     CLC3POL         equ	3877	;# 
  1293     0F26                     CLC3SEL0        equ	3878	;# 
  1294     0F27                     CLC3SEL1        equ	3879	;# 
  1295     0F28                     CLC3SEL2        equ	3880	;# 
  1296     0F29                     CLC3SEL3        equ	3881	;# 
  1297     0F2A                     CLC3GLS0        equ	3882	;# 
  1298     0F2B                     CLC3GLS1        equ	3883	;# 
  1299     0F2C                     CLC3GLS2        equ	3884	;# 
  1300     0F2D                     CLC3GLS3        equ	3885	;# 
  1301     0F9E                     ICDBK0H         equ	3998	;# 
  1302     0FE4                     STATUS_SHAD     equ	4068	;# 
  1303     0FE5                     WREG_SHAD       equ	4069	;# 
  1304     0FE6                     BSR_SHAD        equ	4070	;# 
  1305     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1306     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1307     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1308     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1309     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1310     0FED                     STKPTR          equ	4077	;# 
  1311     0FEE                     TOSL            equ	4078	;# 
  1312     0FEF                     TOSH            equ	4079	;# 
  1313     0000                     INDF0           equ	0	;# 
  1314     0001                     INDF1           equ	1	;# 
  1315     0002                     PCL             equ	2	;# 
  1316     0003                     STATUS          equ	3	;# 
  1317     0004                     FSR0L           equ	4	;# 
  1318     0005                     FSR0H           equ	5	;# 
  1319     0006                     FSR1L           equ	6	;# 
  1320     0007                     FSR1H           equ	7	;# 
  1321     0008                     BSR             equ	8	;# 
  1322     0009                     WREG            equ	9	;# 
  1323     000A                     PCLATH          equ	10	;# 
  1324     000B                     INTCON          equ	11	;# 
  1325     000C                     PORTA           equ	12	;# 
  1326     000E                     PORTC           equ	14	;# 
  1327     0011                     PIR1            equ	17	;# 
  1328     0012                     PIR2            equ	18	;# 
  1329     0013                     PIR3            equ	19	;# 
  1330     0015                     TMR0            equ	21	;# 
  1331     0016                     TMR1            equ	22	;# 
  1332     0016                     TMR1L           equ	22	;# 
  1333     0017                     TMR1H           equ	23	;# 
  1334     0018                     T1CON           equ	24	;# 
  1335     0019                     T1GCON          equ	25	;# 
  1336     001A                     TMR2            equ	26	;# 
  1337     001B                     PR2             equ	27	;# 
  1338     001C                     T2CON           equ	28	;# 
  1339     008C                     TRISA           equ	140	;# 
  1340     008E                     TRISC           equ	142	;# 
  1341     0091                     PIE1            equ	145	;# 
  1342     0092                     PIE2            equ	146	;# 
  1343     0093                     PIE3            equ	147	;# 
  1344     0095                     OPTION_REG      equ	149	;# 
  1345     0096                     PCON            equ	150	;# 
  1346     0097                     WDTCON          equ	151	;# 
  1347     0098                     OSCTUNE         equ	152	;# 
  1348     0099                     OSCCON          equ	153	;# 
  1349     009A                     OSCSTAT         equ	154	;# 
  1350     009B                     ADRES           equ	155	;# 
  1351     009B                     ADRESL          equ	155	;# 
  1352     009C                     ADRESH          equ	156	;# 
  1353     009D                     ADCON0          equ	157	;# 
  1354     009E                     ADCON1          equ	158	;# 
  1355     009F                     ADCON2          equ	159	;# 
  1356     010C                     LATA            equ	268	;# 
  1357     010E                     LATC            equ	270	;# 
  1358     0111                     CM1CON0         equ	273	;# 
  1359     0112                     CM1CON1         equ	274	;# 
  1360     0113                     CM2CON0         equ	275	;# 
  1361     0114                     CM2CON1         equ	276	;# 
  1362     0115                     CMOUT           equ	277	;# 
  1363     0116                     BORCON          equ	278	;# 
  1364     0117                     FVRCON          equ	279	;# 
  1365     0118                     DAC1CON0        equ	280	;# 
  1366     0119                     DAC1CON1        equ	281	;# 
  1367     011C                     ZCD1CON         equ	284	;# 
  1368     018C                     ANSELA          equ	396	;# 
  1369     018E                     ANSELC          equ	398	;# 
  1370     0191                     PMADR           equ	401	;# 
  1371     0191                     PMADRL          equ	401	;# 
  1372     0192                     PMADRH          equ	402	;# 
  1373     0193                     PMDAT           equ	403	;# 
  1374     0193                     PMDATL          equ	403	;# 
  1375     0194                     PMDATH          equ	404	;# 
  1376     0195                     PMCON1          equ	405	;# 
  1377     0196                     PMCON2          equ	406	;# 
  1378     0197                     VREGCON         equ	407	;# 
  1379     0199                     RC1REG          equ	409	;# 
  1380     0199                     RCREG           equ	409	;# 
  1381     0199                     RCREG1          equ	409	;# 
  1382     019A                     TX1REG          equ	410	;# 
  1383     019A                     TXREG1          equ	410	;# 
  1384     019A                     TXREG           equ	410	;# 
  1385     019B                     SP1BRG          equ	411	;# 
  1386     019B                     SPBRG           equ	411	;# 
  1387     019B                     SP1BRGL         equ	411	;# 
  1388     019B                     SPBRG1          equ	411	;# 
  1389     019B                     SPBRGL          equ	411	;# 
  1390     019C                     SP1BRGH         equ	412	;# 
  1391     019C                     SPBRGH          equ	412	;# 
  1392     019C                     SPBRGH1         equ	412	;# 
  1393     019D                     RC1STA          equ	413	;# 
  1394     019D                     RCSTA1          equ	413	;# 
  1395     019D                     RCSTA           equ	413	;# 
  1396     019E                     TX1STA          equ	414	;# 
  1397     019E                     TXSTA1          equ	414	;# 
  1398     019E                     TXSTA           equ	414	;# 
  1399     019F                     BAUD1CON        equ	415	;# 
  1400     019F                     BAUDCON1        equ	415	;# 
  1401     019F                     BAUDCTL1        equ	415	;# 
  1402     019F                     BAUDCON         equ	415	;# 
  1403     019F                     BAUDCTL         equ	415	;# 
  1404     020C                     WPUA            equ	524	;# 
  1405     020E                     WPUC            equ	526	;# 
  1406     0211                     SSP1BUF         equ	529	;# 
  1407     0211                     SSPBUF          equ	529	;# 
  1408     0212                     SSP1ADD         equ	530	;# 
  1409     0212                     SSPADD          equ	530	;# 
  1410     0213                     SSP1MSK         equ	531	;# 
  1411     0213                     SSPMSK          equ	531	;# 
  1412     0214                     SSP1STAT        equ	532	;# 
  1413     0214                     SSPSTAT         equ	532	;# 
  1414     0215                     SSP1CON1        equ	533	;# 
  1415     0215                     SSPCON          equ	533	;# 
  1416     0215                     SSPCON1         equ	533	;# 
  1417     0215                     SSP1CON         equ	533	;# 
  1418     0216                     SSP1CON2        equ	534	;# 
  1419     0216                     SSPCON2         equ	534	;# 
  1420     0217                     SSP1CON3        equ	535	;# 
  1421     0217                     SSPCON3         equ	535	;# 
  1422     028C                     ODCONA          equ	652	;# 
  1423     028E                     ODCONC          equ	654	;# 
  1424     0291                     CCPR1           equ	657	;# 
  1425     0291                     CCPR1L          equ	657	;# 
  1426     0292                     CCPR1H          equ	658	;# 
  1427     0293                     CCP1CON         equ	659	;# 
  1428     0293                     ECCP1CON        equ	659	;# 
  1429     0298                     CCPR2           equ	664	;# 
  1430     0298                     CCPR2L          equ	664	;# 
  1431     0299                     CCPR2H          equ	665	;# 
  1432     029A                     CCP2CON         equ	666	;# 
  1433     029A                     ECCP2CON        equ	666	;# 
  1434     029E                     CCPTMRS         equ	670	;# 
  1435     030C                     SLRCONA         equ	780	;# 
  1436     030E                     SLRCONC         equ	782	;# 
  1437     038C                     INLVLA          equ	908	;# 
  1438     038E                     INLVLC          equ	910	;# 
  1439     0391                     IOCAP           equ	913	;# 
  1440     0392                     IOCAN           equ	914	;# 
  1441     0393                     IOCAF           equ	915	;# 
  1442     0397                     IOCCP           equ	919	;# 
  1443     0398                     IOCCN           equ	920	;# 
  1444     0399                     IOCCF           equ	921	;# 
  1445     0415                     TMR4            equ	1045	;# 
  1446     0416                     PR4             equ	1046	;# 
  1447     0417                     T4CON           equ	1047	;# 
  1448     041C                     TMR6            equ	1052	;# 
  1449     041D                     PR6             equ	1053	;# 
  1450     041E                     T6CON           equ	1054	;# 
  1451     0511                     OPA1CON         equ	1297	;# 
  1452     0515                     OPA2CON         equ	1301	;# 
  1453     0617                     PWM3DCL         equ	1559	;# 
  1454     0618                     PWM3DCH         equ	1560	;# 
  1455     0619                     PWM3CON         equ	1561	;# 
  1456     0619                     PWM3CON0        equ	1561	;# 
  1457     061A                     PWM4DCL         equ	1562	;# 
  1458     061B                     PWM4DCH         equ	1563	;# 
  1459     061C                     PWM4CON         equ	1564	;# 
  1460     061C                     PWM4CON0        equ	1564	;# 
  1461     0691                     COG1PHR         equ	1681	;# 
  1462     0692                     COG1PHF         equ	1682	;# 
  1463     0693                     COG1BLKR        equ	1683	;# 
  1464     0694                     COG1BLKF        equ	1684	;# 
  1465     0695                     COG1DBR         equ	1685	;# 
  1466     0696                     COG1DBF         equ	1686	;# 
  1467     0697                     COG1CON0        equ	1687	;# 
  1468     0698                     COG1CON1        equ	1688	;# 
  1469     0699                     COG1RIS         equ	1689	;# 
  1470     069A                     COG1RSIM        equ	1690	;# 
  1471     069B                     COG1FIS         equ	1691	;# 
  1472     069C                     COG1FSIM        equ	1692	;# 
  1473     069D                     COG1ASD0        equ	1693	;# 
  1474     069E                     COG1ASD1        equ	1694	;# 
  1475     069F                     COG1STR         equ	1695	;# 
  1476     0E0F                     PPSLOCK         equ	3599	;# 
  1477     0E10                     INTPPS          equ	3600	;# 
  1478     0E11                     T0CKIPPS        equ	3601	;# 
  1479     0E12                     T1CKIPPS        equ	3602	;# 
  1480     0E13                     T1GPPS          equ	3603	;# 
  1481     0E14                     CCP1PPS         equ	3604	;# 
  1482     0E15                     CCP2PPS         equ	3605	;# 
  1483     0E17                     COGINPPS        equ	3607	;# 
  1484     0E20                     SSPCLKPPS       equ	3616	;# 
  1485     0E21                     SSPDATPPS       equ	3617	;# 
  1486     0E22                     SSPSSPPS        equ	3618	;# 
  1487     0E24                     RXPPS           equ	3620	;# 
  1488     0E25                     CKPPS           equ	3621	;# 
  1489     0E28                     CLCIN0PPS       equ	3624	;# 
  1490     0E29                     CLCIN1PPS       equ	3625	;# 
  1491     0E2A                     CLCIN2PPS       equ	3626	;# 
  1492     0E2B                     CLCIN3PPS       equ	3627	;# 
  1493     0E90                     RA0PPS          equ	3728	;# 
  1494     0E91                     RA1PPS          equ	3729	;# 
  1495     0E92                     RA2PPS          equ	3730	;# 
  1496     0E94                     RA4PPS          equ	3732	;# 
  1497     0E95                     RA5PPS          equ	3733	;# 
  1498     0EA0                     RC0PPS          equ	3744	;# 
  1499     0EA1                     RC1PPS          equ	3745	;# 
  1500     0EA2                     RC2PPS          equ	3746	;# 
  1501     0EA3                     RC3PPS          equ	3747	;# 
  1502     0EA4                     RC4PPS          equ	3748	;# 
  1503     0EA5                     RC5PPS          equ	3749	;# 
  1504     0F0F                     CLCDATA         equ	3855	;# 
  1505     0F10                     CLC1CON         equ	3856	;# 
  1506     0F11                     CLC1POL         equ	3857	;# 
  1507     0F12                     CLC1SEL0        equ	3858	;# 
  1508     0F13                     CLC1SEL1        equ	3859	;# 
  1509     0F14                     CLC1SEL2        equ	3860	;# 
  1510     0F15                     CLC1SEL3        equ	3861	;# 
  1511     0F16                     CLC1GLS0        equ	3862	;# 
  1512     0F17                     CLC1GLS1        equ	3863	;# 
  1513     0F18                     CLC1GLS2        equ	3864	;# 
  1514     0F19                     CLC1GLS3        equ	3865	;# 
  1515     0F1A                     CLC2CON         equ	3866	;# 
  1516     0F1B                     CLC2POL         equ	3867	;# 
  1517     0F1C                     CLC2SEL0        equ	3868	;# 
  1518     0F1D                     CLC2SEL1        equ	3869	;# 
  1519     0F1E                     CLC2SEL2        equ	3870	;# 
  1520     0F1F                     CLC2SEL3        equ	3871	;# 
  1521     0F20                     CLC2GLS0        equ	3872	;# 
  1522     0F21                     CLC2GLS1        equ	3873	;# 
  1523     0F22                     CLC2GLS2        equ	3874	;# 
  1524     0F23                     CLC2GLS3        equ	3875	;# 
  1525     0F24                     CLC3CON         equ	3876	;# 
  1526     0F25                     CLC3POL         equ	3877	;# 
  1527     0F26                     CLC3SEL0        equ	3878	;# 
  1528     0F27                     CLC3SEL1        equ	3879	;# 
  1529     0F28                     CLC3SEL2        equ	3880	;# 
  1530     0F29                     CLC3SEL3        equ	3881	;# 
  1531     0F2A                     CLC3GLS0        equ	3882	;# 
  1532     0F2B                     CLC3GLS1        equ	3883	;# 
  1533     0F2C                     CLC3GLS2        equ	3884	;# 
  1534     0F2D                     CLC3GLS3        equ	3885	;# 
  1535     0F9E                     ICDBK0H         equ	3998	;# 
  1536     0FE4                     STATUS_SHAD     equ	4068	;# 
  1537     0FE5                     WREG_SHAD       equ	4069	;# 
  1538     0FE6                     BSR_SHAD        equ	4070	;# 
  1539     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1540     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1541     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1542     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1543     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1544     0FED                     STKPTR          equ	4077	;# 
  1545     0FEE                     TOSL            equ	4078	;# 
  1546     0FEF                     TOSH            equ	4079	;# 
  1547     0000                     INDF0           equ	0	;# 
  1548     0001                     INDF1           equ	1	;# 
  1549     0002                     PCL             equ	2	;# 
  1550     0003                     STATUS          equ	3	;# 
  1551     0004                     FSR0L           equ	4	;# 
  1552     0005                     FSR0H           equ	5	;# 
  1553     0006                     FSR1L           equ	6	;# 
  1554     0007                     FSR1H           equ	7	;# 
  1555     0008                     BSR             equ	8	;# 
  1556     0009                     WREG            equ	9	;# 
  1557     000A                     PCLATH          equ	10	;# 
  1558     000B                     INTCON          equ	11	;# 
  1559     000C                     PORTA           equ	12	;# 
  1560     000E                     PORTC           equ	14	;# 
  1561     0011                     PIR1            equ	17	;# 
  1562     0012                     PIR2            equ	18	;# 
  1563     0013                     PIR3            equ	19	;# 
  1564     0015                     TMR0            equ	21	;# 
  1565     0016                     TMR1            equ	22	;# 
  1566     0016                     TMR1L           equ	22	;# 
  1567     0017                     TMR1H           equ	23	;# 
  1568     0018                     T1CON           equ	24	;# 
  1569     0019                     T1GCON          equ	25	;# 
  1570     001A                     TMR2            equ	26	;# 
  1571     001B                     PR2             equ	27	;# 
  1572     001C                     T2CON           equ	28	;# 
  1573     008C                     TRISA           equ	140	;# 
  1574     008E                     TRISC           equ	142	;# 
  1575     0091                     PIE1            equ	145	;# 
  1576     0092                     PIE2            equ	146	;# 
  1577     0093                     PIE3            equ	147	;# 
  1578     0095                     OPTION_REG      equ	149	;# 
  1579     0096                     PCON            equ	150	;# 
  1580     0097                     WDTCON          equ	151	;# 
  1581     0098                     OSCTUNE         equ	152	;# 
  1582     0099                     OSCCON          equ	153	;# 
  1583     009A                     OSCSTAT         equ	154	;# 
  1584     009B                     ADRES           equ	155	;# 
  1585     009B                     ADRESL          equ	155	;# 
  1586     009C                     ADRESH          equ	156	;# 
  1587     009D                     ADCON0          equ	157	;# 
  1588     009E                     ADCON1          equ	158	;# 
  1589     009F                     ADCON2          equ	159	;# 
  1590     010C                     LATA            equ	268	;# 
  1591     010E                     LATC            equ	270	;# 
  1592     0111                     CM1CON0         equ	273	;# 
  1593     0112                     CM1CON1         equ	274	;# 
  1594     0113                     CM2CON0         equ	275	;# 
  1595     0114                     CM2CON1         equ	276	;# 
  1596     0115                     CMOUT           equ	277	;# 
  1597     0116                     BORCON          equ	278	;# 
  1598     0117                     FVRCON          equ	279	;# 
  1599     0118                     DAC1CON0        equ	280	;# 
  1600     0119                     DAC1CON1        equ	281	;# 
  1601     011C                     ZCD1CON         equ	284	;# 
  1602     018C                     ANSELA          equ	396	;# 
  1603     018E                     ANSELC          equ	398	;# 
  1604     0191                     PMADR           equ	401	;# 
  1605     0191                     PMADRL          equ	401	;# 
  1606     0192                     PMADRH          equ	402	;# 
  1607     0193                     PMDAT           equ	403	;# 
  1608     0193                     PMDATL          equ	403	;# 
  1609     0194                     PMDATH          equ	404	;# 
  1610     0195                     PMCON1          equ	405	;# 
  1611     0196                     PMCON2          equ	406	;# 
  1612     0197                     VREGCON         equ	407	;# 
  1613     0199                     RC1REG          equ	409	;# 
  1614     0199                     RCREG           equ	409	;# 
  1615     0199                     RCREG1          equ	409	;# 
  1616     019A                     TX1REG          equ	410	;# 
  1617     019A                     TXREG1          equ	410	;# 
  1618     019A                     TXREG           equ	410	;# 
  1619     019B                     SP1BRG          equ	411	;# 
  1620     019B                     SPBRG           equ	411	;# 
  1621     019B                     SP1BRGL         equ	411	;# 
  1622     019B                     SPBRG1          equ	411	;# 
  1623     019B                     SPBRGL          equ	411	;# 
  1624     019C                     SP1BRGH         equ	412	;# 
  1625     019C                     SPBRGH          equ	412	;# 
  1626     019C                     SPBRGH1         equ	412	;# 
  1627     019D                     RC1STA          equ	413	;# 
  1628     019D                     RCSTA1          equ	413	;# 
  1629     019D                     RCSTA           equ	413	;# 
  1630     019E                     TX1STA          equ	414	;# 
  1631     019E                     TXSTA1          equ	414	;# 
  1632     019E                     TXSTA           equ	414	;# 
  1633     019F                     BAUD1CON        equ	415	;# 
  1634     019F                     BAUDCON1        equ	415	;# 
  1635     019F                     BAUDCTL1        equ	415	;# 
  1636     019F                     BAUDCON         equ	415	;# 
  1637     019F                     BAUDCTL         equ	415	;# 
  1638     020C                     WPUA            equ	524	;# 
  1639     020E                     WPUC            equ	526	;# 
  1640     0211                     SSP1BUF         equ	529	;# 
  1641     0211                     SSPBUF          equ	529	;# 
  1642     0212                     SSP1ADD         equ	530	;# 
  1643     0212                     SSPADD          equ	530	;# 
  1644     0213                     SSP1MSK         equ	531	;# 
  1645     0213                     SSPMSK          equ	531	;# 
  1646     0214                     SSP1STAT        equ	532	;# 
  1647     0214                     SSPSTAT         equ	532	;# 
  1648     0215                     SSP1CON1        equ	533	;# 
  1649     0215                     SSPCON          equ	533	;# 
  1650     0215                     SSPCON1         equ	533	;# 
  1651     0215                     SSP1CON         equ	533	;# 
  1652     0216                     SSP1CON2        equ	534	;# 
  1653     0216                     SSPCON2         equ	534	;# 
  1654     0217                     SSP1CON3        equ	535	;# 
  1655     0217                     SSPCON3         equ	535	;# 
  1656     028C                     ODCONA          equ	652	;# 
  1657     028E                     ODCONC          equ	654	;# 
  1658     0291                     CCPR1           equ	657	;# 
  1659     0291                     CCPR1L          equ	657	;# 
  1660     0292                     CCPR1H          equ	658	;# 
  1661     0293                     CCP1CON         equ	659	;# 
  1662     0293                     ECCP1CON        equ	659	;# 
  1663     0298                     CCPR2           equ	664	;# 
  1664     0298                     CCPR2L          equ	664	;# 
  1665     0299                     CCPR2H          equ	665	;# 
  1666     029A                     CCP2CON         equ	666	;# 
  1667     029A                     ECCP2CON        equ	666	;# 
  1668     029E                     CCPTMRS         equ	670	;# 
  1669     030C                     SLRCONA         equ	780	;# 
  1670     030E                     SLRCONC         equ	782	;# 
  1671     038C                     INLVLA          equ	908	;# 
  1672     038E                     INLVLC          equ	910	;# 
  1673     0391                     IOCAP           equ	913	;# 
  1674     0392                     IOCAN           equ	914	;# 
  1675     0393                     IOCAF           equ	915	;# 
  1676     0397                     IOCCP           equ	919	;# 
  1677     0398                     IOCCN           equ	920	;# 
  1678     0399                     IOCCF           equ	921	;# 
  1679     0415                     TMR4            equ	1045	;# 
  1680     0416                     PR4             equ	1046	;# 
  1681     0417                     T4CON           equ	1047	;# 
  1682     041C                     TMR6            equ	1052	;# 
  1683     041D                     PR6             equ	1053	;# 
  1684     041E                     T6CON           equ	1054	;# 
  1685     0511                     OPA1CON         equ	1297	;# 
  1686     0515                     OPA2CON         equ	1301	;# 
  1687     0617                     PWM3DCL         equ	1559	;# 
  1688     0618                     PWM3DCH         equ	1560	;# 
  1689     0619                     PWM3CON         equ	1561	;# 
  1690     0619                     PWM3CON0        equ	1561	;# 
  1691     061A                     PWM4DCL         equ	1562	;# 
  1692     061B                     PWM4DCH         equ	1563	;# 
  1693     061C                     PWM4CON         equ	1564	;# 
  1694     061C                     PWM4CON0        equ	1564	;# 
  1695     0691                     COG1PHR         equ	1681	;# 
  1696     0692                     COG1PHF         equ	1682	;# 
  1697     0693                     COG1BLKR        equ	1683	;# 
  1698     0694                     COG1BLKF        equ	1684	;# 
  1699     0695                     COG1DBR         equ	1685	;# 
  1700     0696                     COG1DBF         equ	1686	;# 
  1701     0697                     COG1CON0        equ	1687	;# 
  1702     0698                     COG1CON1        equ	1688	;# 
  1703     0699                     COG1RIS         equ	1689	;# 
  1704     069A                     COG1RSIM        equ	1690	;# 
  1705     069B                     COG1FIS         equ	1691	;# 
  1706     069C                     COG1FSIM        equ	1692	;# 
  1707     069D                     COG1ASD0        equ	1693	;# 
  1708     069E                     COG1ASD1        equ	1694	;# 
  1709     069F                     COG1STR         equ	1695	;# 
  1710     0E0F                     PPSLOCK         equ	3599	;# 
  1711     0E10                     INTPPS          equ	3600	;# 
  1712     0E11                     T0CKIPPS        equ	3601	;# 
  1713     0E12                     T1CKIPPS        equ	3602	;# 
  1714     0E13                     T1GPPS          equ	3603	;# 
  1715     0E14                     CCP1PPS         equ	3604	;# 
  1716     0E15                     CCP2PPS         equ	3605	;# 
  1717     0E17                     COGINPPS        equ	3607	;# 
  1718     0E20                     SSPCLKPPS       equ	3616	;# 
  1719     0E21                     SSPDATPPS       equ	3617	;# 
  1720     0E22                     SSPSSPPS        equ	3618	;# 
  1721     0E24                     RXPPS           equ	3620	;# 
  1722     0E25                     CKPPS           equ	3621	;# 
  1723     0E28                     CLCIN0PPS       equ	3624	;# 
  1724     0E29                     CLCIN1PPS       equ	3625	;# 
  1725     0E2A                     CLCIN2PPS       equ	3626	;# 
  1726     0E2B                     CLCIN3PPS       equ	3627	;# 
  1727     0E90                     RA0PPS          equ	3728	;# 
  1728     0E91                     RA1PPS          equ	3729	;# 
  1729     0E92                     RA2PPS          equ	3730	;# 
  1730     0E94                     RA4PPS          equ	3732	;# 
  1731     0E95                     RA5PPS          equ	3733	;# 
  1732     0EA0                     RC0PPS          equ	3744	;# 
  1733     0EA1                     RC1PPS          equ	3745	;# 
  1734     0EA2                     RC2PPS          equ	3746	;# 
  1735     0EA3                     RC3PPS          equ	3747	;# 
  1736     0EA4                     RC4PPS          equ	3748	;# 
  1737     0EA5                     RC5PPS          equ	3749	;# 
  1738     0F0F                     CLCDATA         equ	3855	;# 
  1739     0F10                     CLC1CON         equ	3856	;# 
  1740     0F11                     CLC1POL         equ	3857	;# 
  1741     0F12                     CLC1SEL0        equ	3858	;# 
  1742     0F13                     CLC1SEL1        equ	3859	;# 
  1743     0F14                     CLC1SEL2        equ	3860	;# 
  1744     0F15                     CLC1SEL3        equ	3861	;# 
  1745     0F16                     CLC1GLS0        equ	3862	;# 
  1746     0F17                     CLC1GLS1        equ	3863	;# 
  1747     0F18                     CLC1GLS2        equ	3864	;# 
  1748     0F19                     CLC1GLS3        equ	3865	;# 
  1749     0F1A                     CLC2CON         equ	3866	;# 
  1750     0F1B                     CLC2POL         equ	3867	;# 
  1751     0F1C                     CLC2SEL0        equ	3868	;# 
  1752     0F1D                     CLC2SEL1        equ	3869	;# 
  1753     0F1E                     CLC2SEL2        equ	3870	;# 
  1754     0F1F                     CLC2SEL3        equ	3871	;# 
  1755     0F20                     CLC2GLS0        equ	3872	;# 
  1756     0F21                     CLC2GLS1        equ	3873	;# 
  1757     0F22                     CLC2GLS2        equ	3874	;# 
  1758     0F23                     CLC2GLS3        equ	3875	;# 
  1759     0F24                     CLC3CON         equ	3876	;# 
  1760     0F25                     CLC3POL         equ	3877	;# 
  1761     0F26                     CLC3SEL0        equ	3878	;# 
  1762     0F27                     CLC3SEL1        equ	3879	;# 
  1763     0F28                     CLC3SEL2        equ	3880	;# 
  1764     0F29                     CLC3SEL3        equ	3881	;# 
  1765     0F2A                     CLC3GLS0        equ	3882	;# 
  1766     0F2B                     CLC3GLS1        equ	3883	;# 
  1767     0F2C                     CLC3GLS2        equ	3884	;# 
  1768     0F2D                     CLC3GLS3        equ	3885	;# 
  1769     0F9E                     ICDBK0H         equ	3998	;# 
  1770     0FE4                     STATUS_SHAD     equ	4068	;# 
  1771     0FE5                     WREG_SHAD       equ	4069	;# 
  1772     0FE6                     BSR_SHAD        equ	4070	;# 
  1773     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1774     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1775     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1776     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1777     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1778     0FED                     STKPTR          equ	4077	;# 
  1779     0FEE                     TOSL            equ	4078	;# 
  1780     0FEF                     TOSH            equ	4079	;# 
  1781     0000                     INDF0           equ	0	;# 
  1782     0001                     INDF1           equ	1	;# 
  1783     0002                     PCL             equ	2	;# 
  1784     0003                     STATUS          equ	3	;# 
  1785     0004                     FSR0L           equ	4	;# 
  1786     0005                     FSR0H           equ	5	;# 
  1787     0006                     FSR1L           equ	6	;# 
  1788     0007                     FSR1H           equ	7	;# 
  1789     0008                     BSR             equ	8	;# 
  1790     0009                     WREG            equ	9	;# 
  1791     000A                     PCLATH          equ	10	;# 
  1792     000B                     INTCON          equ	11	;# 
  1793     000C                     PORTA           equ	12	;# 
  1794     000E                     PORTC           equ	14	;# 
  1795     0011                     PIR1            equ	17	;# 
  1796     0012                     PIR2            equ	18	;# 
  1797     0013                     PIR3            equ	19	;# 
  1798     0015                     TMR0            equ	21	;# 
  1799     0016                     TMR1            equ	22	;# 
  1800     0016                     TMR1L           equ	22	;# 
  1801     0017                     TMR1H           equ	23	;# 
  1802     0018                     T1CON           equ	24	;# 
  1803     0019                     T1GCON          equ	25	;# 
  1804     001A                     TMR2            equ	26	;# 
  1805     001B                     PR2             equ	27	;# 
  1806     001C                     T2CON           equ	28	;# 
  1807     008C                     TRISA           equ	140	;# 
  1808     008E                     TRISC           equ	142	;# 
  1809     0091                     PIE1            equ	145	;# 
  1810     0092                     PIE2            equ	146	;# 
  1811     0093                     PIE3            equ	147	;# 
  1812     0095                     OPTION_REG      equ	149	;# 
  1813     0096                     PCON            equ	150	;# 
  1814     0097                     WDTCON          equ	151	;# 
  1815     0098                     OSCTUNE         equ	152	;# 
  1816     0099                     OSCCON          equ	153	;# 
  1817     009A                     OSCSTAT         equ	154	;# 
  1818     009B                     ADRES           equ	155	;# 
  1819     009B                     ADRESL          equ	155	;# 
  1820     009C                     ADRESH          equ	156	;# 
  1821     009D                     ADCON0          equ	157	;# 
  1822     009E                     ADCON1          equ	158	;# 
  1823     009F                     ADCON2          equ	159	;# 
  1824     010C                     LATA            equ	268	;# 
  1825     010E                     LATC            equ	270	;# 
  1826     0111                     CM1CON0         equ	273	;# 
  1827     0112                     CM1CON1         equ	274	;# 
  1828     0113                     CM2CON0         equ	275	;# 
  1829     0114                     CM2CON1         equ	276	;# 
  1830     0115                     CMOUT           equ	277	;# 
  1831     0116                     BORCON          equ	278	;# 
  1832     0117                     FVRCON          equ	279	;# 
  1833     0118                     DAC1CON0        equ	280	;# 
  1834     0119                     DAC1CON1        equ	281	;# 
  1835     011C                     ZCD1CON         equ	284	;# 
  1836     018C                     ANSELA          equ	396	;# 
  1837     018E                     ANSELC          equ	398	;# 
  1838     0191                     PMADR           equ	401	;# 
  1839     0191                     PMADRL          equ	401	;# 
  1840     0192                     PMADRH          equ	402	;# 
  1841     0193                     PMDAT           equ	403	;# 
  1842     0193                     PMDATL          equ	403	;# 
  1843     0194                     PMDATH          equ	404	;# 
  1844     0195                     PMCON1          equ	405	;# 
  1845     0196                     PMCON2          equ	406	;# 
  1846     0197                     VREGCON         equ	407	;# 
  1847     0199                     RC1REG          equ	409	;# 
  1848     0199                     RCREG           equ	409	;# 
  1849     0199                     RCREG1          equ	409	;# 
  1850     019A                     TX1REG          equ	410	;# 
  1851     019A                     TXREG1          equ	410	;# 
  1852     019A                     TXREG           equ	410	;# 
  1853     019B                     SP1BRG          equ	411	;# 
  1854     019B                     SPBRG           equ	411	;# 
  1855     019B                     SP1BRGL         equ	411	;# 
  1856     019B                     SPBRG1          equ	411	;# 
  1857     019B                     SPBRGL          equ	411	;# 
  1858     019C                     SP1BRGH         equ	412	;# 
  1859     019C                     SPBRGH          equ	412	;# 
  1860     019C                     SPBRGH1         equ	412	;# 
  1861     019D                     RC1STA          equ	413	;# 
  1862     019D                     RCSTA1          equ	413	;# 
  1863     019D                     RCSTA           equ	413	;# 
  1864     019E                     TX1STA          equ	414	;# 
  1865     019E                     TXSTA1          equ	414	;# 
  1866     019E                     TXSTA           equ	414	;# 
  1867     019F                     BAUD1CON        equ	415	;# 
  1868     019F                     BAUDCON1        equ	415	;# 
  1869     019F                     BAUDCTL1        equ	415	;# 
  1870     019F                     BAUDCON         equ	415	;# 
  1871     019F                     BAUDCTL         equ	415	;# 
  1872     020C                     WPUA            equ	524	;# 
  1873     020E                     WPUC            equ	526	;# 
  1874     0211                     SSP1BUF         equ	529	;# 
  1875     0211                     SSPBUF          equ	529	;# 
  1876     0212                     SSP1ADD         equ	530	;# 
  1877     0212                     SSPADD          equ	530	;# 
  1878     0213                     SSP1MSK         equ	531	;# 
  1879     0213                     SSPMSK          equ	531	;# 
  1880     0214                     SSP1STAT        equ	532	;# 
  1881     0214                     SSPSTAT         equ	532	;# 
  1882     0215                     SSP1CON1        equ	533	;# 
  1883     0215                     SSPCON          equ	533	;# 
  1884     0215                     SSPCON1         equ	533	;# 
  1885     0215                     SSP1CON         equ	533	;# 
  1886     0216                     SSP1CON2        equ	534	;# 
  1887     0216                     SSPCON2         equ	534	;# 
  1888     0217                     SSP1CON3        equ	535	;# 
  1889     0217                     SSPCON3         equ	535	;# 
  1890     028C                     ODCONA          equ	652	;# 
  1891     028E                     ODCONC          equ	654	;# 
  1892     0291                     CCPR1           equ	657	;# 
  1893     0291                     CCPR1L          equ	657	;# 
  1894     0292                     CCPR1H          equ	658	;# 
  1895     0293                     CCP1CON         equ	659	;# 
  1896     0293                     ECCP1CON        equ	659	;# 
  1897     0298                     CCPR2           equ	664	;# 
  1898     0298                     CCPR2L          equ	664	;# 
  1899     0299                     CCPR2H          equ	665	;# 
  1900     029A                     CCP2CON         equ	666	;# 
  1901     029A                     ECCP2CON        equ	666	;# 
  1902     029E                     CCPTMRS         equ	670	;# 
  1903     030C                     SLRCONA         equ	780	;# 
  1904     030E                     SLRCONC         equ	782	;# 
  1905     038C                     INLVLA          equ	908	;# 
  1906     038E                     INLVLC          equ	910	;# 
  1907     0391                     IOCAP           equ	913	;# 
  1908     0392                     IOCAN           equ	914	;# 
  1909     0393                     IOCAF           equ	915	;# 
  1910     0397                     IOCCP           equ	919	;# 
  1911     0398                     IOCCN           equ	920	;# 
  1912     0399                     IOCCF           equ	921	;# 
  1913     0415                     TMR4            equ	1045	;# 
  1914     0416                     PR4             equ	1046	;# 
  1915     0417                     T4CON           equ	1047	;# 
  1916     041C                     TMR6            equ	1052	;# 
  1917     041D                     PR6             equ	1053	;# 
  1918     041E                     T6CON           equ	1054	;# 
  1919     0511                     OPA1CON         equ	1297	;# 
  1920     0515                     OPA2CON         equ	1301	;# 
  1921     0617                     PWM3DCL         equ	1559	;# 
  1922     0618                     PWM3DCH         equ	1560	;# 
  1923     0619                     PWM3CON         equ	1561	;# 
  1924     0619                     PWM3CON0        equ	1561	;# 
  1925     061A                     PWM4DCL         equ	1562	;# 
  1926     061B                     PWM4DCH         equ	1563	;# 
  1927     061C                     PWM4CON         equ	1564	;# 
  1928     061C                     PWM4CON0        equ	1564	;# 
  1929     0691                     COG1PHR         equ	1681	;# 
  1930     0692                     COG1PHF         equ	1682	;# 
  1931     0693                     COG1BLKR        equ	1683	;# 
  1932     0694                     COG1BLKF        equ	1684	;# 
  1933     0695                     COG1DBR         equ	1685	;# 
  1934     0696                     COG1DBF         equ	1686	;# 
  1935     0697                     COG1CON0        equ	1687	;# 
  1936     0698                     COG1CON1        equ	1688	;# 
  1937     0699                     COG1RIS         equ	1689	;# 
  1938     069A                     COG1RSIM        equ	1690	;# 
  1939     069B                     COG1FIS         equ	1691	;# 
  1940     069C                     COG1FSIM        equ	1692	;# 
  1941     069D                     COG1ASD0        equ	1693	;# 
  1942     069E                     COG1ASD1        equ	1694	;# 
  1943     069F                     COG1STR         equ	1695	;# 
  1944     0E0F                     PPSLOCK         equ	3599	;# 
  1945     0E10                     INTPPS          equ	3600	;# 
  1946     0E11                     T0CKIPPS        equ	3601	;# 
  1947     0E12                     T1CKIPPS        equ	3602	;# 
  1948     0E13                     T1GPPS          equ	3603	;# 
  1949     0E14                     CCP1PPS         equ	3604	;# 
  1950     0E15                     CCP2PPS         equ	3605	;# 
  1951     0E17                     COGINPPS        equ	3607	;# 
  1952     0E20                     SSPCLKPPS       equ	3616	;# 
  1953     0E21                     SSPDATPPS       equ	3617	;# 
  1954     0E22                     SSPSSPPS        equ	3618	;# 
  1955     0E24                     RXPPS           equ	3620	;# 
  1956     0E25                     CKPPS           equ	3621	;# 
  1957     0E28                     CLCIN0PPS       equ	3624	;# 
  1958     0E29                     CLCIN1PPS       equ	3625	;# 
  1959     0E2A                     CLCIN2PPS       equ	3626	;# 
  1960     0E2B                     CLCIN3PPS       equ	3627	;# 
  1961     0E90                     RA0PPS          equ	3728	;# 
  1962     0E91                     RA1PPS          equ	3729	;# 
  1963     0E92                     RA2PPS          equ	3730	;# 
  1964     0E94                     RA4PPS          equ	3732	;# 
  1965     0E95                     RA5PPS          equ	3733	;# 
  1966     0EA0                     RC0PPS          equ	3744	;# 
  1967     0EA1                     RC1PPS          equ	3745	;# 
  1968     0EA2                     RC2PPS          equ	3746	;# 
  1969     0EA3                     RC3PPS          equ	3747	;# 
  1970     0EA4                     RC4PPS          equ	3748	;# 
  1971     0EA5                     RC5PPS          equ	3749	;# 
  1972     0F0F                     CLCDATA         equ	3855	;# 
  1973     0F10                     CLC1CON         equ	3856	;# 
  1974     0F11                     CLC1POL         equ	3857	;# 
  1975     0F12                     CLC1SEL0        equ	3858	;# 
  1976     0F13                     CLC1SEL1        equ	3859	;# 
  1977     0F14                     CLC1SEL2        equ	3860	;# 
  1978     0F15                     CLC1SEL3        equ	3861	;# 
  1979     0F16                     CLC1GLS0        equ	3862	;# 
  1980     0F17                     CLC1GLS1        equ	3863	;# 
  1981     0F18                     CLC1GLS2        equ	3864	;# 
  1982     0F19                     CLC1GLS3        equ	3865	;# 
  1983     0F1A                     CLC2CON         equ	3866	;# 
  1984     0F1B                     CLC2POL         equ	3867	;# 
  1985     0F1C                     CLC2SEL0        equ	3868	;# 
  1986     0F1D                     CLC2SEL1        equ	3869	;# 
  1987     0F1E                     CLC2SEL2        equ	3870	;# 
  1988     0F1F                     CLC2SEL3        equ	3871	;# 
  1989     0F20                     CLC2GLS0        equ	3872	;# 
  1990     0F21                     CLC2GLS1        equ	3873	;# 
  1991     0F22                     CLC2GLS2        equ	3874	;# 
  1992     0F23                     CLC2GLS3        equ	3875	;# 
  1993     0F24                     CLC3CON         equ	3876	;# 
  1994     0F25                     CLC3POL         equ	3877	;# 
  1995     0F26                     CLC3SEL0        equ	3878	;# 
  1996     0F27                     CLC3SEL1        equ	3879	;# 
  1997     0F28                     CLC3SEL2        equ	3880	;# 
  1998     0F29                     CLC3SEL3        equ	3881	;# 
  1999     0F2A                     CLC3GLS0        equ	3882	;# 
  2000     0F2B                     CLC3GLS1        equ	3883	;# 
  2001     0F2C                     CLC3GLS2        equ	3884	;# 
  2002     0F2D                     CLC3GLS3        equ	3885	;# 
  2003     0F9E                     ICDBK0H         equ	3998	;# 
  2004     0FE4                     STATUS_SHAD     equ	4068	;# 
  2005     0FE5                     WREG_SHAD       equ	4069	;# 
  2006     0FE6                     BSR_SHAD        equ	4070	;# 
  2007     0FE7                     PCLATH_SHAD     equ	4071	;# 
  2008     0FE8                     FSR0L_SHAD      equ	4072	;# 
  2009     0FE9                     FSR0H_SHAD      equ	4073	;# 
  2010     0FEA                     FSR1L_SHAD      equ	4074	;# 
  2011     0FEB                     FSR1H_SHAD      equ	4075	;# 
  2012     0FED                     STKPTR          equ	4077	;# 
  2013     0FEE                     TOSL            equ	4078	;# 
  2014     0FEF                     TOSH            equ	4079	;# 
  2015                           
  2016 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  2017     0000                     _INT_DefaultInterruptHandler equ	0
  2018                           
  2019 ;; Function _EUSART_Deinitialize is unused but had its address taken
  2020     0000                     _EUSART_Deinitialize equ	0
  2021                           
  2022 ;; Function _EUSART_TransmitEnable is unused but had its address taken
  2023     0000                     _EUSART_TransmitEnable equ	0
  2024                           
  2025 ;; Function _EUSART_TransmitDisable is unused but had its address taken
  2026     0000                     _EUSART_TransmitDisable equ	0
  2027                           
  2028 ;; Function _EUSART_AutoBaudSet is unused but had its address taken
  2029     0000                     _EUSART_AutoBaudSet equ	0
  2030                           
  2031 ;; Function _EUSART_AutoBaudQuery is unused but had its address taken
  2032     0000                     _EUSART_AutoBaudQuery equ	0
  2033                           
  2034 ;; Function _EUSART_IsTxDone is unused but had its address taken
  2035     0000                     _EUSART_IsTxDone equ	0
  2036                           
  2037 ;; Function _EUSART_ErrorGet is unused but had its address taken
  2038     0000                     _EUSART_ErrorGet equ	0
  2039                           
  2040 ;; Function _EUSART_TxCompleteCallbackRegister is unused but had its address taken
  2041     0000                     _EUSART_TxCompleteCallbackRegister equ	0
  2042                           
  2043                           	psect	idataBANK2
  2044     0002                     __pidataBANK2:
  2045                           
  2046                           ;initializer for _reset_flg_12
  2047     0002  3404               	retlw	4
  2048                           
  2049                           ;initializer for _reset_flg_24
  2050     0003  3404               	retlw	4
  2051                           
  2052                           	psect	stringtext1
  2053     1800                     __pstringtext1:
  2054     1800                     _UART1:
  2055     1800  3410               	retlw	low _EUSART_Initialize
  2056     1801  3411               	retlw	high _EUSART_Initialize
  2057     1802  3400               	retlw	0
  2058     1803  3400               	retlw	0
  2059     1804  3443               	retlw	low _EUSART_Read
  2060     1805  3410               	retlw	high _EUSART_Read
  2061     1806  34D8               	retlw	low _EUSART_Write
  2062     1807  3407               	retlw	high _EUSART_Write
  2063     1808  34FF               	retlw	low _EUSART_IsRxReady
  2064     1809  341D               	retlw	high _EUSART_IsRxReady
  2065     180A  3400               	retlw	low _EUSART_IsTxReady
  2066     180B  3408               	retlw	high _EUSART_IsTxReady
  2067     180C  3400               	retlw	0
  2068     180D  3400               	retlw	0
  2069     180E  3400               	retlw	0
  2070     180F  3400               	retlw	0
  2071     1810  3400               	retlw	0
  2072     1811  3400               	retlw	0
  2073     1812  3400               	retlw	0
  2074     1813  3400               	retlw	0
  2075     1814  3400               	retlw	0
  2076     1815  3400               	retlw	0
  2077     1816  3400               	retlw	0
  2078     1817  3400               	retlw	0
  2079     1818  3400               	retlw	0
  2080     1819  3400               	retlw	0
  2081     181A  3400               	retlw	0
  2082     181B  3400               	retlw	0
  2083     181C  3400               	retlw	0
  2084     181D  3400               	retlw	0
  2085     181E  3400               	retlw	0
  2086     181F  3400               	retlw	0
  2087     1820  3400               	retlw	0
  2088     1821  3400               	retlw	0
  2089     1822  3400               	retlw	0
  2090     1823  3400               	retlw	0
  2091     1824  3452               	retlw	low _EUSART_RxCompleteCallbackRegister
  2092     1825  341E               	retlw	high _EUSART_RxCompleteCallbackRegister
  2093     1826  3400               	retlw	0
  2094     1827  3400               	retlw	0
  2095     1828  3461               	retlw	low _EUSART_FramingErrorCallbackRegister
  2096     1829  341E               	retlw	high _EUSART_FramingErrorCallbackRegister
  2097     182A  3470               	retlw	low _EUSART_OverrunErrorCallbackRegister
  2098     182B  341E               	retlw	high _EUSART_OverrunErrorCallbackRegister
  2099     182C  3400               	retlw	0
  2100     182D  3400               	retlw	0
  2101     182E  3400               	retlw	0
  2102     182F  3400               	retlw	0
  2103     1830                     __end_of_UART1:
  2104                           
  2105                           	psect	nvBANK2
  2106     0165                     __pnvBANK2:
  2107     0165                     _TMR4_PeriodMatchCallback:
  2108     0165                     	ds	2
  2109     0167                     _EUSART_RxInterruptHandler:
  2110     0167                     	ds	2
  2111     0169                     _ADC_InterruptHandler:
  2112     0169                     	ds	2
  2113                           
  2114                           	psect	nvBANK3
  2115     01B0                     __pnvBANK3:
  2116     01B0                     _EUSART_TxInterruptHandler:
  2117     01B0                     	ds	2
  2118     0012                     _PIR2bits       set	18
  2119     000B                     _INTCONbits     set	11
  2120     0011                     _PIR1bits       set	17
  2121     0092                     _PIE2bits       set	146
  2122     0095                     _OPTION_REGbits set	149
  2123     008E                     _TRISC          set	142
  2124     008C                     _TRISA          set	140
  2125     0098                     _OSCTUNE        set	152
  2126     0099                     _OSCCON         set	153
  2127     009D                     _ADCON0bits     set	157
  2128     0091                     _PIE1bits       set	145
  2129     009D                     _ADCON0         set	157
  2130     009F                     _ADCON2         set	159
  2131     009C                     _ADRESH         set	156
  2132     009B                     _ADRESL         set	155
  2133     009E                     _ADCON1         set	158
  2134     010C                     _LATAbits       set	268
  2135     010E                     _LATC           set	270
  2136     010C                     _LATA           set	268
  2137     0116                     _BORCON         set	278
  2138     019A                     _TX1REG         set	410
  2139     0199                     _RC1REG         set	409
  2140     019F                     _BAUD1CONbits   set	415
  2141     019E                     _TX1STAbits     set	414
  2142     019D                     _RC1STAbits     set	413
  2143     019C                     _SP1BRGH        set	412
  2144     019B                     _SP1BRGL        set	411
  2145     019E                     _TX1STA         set	414
  2146     019D                     _RC1STA         set	413
  2147     019F                     _BAUD1CON       set	415
  2148     018E                     _ANSELC         set	398
  2149     018C                     _ANSELA         set	396
  2150     020E                     _WPUC           set	526
  2151     020C                     _WPUA           set	524
  2152     028E                     _ODCONC         set	654
  2153     028C                     _ODCONA         set	652
  2154     030E                     _SLRCONC        set	782
  2155     030C                     _SLRCONA        set	780
  2156     0399                     _IOCCF          set	921
  2157     0398                     _IOCCN          set	920
  2158     0397                     _IOCCP          set	919
  2159     0393                     _IOCAF          set	915
  2160     0392                     _IOCAN          set	914
  2161     0391                     _IOCAP          set	913
  2162     038E                     _INLVLC         set	910
  2163     038C                     _INLVLA         set	908
  2164     0417                     _T4CONbits      set	1047
  2165     0417                     _T4CON          set	1047
  2166     0415                     _TMR4           set	1045
  2167     0416                     _PR4            set	1046
  2168     0E24                     _RXPPS          set	3620
  2169     0EA3                     _RC3PPS         set	3747
  2170                           
  2171                           	psect	stringtext2
  2172     1830                     __pstringtext2:
  2173     1830                     STR_2:
  2174     1830  3443               	retlw	67	;'C'
  2175     1831  3472               	retlw	114	;'r'
  2176     1832  3465               	retlw	101	;'e'
  2177     1833  3461               	retlw	97	;'a'
  2178     1834  3474               	retlw	116	;'t'
  2179     1835  3465               	retlw	101	;'e'
  2180     1836  3464               	retlw	100	;'d'
  2181     1837  3420               	retlw	32	;' '
  2182     1838  3462               	retlw	98	;'b'
  2183     1839  3479               	retlw	121	;'y'
  2184     183A  3420               	retlw	32	;' '
  2185     183B  344B               	retlw	75	;'K'
  2186     183C  3469               	retlw	105	;'i'
  2187     183D  346D               	retlw	109	;'m'
  2188     183E  3475               	retlw	117	;'u'
  2189     183F  3472               	retlw	114	;'r'
  2190     1840  3461               	retlw	97	;'a'
  2191     1841  3454               	retlw	84	;'T'
  2192     1842  346F               	retlw	111	;'o'
  2193     1843  346D               	retlw	109	;'m'
  2194     1844  346F               	retlw	111	;'o'
  2195     1845  3468               	retlw	104	;'h'
  2196     1846  3469               	retlw	105	;'i'
  2197     1847  3472               	retlw	114	;'r'
  2198     1848  346F               	retlw	111	;'o'
  2199     1849  340A               	retlw	10
  2200     184A  3400               	retlw	0
  2201                           
  2202                           	psect	stringtext3
  2203     184B                     __pstringtext3:
  2204     184B                     STR_1:
  2205     184B  3453               	retlw	83	;'S'
  2206     184C  3441               	retlw	65	;'A'
  2207     184D  345A               	retlw	90	;'Z'
  2208     184E  3441               	retlw	65	;'A'
  2209     184F  344E               	retlw	78	;'N'
  2210     1850  344B               	retlw	75	;'K'
  2211     1851  3441               	retlw	65	;'A'
  2212     1852  345F               	retlw	95	;'_'
  2213     1853  3450               	retlw	80	;'P'
  2214     1854  346F               	retlw	111	;'o'
  2215     1855  3477               	retlw	119	;'w'
  2216     1856  3465               	retlw	101	;'e'
  2217     1857  3472               	retlw	114	;'r'
  2218     1858  3442               	retlw	66	;'B'
  2219     1859  346F               	retlw	111	;'o'
  2220     185A  3461               	retlw	97	;'a'
  2221     185B  3472               	retlw	114	;'r'
  2222     185C  3464               	retlw	100	;'d'
  2223     185D  3432               	retlw	50	;'2'
  2224     185E  3430               	retlw	48	;'0'
  2225     185F  3432               	retlw	50	;'2'
  2226     1860  3434               	retlw	52	;'4'
  2227     1861  340A               	retlw	10
  2228     1862  3400               	retlw	0
  2229                           
  2230                           	psect	stringtext4
  2231     1863                     __pstringtext4:
  2232     1863                     STR_4:
  2233     1863  3454               	retlw	84	;'T'
  2234     1864  3468               	retlw	104	;'h'
  2235     1865  3469               	retlw	105	;'i'
  2236     1866  3473               	retlw	115	;'s'
  2237     1867  3420               	retlw	32	;' '
  2238     1868  3469               	retlw	105	;'i'
  2239     1869  3473               	retlw	115	;'s'
  2240     186A  3420               	retlw	32	;' '
  2241     186B  3463               	retlw	99	;'c'
  2242     186C  346F               	retlw	111	;'o'
  2243     186D  346E               	retlw	110	;'n'
  2244     186E  3466               	retlw	102	;'f'
  2245     186F  3469               	retlw	105	;'i'
  2246     1870  3467               	retlw	103	;'g'
  2247     1871  3420               	retlw	32	;' '
  2248     1872  346D               	retlw	109	;'m'
  2249     1873  346F               	retlw	111	;'o'
  2250     1874  3464               	retlw	100	;'d'
  2251     1875  3465               	retlw	101	;'e'
  2252     1876  3400               	retlw	0
  2253                           
  2254                           	psect	stringtext5
  2255     1877                     __pstringtext5:
  2256     1877                     STR_3:
  2257     1877  3456               	retlw	86	;'V'
  2258     1878  3448               	retlw	72	;'H'
  2259     1879  343A               	retlw	58	;':'
  2260     187A  3425               	retlw	37	;'%'
  2261     187B  342E               	retlw	46	;'.'
  2262     187C  3431               	retlw	49	;'1'
  2263     187D  3466               	retlw	102	;'f'
  2264     187E  3420               	retlw	32	;' '
  2265     187F  3456               	retlw	86	;'V'
  2266     1880  344C               	retlw	76	;'L'
  2267     1881  343A               	retlw	58	;':'
  2268     1882  3425               	retlw	37	;'%'
  2269     1883  342E               	retlw	46	;'.'
  2270     1884  3431               	retlw	49	;'1'
  2271     1885  3466               	retlw	102	;'f'
  2272     1886  340A               	retlw	10
  2273     1887  3400               	retlw	0
  2274                           
  2275                           	psect	stringtext6
  2276     1888                     __pstringtext6:
  2277     1888                     STR_5:
  2278     1888  3469               	retlw	105	;'i'
  2279     1889  346E               	retlw	110	;'n'
  2280     188A  3466               	retlw	102	;'f'
  2281     188B  3400               	retlw	0
  2282                           
  2283                           	psect	stringtext7
  2284     188C                     __pstringtext7:
  2285     188C                     STR_8:
  2286     188C  346E               	retlw	110	;'n'
  2287     188D  3461               	retlw	97	;'a'
  2288     188E  346E               	retlw	110	;'n'
  2289     188F  3400               	retlw	0
  2290                           
  2291                           	psect	stringtext8
  2292     0000                     __pstringtext8:
  2293     188C                     STR_9           equ	STR_8
  2294     188C                     STR_10          equ	STR_8
  2295     1888                     STR_6           equ	STR_5
  2296     1888                     STR_7           equ	STR_5
  2297                           
  2298                           	psect	cinit
  2299     004C                     start_initialization:	
  2300                           ; #config settings
  2301                           
  2302     004C                     __initialization:
  2303                           
  2304                           ; Initialize objects allocated to BANK2
  2305     004C  0022               	movlb	2	; select bank2
  2306     004D  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  2307     0050  00EB               	movwf	__pdataBANK2& (0+127)
  2308     0051  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  2309     0054  00EC               	movwf	(__pdataBANK2+1)& (0+127)
  2310                           
  2311                           ; Clear objects allocated to COMMON
  2312     0055  01F0               	clrf	__pbssCOMMON& (0+127)
  2313     0056  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2314     0057  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2315     0058  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2316     0059  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2317     005A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2318                           
  2319                           ; Clear objects allocated to BANK1
  2320     005B  0021               	movlb	1	; select bank1
  2321     005C  01EB               	clrf	__pbssBANK1& (0+127)
  2322                           
  2323                           ; Clear objects allocated to BANK2
  2324     005D  3020               	movlw	low __pbssBANK2
  2325     005E  0084               	movwf	4
  2326     005F  3001               	movlw	high __pbssBANK2
  2327     0060  0085               	movwf	5
  2328     0061  303B               	movlw	59
  2329     0062  319D  25F9  3180   	fcall	clear_ram0
  2330                           
  2331                           ; Clear objects allocated to BANK3
  2332     0065  30A0               	movlw	low __pbssBANK3
  2333     0066  0084               	movwf	4
  2334     0067  3001               	movlw	high __pbssBANK3
  2335     0068  0085               	movwf	5
  2336     0069  3008               	movlw	8
  2337     006A  319D  25F9  3180   	fcall	clear_ram0
  2338                           
  2339                           ; Clear objects allocated to BANK4
  2340     006D  3020               	movlw	low __pbssBANK4
  2341     006E  0084               	movwf	4
  2342     006F  3002               	movlw	high __pbssBANK4
  2343     0070  0085               	movwf	5
  2344     0071  3050               	movlw	80
  2345     0072  319D  25F9  3180   	fcall	clear_ram0
  2346     0075                     end_of_initialization:	
  2347                           ;End of C runtime variable initialization code
  2348                           
  2349     0075                     __end_of__initialization:
  2350     0075  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2351     0076  0020               	movlb	0
  2352     0077  3189  29D8         	ljmp	_main	;jump to C main() function
  2353                           
  2354                           	psect	bssCOMMON
  2355     0070                     __pbssCOMMON:
  2356     0070                     _eusartRxCount:
  2357     0070                     	ds	1
  2358     0071                     _eusartRxTail:
  2359     0071                     	ds	1
  2360     0072                     _eusartRxHead:
  2361     0072                     	ds	1
  2362     0073                     _eusartTxBufferRemaining:
  2363     0073                     	ds	1
  2364     0074                     _eusartTxTail:
  2365     0074                     	ds	1
  2366     0075                     _eusartTxHead:
  2367     0075                     	ds	1
  2368                           
  2369                           	psect	bssBANK1
  2370     00EB                     __pbssBANK1:
  2371     00EB                     _flags:
  2372     00EB                     	ds	1
  2373                           
  2374                           	psect	bssBANK2
  2375     0120                     __pbssBANK2:
  2376     0120                     _eusartRxStatusBuffer:
  2377     0120                     	ds	16
  2378     0130                     _eusartTxBuffer:
  2379     0130                     	ds	8
  2380     0138                     floorf@F521:
  2381     0138                     	ds	4
  2382     013C                     ___fpclassifyf@F465:
  2383     013C                     	ds	4
  2384     0140                     _voltage_24:
  2385     0140                     	ds	4
  2386     0144                     _voltage_12:
  2387     0144                     	ds	4
  2388     0148                     _width:
  2389     0148                     	ds	2
  2390     014A                     _prec:
  2391     014A                     	ds	2
  2392     014C                     _EUSART_OverrunErrorHandler:
  2393     014C                     	ds	2
  2394     014E                     _EUSART_FramingErrorHandler:
  2395     014E                     	ds	2
  2396     0150                     _EUSART_RxCompleteInterruptHandler:
  2397     0150                     	ds	2
  2398     0152                     _EUSART_TxCompleteInterruptHandler:
  2399     0152                     	ds	2
  2400     0154                     _eusartRxLastError:
  2401     0154                     	ds	2
  2402     0156                     TMR4_ISR@CountCallBack:
  2403     0156                     	ds	2
  2404     0158                     _INT_InterruptHandler:
  2405     0158                     	ds	2
  2406     015A                     _config_flg:
  2407     015A                     	ds	1
  2408                           
  2409                           	psect	dataBANK2
  2410     016B                     __pdataBANK2:
  2411     016B                     _reset_flg_12:
  2412     016B                     	ds	1
  2413     016C                     _reset_flg_24:
  2414     016C                     	ds	1
  2415                           
  2416                           	psect	bssBANK3
  2417     01A0                     __pbssBANK3:
  2418     01A0                     _eusartRxBuffer:
  2419     01A0                     	ds	8
  2420                           
  2421                           	psect	bssBANK4
  2422     0220                     __pbssBANK4:
  2423     0220                     _dbuf:
  2424     0220                     	ds	80
  2425                           
  2426                           	psect	clrtext
  2427     1DF9                     clear_ram0:	
  2428                           ;	Called with FSR0 containing the base address, and
  2429                           ;	WREG with the size to clear
  2430                           
  2431     1DF9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2432     1DFA                     clrloop0:
  2433     1DFA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2434     1DFB  3101               	addfsr 0,1
  2435     1DFC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2436     1DFD  2DFA               	goto	clrloop0	;have we reached the end yet?
  2437     1DFE  3400               	retlw	0	;all done for this memory range, return
  2438                           
  2439                           	psect	cstackBANK3
  2440     01A8                     __pcstackBANK3:
  2441     01A8                     _main$1109:
  2442                           
  2443                           ; 4 bytes @ 0x0
  2444     01A8                     	ds	4
  2445     01AC                     _main$1110:
  2446                           
  2447                           ; 4 bytes @ 0x4
  2448     01AC                     	ds	4
  2449                           
  2450                           	psect	cstackBANK2
  2451     015B                     __pcstackBANK2:
  2452     015B                     ?_printf:
  2453     015B                     printf@fmt:	
  2454                           ; 2 bytes @ 0x0
  2455                           
  2456                           
  2457                           ; 2 bytes @ 0x0
  2458     015B                     	ds	10
  2459                           
  2460                           	psect	cstackBANK1
  2461     00A0                     __pcstackBANK1:
  2462     00A0                     ??_efgtoa:
  2463                           
  2464                           ; 1 bytes @ 0x0
  2465     00A0                     	ds	4
  2466     00A4                     efgtoa@ne:
  2467                           
  2468                           ; 2 bytes @ 0x4
  2469     00A4                     	ds	2
  2470     00A6                     efgtoa@p:
  2471                           
  2472                           ; 2 bytes @ 0x6
  2473     00A6                     	ds	2
  2474     00A8                     efgtoa@t:
  2475                           
  2476                           ; 2 bytes @ 0x8
  2477     00A8                     	ds	2
  2478     00AA                     _efgtoa$1557:
  2479                           
  2480                           ; 2 bytes @ 0xA
  2481     00AA                     	ds	2
  2482     00AC                     efgtoa@pp:
  2483                           
  2484                           ; 1 bytes @ 0xC
  2485     00AC                     	ds	1
  2486     00AD                     efgtoa@mode:
  2487                           
  2488                           ; 1 bytes @ 0xD
  2489     00AD                     	ds	1
  2490     00AE                     efgtoa@nmode:
  2491                           
  2492                           ; 1 bytes @ 0xE
  2493     00AE                     	ds	1
  2494     00AF                     efgtoa@d:
  2495                           
  2496                           ; 2 bytes @ 0xF
  2497     00AF                     	ds	2
  2498     00B1                     efgtoa@m:
  2499                           
  2500                           ; 2 bytes @ 0x11
  2501     00B1                     	ds	2
  2502     00B3                     efgtoa@e:
  2503                           
  2504                           ; 2 bytes @ 0x13
  2505     00B3                     	ds	2
  2506     00B5                     efgtoa@w:
  2507                           
  2508                           ; 2 bytes @ 0x15
  2509     00B5                     	ds	2
  2510     00B7                     efgtoa@ou:
  2511                           
  2512                           ; 4 bytes @ 0x17
  2513     00B7                     	ds	4
  2514     00BB                     efgtoa@i:
  2515                           
  2516                           ; 2 bytes @ 0x1B
  2517     00BB                     	ds	2
  2518     00BD                     efgtoa@h:
  2519                           
  2520                           ; 4 bytes @ 0x1D
  2521     00BD                     	ds	4
  2522     00C1                     efgtoa@l:
  2523                           
  2524                           ; 4 bytes @ 0x21
  2525     00C1                     	ds	4
  2526     00C5                     efgtoa@sign:
  2527                           
  2528                           ; 1 bytes @ 0x25
  2529     00C5                     	ds	1
  2530     00C6                     efgtoa@g:
  2531                           
  2532                           ; 4 bytes @ 0x26
  2533     00C6                     	ds	4
  2534     00CA                     efgtoa@n:
  2535                           
  2536                           ; 2 bytes @ 0x2A
  2537     00CA                     	ds	2
  2538     00CC                     efgtoa@u:
  2539                           
  2540                           ; 4 bytes @ 0x2C
  2541     00CC                     	ds	4
  2542     00D0                     ?_vfpfcnvrt:
  2543     00D0                     vfpfcnvrt@fp:	
  2544                           ; 1 bytes @ 0x30
  2545                           
  2546                           
  2547                           ; 2 bytes @ 0x30
  2548     00D0                     	ds	2
  2549     00D2                     vfpfcnvrt@fmt:
  2550                           
  2551                           ; 1 bytes @ 0x32
  2552     00D2                     	ds	1
  2553     00D3                     vfpfcnvrt@ap:
  2554                           
  2555                           ; 1 bytes @ 0x33
  2556     00D3                     	ds	1
  2557     00D4                     ??_vfpfcnvrt:
  2558                           
  2559                           ; 1 bytes @ 0x34
  2560     00D4                     	ds	4
  2561     00D8                     vfpfcnvrt@convarg:
  2562                           
  2563                           ; 4 bytes @ 0x38
  2564     00D8                     	ds	4
  2565     00DC                     vfpfcnvrt@c:
  2566                           
  2567                           ; 1 bytes @ 0x3C
  2568     00DC                     	ds	1
  2569     00DD                     vfpfcnvrt@cp:
  2570                           
  2571                           ; 2 bytes @ 0x3D
  2572     00DD                     	ds	2
  2573     00DF                     ?_vfprintf:
  2574     00DF                     vfprintf@fp:	
  2575                           ; 2 bytes @ 0x3F
  2576                           
  2577                           
  2578                           ; 2 bytes @ 0x3F
  2579     00DF                     	ds	2
  2580     00E1                     vfprintf@fmt:
  2581                           
  2582                           ; 2 bytes @ 0x41
  2583     00E1                     	ds	2
  2584     00E3                     vfprintf@ap:
  2585                           
  2586                           ; 1 bytes @ 0x43
  2587     00E3                     	ds	1
  2588     00E4                     vfprintf@cfmt:
  2589                           
  2590                           ; 2 bytes @ 0x44
  2591     00E4                     	ds	2
  2592     00E6                     printf@ap:
  2593                           
  2594                           ; 1 bytes @ 0x46
  2595     00E6                     	ds	1
  2596     00E7                     ??_main:
  2597                           
  2598                           ; 1 bytes @ 0x47
  2599     00E7                     	ds	4
  2600                           
  2601                           	psect	cstackCOMMON
  2602     0076                     __pcstackCOMMON:
  2603     0076                     ?_ADC_DefaultInterruptHandler:
  2604     0076                     ?_TMR4_ISR:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607     0076                     ?_TMR4_Initialize:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610     0076                     ?_EUSART_Initialize:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613     0076                     ?_TMR4_DefaultPeriodMatchCallback:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616     0076                     ?_EUSART_Read:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619     0076                     ?_EUSART_IsRxReady:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622     0076                     ?_EUSART_IsTxReady:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625     0076                     ?_EUSART_ReceiveISR:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628     0076                     ?_EUSART_TransmitISR:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631     0076                     ?_EUSART_DefaultFramingErrorCallback:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634     0076                     ?_EUSART_DefaultOverrunErrorCallback:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637     0076                     ?_timer_interrupt:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640     0076                     ?_check_RX_Data:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643     0076                     ?_handle_buzzer:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646     0076                     ?_ADC_Initialize:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649     0076                     ?_ADC_ISR:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652     0076                     ?_CLOCK_Initialize:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655     0076                     ?_PIN_MANAGER_Initialize:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658     0076                     ?_INTERRUPT_Initialize:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661     0076                     ?_INTERRUPT_InterruptManager:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664     0076                     ?_SYSTEM_Initialize:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667     0076                     ?_TMR4_Start:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670     0076                     ?_putch:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673     0076                     ?_LED_24V_On:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676     0076                     ?_LED_24V_Off:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679     0076                     ?_LED_12V_On:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682     0076                     ?_LED_12V_Off:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685     0076                     ?i1_EUSART_Write:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688     0076                     ?_main:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691     0076                     EUSART_Read@tempRxTail:	
  2692                           ; 2 bytes @ 0x0
  2693                           
  2694     0076                     EUSART_TransmitISR@tempTxTail:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697     0076                     i1EUSART_Write@txData:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700     0076                     ??_ADC_DefaultInterruptHandler:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703     0076                     ??_TMR4_ISR:	
  2704                           ; 1 bytes @ 0x0
  2705                           
  2706     0076                     ??_TMR4_DefaultPeriodMatchCallback:	
  2707                           ; 1 bytes @ 0x0
  2708                           
  2709     0076                     ??_EUSART_Read:	
  2710                           ; 1 bytes @ 0x0
  2711                           
  2712     0076                     ??_EUSART_IsRxReady:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715     0076                     ??_EUSART_TransmitISR:	
  2716                           ; 1 bytes @ 0x0
  2717                           
  2718     0076                     ??_EUSART_DefaultFramingErrorCallback:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721     0076                     ??_EUSART_DefaultOverrunErrorCallback:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724     0076                     ??_timer_interrupt:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727     0076                     ??_ADC_ISR:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730                           
  2731                           ; 1 bytes @ 0x0
  2732     0076                     	ds	1
  2733     0077                     EUSART_Read@readValue:
  2734     0077                     i1EUSART_Write@tempTxHead:	
  2735                           ; 1 bytes @ 0x1
  2736                           
  2737     0077                     ??i1_EUSART_Write:	
  2738                           ; 1 bytes @ 0x1
  2739                           
  2740                           
  2741                           ; 1 bytes @ 0x1
  2742     0077                     	ds	1
  2743     0078                     check_RX_Data@i:
  2744     0078                     ??_check_RX_Data:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747                           
  2748                           ; 1 bytes @ 0x2
  2749     0078                     	ds	1
  2750     0079                     check_RX_Data@buf:
  2751                           
  2752                           ; 1 bytes @ 0x3
  2753     0079                     	ds	1
  2754     007A                     EUSART_ReceiveISR@regValue:
  2755     007A                     ??_EUSART_ReceiveISR:	
  2756                           ; 1 bytes @ 0x4
  2757                           
  2758                           
  2759                           ; 1 bytes @ 0x4
  2760     007A                     	ds	1
  2761     007B                     EUSART_ReceiveISR@tempRxHead:
  2762                           
  2763                           ; 1 bytes @ 0x5
  2764     007B                     	ds	1
  2765     007C                     ??_INTERRUPT_InterruptManager:
  2766                           
  2767                           	psect	cstackBANK0
  2768     0020                     __pcstackBANK0:	
  2769                           ; 1 bytes @ 0x6
  2770                           
  2771     0020                     ?_ADC_SetInterruptHandler:
  2772     0020                     ?_INT_SetInterruptHandler:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775     0020                     ?_EUSART_Write:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778     0020                     ?_EUSART_RxCompleteCallbackRegister:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781     0020                     ?_EUSART_FramingErrorCallbackRegister:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784     0020                     ?_EUSART_OverrunErrorCallbackRegister:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787     0020                     ?_delay_ms:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790     0020                     ?_strcpy:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793     0020                     ?_memcpy:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796     0020                     ?_TMR4_PeriodMatchCallbackRegister:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799     0020                     ?___fleq:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802     0020                     ?__Umul8_16:	
  2803                           ; 1 bit 
  2804                           
  2805     0020                     ?___fpclassifyf:	
  2806                           ; 2 bytes @ 0x0
  2807                           
  2808     0020                     ?_ADC_GetConversion:	
  2809                           ; 2 bytes @ 0x0
  2810                           
  2811     0020                     ?___wmul:	
  2812                           ; 2 bytes @ 0x0
  2813                           
  2814     0020                     ?_labs:	
  2815                           ; 2 bytes @ 0x0
  2816                           
  2817     0020                     ?___flneg:	
  2818                           ; 4 bytes @ 0x0
  2819                           
  2820     0020                     ?___fltol:	
  2821                           ; 4 bytes @ 0x0
  2822                           
  2823     0020                     ?___fldiv:	
  2824                           ; 4 bytes @ 0x0
  2825                           
  2826     0020                     EUSART_Write@txData:	
  2827                           ; 4 bytes @ 0x0
  2828                           
  2829     0020                     __Umul8_16@multiplicand:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832     0020                     memcpy@d1:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835     0020                     strcpy@dest:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838     0020                     ADC_SetInterruptHandler@InterruptHandler:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841     0020                     INT_SetInterruptHandler@InterruptHandler:	
  2842                           ; 2 bytes @ 0x0
  2843                           
  2844     0020                     TMR4_PeriodMatchCallbackRegister@CallbackHandler:	
  2845                           ; 2 bytes @ 0x0
  2846                           
  2847     0020                     EUSART_FramingErrorCallbackRegister@callbackHandler:	
  2848                           ; 2 bytes @ 0x0
  2849                           
  2850     0020                     EUSART_OverrunErrorCallbackRegister@callbackHandler:	
  2851                           ; 2 bytes @ 0x0
  2852                           
  2853     0020                     EUSART_RxCompleteCallbackRegister@callbackHandler:	
  2854                           ; 2 bytes @ 0x0
  2855                           
  2856     0020                     delay_ms@ms:	
  2857                           ; 2 bytes @ 0x0
  2858                           
  2859     0020                     ___wmul@multiplier:	
  2860                           ; 2 bytes @ 0x0
  2861                           
  2862     0020                     ___fleq@ff1:	
  2863                           ; 2 bytes @ 0x0
  2864                           
  2865     0020                     ___flneg@f1:	
  2866                           ; 4 bytes @ 0x0
  2867                           
  2868     0020                     ___fltol@f1:	
  2869                           ; 4 bytes @ 0x0
  2870                           
  2871     0020                     ___fldiv@a:	
  2872                           ; 4 bytes @ 0x0
  2873                           
  2874     0020                     ___fpclassifyf@x:	
  2875                           ; 4 bytes @ 0x0
  2876                           
  2877     0020                     labs@a:	
  2878                           ; 4 bytes @ 0x0
  2879                           
  2880     0020                     ??_TMR4_Initialize:	
  2881                           ; 4 bytes @ 0x0
  2882                           
  2883     0020                     ??_EUSART_IsTxReady:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886     0020                     ??_CLOCK_Initialize:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889     0020                     ??_PIN_MANAGER_Initialize:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892     0020                     ??_TMR4_Start:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895     0020                     ??_LED_24V_On:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898     0020                     ??_LED_24V_Off:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901     0020                     ??_LED_12V_On:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904     0020                     ??_LED_12V_Off:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907                           
  2908                           ; 1 bytes @ 0x0
  2909     0020                     	ds	1
  2910     0021                     EUSART_Write@tempTxHead:
  2911     0021                     memcpy@s1:	
  2912                           ; 1 bytes @ 0x1
  2913                           
  2914     0021                     strcpy@src:	
  2915                           ; 1 bytes @ 0x1
  2916                           
  2917     0021                     ??_EUSART_Write:	
  2918                           ; 2 bytes @ 0x1
  2919                           
  2920                           
  2921                           ; 1 bytes @ 0x1
  2922     0021                     	ds	1
  2923     0022                     putch@txData:
  2924     0022                     ___wmul@multiplicand:	
  2925                           ; 1 bytes @ 0x2
  2926                           
  2927     0022                     memcpy@n:	
  2928                           ; 2 bytes @ 0x2
  2929                           
  2930     0022                     ??_ADC_SetInterruptHandler:	
  2931                           ; 2 bytes @ 0x2
  2932                           
  2933     0022                     ??_INT_SetInterruptHandler:	
  2934                           ; 1 bytes @ 0x2
  2935                           
  2936     0022                     ??_EUSART_Initialize:	
  2937                           ; 1 bytes @ 0x2
  2938                           
  2939     0022                     ??_EUSART_RxCompleteCallbackRegister:	
  2940                           ; 1 bytes @ 0x2
  2941                           
  2942     0022                     ??_EUSART_FramingErrorCallbackRegister:	
  2943                           ; 1 bytes @ 0x2
  2944                           
  2945     0022                     ??_EUSART_OverrunErrorCallbackRegister:	
  2946                           ; 1 bytes @ 0x2
  2947                           
  2948     0022                     ??_delay_ms:	
  2949                           ; 1 bytes @ 0x2
  2950                           
  2951     0022                     ??__Umul8_16:	
  2952                           ; 1 bytes @ 0x2
  2953                           
  2954     0022                     ??_ADC_Initialize:	
  2955                           ; 1 bytes @ 0x2
  2956                           
  2957     0022                     ??_ADC_GetConversion:	
  2958                           ; 1 bytes @ 0x2
  2959                           
  2960     0022                     ??_INTERRUPT_Initialize:	
  2961                           ; 1 bytes @ 0x2
  2962                           
  2963     0022                     ??_SYSTEM_Initialize:	
  2964                           ; 1 bytes @ 0x2
  2965                           
  2966     0022                     ??_TMR4_PeriodMatchCallbackRegister:	
  2967                           ; 1 bytes @ 0x2
  2968                           
  2969     0022                     ??_putch:	
  2970                           ; 1 bytes @ 0x2
  2971                           
  2972                           
  2973                           ; 1 bytes @ 0x2
  2974     0022                     	ds	1
  2975     0023                     ?_fputc:
  2976     0023                     ADC_GetConversion@channel:	
  2977                           ; 2 bytes @ 0x3
  2978                           
  2979     0023                     delay_ms@i:	
  2980                           ; 1 bytes @ 0x3
  2981                           
  2982     0023                     fputc@c:	
  2983                           ; 2 bytes @ 0x3
  2984                           
  2985     0023                     ??_strcpy:	
  2986                           ; 2 bytes @ 0x3
  2987                           
  2988                           
  2989                           ; 1 bytes @ 0x3
  2990     0023                     	ds	1
  2991     0024                     ?___xxtofl:
  2992     0024                     memcpy@tmp:	
  2993                           ; 4 bytes @ 0x4
  2994                           
  2995     0024                     ___wmul@product:	
  2996                           ; 1 bytes @ 0x4
  2997                           
  2998     0024                     __Umul8_16@product:	
  2999                           ; 2 bytes @ 0x4
  3000                           
  3001     0024                     ___fleq@ff2:	
  3002                           ; 2 bytes @ 0x4
  3003                           
  3004     0024                     ___fldiv@b:	
  3005                           ; 4 bytes @ 0x4
  3006                           
  3007     0024                     ___xxtofl@val:	
  3008                           ; 4 bytes @ 0x4
  3009                           
  3010     0024                     ??___fpclassifyf:	
  3011                           ; 4 bytes @ 0x4
  3012                           
  3013     0024                     ??_labs:	
  3014                           ; 1 bytes @ 0x4
  3015                           
  3016     0024                     ??_memcpy:	
  3017                           ; 1 bytes @ 0x4
  3018                           
  3019     0024                     ??___wmul:	
  3020                           ; 1 bytes @ 0x4
  3021                           
  3022     0024                     ??___flneg:	
  3023                           ; 1 bytes @ 0x4
  3024                           
  3025     0024                     ??___fltol:	
  3026                           ; 1 bytes @ 0x4
  3027                           
  3028                           
  3029                           ; 1 bytes @ 0x4
  3030     0024                     	ds	1
  3031     0025                     handle_buzzer@i:
  3032     0025                     memcpy@d:	
  3033                           ; 1 bytes @ 0x5
  3034                           
  3035     0025                     strcpy@d:	
  3036                           ; 1 bytes @ 0x5
  3037                           
  3038     0025                     fputc@fp:	
  3039                           ; 1 bytes @ 0x5
  3040                           
  3041     0025                     ??_handle_buzzer:	
  3042                           ; 2 bytes @ 0x5
  3043                           
  3044                           
  3045                           ; 1 bytes @ 0x5
  3046     0025                     	ds	1
  3047     0026                     ?_read_prec_or_width:
  3048     0026                     read_prec_or_width@fmt:	
  3049                           ; 2 bytes @ 0x6
  3050                           
  3051     0026                     memcpy@s:	
  3052                           ; 1 bytes @ 0x6
  3053                           
  3054     0026                     __Umul8_16@word_mpld:	
  3055                           ; 1 bytes @ 0x6
  3056                           
  3057                           
  3058                           ; 2 bytes @ 0x6
  3059     0026                     	ds	1
  3060     0027                     read_prec_or_width@ap:
  3061     0027                     ??_fputc:	
  3062                           ; 1 bytes @ 0x7
  3063                           
  3064                           
  3065                           ; 1 bytes @ 0x7
  3066     0027                     	ds	1
  3067     0028                     ___fltol@sign1:
  3068     0028                     __Umul8_16@multiplier:	
  3069                           ; 1 bytes @ 0x8
  3070                           
  3071     0028                     ??___fleq:	
  3072                           ; 1 bytes @ 0x8
  3073                           
  3074     0028                     ??___fldiv:	
  3075                           ; 1 bytes @ 0x8
  3076                           
  3077     0028                     ??___xxtofl:	
  3078                           ; 1 bytes @ 0x8
  3079                           
  3080     0028                     ??_read_prec_or_width:	
  3081                           ; 1 bytes @ 0x8
  3082                           
  3083                           
  3084                           ; 1 bytes @ 0x8
  3085     0028                     	ds	1
  3086     0029                     ___fltol@exp1:
  3087                           
  3088                           ; 1 bytes @ 0x9
  3089     0029                     	ds	1
  3090     002A                     ___fpclassifyf@e:
  3091                           
  3092                           ; 2 bytes @ 0xA
  3093     002A                     	ds	1
  3094     002B                     read_prec_or_width@c:
  3095                           
  3096                           ; 1 bytes @ 0xB
  3097     002B                     	ds	1
  3098     002C                     ?_fputs:
  3099     002C                     ___xxtofl@sign:	
  3100                           ; 2 bytes @ 0xC
  3101                           
  3102     002C                     fputs@s:	
  3103                           ; 1 bytes @ 0xC
  3104                           
  3105     002C                     read_prec_or_width@n:	
  3106                           ; 1 bytes @ 0xC
  3107                           
  3108     002C                     ___fpclassifyf@u:	
  3109                           ; 2 bytes @ 0xC
  3110                           
  3111                           
  3112                           ; 4 bytes @ 0xC
  3113     002C                     	ds	1
  3114     002D                     ___xxtofl@exp:
  3115     002D                     fputs@fp:	
  3116                           ; 1 bytes @ 0xD
  3117                           
  3118     002D                     ___fldiv@rem:	
  3119                           ; 2 bytes @ 0xD
  3120                           
  3121                           
  3122                           ; 4 bytes @ 0xD
  3123     002D                     	ds	1
  3124     002E                     ___xxtofl@arg:
  3125                           
  3126                           ; 4 bytes @ 0xE
  3127     002E                     	ds	1
  3128     002F                     ??_fputs:
  3129                           
  3130                           ; 1 bytes @ 0xF
  3131     002F                     	ds	2
  3132     0031                     ___fldiv@sign:
  3133     0031                     fputs@c:	
  3134                           ; 1 bytes @ 0x11
  3135                           
  3136                           
  3137                           ; 1 bytes @ 0x11
  3138     0031                     	ds	1
  3139     0032                     ?___flmul:
  3140     0032                     ___fldiv@new_exp:	
  3141                           ; 4 bytes @ 0x12
  3142                           
  3143     0032                     fputs@i:	
  3144                           ; 2 bytes @ 0x12
  3145                           
  3146     0032                     ___flmul@b:	
  3147                           ; 2 bytes @ 0x12
  3148                           
  3149                           
  3150                           ; 4 bytes @ 0x12
  3151     0032                     	ds	2
  3152     0034                     ?_pad:
  3153     0034                     pad@fp:	
  3154                           ; 1 bytes @ 0x14
  3155                           
  3156     0034                     ___fldiv@grs:	
  3157                           ; 2 bytes @ 0x14
  3158                           
  3159                           
  3160                           ; 4 bytes @ 0x14
  3161     0034                     	ds	2
  3162     0036                     pad@buf:
  3163     0036                     ___flmul@a:	
  3164                           ; 1 bytes @ 0x16
  3165                           
  3166                           
  3167                           ; 4 bytes @ 0x16
  3168     0036                     	ds	1
  3169     0037                     pad@p:
  3170                           
  3171                           ; 2 bytes @ 0x17
  3172     0037                     	ds	1
  3173     0038                     ___fldiv@bexp:
  3174                           
  3175                           ; 1 bytes @ 0x18
  3176     0038                     	ds	1
  3177     0039                     ___fldiv@aexp:
  3178     0039                     ??_pad:	
  3179                           ; 1 bytes @ 0x19
  3180                           
  3181                           
  3182                           ; 1 bytes @ 0x19
  3183     0039                     	ds	1
  3184     003A                     ?_floorf:
  3185     003A                     pad@i:	
  3186                           ; 4 bytes @ 0x1A
  3187                           
  3188     003A                     floorf@x:	
  3189                           ; 2 bytes @ 0x1A
  3190                           
  3191     003A                     ??___flmul:	
  3192                           ; 4 bytes @ 0x1A
  3193                           
  3194                           
  3195                           ; 1 bytes @ 0x1A
  3196     003A                     	ds	4
  3197     003E                     ??_floorf:
  3198                           
  3199                           ; 1 bytes @ 0x1E
  3200     003E                     	ds	1
  3201     003F                     ___flmul@sign:
  3202                           
  3203                           ; 1 bytes @ 0x1F
  3204     003F                     	ds	1
  3205     0040                     ___flmul@aexp:
  3206                           
  3207                           ; 1 bytes @ 0x20
  3208     0040                     	ds	1
  3209     0041                     ___flmul@grs:
  3210                           
  3211                           ; 4 bytes @ 0x21
  3212     0041                     	ds	3
  3213     0044                     floorf@m:
  3214                           
  3215                           ; 4 bytes @ 0x24
  3216     0044                     	ds	1
  3217     0045                     ___flmul@bexp:
  3218                           
  3219                           ; 1 bytes @ 0x25
  3220     0045                     	ds	1
  3221     0046                     ___flmul@prod:
  3222                           
  3223                           ; 4 bytes @ 0x26
  3224     0046                     	ds	2
  3225     0048                     floorf@e:
  3226                           
  3227                           ; 2 bytes @ 0x28
  3228     0048                     	ds	2
  3229     004A                     ___flmul@temp:
  3230     004A                     floorf@u:	
  3231                           ; 2 bytes @ 0x2A
  3232                           
  3233                           
  3234                           ; 4 bytes @ 0x2A
  3235     004A                     	ds	2
  3236     004C                     ?___flge:
  3237     004C                     ?___fladd:	
  3238                           ; 1 bit 
  3239                           
  3240     004C                     ___flge@ff1:	
  3241                           ; 4 bytes @ 0x2C
  3242                           
  3243     004C                     ___fladd@b:	
  3244                           ; 4 bytes @ 0x2C
  3245                           
  3246                           
  3247                           ; 4 bytes @ 0x2C
  3248     004C                     	ds	4
  3249     0050                     ___flge@ff2:
  3250     0050                     ___fladd@a:	
  3251                           ; 4 bytes @ 0x30
  3252                           
  3253                           
  3254                           ; 4 bytes @ 0x30
  3255     0050                     	ds	4
  3256     0054                     ??___flge:
  3257     0054                     ??___fladd:	
  3258                           ; 1 bytes @ 0x34
  3259                           
  3260                           
  3261                           ; 1 bytes @ 0x34
  3262     0054                     	ds	4
  3263     0058                     ?_handle_voltage:
  3264     0058                     handle_voltage@voltage:	
  3265                           ; 1 bytes @ 0x38
  3266                           
  3267                           
  3268                           ; 4 bytes @ 0x38
  3269     0058                     	ds	4
  3270     005C                     ___fladd@signs:
  3271     005C                     handle_voltage@threshold:	
  3272                           ; 1 bytes @ 0x3C
  3273                           
  3274                           
  3275                           ; 4 bytes @ 0x3C
  3276     005C                     	ds	1
  3277     005D                     ___fladd@aexp:
  3278                           
  3279                           ; 1 bytes @ 0x3D
  3280     005D                     	ds	1
  3281     005E                     ___fladd@bexp:
  3282                           
  3283                           ; 1 bytes @ 0x3E
  3284     005E                     	ds	1
  3285     005F                     ___fladd@grs:
  3286                           
  3287                           ; 1 bytes @ 0x3F
  3288     005F                     	ds	1
  3289     0060                     ?___flsub:
  3290     0060                     handle_voltage@mode:	
  3291                           ; 4 bytes @ 0x40
  3292                           
  3293     0060                     ___flsub@a:	
  3294                           ; 1 bytes @ 0x40
  3295                           
  3296                           
  3297                           ; 4 bytes @ 0x40
  3298     0060                     	ds	1
  3299     0061                     handle_voltage@reset_flg:
  3300                           
  3301                           ; 1 bytes @ 0x41
  3302     0061                     	ds	1
  3303     0062                     handle_voltage@LED_SetHigh:
  3304                           
  3305                           ; 2 bytes @ 0x42
  3306     0062                     	ds	2
  3307     0064                     handle_voltage@LED_SetLow:
  3308     0064                     ___flsub@b:	
  3309                           ; 2 bytes @ 0x44
  3310                           
  3311                           
  3312                           ; 4 bytes @ 0x44
  3313     0064                     	ds	2
  3314     0066                     ??_handle_voltage:
  3315                           
  3316                           ; 1 bytes @ 0x46
  3317     0066                     	ds	2
  3318     0068                     ?_efgtoa:
  3319     0068                     efgtoa@fp:	
  3320                           ; 1 bytes @ 0x48
  3321                           
  3322     0068                     ??___flsub:	
  3323                           ; 2 bytes @ 0x48
  3324                           
  3325                           
  3326                           ; 1 bytes @ 0x48
  3327     0068                     	ds	2
  3328     006A                     efgtoa@f:
  3329                           
  3330                           ; 4 bytes @ 0x4A
  3331     006A                     	ds	4
  3332     006E                     efgtoa@c:
  3333                           
  3334                           ; 1 bytes @ 0x4E
  3335     006E                     	ds	1
  3336     006F                     ??_vfprintf:
  3337                           
  3338                           ; 1 bytes @ 0x4F
  3339     006F                     	ds	1
  3340     0070                     ??_printf:
  3341                           
  3342                           	psect	maintext
  3343     09D8                     __pmaintext:	
  3344                           ; 1 bytes @ 0x50
  3345 ;;
  3346 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3347 ;;
  3348 ;; *************** function _main *****************
  3349 ;; Defined at:
  3350 ;;		line 36 in file "main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  2  548[None  ] int 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : B1F/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;      Locals:         0       0       0       0       8       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;      Totals:         0       0       4       0       8       0       0       0       0       0       0       0       
      +0       0
  3368 ;;Total ram usage:       12 bytes
  3369 ;; Hardware stack levels required when called: 13
  3370 ;; This function calls:
  3371 ;;		_ADC_GetConversion
  3372 ;;		_EUSART_RxCompleteCallbackRegister
  3373 ;;		_SYSTEM_Initialize
  3374 ;;		_TMR4_PeriodMatchCallbackRegister
  3375 ;;		_TMR4_Start
  3376 ;;		___fladd
  3377 ;;		___flge
  3378 ;;		___flmul
  3379 ;;		___xxtofl
  3380 ;;		_delay_ms
  3381 ;;		_handle_voltage
  3382 ;;		_printf
  3383 ;; This function is called by:
  3384 ;;		Startup code after reset
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     09D8                     _main:	
  3389                           ;psect for function _main
  3390                           
  3391     09D8                     l5750:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3394                           
  3395                           
  3396                           ;main.c: 38:     SYSTEM_Initialize();
  3397     09D8  319E  26A1  3189   	fcall	_SYSTEM_Initialize
  3398     09DB                     l5752:
  3399                           
  3400                           ;main.c: 39:     (INTCONbits.GIE = 1);
  3401     09DB  178B               	bsf	11,7	;volatile
  3402     09DC                     l5754:
  3403                           
  3404                           ;main.c: 40:     (INTCONbits.PEIE = 1);
  3405     09DC  170B               	bsf	11,6	;volatile
  3406     09DD                     l5756:
  3407                           
  3408                           ;main.c: 41:     TMR4_Start();
  3409     09DD  319D  25E6  3189   	fcall	_TMR4_Start
  3410     09E0                     l5758:
  3411                           
  3412                           ;main.c: 42:     TMR4_PeriodMatchCallbackRegister(timer_interrupt);
  3413     09E0  3045               	movlw	low _timer_interrupt
  3414     09E1  0020               	movlb	0	; select bank0
  3415     09E2  00A0               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler
  3416     09E3  3011               	movlw	high _timer_interrupt
  3417     09E4  00A1               	movwf	TMR4_PeriodMatchCallbackRegister@CallbackHandler+1
  3418     09E5  319E  2622  3189   	fcall	_TMR4_PeriodMatchCallbackRegister
  3419     09E8                     l5760:
  3420                           
  3421                           ;main.c: 43:     EUSART_RxCompleteCallbackRegister(check_RX_Data);
  3422     09E8  3062               	movlw	low _check_RX_Data
  3423     09E9  0020               	movlb	0	; select bank0
  3424     09EA  00A0               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler
  3425     09EB  301F               	movlw	high _check_RX_Data
  3426     09EC  00A1               	movwf	EUSART_RxCompleteCallbackRegister@callbackHandler+1
  3427     09ED  319E  2652  3189   	fcall	_EUSART_RxCompleteCallbackRegister
  3428     09F0                     l5762:
  3429                           
  3430                           ;main.c: 45:     printf("SAZANKA_PowerBoard2024\n");
  3431     09F0  304B               	movlw	low (STR_1| (0+32768))
  3432     09F1  0022               	movlb	2	; select bank2
  3433     09F2  00DB               	movwf	printf@fmt^(0+256)
  3434     09F3  3098               	movlw	high (STR_1| (0+32768))
  3435     09F4  00DC               	movwf	(printf@fmt^(0+256)+1)
  3436     09F5  319E  26C8  3189   	fcall	_printf
  3437     09F8                     l5764:
  3438                           
  3439                           ;main.c: 46:     printf("Created by KimuraTomohiro\n");
  3440     09F8  3030               	movlw	low (STR_2| (0+32768))
  3441     09F9  0022               	movlb	2	; select bank2
  3442     09FA  00DB               	movwf	printf@fmt^(0+256)
  3443     09FB  3098               	movlw	high (STR_2| (0+32768))
  3444     09FC  00DC               	movwf	(printf@fmt^(0+256)+1)
  3445     09FD  319E  26C8  3189   	fcall	_printf
  3446     0A00                     l5766:
  3447                           
  3448                           ;main.c: 53:         voltage_24 = ADC_GetConversion(VREF_24V) * 0.0008789 + -3.3375;
  3449     0A00  30C0               	movlw	192
  3450     0A01  0020               	movlb	0	; select bank0
  3451     0A02  00CF               	movwf	___fladd@b+3
  3452     0A03  3055               	movlw	85
  3453     0A04  00CE               	movwf	___fladd@b+2
  3454     0A05  3099               	movlw	153
  3455     0A06  00CD               	movwf	___fladd@b+1
  3456     0A07  309A               	movlw	154
  3457     0A08  00CC               	movwf	___fladd@b
  3458     0A09  303A               	movlw	58
  3459     0A0A  00B5               	movwf	___flmul@b+3
  3460     0A0B  3066               	movlw	102
  3461     0A0C  00B4               	movwf	___flmul@b+2
  3462     0A0D  3065               	movlw	101
  3463     0A0E  00B3               	movwf	___flmul@b+1
  3464     0A0F  30FB               	movlw	251
  3465     0A10  00B2               	movwf	___flmul@b
  3466     0A11  3005               	movlw	5
  3467     0A12  3190  2022  3189   	fcall	_ADC_GetConversion
  3468     0A15  0020               	movlb	0	; select bank0
  3469     0A16  0820               	movf	?_ADC_GetConversion,w
  3470     0A17  0021               	movlb	1	; select bank1
  3471     0A18  00E7               	movwf	??_main^(0+128)
  3472     0A19  0020               	movlb	0	; select bank0
  3473     0A1A  0821               	movf	?_ADC_GetConversion+1,w
  3474     0A1B  0021               	movlb	1	; select bank1
  3475     0A1C  00E8               	movwf	(??_main^(0+128)+1)
  3476     0A1D  01E9               	clrf	(??_main^(0+128)+2)
  3477     0A1E  01EA               	clrf	(??_main^(0+128)+3)
  3478     0A1F  086A               	movf	(??_main+3)^(0+128),w
  3479     0A20  0020               	movlb	0	; select bank0
  3480     0A21  00A7               	movwf	___xxtofl@val+3
  3481     0A22  0021               	movlb	1	; select bank1
  3482     0A23  0869               	movf	(??_main+2)^(0+128),w
  3483     0A24  0020               	movlb	0	; select bank0
  3484     0A25  00A6               	movwf	___xxtofl@val+2
  3485     0A26  0021               	movlb	1	; select bank1
  3486     0A27  0868               	movf	(??_main+1)^(0+128),w
  3487     0A28  0020               	movlb	0	; select bank0
  3488     0A29  00A5               	movwf	___xxtofl@val+1
  3489     0A2A  0021               	movlb	1	; select bank1
  3490     0A2B  0867               	movf	??_main^(0+128),w
  3491     0A2C  0020               	movlb	0	; select bank0
  3492     0A2D  00A4               	movwf	___xxtofl@val
  3493     0A2E  3000               	movlw	0
  3494     0A2F  3187  2733  3189   	fcall	___xxtofl
  3495     0A32  0020               	movlb	0	; select bank0
  3496     0A33  0827               	movf	?___xxtofl+3,w
  3497     0A34  00B9               	movwf	___flmul@a+3
  3498     0A35  0826               	movf	?___xxtofl+2,w
  3499     0A36  00B8               	movwf	___flmul@a+2
  3500     0A37  0825               	movf	?___xxtofl+1,w
  3501     0A38  00B7               	movwf	___flmul@a+1
  3502     0A39  0824               	movf	?___xxtofl,w
  3503     0A3A  00B6               	movwf	___flmul@a
  3504     0A3B  318D  25C5  3189   	fcall	___flmul
  3505     0A3E  0020               	movlb	0	; select bank0
  3506     0A3F  0835               	movf	?___flmul+3,w
  3507     0A40  00D3               	movwf	___fladd@a+3
  3508     0A41  0834               	movf	?___flmul+2,w
  3509     0A42  00D2               	movwf	___fladd@a+2
  3510     0A43  0833               	movf	?___flmul+1,w
  3511     0A44  00D1               	movwf	___fladd@a+1
  3512     0A45  0832               	movf	?___flmul,w
  3513     0A46  00D0               	movwf	___fladd@a
  3514     0A47  318B  23B9  3189   	fcall	___fladd
  3515     0A4A  0020               	movlb	0	; select bank0
  3516     0A4B  084F               	movf	?___fladd+3,w
  3517     0A4C  0022               	movlb	2	; select bank2
  3518     0A4D  00C3               	movwf	(_voltage_24+3)^(0+256)
  3519     0A4E  0020               	movlb	0	; select bank0
  3520     0A4F  084E               	movf	?___fladd+2,w
  3521     0A50  0022               	movlb	2	; select bank2
  3522     0A51  00C2               	movwf	(_voltage_24+2)^(0+256)
  3523     0A52  0020               	movlb	0	; select bank0
  3524     0A53  084D               	movf	?___fladd+1,w
  3525     0A54  0022               	movlb	2	; select bank2
  3526     0A55  00C1               	movwf	(_voltage_24+1)^(0+256)
  3527     0A56  0020               	movlb	0	; select bank0
  3528     0A57  084C               	movf	?___fladd,w
  3529     0A58  0022               	movlb	2	; select bank2
  3530     0A59  00C0               	movwf	_voltage_24^(0+256)
  3531     0A5A                     l5768:
  3532                           
  3533                           ;main.c: 54:         voltage_12 = ADC_GetConversion(VREF_12V) * 0.00042613636 + -1.52727
      +                          272;
  3534     0A5A  30BF               	movlw	191
  3535     0A5B  0020               	movlb	0	; select bank0
  3536     0A5C  00CF               	movwf	___fladd@b+3
  3537     0A5D  30C3               	movlw	195
  3538     0A5E  00CE               	movwf	___fladd@b+2
  3539     0A5F  307D               	movlw	125
  3540     0A60  00CD               	movwf	___fladd@b+1
  3541     0A61  30AC               	movlw	172
  3542     0A62  00CC               	movwf	___fladd@b
  3543     0A63  3039               	movlw	57
  3544     0A64  00B5               	movwf	___flmul@b+3
  3545     0A65  30DF               	movlw	223
  3546     0A66  00B4               	movwf	___flmul@b+2
  3547     0A67  306B               	movlw	107
  3548     0A68  00B3               	movwf	___flmul@b+1
  3549     0A69  300E               	movlw	14
  3550     0A6A  00B2               	movwf	___flmul@b
  3551     0A6B  3006               	movlw	6
  3552     0A6C  3190  2022  3189   	fcall	_ADC_GetConversion
  3553     0A6F  0020               	movlb	0	; select bank0
  3554     0A70  0820               	movf	?_ADC_GetConversion,w
  3555     0A71  0021               	movlb	1	; select bank1
  3556     0A72  00E7               	movwf	??_main^(0+128)
  3557     0A73  0020               	movlb	0	; select bank0
  3558     0A74  0821               	movf	?_ADC_GetConversion+1,w
  3559     0A75  0021               	movlb	1	; select bank1
  3560     0A76  00E8               	movwf	(??_main^(0+128)+1)
  3561     0A77  01E9               	clrf	(??_main^(0+128)+2)
  3562     0A78  01EA               	clrf	(??_main^(0+128)+3)
  3563     0A79  086A               	movf	(??_main+3)^(0+128),w
  3564     0A7A  0020               	movlb	0	; select bank0
  3565     0A7B  00A7               	movwf	___xxtofl@val+3
  3566     0A7C  0021               	movlb	1	; select bank1
  3567     0A7D  0869               	movf	(??_main+2)^(0+128),w
  3568     0A7E  0020               	movlb	0	; select bank0
  3569     0A7F  00A6               	movwf	___xxtofl@val+2
  3570     0A80  0021               	movlb	1	; select bank1
  3571     0A81  0868               	movf	(??_main+1)^(0+128),w
  3572     0A82  0020               	movlb	0	; select bank0
  3573     0A83  00A5               	movwf	___xxtofl@val+1
  3574     0A84  0021               	movlb	1	; select bank1
  3575     0A85  0867               	movf	??_main^(0+128),w
  3576     0A86  0020               	movlb	0	; select bank0
  3577     0A87  00A4               	movwf	___xxtofl@val
  3578     0A88  3000               	movlw	0
  3579     0A89  3187  2733  3189   	fcall	___xxtofl
  3580     0A8C  0020               	movlb	0	; select bank0
  3581     0A8D  0827               	movf	?___xxtofl+3,w
  3582     0A8E  00B9               	movwf	___flmul@a+3
  3583     0A8F  0826               	movf	?___xxtofl+2,w
  3584     0A90  00B8               	movwf	___flmul@a+2
  3585     0A91  0825               	movf	?___xxtofl+1,w
  3586     0A92  00B7               	movwf	___flmul@a+1
  3587     0A93  0824               	movf	?___xxtofl,w
  3588     0A94  00B6               	movwf	___flmul@a
  3589     0A95  318D  25C5  3189   	fcall	___flmul
  3590     0A98  0020               	movlb	0	; select bank0
  3591     0A99  0835               	movf	?___flmul+3,w
  3592     0A9A  00D3               	movwf	___fladd@a+3
  3593     0A9B  0834               	movf	?___flmul+2,w
  3594     0A9C  00D2               	movwf	___fladd@a+2
  3595     0A9D  0833               	movf	?___flmul+1,w
  3596     0A9E  00D1               	movwf	___fladd@a+1
  3597     0A9F  0832               	movf	?___flmul,w
  3598     0AA0  00D0               	movwf	___fladd@a
  3599     0AA1  318B  23B9  3189   	fcall	___fladd
  3600     0AA4  0020               	movlb	0	; select bank0
  3601     0AA5  084F               	movf	?___fladd+3,w
  3602     0AA6  0022               	movlb	2	; select bank2
  3603     0AA7  00C7               	movwf	(_voltage_12+3)^(0+256)
  3604     0AA8  0020               	movlb	0	; select bank0
  3605     0AA9  084E               	movf	?___fladd+2,w
  3606     0AAA  0022               	movlb	2	; select bank2
  3607     0AAB  00C6               	movwf	(_voltage_12+2)^(0+256)
  3608     0AAC  0020               	movlb	0	; select bank0
  3609     0AAD  084D               	movf	?___fladd+1,w
  3610     0AAE  0022               	movlb	2	; select bank2
  3611     0AAF  00C5               	movwf	(_voltage_12+1)^(0+256)
  3612     0AB0  0020               	movlb	0	; select bank0
  3613     0AB1  084C               	movf	?___fladd,w
  3614     0AB2  0022               	movlb	2	; select bank2
  3615     0AB3  00C4               	movwf	_voltage_12^(0+256)
  3616     0AB4                     l5770:
  3617                           
  3618                           ;main.c: 56:         printf("VH:%.1f VL:%.1f\n", (voltage_24 > 9.0) ? voltage_24 : 0,
  3619     0AB4  3040               	movlw	64
  3620     0AB5  0020               	movlb	0	; select bank0
  3621     0AB6  00CF               	movwf	___flge@ff1+3
  3622     0AB7  30C0               	movlw	192
  3623     0AB8  00CE               	movwf	___flge@ff1+2
  3624     0AB9  3000               	movlw	0
  3625     0ABA  00CD               	movwf	___flge@ff1+1
  3626     0ABB  3000               	movlw	0
  3627     0ABC  00CC               	movwf	___flge@ff1
  3628     0ABD  0022               	movlb	2	; select bank2
  3629     0ABE  0847               	movf	(_voltage_12+3)^(0+256),w
  3630     0ABF  0020               	movlb	0	; select bank0
  3631     0AC0  00D3               	movwf	___flge@ff2+3
  3632     0AC1  0022               	movlb	2	; select bank2
  3633     0AC2  0846               	movf	(_voltage_12+2)^(0+256),w
  3634     0AC3  0020               	movlb	0	; select bank0
  3635     0AC4  00D2               	movwf	___flge@ff2+2
  3636     0AC5  0022               	movlb	2	; select bank2
  3637     0AC6  0845               	movf	(_voltage_12+1)^(0+256),w
  3638     0AC7  0020               	movlb	0	; select bank0
  3639     0AC8  00D1               	movwf	___flge@ff2+1
  3640     0AC9  0022               	movlb	2	; select bank2
  3641     0ACA  0844               	movf	_voltage_12^(0+256),w
  3642     0ACB  0020               	movlb	0	; select bank0
  3643     0ACC  00D0               	movwf	___flge@ff2
  3644     0ACD  3193  23D4  3189   	fcall	___flge
  3645     0AD0  1C03               	btfss	3,0
  3646     0AD1  2AD3               	goto	u8181
  3647     0AD2  2AD4               	goto	u8180
  3648     0AD3                     u8181:
  3649     0AD3  2ADE               	goto	l5774
  3650     0AD4                     u8180:
  3651     0AD4                     l5772:
  3652     0AD4  3000               	movlw	0
  3653     0AD5  0023               	movlb	3	; select bank3
  3654     0AD6  00AB               	movwf	(_main$1109+3)^(0+384)
  3655     0AD7  3000               	movlw	0
  3656     0AD8  00AA               	movwf	(_main$1109+2)^(0+384)
  3657     0AD9  3000               	movlw	0
  3658     0ADA  00A9               	movwf	(_main$1109+1)^(0+384)
  3659     0ADB  3000               	movlw	0
  3660     0ADC  00A8               	movwf	_main$1109^(0+384)
  3661     0ADD  2AEE               	goto	l5776
  3662     0ADE                     l5774:
  3663     0ADE  0022               	movlb	2	; select bank2
  3664     0ADF  0847               	movf	(_voltage_12+3)^(0+256),w
  3665     0AE0  0023               	movlb	3	; select bank3
  3666     0AE1  00AB               	movwf	(_main$1109+3)^(0+384)
  3667     0AE2  0022               	movlb	2	; select bank2
  3668     0AE3  0846               	movf	(_voltage_12+2)^(0+256),w
  3669     0AE4  0023               	movlb	3	; select bank3
  3670     0AE5  00AA               	movwf	(_main$1109+2)^(0+384)
  3671     0AE6  0022               	movlb	2	; select bank2
  3672     0AE7  0845               	movf	(_voltage_12+1)^(0+256),w
  3673     0AE8  0023               	movlb	3	; select bank3
  3674     0AE9  00A9               	movwf	(_main$1109+1)^(0+384)
  3675     0AEA  0022               	movlb	2	; select bank2
  3676     0AEB  0844               	movf	_voltage_12^(0+256),w
  3677     0AEC  0023               	movlb	3	; select bank3
  3678     0AED  00A8               	movwf	_main$1109^(0+384)
  3679     0AEE                     l5776:
  3680     0AEE  3041               	movlw	65
  3681     0AEF  0020               	movlb	0	; select bank0
  3682     0AF0  00CF               	movwf	___flge@ff1+3
  3683     0AF1  3010               	movlw	16
  3684     0AF2  00CE               	movwf	___flge@ff1+2
  3685     0AF3  3000               	movlw	0
  3686     0AF4  00CD               	movwf	___flge@ff1+1
  3687     0AF5  3000               	movlw	0
  3688     0AF6  00CC               	movwf	___flge@ff1
  3689     0AF7  0022               	movlb	2	; select bank2
  3690     0AF8  0843               	movf	(_voltage_24+3)^(0+256),w
  3691     0AF9  0020               	movlb	0	; select bank0
  3692     0AFA  00D3               	movwf	___flge@ff2+3
  3693     0AFB  0022               	movlb	2	; select bank2
  3694     0AFC  0842               	movf	(_voltage_24+2)^(0+256),w
  3695     0AFD  0020               	movlb	0	; select bank0
  3696     0AFE  00D2               	movwf	___flge@ff2+2
  3697     0AFF  0022               	movlb	2	; select bank2
  3698     0B00  0841               	movf	(_voltage_24+1)^(0+256),w
  3699     0B01  0020               	movlb	0	; select bank0
  3700     0B02  00D1               	movwf	___flge@ff2+1
  3701     0B03  0022               	movlb	2	; select bank2
  3702     0B04  0840               	movf	_voltage_24^(0+256),w
  3703     0B05  0020               	movlb	0	; select bank0
  3704     0B06  00D0               	movwf	___flge@ff2
  3705     0B07  3193  23D4  3189   	fcall	___flge
  3706     0B0A  1C03               	btfss	3,0
  3707     0B0B  2B0D               	goto	u8191
  3708     0B0C  2B0E               	goto	u8190
  3709     0B0D                     u8191:
  3710     0B0D  2B18               	goto	l5780
  3711     0B0E                     u8190:
  3712     0B0E                     l5778:
  3713     0B0E  3000               	movlw	0
  3714     0B0F  0023               	movlb	3	; select bank3
  3715     0B10  00AF               	movwf	(_main$1110+3)^(0+384)
  3716     0B11  3000               	movlw	0
  3717     0B12  00AE               	movwf	(_main$1110+2)^(0+384)
  3718     0B13  3000               	movlw	0
  3719     0B14  00AD               	movwf	(_main$1110+1)^(0+384)
  3720     0B15  3000               	movlw	0
  3721     0B16  00AC               	movwf	_main$1110^(0+384)
  3722     0B17  2B28               	goto	l5782
  3723     0B18                     l5780:
  3724     0B18  0022               	movlb	2	; select bank2
  3725     0B19  0843               	movf	(_voltage_24+3)^(0+256),w
  3726     0B1A  0023               	movlb	3	; select bank3
  3727     0B1B  00AF               	movwf	(_main$1110+3)^(0+384)
  3728     0B1C  0022               	movlb	2	; select bank2
  3729     0B1D  0842               	movf	(_voltage_24+2)^(0+256),w
  3730     0B1E  0023               	movlb	3	; select bank3
  3731     0B1F  00AE               	movwf	(_main$1110+2)^(0+384)
  3732     0B20  0022               	movlb	2	; select bank2
  3733     0B21  0841               	movf	(_voltage_24+1)^(0+256),w
  3734     0B22  0023               	movlb	3	; select bank3
  3735     0B23  00AD               	movwf	(_main$1110+1)^(0+384)
  3736     0B24  0022               	movlb	2	; select bank2
  3737     0B25  0840               	movf	_voltage_24^(0+256),w
  3738     0B26  0023               	movlb	3	; select bank3
  3739     0B27  00AC               	movwf	_main$1110^(0+384)
  3740     0B28                     l5782:
  3741     0B28  3077               	movlw	low (STR_3| (0+32768))
  3742     0B29  0022               	movlb	2	; select bank2
  3743     0B2A  00DB               	movwf	printf@fmt^(0+256)
  3744     0B2B  3098               	movlw	high (STR_3| (0+32768))
  3745     0B2C  00DC               	movwf	(printf@fmt^(0+256)+1)
  3746     0B2D  0023               	movlb	3	; select bank3
  3747     0B2E  082F               	movf	(_main$1110+3)^(0+384),w
  3748     0B2F  0022               	movlb	2	; select bank2
  3749     0B30  00E0               	movwf	((?_printf+3)^(0+256)+2)
  3750     0B31  0023               	movlb	3	; select bank3
  3751     0B32  082E               	movf	(_main$1110+2)^(0+384),w
  3752     0B33  0022               	movlb	2	; select bank2
  3753     0B34  00DF               	movwf	((?_printf+2)^(0+256)+2)
  3754     0B35  0023               	movlb	3	; select bank3
  3755     0B36  082D               	movf	(_main$1110+1)^(0+384),w
  3756     0B37  0022               	movlb	2	; select bank2
  3757     0B38  00DE               	movwf	((?_printf+1)^(0+256)+2)
  3758     0B39  0023               	movlb	3	; select bank3
  3759     0B3A  082C               	movf	_main$1110^(0+384),w
  3760     0B3B  0022               	movlb	2	; select bank2
  3761     0B3C  00DD               	movwf	(?_printf^(0+256)+2)
  3762     0B3D  0023               	movlb	3	; select bank3
  3763     0B3E  082B               	movf	(_main$1109+3)^(0+384),w
  3764     0B3F  0022               	movlb	2	; select bank2
  3765     0B40  00E4               	movwf	((?_printf+3)^(0+256)+6)
  3766     0B41  0023               	movlb	3	; select bank3
  3767     0B42  082A               	movf	(_main$1109+2)^(0+384),w
  3768     0B43  0022               	movlb	2	; select bank2
  3769     0B44  00E3               	movwf	((?_printf+2)^(0+256)+6)
  3770     0B45  0023               	movlb	3	; select bank3
  3771     0B46  0829               	movf	(_main$1109+1)^(0+384),w
  3772     0B47  0022               	movlb	2	; select bank2
  3773     0B48  00E2               	movwf	((?_printf+1)^(0+256)+6)
  3774     0B49  0023               	movlb	3	; select bank3
  3775     0B4A  0828               	movf	_main$1109^(0+384),w
  3776     0B4B  0022               	movlb	2	; select bank2
  3777     0B4C  00E1               	movwf	(?_printf^(0+256)+6)
  3778     0B4D  319E  26C8  3189   	fcall	_printf
  3779     0B50                     l5784:
  3780                           
  3781                           ;main.c: 59:         handle_voltage(voltage_24, 9.0, 24, &reset_flg_24, LED_24V_On, LED_
      +                          24V_Off);
  3782     0B50  0022               	movlb	2	; select bank2
  3783     0B51  0843               	movf	(_voltage_24+3)^(0+256),w
  3784     0B52  0020               	movlb	0	; select bank0
  3785     0B53  00DB               	movwf	handle_voltage@voltage+3
  3786     0B54  0022               	movlb	2	; select bank2
  3787     0B55  0842               	movf	(_voltage_24+2)^(0+256),w
  3788     0B56  0020               	movlb	0	; select bank0
  3789     0B57  00DA               	movwf	handle_voltage@voltage+2
  3790     0B58  0022               	movlb	2	; select bank2
  3791     0B59  0841               	movf	(_voltage_24+1)^(0+256),w
  3792     0B5A  0020               	movlb	0	; select bank0
  3793     0B5B  00D9               	movwf	handle_voltage@voltage+1
  3794     0B5C  0022               	movlb	2	; select bank2
  3795     0B5D  0840               	movf	_voltage_24^(0+256),w
  3796     0B5E  0020               	movlb	0	; select bank0
  3797     0B5F  00D8               	movwf	handle_voltage@voltage
  3798     0B60  3041               	movlw	65
  3799     0B61  00DF               	movwf	handle_voltage@threshold+3
  3800     0B62  3010               	movlw	16
  3801     0B63  00DE               	movwf	handle_voltage@threshold+2
  3802     0B64  3000               	movlw	0
  3803     0B65  00DD               	movwf	handle_voltage@threshold+1
  3804     0B66  3000               	movlw	0
  3805     0B67  00DC               	movwf	handle_voltage@threshold
  3806     0B68  3018               	movlw	24
  3807     0B69  00E0               	movwf	handle_voltage@mode
  3808     0B6A  306C               	movlw	(low (_reset_flg_24| (0+256)))& (0+255)
  3809     0B6B  00E1               	movwf	handle_voltage@reset_flg
  3810     0B6C  30EF               	movlw	low _LED_24V_On
  3811     0B6D  00E2               	movwf	handle_voltage@LED_SetHigh
  3812     0B6E  301D               	movlw	high _LED_24V_On
  3813     0B6F  00E3               	movwf	handle_voltage@LED_SetHigh+1
  3814     0B70  30E9               	movlw	low _LED_24V_Off
  3815     0B71  00E4               	movwf	handle_voltage@LED_SetLow
  3816     0B72  301D               	movlw	high _LED_24V_Off
  3817     0B73  00E5               	movwf	handle_voltage@LED_SetLow+1
  3818     0B74  3188  202C  3189   	fcall	_handle_voltage
  3819     0B77                     l5786:
  3820                           
  3821                           ;main.c: 60:         handle_voltage(voltage_12, 6.0, 12, &reset_flg_12, LED_12V_On, LED_
      +                          12V_Off);
  3822     0B77  0022               	movlb	2	; select bank2
  3823     0B78  0847               	movf	(_voltage_12+3)^(0+256),w
  3824     0B79  0020               	movlb	0	; select bank0
  3825     0B7A  00DB               	movwf	handle_voltage@voltage+3
  3826     0B7B  0022               	movlb	2	; select bank2
  3827     0B7C  0846               	movf	(_voltage_12+2)^(0+256),w
  3828     0B7D  0020               	movlb	0	; select bank0
  3829     0B7E  00DA               	movwf	handle_voltage@voltage+2
  3830     0B7F  0022               	movlb	2	; select bank2
  3831     0B80  0845               	movf	(_voltage_12+1)^(0+256),w
  3832     0B81  0020               	movlb	0	; select bank0
  3833     0B82  00D9               	movwf	handle_voltage@voltage+1
  3834     0B83  0022               	movlb	2	; select bank2
  3835     0B84  0844               	movf	_voltage_12^(0+256),w
  3836     0B85  0020               	movlb	0	; select bank0
  3837     0B86  00D8               	movwf	handle_voltage@voltage
  3838     0B87  3040               	movlw	64
  3839     0B88  00DF               	movwf	handle_voltage@threshold+3
  3840     0B89  30C0               	movlw	192
  3841     0B8A  00DE               	movwf	handle_voltage@threshold+2
  3842     0B8B  3000               	movlw	0
  3843     0B8C  00DD               	movwf	handle_voltage@threshold+1
  3844     0B8D  3000               	movlw	0
  3845     0B8E  00DC               	movwf	handle_voltage@threshold
  3846     0B8F  300C               	movlw	12
  3847     0B90  00E0               	movwf	handle_voltage@mode
  3848     0B91  306B               	movlw	(low (_reset_flg_12| (0+256)))& (0+255)
  3849     0B92  00E1               	movwf	handle_voltage@reset_flg
  3850     0B93  30F2               	movlw	low _LED_12V_On
  3851     0B94  00E2               	movwf	handle_voltage@LED_SetHigh
  3852     0B95  301D               	movlw	high _LED_12V_On
  3853     0B96  00E3               	movwf	handle_voltage@LED_SetHigh+1
  3854     0B97  30EC               	movlw	low _LED_12V_Off
  3855     0B98  00E4               	movwf	handle_voltage@LED_SetLow
  3856     0B99  301D               	movlw	high _LED_12V_Off
  3857     0B9A  00E5               	movwf	handle_voltage@LED_SetLow+1
  3858     0B9B  3188  202C  3189   	fcall	_handle_voltage
  3859     0B9E                     l5788:
  3860                           
  3861                           ;main.c: 63:         if(config_flg == 1)
  3862     0B9E  0022               	movlb	2	; select bank2
  3863     0B9F  035A               	decf	_config_flg^(0+256),w
  3864     0BA0  1D03               	btfss	3,2
  3865     0BA1  2BA3               	goto	u8201
  3866     0BA2  2BA4               	goto	u8200
  3867     0BA3                     u8201:
  3868     0BA3  2BA5               	goto	l5792
  3869     0BA4                     u8200:
  3870     0BA4  2BAE               	goto	l5794
  3871     0BA5                     l5792:
  3872                           
  3873                           ;main.c: 65:         delay_ms(10);
  3874     0BA5  300A               	movlw	10
  3875     0BA6  0020               	movlb	0	; select bank0
  3876     0BA7  00A0               	movwf	delay_ms@ms
  3877     0BA8  3000               	movlw	0
  3878     0BA9  00A1               	movwf	delay_ms@ms+1
  3879     0BAA  319F  2727  3189   	fcall	_delay_ms
  3880     0BAD  2A00               	goto	l5766
  3881     0BAE                     l5794:
  3882                           
  3883                           ;main.c: 71:         printf("This is config mode");
  3884     0BAE  3063               	movlw	low (STR_4| (0+32768))
  3885     0BAF  0022               	movlb	2	; select bank2
  3886     0BB0  00DB               	movwf	printf@fmt^(0+256)
  3887     0BB1  3098               	movlw	high (STR_4| (0+32768))
  3888     0BB2  00DC               	movwf	(printf@fmt^(0+256)+1)
  3889     0BB3  319E  26C8  3189   	fcall	_printf
  3890     0BB6  2BAE               	goto	l5794
  3891     0BB7  3180  284A         	ljmp	start
  3892     0BB9                     __end_of_main:
  3893                           
  3894                           	psect	text1
  3895     1EC8                     __ptext1:	
  3896 ;; *************** function _printf *****************
  3897 ;; Defined at:
  3898 ;;		line 5 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/printf.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  3901 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  ret             2    0        int 
  3904 ;;  ap              1   70[BANK1 ] PTR void [1]
  3905 ;;		 -> ?_printf(2), 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  2    0[BANK2 ] int 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3915 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;      Totals:         0       0       1      10       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;Total ram usage:       11 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 12
  3922 ;; This function calls:
  3923 ;;		_vfprintf
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     1EC8                     _printf:	
  3930                           ;psect for function _printf
  3931                           
  3932     1EC8                     l5622:	
  3933                           ;incstack = 0
  3934                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3935                           
  3936     1EC8  305D               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  3937     1EC9  0021               	movlb	1	; select bank1
  3938     1ECA  00E6               	movwf	printf@ap^(0+128)
  3939     1ECB                     l5624:
  3940     1ECB  3000               	movlw	0
  3941     1ECC  00DF               	movwf	vfprintf@fp^(0+128)
  3942     1ECD  00E0               	movwf	(vfprintf@fp+1)^(0+128)
  3943     1ECE  0022               	movlb	2	; select bank2
  3944     1ECF  085C               	movf	(printf@fmt+1)^(0+256),w
  3945     1ED0  0021               	movlb	1	; select bank1
  3946     1ED1  00E2               	movwf	(vfprintf@fmt+1)^(0+128)
  3947     1ED2  0022               	movlb	2	; select bank2
  3948     1ED3  085B               	movf	printf@fmt^(0+256),w
  3949     1ED4  0021               	movlb	1	; select bank1
  3950     1ED5  00E1               	movwf	vfprintf@fmt^(0+128)
  3951     1ED6  30E6               	movlw	(low (printf@ap| 0))& (0+255)
  3952     1ED7  00E3               	movwf	vfprintf@ap^(0+128)
  3953     1ED8  319F  2744  319E   	fcall	_vfprintf
  3954     1EDB                     l1163:
  3955     1EDB  0008               	return
  3956     1EDC                     __end_of_printf:
  3957                           
  3958                           	psect	text2
  3959     1F44                     __ptext2:	
  3960 ;; *************** function _vfprintf *****************
  3961 ;; Defined at:
  3962 ;;		line 1817 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  fp              2   63[BANK1 ] PTR struct _IO_FILE
  3965 ;;		 -> NULL(0), 
  3966 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  3967 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  3968 ;;  ap              1   67[BANK1 ] PTR PTR void 
  3969 ;;		 -> printf@ap(1), 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  cfmt            2   68[BANK1 ] PTR unsigned char 
  3972 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  2   63[BANK1 ] int 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3982 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;Total ram usage:        8 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 11
  3989 ;; This function calls:
  3990 ;;		_vfpfcnvrt
  3991 ;; This function is called by:
  3992 ;;		_printf
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996     1F44                     _vfprintf:	
  3997                           ;psect for function _vfprintf
  3998                           
  3999     1F44                     l5582:	
  4000                           ;incstack = 0
  4001                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4002                           
  4003                           
  4004                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.50/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  4005     1F44  0021               	movlb	1	; select bank1
  4006     1F45  0862               	movf	(vfprintf@fmt+1)^(0+128),w
  4007     1F46  00E5               	movwf	(vfprintf@cfmt+1)^(0+128)
  4008     1F47  0861               	movf	vfprintf@fmt^(0+128),w
  4009     1F48  00E4               	movwf	vfprintf@cfmt^(0+128)
  4010                           
  4011                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4012     1F49  2F55               	goto	l5586
  4013     1F4A                     l5584:
  4014                           
  4015                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  4016     1F4A  0860               	movf	(vfprintf@fp+1)^(0+128),w
  4017     1F4B  00D1               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  4018     1F4C  085F               	movf	vfprintf@fp^(0+128),w
  4019     1F4D  00D0               	movwf	vfpfcnvrt@fp^(0+128)
  4020     1F4E  30E4               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4021     1F4F  00D2               	movwf	vfpfcnvrt@fmt^(0+128)
  4022     1F50  0863               	movf	vfprintf@ap^(0+128),w
  4023     1F51  00D3               	movwf	vfpfcnvrt@ap^(0+128)
  4024     1F52  3195  254A  319F   	fcall	_vfpfcnvrt
  4025     1F55                     l5586:
  4026                           
  4027                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  4028     1F55  0021               	movlb	1	; select bank1
  4029     1F56  0864               	movf	vfprintf@cfmt^(0+128),w
  4030     1F57  0084               	movwf	4
  4031     1F58  0865               	movf	(vfprintf@cfmt+1)^(0+128),w
  4032     1F59  0085               	movwf	5
  4033     1F5A  0012               	moviw fsr0++
  4034     1F5B  1D03               	btfss	3,2
  4035     1F5C  2F5E               	goto	u7781
  4036     1F5D  2F5F               	goto	u7780
  4037     1F5E                     u7781:
  4038     1F5E  2F4A               	goto	l5584
  4039     1F5F                     u7780:
  4040     1F5F                     l5588:
  4041                           
  4042                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  4043     1F5F  01DF               	clrf	?_vfprintf^(0+128)
  4044     1F60  01E0               	clrf	(?_vfprintf+1)^(0+128)
  4045     1F61                     l1281:
  4046     1F61  0008               	return
  4047     1F62                     __end_of_vfprintf:
  4048                           
  4049                           	psect	text3
  4050     154A                     __ptext3:	
  4051 ;; *************** function _vfpfcnvrt *****************
  4052 ;; Defined at:
  4053 ;;		line 1177 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  fp              2   48[BANK1 ] PTR struct _IO_FILE
  4056 ;;		 -> NULL(0), 
  4057 ;;  fmt             1   50[BANK1 ] PTR PTR unsigned char 
  4058 ;;		 -> vfprintf@cfmt(2), 
  4059 ;;  ap              1   51[BANK1 ] PTR PTR void 
  4060 ;;		 -> printf@ap(1), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  convarg         4   56[BANK1 ] struct .
  4063 ;;  cp              2   61[BANK1 ] PTR unsigned char 
  4064 ;;		 -> STR_4(20), STR_3(17), STR_2(27), STR_1(24), 
  4065 ;;  c               1   60[BANK1 ] unsigned char 
  4066 ;;  done            1    0        _Bool 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4076 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;Total ram usage:       15 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 10
  4083 ;; This function calls:
  4084 ;;		_efgtoa
  4085 ;;		_fputc
  4086 ;;		_read_prec_or_width
  4087 ;; This function is called by:
  4088 ;;		_vfprintf
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092     154A                     _vfpfcnvrt:	
  4093                           ;psect for function _vfpfcnvrt
  4094                           
  4095     154A                     l5416:	
  4096                           ;incstack = 0
  4097                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4098                           
  4099                           
  4100                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.50/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  4101     154A  0021               	movlb	1	; select bank1
  4102     154B  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4103     154C  0086               	movwf	6
  4104     154D  0187               	clrf	7
  4105     154E  3F40               	moviw [0]fsr1
  4106     154F  00D4               	movwf	??_vfpfcnvrt^(0+128)
  4107     1550  3F41               	moviw [1]fsr1
  4108     1551  00D5               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4109     1552  0854               	movf	??_vfpfcnvrt^(0+128),w
  4110     1553  0084               	movwf	4
  4111     1554  0855               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4112     1555  0085               	movwf	5
  4113     1556  0012               	moviw fsr0++
  4114     1557  3A25               	xorlw	37
  4115     1558  1D03               	btfss	3,2
  4116     1559  2D5B               	goto	u7741
  4117     155A  2D5C               	goto	u7740
  4118     155B                     u7741:
  4119     155B  2E3A               	goto	l5466
  4120     155C                     u7740:
  4121     155C                     l5418:
  4122                           
  4123                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  4124     155C  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4125     155D  0086               	movwf	6
  4126     155E  0187               	clrf	7
  4127     155F  3001               	movlw	1
  4128     1560  0781               	addwf	1,f
  4129     1561  3141               	addfsr 1,1
  4130     1562  1803               	skipnc
  4131     1563  0A81               	incf	1,f
  4132     1564                     l5420:
  4133                           
  4134                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  4135     1564  0022               	movlb	2	; select bank2
  4136     1565  01C8               	clrf	_width^(0+256)
  4137     1566  01C9               	clrf	(_width+1)^(0+256)
  4138     1567  3000               	movlw	0
  4139     1568  0021               	movlb	1	; select bank1
  4140     1569  00EB               	movwf	_flags^(0+128)
  4141     156A                     l5422:
  4142                           
  4143                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  4144     156A  30FF               	movlw	255
  4145     156B  0022               	movlb	2	; select bank2
  4146     156C  00CA               	movwf	_prec^(0+256)
  4147     156D  30FF               	movlw	255
  4148     156E  00CB               	movwf	(_prec^(0+256)+1)
  4149     156F                     l5424:
  4150                           
  4151                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1265:         if ((*
      +                          fmt)[0] == '.') {
  4152     156F  0021               	movlb	1	; select bank1
  4153     1570  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4154     1571  0086               	movwf	6
  4155     1572  0187               	clrf	7
  4156     1573  3F40               	moviw [0]fsr1
  4157     1574  00D4               	movwf	??_vfpfcnvrt^(0+128)
  4158     1575  3F41               	moviw [1]fsr1
  4159     1576  00D5               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4160     1577  0854               	movf	??_vfpfcnvrt^(0+128),w
  4161     1578  0084               	movwf	4
  4162     1579  0855               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4163     157A  0085               	movwf	5
  4164     157B  0012               	moviw fsr0++
  4165     157C  3A2E               	xorlw	46
  4166     157D  1D03               	btfss	3,2
  4167     157E  2D80               	goto	u7751
  4168     157F  2D81               	goto	u7750
  4169     1580                     u7751:
  4170     1580  2D9B               	goto	l5430
  4171     1581                     u7750:
  4172     1581                     l5426:
  4173                           
  4174                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1266:             ++
      +                          *fmt;
  4175     1581  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4176     1582  0086               	movwf	6
  4177     1583  0187               	clrf	7
  4178     1584  3001               	movlw	1
  4179     1585  0781               	addwf	1,f
  4180     1586  3141               	addfsr 1,1
  4181     1587  1803               	skipnc
  4182     1588  0A81               	incf	1,f
  4183     1589                     l5428:
  4184                           
  4185                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1267:    prec = read
      +                          _prec_or_width(fmt, ap);
  4186     1589  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4187     158A  0020               	movlb	0	; select bank0
  4188     158B  00A6               	movwf	read_prec_or_width@fmt
  4189     158C  0021               	movlb	1	; select bank1
  4190     158D  0853               	movf	vfpfcnvrt@ap^(0+128),w
  4191     158E  0020               	movlb	0	; select bank0
  4192     158F  00A7               	movwf	read_prec_or_width@ap
  4193     1590  3192  222B  3195   	fcall	_read_prec_or_width
  4194     1593  0020               	movlb	0	; select bank0
  4195     1594  0827               	movf	?_read_prec_or_width+1,w
  4196     1595  0022               	movlb	2	; select bank2
  4197     1596  00CB               	movwf	(_prec+1)^(0+256)
  4198     1597  0020               	movlb	0	; select bank0
  4199     1598  0826               	movf	?_read_prec_or_width,w
  4200     1599  0022               	movlb	2	; select bank2
  4201     159A  00CA               	movwf	_prec^(0+256)
  4202     159B                     l5430:
  4203                           
  4204                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1689:   cp = *fmt;
  4205     159B  0021               	movlb	1	; select bank1
  4206     159C  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4207     159D  0086               	movwf	6
  4208     159E  0187               	clrf	7
  4209     159F  3F40               	moviw [0]fsr1
  4210     15A0  00DD               	movwf	vfpfcnvrt@cp^(0+128)
  4211     15A1  3F41               	moviw [1]fsr1
  4212     15A2  00DE               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  4213     15A3                     l5432:
  4214                           
  4215                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1690:   c = *cp;
  4216     15A3  085D               	movf	vfpfcnvrt@cp^(0+128),w
  4217     15A4  0084               	movwf	4
  4218     15A5  085E               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4219     15A6  0085               	movwf	5
  4220     15A7  0800               	movf	0,w	;code access
  4221     15A8  00DC               	movwf	vfpfcnvrt@c^(0+128)
  4222                           
  4223                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1691:   switch(c) {
  4224     15A9  2DB4               	goto	l5440
  4225     15AA                     l5434:
  4226                           
  4227                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1695:     cp++;
  4228     15AA  3001               	movlw	1
  4229     15AB  07DD               	addwf	vfpfcnvrt@cp^(0+128),f
  4230     15AC  3000               	movlw	0
  4231     15AD  3DDE               	addwfc	(vfpfcnvrt@cp+1)^(0+128),f
  4232                           
  4233                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1696:     break;
  4234     15AE  2DBF               	goto	l5442
  4235     15AF                     l1263:	
  4236                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1710:    case 'f':
  4237                           
  4238                           
  4239                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1721:     c = 'l';
  4240     15AF  306C               	movlw	108
  4241     15B0  00DC               	movwf	vfpfcnvrt@c^(0+128)
  4242                           
  4243                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1722:     break;
  4244     15B1  2DBF               	goto	l5442
  4245     15B2                     l5436:
  4246                           
  4247                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1724:     c = 0;
  4248     15B2  01DC               	clrf	vfpfcnvrt@c^(0+128)
  4249                           
  4250                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1725:     break;
  4251     15B3  2DBF               	goto	l5442
  4252     15B4                     l5440:
  4253     15B4  085C               	movf	vfpfcnvrt@c^(0+128),w
  4254                           
  4255                           ; Switch size 1, requested type "simple"
  4256                           ; Number of cases is 3, Range of values is 76 to 108
  4257                           ; switch strategies available:
  4258                           ; Name         Instructions Cycles
  4259                           ; simple_byte           10     6 (average)
  4260                           ; direct_byte           75     9 (fixed)
  4261                           ; jumptable            263     9 (fixed)
  4262                           ;	Chosen strategy is simple_byte
  4263     15B5  3A4C               	xorlw	76	; case 76
  4264     15B6  1903               	skipnz
  4265     15B7  2DAA               	goto	l5434
  4266     15B8  3A2A               	xorlw	42	; case 102
  4267     15B9  1903               	skipnz
  4268     15BA  2DAF               	goto	l1263
  4269     15BB  3A0A               	xorlw	10	; case 108
  4270     15BC  1903               	skipnz
  4271     15BD  2DAA               	goto	l5434
  4272     15BE  2DB2               	goto	l5436
  4273     15BF                     l5442:
  4274     15BF  085D               	movf	vfpfcnvrt@cp^(0+128),w
  4275     15C0  0084               	movwf	4
  4276     15C1  085E               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4277     15C2  0085               	movwf	5
  4278     15C3  0012               	moviw fsr0++
  4279     15C4  3A66               	xorlw	102
  4280     15C5  1D03               	btfss	3,2
  4281     15C6  2DC8               	goto	u7761
  4282     15C7  2DC9               	goto	u7760
  4283     15C8                     u7761:
  4284     15C8  2E30               	goto	l5462
  4285     15C9                     u7760:
  4286     15C9  2DEE               	goto	l5450
  4287     15CA                     l5444:
  4288                           
  4289                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1756:      convarg.f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4290     15CA  0853               	movf	vfpfcnvrt@ap^(0+128),w
  4291     15CB  0086               	movwf	6
  4292     15CC  0187               	clrf	7
  4293     15CD  0801               	movf	1,w
  4294     15CE  0084               	movwf	4
  4295     15CF  3001               	movlw	1	; select bank2/3
  4296     15D0  0085               	movwf	5
  4297     15D1  3004               	movlw	4
  4298     15D2  0781               	addwf	1,f
  4299     15D3  3F00               	moviw [0]fsr0
  4300     15D4  00D8               	movwf	vfpfcnvrt@convarg^(0+128)
  4301     15D5  3F01               	moviw [1]fsr0
  4302     15D6  00D9               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4303     15D7  3F02               	moviw [2]fsr0
  4304     15D8  00DA               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4305     15D9  3F03               	moviw [3]fsr0
  4306     15DA  00DB               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4307                           
  4308                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1757:      break;
  4309     15DB  2DF6               	goto	l5452
  4310     15DC                     l5446:
  4311                           
  4312                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1759:      convarg.f
      +                           = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4313     15DC  0853               	movf	vfpfcnvrt@ap^(0+128),w
  4314     15DD  0086               	movwf	6
  4315     15DE  0187               	clrf	7
  4316     15DF  0801               	movf	1,w
  4317     15E0  0084               	movwf	4
  4318     15E1  3001               	movlw	1	; select bank2/3
  4319     15E2  0085               	movwf	5
  4320     15E3  3004               	movlw	4
  4321     15E4  0781               	addwf	1,f
  4322     15E5  3F00               	moviw [0]fsr0
  4323     15E6  00D8               	movwf	vfpfcnvrt@convarg^(0+128)
  4324     15E7  3F01               	moviw [1]fsr0
  4325     15E8  00D9               	movwf	(vfpfcnvrt@convarg+1)^(0+128)
  4326     15E9  3F02               	moviw [2]fsr0
  4327     15EA  00DA               	movwf	(vfpfcnvrt@convarg+2)^(0+128)
  4328     15EB  3F03               	moviw [3]fsr0
  4329     15EC  00DB               	movwf	(vfpfcnvrt@convarg+3)^(0+128)
  4330                           
  4331                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1760:      break;
  4332     15ED  2DF6               	goto	l5452
  4333     15EE                     l5450:
  4334     15EE  085C               	movf	vfpfcnvrt@c^(0+128),w
  4335                           
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 2, Range of values is 76 to 108
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte            7     4 (average)
  4341                           ; direct_byte           75     9 (fixed)
  4342                           ; jumptable            263     9 (fixed)
  4343                           ;	Chosen strategy is simple_byte
  4344     15EF  3A4C               	xorlw	76	; case 76
  4345     15F0  1903               	skipnz
  4346     15F1  2DDC               	goto	l5446
  4347     15F2  3A20               	xorlw	32	; case 108
  4348     15F3  1903               	skipnz
  4349     15F4  2DCA               	goto	l5444
  4350     15F5  2DF6               	goto	l5452
  4351     15F6                     l5452:
  4352                           
  4353                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1762:    *fmt = cp+1
      +                          ;
  4354     15F6  085D               	movf	vfpfcnvrt@cp^(0+128),w
  4355     15F7  3E01               	addlw	1
  4356     15F8  00D4               	movwf	??_vfpfcnvrt^(0+128)
  4357     15F9  3000               	movlw	0
  4358     15FA  3D5E               	addwfc	(vfpfcnvrt@cp+1)^(0+128),w
  4359     15FB  00D5               	movwf	(??_vfpfcnvrt+1)^(0+128)
  4360     15FC  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4361     15FD  0086               	movwf	6
  4362     15FE  0187               	clrf	7
  4363     15FF  0854               	movf	??_vfpfcnvrt^(0+128),w
  4364     1600  3FC0               	movwi [0]fsr1
  4365     1601  0855               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4366     1602  3FC1               	movwi [1]fsr1
  4367                           
  4368                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1763:    switch (*cp
      +                          ) {
  4369     1603  2E27               	goto	l5460
  4370     1604                     l5454:
  4371                           
  4372                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1790:      return (v
      +                          oid) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4373     1604  0851               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  4374     1605  0020               	movlb	0	; select bank0
  4375     1606  00E9               	movwf	efgtoa@fp+1
  4376     1607  0021               	movlb	1	; select bank1
  4377     1608  0850               	movf	vfpfcnvrt@fp^(0+128),w
  4378     1609  0020               	movlb	0	; select bank0
  4379     160A  00E8               	movwf	efgtoa@fp
  4380     160B  0021               	movlb	1	; select bank1
  4381     160C  085B               	movf	(vfpfcnvrt@convarg+3)^(0+128),w
  4382     160D  0020               	movlb	0	; select bank0
  4383     160E  00ED               	movwf	efgtoa@f+3
  4384     160F  0021               	movlb	1	; select bank1
  4385     1610  085A               	movf	(vfpfcnvrt@convarg+2)^(0+128),w
  4386     1611  0020               	movlb	0	; select bank0
  4387     1612  00EC               	movwf	efgtoa@f+2
  4388     1613  0021               	movlb	1	; select bank1
  4389     1614  0859               	movf	(vfpfcnvrt@convarg+1)^(0+128),w
  4390     1615  0020               	movlb	0	; select bank0
  4391     1616  00EB               	movwf	efgtoa@f+1
  4392     1617  0021               	movlb	1	; select bank1
  4393     1618  0858               	movf	vfpfcnvrt@convarg^(0+128),w
  4394     1619  0020               	movlb	0	; select bank0
  4395     161A  00EA               	movwf	efgtoa@f
  4396     161B  0021               	movlb	1	; select bank1
  4397     161C  085D               	movf	vfpfcnvrt@cp^(0+128),w
  4398     161D  0084               	movwf	4
  4399     161E  085E               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4400     161F  0085               	movwf	5
  4401     1620  0800               	movf	0,w	;code access
  4402     1621  0020               	movlb	0	; select bank0
  4403     1622  00EE               	movwf	efgtoa@c
  4404     1623  3180  2079  3195   	fcall	_efgtoa
  4405     1626  2E5B               	goto	l1274
  4406     1627                     l5460:
  4407     1627  085D               	movf	vfpfcnvrt@cp^(0+128),w
  4408     1628  0084               	movwf	4
  4409     1629  085E               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  4410     162A  0085               	movwf	5
  4411     162B  0800               	movf	0,w	;code access
  4412                           
  4413                           ; Switch size 1, requested type "simple"
  4414                           ; Number of cases is 1, Range of values is 102 to 102
  4415                           ; switch strategies available:
  4416                           ; Name         Instructions Cycles
  4417                           ; simple_byte            4     3 (average)
  4418                           ; direct_byte           11     9 (fixed)
  4419                           ; jumptable            263     9 (fixed)
  4420                           ;	Chosen strategy is simple_byte
  4421     162C  3A66               	xorlw	102	; case 102
  4422     162D  1903               	skipnz
  4423     162E  2E04               	goto	l5454
  4424     162F  2E30               	goto	l5462
  4425     1630                     l5462:
  4426                           
  4427                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  4428     1630  0021               	movlb	1	; select bank1
  4429     1631  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4430     1632  0086               	movwf	6
  4431     1633  0187               	clrf	7
  4432     1634  3001               	movlw	1
  4433     1635  0781               	addwf	1,f
  4434     1636  3141               	addfsr 1,1
  4435     1637  1803               	skipnc
  4436     1638  0A81               	incf	1,f
  4437     1639  2E5B               	goto	l1274
  4438     163A                     l5466:
  4439                           
  4440                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  4441     163A  0852               	movf	vfpfcnvrt@fmt^(0+128),w
  4442     163B  0086               	movwf	6
  4443     163C  0187               	clrf	7
  4444     163D  3F40               	moviw [0]fsr1
  4445     163E  00D4               	movwf	??_vfpfcnvrt^(0+128)
  4446     163F  3F41               	moviw [1]fsr1
  4447     1640  00D5               	movwf	(??_vfpfcnvrt^(0+128)+1)
  4448     1641  0854               	movf	??_vfpfcnvrt^(0+128),w
  4449     1642  0084               	movwf	4
  4450     1643  0855               	movf	(??_vfpfcnvrt+1)^(0+128),w
  4451     1644  0085               	movwf	5
  4452     1645  0800               	movf	0,w	;code access
  4453     1646  00D6               	movwf	(??_vfpfcnvrt+2)^(0+128)
  4454     1647  01D7               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  4455     1648  0856               	movf	(??_vfpfcnvrt+2)^(0+128),w
  4456     1649  0020               	movlb	0	; select bank0
  4457     164A  00A3               	movwf	fputc@c
  4458     164B  0021               	movlb	1	; select bank1
  4459     164C  0857               	movf	(??_vfpfcnvrt+3)^(0+128),w
  4460     164D  0020               	movlb	0	; select bank0
  4461     164E  00A4               	movwf	fputc@c+1
  4462     164F  0021               	movlb	1	; select bank1
  4463     1650  0851               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  4464     1651  0020               	movlb	0	; select bank0
  4465     1652  00A6               	movwf	fputc@fp+1
  4466     1653  0021               	movlb	1	; select bank1
  4467     1654  0850               	movf	vfpfcnvrt@fp^(0+128),w
  4468     1655  0020               	movlb	0	; select bank0
  4469     1656  00A5               	movwf	fputc@fp
  4470     1657  3192  2288  3195   	fcall	_fputc
  4471     165A  2E30               	goto	l5462
  4472     165B                     l1274:
  4473     165B  0008               	return
  4474     165C                     __end_of_vfpfcnvrt:
  4475                           
  4476                           	psect	text4
  4477     122B                     __ptext4:	
  4478 ;; *************** function _read_prec_or_width *****************
  4479 ;; Defined at:
  4480 ;;		line 1158 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  fmt             1    6[BANK0 ] PTR PTR const unsigned c
  4483 ;;		 -> vfprintf@cfmt(2), 
  4484 ;;  ap              1    7[BANK0 ] PTR PTR void [1]
  4485 ;;		 -> printf@ap(1), 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  c               1   11[BANK0 ] unsigned char 
  4488 ;;  n               2   12[BANK0 ] int 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  2    6[BANK0 ] int 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4499 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;Total ram usage:        8 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; Hardware stack levels required when called: 5
  4505 ;; This function calls:
  4506 ;;		___wmul
  4507 ;; This function is called by:
  4508 ;;		_vfpfcnvrt
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512     122B                     _read_prec_or_width:	
  4513                           ;psect for function _read_prec_or_width
  4514                           
  4515     122B                     l5382:	
  4516                           ;incstack = 0
  4517                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4518                           
  4519                           
  4520                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  4521     122B  0020               	movlb	0	; select bank0
  4522     122C  01AC               	clrf	read_prec_or_width@n
  4523     122D  01AD               	clrf	read_prec_or_width@n+1
  4524     122E                     l5384:
  4525                           
  4526                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  4527     122E  0826               	movf	read_prec_or_width@fmt,w
  4528     122F  0086               	movwf	6
  4529     1230  0187               	clrf	7
  4530     1231  3F40               	moviw [0]fsr1
  4531     1232  00A8               	movwf	??_read_prec_or_width
  4532     1233  3F41               	moviw [1]fsr1
  4533     1234  00A9               	movwf	??_read_prec_or_width+1
  4534     1235  0828               	movf	??_read_prec_or_width,w
  4535     1236  0084               	movwf	4
  4536     1237  0829               	movf	??_read_prec_or_width+1,w
  4537     1238  0085               	movwf	5
  4538     1239  0012               	moviw fsr0++
  4539     123A  3A2A               	xorlw	42
  4540     123B  1D03               	btfss	3,2
  4541     123C  2A3E               	goto	u7691
  4542     123D  2A3F               	goto	u7690
  4543     123E                     u7691:
  4544     123E  2A6F               	goto	l5394
  4545     123F                     u7690:
  4546     123F                     l5386:
  4547                           
  4548                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  4549     123F  0826               	movf	read_prec_or_width@fmt,w
  4550     1240  0086               	movwf	6
  4551     1241  0187               	clrf	7
  4552     1242  3001               	movlw	1
  4553     1243  0781               	addwf	1,f
  4554     1244  3141               	addfsr 1,1
  4555     1245  1803               	skipnc
  4556     1246  0A81               	incf	1,f
  4557     1247                     l5388:
  4558                           
  4559                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  4560     1247  0827               	movf	read_prec_or_width@ap,w
  4561     1248  0086               	movwf	6
  4562     1249  0187               	clrf	7
  4563     124A  0801               	movf	1,w
  4564     124B  0084               	movwf	4
  4565     124C  3001               	movlw	1	; select bank2/3
  4566     124D  0085               	movwf	5
  4567     124E  3002               	movlw	2
  4568     124F  0781               	addwf	1,f
  4569     1250  3F00               	moviw [0]fsr0
  4570     1251  00AC               	movwf	read_prec_or_width@n
  4571     1252  3F01               	moviw [1]fsr0
  4572     1253  00AD               	movwf	read_prec_or_width@n+1
  4573                           
  4574                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1163:     } else {
  4575     1254  2A83               	goto	l5396
  4576     1255                     l5390:
  4577                           
  4578                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  4579     1255  082D               	movf	read_prec_or_width@n+1,w
  4580     1256  00A1               	movwf	___wmul@multiplier+1
  4581     1257  082C               	movf	read_prec_or_width@n,w
  4582     1258  00A0               	movwf	___wmul@multiplier
  4583     1259  300A               	movlw	10
  4584     125A  00A2               	movwf	___wmul@multiplicand
  4585     125B  3000               	movlw	0
  4586     125C  00A3               	movwf	___wmul@multiplicand+1
  4587     125D  319F  27E0  3192   	fcall	___wmul
  4588     1260  0020               	movlb	0	; select bank0
  4589     1261  082B               	movf	read_prec_or_width@c,w
  4590     1262  0720               	addwf	?___wmul,w
  4591     1263  00AC               	movwf	read_prec_or_width@n
  4592     1264  3000               	movlw	0
  4593     1265  3D21               	addwfc	?___wmul+1,w
  4594     1266  00AD               	movwf	read_prec_or_width@n+1
  4595     1267                     l5392:
  4596                           
  4597                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  4598     1267  0826               	movf	read_prec_or_width@fmt,w
  4599     1268  0086               	movwf	6
  4600     1269  0187               	clrf	7
  4601     126A  3001               	movlw	1
  4602     126B  0781               	addwf	1,f
  4603     126C  3141               	addfsr 1,1
  4604     126D  1803               	skipnc
  4605     126E  0A81               	incf	1,f
  4606     126F                     l5394:
  4607                           
  4608                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4609     126F  0826               	movf	read_prec_or_width@fmt,w
  4610     1270  0086               	movwf	6
  4611     1271  0187               	clrf	7
  4612     1272  3F40               	moviw [0]fsr1
  4613     1273  00A8               	movwf	??_read_prec_or_width
  4614     1274  3F41               	moviw [1]fsr1
  4615     1275  00A9               	movwf	??_read_prec_or_width+1
  4616     1276  0828               	movf	??_read_prec_or_width,w
  4617     1277  0084               	movwf	4
  4618     1278  0829               	movf	??_read_prec_or_width+1,w
  4619     1279  0085               	movwf	5
  4620     127A  0800               	movf	0,w	;code access
  4621     127B  3ED0               	addlw	208
  4622     127C  00AB               	movwf	read_prec_or_width@c
  4623     127D  300A               	movlw	10
  4624     127E  022B               	subwf	read_prec_or_width@c,w
  4625     127F  1C03               	skipc
  4626     1280  2A82               	goto	u7701
  4627     1281  2A83               	goto	u7700
  4628     1282                     u7701:
  4629     1282  2A55               	goto	l5390
  4630     1283                     u7700:
  4631     1283                     l5396:
  4632                           
  4633                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1170:     return n;
  4634     1283  082D               	movf	read_prec_or_width@n+1,w
  4635     1284  00A7               	movwf	?_read_prec_or_width+1
  4636     1285  082C               	movf	read_prec_or_width@n,w
  4637     1286  00A6               	movwf	?_read_prec_or_width
  4638     1287                     l1254:
  4639     1287  0008               	return
  4640     1288                     __end_of_read_prec_or_width:
  4641                           
  4642                           	psect	text5
  4643     1FE0                     __ptext5:	
  4644 ;; *************** function ___wmul *****************
  4645 ;; Defined at:
  4646 ;;		line 15 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/Umul16.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4649 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  product         2    4[BANK0 ] unsigned int 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  2    0[BANK0 ] unsigned int 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;Total ram usage:        6 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: 4
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_read_prec_or_width
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675     1FE0                     ___wmul:	
  4676                           ;psect for function ___wmul
  4677                           
  4678     1FE0                     l4718:	
  4679                           ;incstack = 0
  4680                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4681                           
  4682     1FE0  0020               	movlb	0	; select bank0
  4683     1FE1  01A4               	clrf	___wmul@product
  4684     1FE2  01A5               	clrf	___wmul@product+1
  4685     1FE3                     l4720:
  4686     1FE3  1C20               	btfss	___wmul@multiplier,0
  4687     1FE4  2FE6               	goto	u6331
  4688     1FE5  2FE7               	goto	u6330
  4689     1FE6                     u6331:
  4690     1FE6  2FEB               	goto	l700
  4691     1FE7                     u6330:
  4692     1FE7                     l4722:
  4693     1FE7  0822               	movf	___wmul@multiplicand,w
  4694     1FE8  07A4               	addwf	___wmul@product,f
  4695     1FE9  0823               	movf	___wmul@multiplicand+1,w
  4696     1FEA  3DA5               	addwfc	___wmul@product+1,f
  4697     1FEB                     l700:
  4698     1FEB  3001               	movlw	1
  4699     1FEC                     u6345:
  4700     1FEC  35A2               	lslf	___wmul@multiplicand,f
  4701     1FED  0DA3               	rlf	___wmul@multiplicand+1,f
  4702     1FEE  0B89               	decfsz	9,f
  4703     1FEF  2FEC               	goto	u6345
  4704     1FF0                     l4724:
  4705     1FF0  3001               	movlw	1
  4706     1FF1                     u6355:
  4707     1FF1  36A1               	lsrf	___wmul@multiplier+1,f
  4708     1FF2  0CA0               	rrf	___wmul@multiplier,f
  4709     1FF3  0B89               	decfsz	9,f
  4710     1FF4  2FF1               	goto	u6355
  4711     1FF5                     l4726:
  4712     1FF5  0820               	movf	___wmul@multiplier,w
  4713     1FF6  0421               	iorwf	___wmul@multiplier+1,w
  4714     1FF7  1D03               	btfss	3,2
  4715     1FF8  2FFA               	goto	u6361
  4716     1FF9  2FFB               	goto	u6360
  4717     1FFA                     u6361:
  4718     1FFA  2FE3               	goto	l4720
  4719     1FFB                     u6360:
  4720     1FFB                     l4728:
  4721     1FFB  0825               	movf	___wmul@product+1,w
  4722     1FFC  00A1               	movwf	?___wmul+1
  4723     1FFD  0824               	movf	___wmul@product,w
  4724     1FFE  00A0               	movwf	?___wmul
  4725     1FFF                     l702:
  4726     1FFF  0008               	return
  4727     2000                     __end_of___wmul:
  4728                           
  4729                           	psect	text6
  4730     0079                     __ptext6:	
  4731 ;; *************** function _efgtoa *****************
  4732 ;; Defined at:
  4733 ;;		line 587 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  4736 ;;		 -> NULL(0), 
  4737 ;;  f               4   74[BANK0 ] PTR struct _IO_FILE
  4738 ;;  c               1   78[BANK0 ] unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  u               4   44[BANK1 ] struct flui
  4741 ;;  g               4   38[BANK1 ] struct flui
  4742 ;;  l               4   33[BANK1 ] struct flui
  4743 ;;  h               4   29[BANK1 ] struct flui
  4744 ;;  ou              4   23[BANK1 ] struct flui
  4745 ;;  n               2   42[BANK1 ] int 
  4746 ;;  i               2   27[BANK1 ] int 
  4747 ;;  w               2   21[BANK1 ] int 
  4748 ;;  e               2   19[BANK1 ] int 
  4749 ;;  m               2   17[BANK1 ] int 
  4750 ;;  d               2   15[BANK1 ] int 
  4751 ;;  t               2    8[BANK1 ] int 
  4752 ;;  p               2    6[BANK1 ] int 
  4753 ;;  ne              2    4[BANK1 ] int 
  4754 ;;  sign            1   37[BANK1 ] unsigned char 
  4755 ;;  nmode           1   14[BANK1 ] unsigned char 
  4756 ;;  mode            1   13[BANK1 ] unsigned char 
  4757 ;;  pp              1   12[BANK1 ] unsigned char 
  4758 ;;  esign           1    0        unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  1    wreg      void 
  4761 ;; Registers used:
  4762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4768 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Locals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Totals:         0       7      48       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;Total ram usage:       55 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; Hardware stack levels required when called: 9
  4775 ;; This function calls:
  4776 ;;		___fladd
  4777 ;;		___fldiv
  4778 ;;		___fleq
  4779 ;;		___flge
  4780 ;;		___flmul
  4781 ;;		___flneg
  4782 ;;		___flsub
  4783 ;;		___fltol
  4784 ;;		___fpclassifyf
  4785 ;;		_floorf
  4786 ;;		_labs
  4787 ;;		_memcpy
  4788 ;;		_pad
  4789 ;;		_strcpy
  4790 ;; This function is called by:
  4791 ;;		_vfpfcnvrt
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795     0079                     _efgtoa:	
  4796                           ;psect for function _efgtoa
  4797                           
  4798     0079                     l5180:	
  4799                           ;incstack = 0
  4800                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4801                           
  4802                           
  4803                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 587: static void efg
      +                          toa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.50/pic/sources/c99/c
      +                          ommon/doprnt.c: 588: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c
      +                          : 589:     char mode, nmode, pp, sign, esign;;/Applications/microchip/xc8/v2.50/pic/sour
      +                          ces/c99/common/doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;/Applications/microchi
      +                          p/xc8/v2.50/pic/sources/c99/common/doprnt.c: 591:     long double h, l;;/Applications/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 592:  union flui g, u, ou;
  4804     0079  0021               	movlb	1	; select bank1
  4805     007A  01C5               	clrf	efgtoa@sign^(0+128)
  4806     007B                     l5182:
  4807                           
  4808                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 596:     g.f = f;
  4809     007B  0020               	movlb	0	; select bank0
  4810     007C  086D               	movf	efgtoa@f+3,w
  4811     007D  0021               	movlb	1	; select bank1
  4812     007E  00C9               	movwf	(efgtoa@g+3)^(0+128)
  4813     007F  0020               	movlb	0	; select bank0
  4814     0080  086C               	movf	efgtoa@f+2,w
  4815     0081  0021               	movlb	1	; select bank1
  4816     0082  00C8               	movwf	(efgtoa@g+2)^(0+128)
  4817     0083  0020               	movlb	0	; select bank0
  4818     0084  086B               	movf	efgtoa@f+1,w
  4819     0085  0021               	movlb	1	; select bank1
  4820     0086  00C7               	movwf	(efgtoa@g+1)^(0+128)
  4821     0087  0020               	movlb	0	; select bank0
  4822     0088  086A               	movf	efgtoa@f,w
  4823     0089  0021               	movlb	1	; select bank1
  4824     008A  00C6               	movwf	efgtoa@g^(0+128)
  4825     008B                     l5184:
  4826                           
  4827                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 597:     if (g.f < 0
      +                          .0) {
  4828     008B  0849               	movf	(efgtoa@g+3)^(0+128),w
  4829     008C  0020               	movlb	0	; select bank0
  4830     008D  00CF               	movwf	___flge@ff1+3
  4831     008E  0021               	movlb	1	; select bank1
  4832     008F  0848               	movf	(efgtoa@g+2)^(0+128),w
  4833     0090  0020               	movlb	0	; select bank0
  4834     0091  00CE               	movwf	___flge@ff1+2
  4835     0092  0021               	movlb	1	; select bank1
  4836     0093  0847               	movf	(efgtoa@g+1)^(0+128),w
  4837     0094  0020               	movlb	0	; select bank0
  4838     0095  00CD               	movwf	___flge@ff1+1
  4839     0096  0021               	movlb	1	; select bank1
  4840     0097  0846               	movf	efgtoa@g^(0+128),w
  4841     0098  0020               	movlb	0	; select bank0
  4842     0099  00CC               	movwf	___flge@ff1
  4843     009A  3000               	movlw	0
  4844     009B  00D3               	movwf	___flge@ff2+3
  4845     009C  3000               	movlw	0
  4846     009D  00D2               	movwf	___flge@ff2+2
  4847     009E  3000               	movlw	0
  4848     009F  00D1               	movwf	___flge@ff2+1
  4849     00A0  3000               	movlw	0
  4850     00A1  00D0               	movwf	___flge@ff2
  4851     00A2  3193  23D4  3180   	fcall	___flge
  4852     00A5  1803               	btfsc	3,0
  4853     00A6  28A8               	goto	u7371
  4854     00A7  28A9               	goto	u7370
  4855     00A8                     u7371:
  4856     00A8  28CE               	goto	l5190
  4857     00A9                     u7370:
  4858     00A9                     l5186:
  4859                           
  4860                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 598:         sign = 
      +                          1;
  4861     00A9  3001               	movlw	1
  4862     00AA  0021               	movlb	1	; select bank1
  4863     00AB  00C5               	movwf	efgtoa@sign^(0+128)
  4864     00AC                     l5188:
  4865                           
  4866                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 599:         g.f = -
      +                          g.f;
  4867     00AC  0849               	movf	(efgtoa@g+3)^(0+128),w
  4868     00AD  0020               	movlb	0	; select bank0
  4869     00AE  00A3               	movwf	___flneg@f1+3
  4870     00AF  0021               	movlb	1	; select bank1
  4871     00B0  0848               	movf	(efgtoa@g+2)^(0+128),w
  4872     00B1  0020               	movlb	0	; select bank0
  4873     00B2  00A2               	movwf	___flneg@f1+2
  4874     00B3  0021               	movlb	1	; select bank1
  4875     00B4  0847               	movf	(efgtoa@g+1)^(0+128),w
  4876     00B5  0020               	movlb	0	; select bank0
  4877     00B6  00A1               	movwf	___flneg@f1+1
  4878     00B7  0021               	movlb	1	; select bank1
  4879     00B8  0846               	movf	efgtoa@g^(0+128),w
  4880     00B9  0020               	movlb	0	; select bank0
  4881     00BA  00A0               	movwf	___flneg@f1
  4882     00BB  319E  2637  3180   	fcall	___flneg
  4883     00BE  0020               	movlb	0	; select bank0
  4884     00BF  0823               	movf	?___flneg+3,w
  4885     00C0  0021               	movlb	1	; select bank1
  4886     00C1  00C9               	movwf	(efgtoa@g+3)^(0+128)
  4887     00C2  0020               	movlb	0	; select bank0
  4888     00C3  0822               	movf	?___flneg+2,w
  4889     00C4  0021               	movlb	1	; select bank1
  4890     00C5  00C8               	movwf	(efgtoa@g+2)^(0+128)
  4891     00C6  0020               	movlb	0	; select bank0
  4892     00C7  0821               	movf	?___flneg+1,w
  4893     00C8  0021               	movlb	1	; select bank1
  4894     00C9  00C7               	movwf	(efgtoa@g+1)^(0+128)
  4895     00CA  0020               	movlb	0	; select bank0
  4896     00CB  0820               	movf	?___flneg,w
  4897     00CC  0021               	movlb	1	; select bank1
  4898     00CD  00C6               	movwf	efgtoa@g^(0+128)
  4899     00CE                     l5190:
  4900                           
  4901                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 603:     n = 0;
  4902     00CE  0021               	movlb	1	; select bank1
  4903     00CF  01CA               	clrf	efgtoa@n^(0+128)
  4904     00D0  01CB               	clrf	(efgtoa@n+1)^(0+128)
  4905     00D1                     l5192:
  4906                           
  4907                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 604:     w = width;
  4908     00D1  0022               	movlb	2	; select bank2
  4909     00D2  0849               	movf	(_width+1)^(0+256),w
  4910     00D3  0021               	movlb	1	; select bank1
  4911     00D4  00B6               	movwf	(efgtoa@w+1)^(0+128)
  4912     00D5  0022               	movlb	2	; select bank2
  4913     00D6  0848               	movf	_width^(0+256),w
  4914     00D7  0021               	movlb	1	; select bank1
  4915     00D8  00B5               	movwf	efgtoa@w^(0+128)
  4916     00D9                     l5194:
  4917                           
  4918                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 605:     if (sign
  4919     00D9  0845               	movf	efgtoa@sign^(0+128),w
  4920     00DA  1903               	btfsc	3,2
  4921     00DB  28DD               	goto	u7381
  4922     00DC  28DE               	goto	u7380
  4923     00DD                     u7381:
  4924     00DD  28EE               	goto	l5202
  4925     00DE                     u7380:
  4926     00DE                     l5196:
  4927                           
  4928                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 609:    ) {;/Applica
      +                          tions/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 610:   sign = sign ? '-' : '+
      +                          ';
  4929     00DE  0845               	movf	efgtoa@sign^(0+128),w
  4930     00DF  1D03               	btfss	3,2
  4931     00E0  28E2               	goto	u7391
  4932     00E1  28E3               	goto	u7390
  4933     00E2                     u7391:
  4934     00E2  28E8               	goto	l5200
  4935     00E3                     u7390:
  4936     00E3                     l5198:
  4937     00E3  302B               	movlw	43
  4938     00E4  00AA               	movwf	_efgtoa$1557^(0+128)
  4939     00E5  3000               	movlw	0
  4940     00E6  00AB               	movwf	(_efgtoa$1557^(0+128)+1)
  4941     00E7  28EC               	goto	l1202
  4942     00E8                     l5200:
  4943     00E8  302D               	movlw	45
  4944     00E9  00AA               	movwf	_efgtoa$1557^(0+128)
  4945     00EA  3000               	movlw	0
  4946     00EB  00AB               	movwf	(_efgtoa$1557^(0+128)+1)
  4947     00EC                     l1202:
  4948     00EC  082A               	movf	_efgtoa$1557^(0+128),w
  4949     00ED  00C5               	movwf	efgtoa@sign^(0+128)
  4950     00EE                     l5202:
  4951                           
  4952                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 619:     if (( __fpc
      +                          lassifyf(g.f) == 1 )) {
  4953     00EE  0849               	movf	(efgtoa@g+3)^(0+128),w
  4954     00EF  0020               	movlb	0	; select bank0
  4955     00F0  00A3               	movwf	___fpclassifyf@x+3
  4956     00F1  0021               	movlb	1	; select bank1
  4957     00F2  0848               	movf	(efgtoa@g+2)^(0+128),w
  4958     00F3  0020               	movlb	0	; select bank0
  4959     00F4  00A2               	movwf	___fpclassifyf@x+2
  4960     00F5  0021               	movlb	1	; select bank1
  4961     00F6  0847               	movf	(efgtoa@g+1)^(0+128),w
  4962     00F7  0020               	movlb	0	; select bank0
  4963     00F8  00A1               	movwf	___fpclassifyf@x+1
  4964     00F9  0021               	movlb	1	; select bank1
  4965     00FA  0846               	movf	efgtoa@g^(0+128),w
  4966     00FB  0020               	movlb	0	; select bank0
  4967     00FC  00A0               	movwf	___fpclassifyf@x
  4968     00FD  3193  2355  3180   	fcall	___fpclassifyf
  4969     0100  0020               	movlb	0	; select bank0
  4970     0101  0320               	decf	?___fpclassifyf,w
  4971     0102  0421               	iorwf	?___fpclassifyf+1,w
  4972     0103  1D03               	btfss	3,2
  4973     0104  2906               	goto	u7401
  4974     0105  2907               	goto	u7400
  4975     0106                     u7401:
  4976     0106  293C               	goto	l5214
  4977     0107                     u7400:
  4978     0107                     l5204:
  4979                           
  4980                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 620:   if (sign) {
  4981     0107  0021               	movlb	1	; select bank1
  4982     0108  0845               	movf	efgtoa@sign^(0+128),w
  4983     0109  1903               	btfsc	3,2
  4984     010A  290C               	goto	u7411
  4985     010B  290D               	goto	u7410
  4986     010C                     u7411:
  4987     010C  2919               	goto	l5208
  4988     010D                     u7410:
  4989     010D                     l5206:
  4990                           
  4991                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 621:    dbuf[0] = si
      +                          gn;
  4992     010D  0845               	movf	efgtoa@sign^(0+128),w
  4993     010E  0024               	movlb	4	; select bank4
  4994     010F  00A0               	movwf	_dbuf^(0+512)
  4995                           
  4996                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 622:    w--;
  4997     0110  30FF               	movlw	255
  4998     0111  0021               	movlb	1	; select bank1
  4999     0112  07B5               	addwf	efgtoa@w^(0+128),f
  5000     0113  30FF               	movlw	255
  5001     0114  3DB6               	addwfc	(efgtoa@w+1)^(0+128),f
  5002                           
  5003                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 623:    n = 1;
  5004     0115  3001               	movlw	1
  5005     0116  00CA               	movwf	efgtoa@n^(0+128)
  5006     0117  3000               	movlw	0
  5007     0118  00CB               	movwf	(efgtoa@n^(0+128)+1)
  5008     0119                     l5208:
  5009                           
  5010                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 631:   {;/Applicatio
      +                          ns/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 632:             strcpy(&dbuf[n]
      +                          , "inf");
  5011     0119  084A               	movf	efgtoa@n^(0+128),w
  5012     011A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5013     011B  0020               	movlb	0	; select bank0
  5014     011C  00A0               	movwf	strcpy@dest
  5015     011D  3088               	movlw	low (STR_5| (0+32768))
  5016     011E  00A1               	movwf	strcpy@src
  5017     011F  3098               	movlw	high (STR_5| (0+32768))
  5018     0120  00A2               	movwf	strcpy@src+1
  5019     0121  319F  270C  3180   	fcall	_strcpy
  5020     0124                     l5210:
  5021                           
  5022                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 633:         };/Appl
      +                          ications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 634:         w -= ((sizeof
      +                          ("inf")/sizeof("inf"[0]))-1);
  5023     0124  30FD               	movlw	253
  5024     0125  0021               	movlb	1	; select bank1
  5025     0126  07B5               	addwf	efgtoa@w^(0+128),f
  5026     0127  30FF               	movlw	255
  5027     0128  3DB6               	addwfc	(efgtoa@w+1)^(0+128),f
  5028                           
  5029                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 635:         return 
      +                          (void) pad(fp, &dbuf[0], w);
  5030     0129  0020               	movlb	0	; select bank0
  5031     012A  0869               	movf	efgtoa@fp+1,w
  5032     012B  00B5               	movwf	pad@fp+1
  5033     012C  0868               	movf	efgtoa@fp,w
  5034     012D  00B4               	movwf	pad@fp
  5035     012E  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  5036     012F  00B6               	movwf	pad@buf
  5037     0130  0021               	movlb	1	; select bank1
  5038     0131  0836               	movf	(efgtoa@w+1)^(0+128),w
  5039     0132  0020               	movlb	0	; select bank0
  5040     0133  00B8               	movwf	pad@p+1
  5041     0134  0021               	movlb	1	; select bank1
  5042     0135  0835               	movf	efgtoa@w^(0+128),w
  5043     0136  0020               	movlb	0	; select bank0
  5044     0137  00B7               	movwf	pad@p
  5045     0138  3190  20DC  3180   	fcall	_pad
  5046     013B  2F32               	goto	l1205
  5047     013C                     l5214:
  5048                           
  5049                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 637:     if (( __fpc
      +                          lassifyf(g.f) == 0 )) {
  5050     013C  0021               	movlb	1	; select bank1
  5051     013D  0849               	movf	(efgtoa@g+3)^(0+128),w
  5052     013E  0020               	movlb	0	; select bank0
  5053     013F  00A3               	movwf	___fpclassifyf@x+3
  5054     0140  0021               	movlb	1	; select bank1
  5055     0141  0848               	movf	(efgtoa@g+2)^(0+128),w
  5056     0142  0020               	movlb	0	; select bank0
  5057     0143  00A2               	movwf	___fpclassifyf@x+2
  5058     0144  0021               	movlb	1	; select bank1
  5059     0145  0847               	movf	(efgtoa@g+1)^(0+128),w
  5060     0146  0020               	movlb	0	; select bank0
  5061     0147  00A1               	movwf	___fpclassifyf@x+1
  5062     0148  0021               	movlb	1	; select bank1
  5063     0149  0846               	movf	efgtoa@g^(0+128),w
  5064     014A  0020               	movlb	0	; select bank0
  5065     014B  00A0               	movwf	___fpclassifyf@x
  5066     014C  3193  2355  3180   	fcall	___fpclassifyf
  5067     014F  0020               	movlb	0	; select bank0
  5068     0150  0820               	movf	?___fpclassifyf,w
  5069     0151  0421               	iorwf	?___fpclassifyf+1,w
  5070     0152  1D03               	btfss	3,2
  5071     0153  2955               	goto	u7421
  5072     0154  2956               	goto	u7420
  5073     0155                     u7421:
  5074     0155  2974               	goto	l5226
  5075     0156                     u7420:
  5076     0156                     l5216:
  5077                           
  5078                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 638:   if (sign) {
  5079     0156  0021               	movlb	1	; select bank1
  5080     0157  0845               	movf	efgtoa@sign^(0+128),w
  5081     0158  1903               	btfsc	3,2
  5082     0159  295B               	goto	u7431
  5083     015A  295C               	goto	u7430
  5084     015B                     u7431:
  5085     015B  2968               	goto	l5220
  5086     015C                     u7430:
  5087     015C                     l5218:
  5088                           
  5089                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 639:    dbuf[0] = si
      +                          gn;
  5090     015C  0845               	movf	efgtoa@sign^(0+128),w
  5091     015D  0024               	movlb	4	; select bank4
  5092     015E  00A0               	movwf	_dbuf^(0+512)
  5093                           
  5094                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 640:    w--;
  5095     015F  30FF               	movlw	255
  5096     0160  0021               	movlb	1	; select bank1
  5097     0161  07B5               	addwf	efgtoa@w^(0+128),f
  5098     0162  30FF               	movlw	255
  5099     0163  3DB6               	addwfc	(efgtoa@w+1)^(0+128),f
  5100                           
  5101                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 641:    n = 1;
  5102     0164  3001               	movlw	1
  5103     0165  00CA               	movwf	efgtoa@n^(0+128)
  5104     0166  3000               	movlw	0
  5105     0167  00CB               	movwf	(efgtoa@n^(0+128)+1)
  5106     0168                     l5220:
  5107                           
  5108                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 649:   {;/Applicatio
      +                          ns/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 650:             strcpy(&dbuf[n]
      +                          , "nan");
  5109     0168  084A               	movf	efgtoa@n^(0+128),w
  5110     0169  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  5111     016A  0020               	movlb	0	; select bank0
  5112     016B  00A0               	movwf	strcpy@dest
  5113     016C  308C               	movlw	low (STR_8| (0+32768))
  5114     016D  00A1               	movwf	strcpy@src
  5115     016E  3098               	movlw	high (STR_8| (0+32768))
  5116     016F  00A2               	movwf	strcpy@src+1
  5117     0170  319F  270C  3180   	fcall	_strcpy
  5118     0173  2924               	goto	l5210
  5119     0174                     l5226:
  5120                           
  5121                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 657:     u.f = 1.0;
  5122     0174  303F               	movlw	63
  5123     0175  0021               	movlb	1	; select bank1
  5124     0176  00CF               	movwf	(efgtoa@u+3)^(0+128)
  5125     0177  3080               	movlw	128
  5126     0178  00CE               	movwf	(efgtoa@u+2)^(0+128)
  5127     0179  3000               	movlw	0
  5128     017A  00CD               	movwf	(efgtoa@u+1)^(0+128)
  5129     017B  3000               	movlw	0
  5130     017C  00CC               	movwf	efgtoa@u^(0+128)
  5131     017D                     l5228:
  5132                           
  5133                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 658:     e = 0;
  5134     017D  01B3               	clrf	efgtoa@e^(0+128)
  5135     017E  01B4               	clrf	(efgtoa@e+1)^(0+128)
  5136     017F                     l5230:
  5137                           
  5138                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 659:  if (!(g.f == 0
      +                          .0)) {
  5139     017F  0849               	movf	(efgtoa@g+3)^(0+128),w
  5140     0180  0020               	movlb	0	; select bank0
  5141     0181  00A3               	movwf	___fleq@ff1+3
  5142     0182  0021               	movlb	1	; select bank1
  5143     0183  0848               	movf	(efgtoa@g+2)^(0+128),w
  5144     0184  0020               	movlb	0	; select bank0
  5145     0185  00A2               	movwf	___fleq@ff1+2
  5146     0186  0021               	movlb	1	; select bank1
  5147     0187  0847               	movf	(efgtoa@g+1)^(0+128),w
  5148     0188  0020               	movlb	0	; select bank0
  5149     0189  00A1               	movwf	___fleq@ff1+1
  5150     018A  0021               	movlb	1	; select bank1
  5151     018B  0846               	movf	efgtoa@g^(0+128),w
  5152     018C  0020               	movlb	0	; select bank0
  5153     018D  00A0               	movwf	___fleq@ff1
  5154     018E  3000               	movlw	0
  5155     018F  00A7               	movwf	___fleq@ff2+3
  5156     0190  3000               	movlw	0
  5157     0191  00A6               	movwf	___fleq@ff2+2
  5158     0192  3000               	movlw	0
  5159     0193  00A5               	movwf	___fleq@ff2+1
  5160     0194  3000               	movlw	0
  5161     0195  00A4               	movwf	___fleq@ff2
  5162     0196  3191  2180  3180   	fcall	___fleq
  5163     0199  1803               	btfsc	3,0
  5164     019A  299C               	goto	u7441
  5165     019B  299D               	goto	u7440
  5166     019C                     u7441:
  5167     019C  2AF1               	goto	l5256
  5168     019D                     u7440:
  5169     019D  29AB               	goto	l5236
  5170     019E                     l5234:
  5171                           
  5172                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 661:    u = ou;
  5173     019E  0021               	movlb	1	; select bank1
  5174     019F  083A               	movf	(efgtoa@ou+3)^(0+128),w
  5175     01A0  00CF               	movwf	(efgtoa@u+3)^(0+128)
  5176     01A1  0839               	movf	(efgtoa@ou+2)^(0+128),w
  5177     01A2  00CE               	movwf	(efgtoa@u+2)^(0+128)
  5178     01A3  0838               	movf	(efgtoa@ou+1)^(0+128),w
  5179     01A4  00CD               	movwf	(efgtoa@u+1)^(0+128)
  5180     01A5  0837               	movf	efgtoa@ou^(0+128),w
  5181     01A6  00CC               	movwf	efgtoa@u^(0+128)
  5182                           
  5183                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 662:    ++e;
  5184     01A7  3001               	movlw	1
  5185     01A8  07B3               	addwf	efgtoa@e^(0+128),f
  5186     01A9  3000               	movlw	0
  5187     01AA  3DB4               	addwfc	(efgtoa@e+1)^(0+128),f
  5188     01AB                     l5236:
  5189                           
  5190                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 660:   while ((labs(
      +                          (g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5191     01AB  3041               	movlw	65
  5192     01AC  0020               	movlb	0	; select bank0
  5193     01AD  00B5               	movwf	___flmul@b+3
  5194     01AE  3020               	movlw	32
  5195     01AF  00B4               	movwf	___flmul@b+2
  5196     01B0  3000               	movlw	0
  5197     01B1  00B3               	movwf	___flmul@b+1
  5198     01B2  3000               	movlw	0
  5199     01B3  00B2               	movwf	___flmul@b
  5200     01B4  0021               	movlb	1	; select bank1
  5201     01B5  084F               	movf	(efgtoa@u+3)^(0+128),w
  5202     01B6  0020               	movlb	0	; select bank0
  5203     01B7  00B9               	movwf	___flmul@a+3
  5204     01B8  0021               	movlb	1	; select bank1
  5205     01B9  084E               	movf	(efgtoa@u+2)^(0+128),w
  5206     01BA  0020               	movlb	0	; select bank0
  5207     01BB  00B8               	movwf	___flmul@a+2
  5208     01BC  0021               	movlb	1	; select bank1
  5209     01BD  084D               	movf	(efgtoa@u+1)^(0+128),w
  5210     01BE  0020               	movlb	0	; select bank0
  5211     01BF  00B7               	movwf	___flmul@a+1
  5212     01C0  0021               	movlb	1	; select bank1
  5213     01C1  084C               	movf	efgtoa@u^(0+128),w
  5214     01C2  0020               	movlb	0	; select bank0
  5215     01C3  00B6               	movwf	___flmul@a
  5216     01C4  318D  25C5  3180   	fcall	___flmul
  5217     01C7  0020               	movlb	0	; select bank0
  5218     01C8  0835               	movf	?___flmul+3,w
  5219     01C9  0021               	movlb	1	; select bank1
  5220     01CA  00BA               	movwf	(efgtoa@ou+3)^(0+128)
  5221     01CB  0020               	movlb	0	; select bank0
  5222     01CC  0834               	movf	?___flmul+2,w
  5223     01CD  0021               	movlb	1	; select bank1
  5224     01CE  00B9               	movwf	(efgtoa@ou+2)^(0+128)
  5225     01CF  0020               	movlb	0	; select bank0
  5226     01D0  0833               	movf	?___flmul+1,w
  5227     01D1  0021               	movlb	1	; select bank1
  5228     01D2  00B8               	movwf	(efgtoa@ou+1)^(0+128)
  5229     01D3  0020               	movlb	0	; select bank0
  5230     01D4  0832               	movf	?___flmul,w
  5231     01D5  0021               	movlb	1	; select bank1
  5232     01D6  00B7               	movwf	efgtoa@ou^(0+128)
  5233     01D7                     l5238:
  5234     01D7  0837               	movf	efgtoa@ou^(0+128),w
  5235     01D8  0246               	subwf	efgtoa@g^(0+128),w
  5236     01D9  00A0               	movwf	??_efgtoa^(0+128)
  5237     01DA  0838               	movf	(efgtoa@ou+1)^(0+128),w
  5238     01DB  3B47               	subwfb	(efgtoa@g+1)^(0+128),w
  5239     01DC  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5240     01DD  0839               	movf	(efgtoa@ou+2)^(0+128),w
  5241     01DE  3B48               	subwfb	(efgtoa@g+2)^(0+128),w
  5242     01DF  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5243     01E0  083A               	movf	(efgtoa@ou+3)^(0+128),w
  5244     01E1  3B49               	subwfb	(efgtoa@g+3)^(0+128),w
  5245     01E2  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5246     01E3  0823               	movf	(??_efgtoa+3)^(0+128),w
  5247     01E4  0020               	movlb	0	; select bank0
  5248     01E5  00A3               	movwf	labs@a+3
  5249     01E6  0021               	movlb	1	; select bank1
  5250     01E7  0822               	movf	(??_efgtoa+2)^(0+128),w
  5251     01E8  0020               	movlb	0	; select bank0
  5252     01E9  00A2               	movwf	labs@a+2
  5253     01EA  0021               	movlb	1	; select bank1
  5254     01EB  0821               	movf	(??_efgtoa+1)^(0+128),w
  5255     01EC  0020               	movlb	0	; select bank0
  5256     01ED  00A1               	movwf	labs@a+1
  5257     01EE  0021               	movlb	1	; select bank1
  5258     01EF  0820               	movf	??_efgtoa^(0+128),w
  5259     01F0  0020               	movlb	0	; select bank0
  5260     01F1  00A0               	movwf	labs@a
  5261     01F2  319E  26DC  3180   	fcall	_labs
  5262     01F5  0020               	movlb	0	; select bank0
  5263     01F6  1BA3               	btfsc	?_labs+3,7
  5264     01F7  2A06               	goto	u7451
  5265     01F8  0823               	movf	?_labs+3,w
  5266     01F9  1D03               	btfss	3,2
  5267     01FA  2A07               	goto	u7450
  5268     01FB  0822               	movf	?_labs+2,w
  5269     01FC  1D03               	btfss	3,2
  5270     01FD  2A07               	goto	u7450
  5271     01FE  0821               	movf	?_labs+1,w
  5272     01FF  1D03               	btfss	3,2
  5273     0200  2A07               	goto	u7450
  5274     0201  3002               	movlw	2
  5275     0202  0220               	subwf	?_labs,w
  5276     0203  1C03               	btfss	3,0
  5277     0204  2A06               	goto	u7451
  5278     0205  2A07               	goto	u7450
  5279     0206                     u7451:
  5280     0206  299E               	goto	l5234
  5281     0207                     u7450:
  5282     0207                     l5240:
  5283     0207  0021               	movlb	1	; select bank1
  5284     0208  083A               	movf	(efgtoa@ou+3)^(0+128),w
  5285     0209  0020               	movlb	0	; select bank0
  5286     020A  00CF               	movwf	___flge@ff1+3
  5287     020B  0021               	movlb	1	; select bank1
  5288     020C  0839               	movf	(efgtoa@ou+2)^(0+128),w
  5289     020D  0020               	movlb	0	; select bank0
  5290     020E  00CE               	movwf	___flge@ff1+2
  5291     020F  0021               	movlb	1	; select bank1
  5292     0210  0838               	movf	(efgtoa@ou+1)^(0+128),w
  5293     0211  0020               	movlb	0	; select bank0
  5294     0212  00CD               	movwf	___flge@ff1+1
  5295     0213  0021               	movlb	1	; select bank1
  5296     0214  0837               	movf	efgtoa@ou^(0+128),w
  5297     0215  0020               	movlb	0	; select bank0
  5298     0216  00CC               	movwf	___flge@ff1
  5299     0217  0021               	movlb	1	; select bank1
  5300     0218  0849               	movf	(efgtoa@g+3)^(0+128),w
  5301     0219  0020               	movlb	0	; select bank0
  5302     021A  00D3               	movwf	___flge@ff2+3
  5303     021B  0021               	movlb	1	; select bank1
  5304     021C  0848               	movf	(efgtoa@g+2)^(0+128),w
  5305     021D  0020               	movlb	0	; select bank0
  5306     021E  00D2               	movwf	___flge@ff2+2
  5307     021F  0021               	movlb	1	; select bank1
  5308     0220  0847               	movf	(efgtoa@g+1)^(0+128),w
  5309     0221  0020               	movlb	0	; select bank0
  5310     0222  00D1               	movwf	___flge@ff2+1
  5311     0223  0021               	movlb	1	; select bank1
  5312     0224  0846               	movf	efgtoa@g^(0+128),w
  5313     0225  0020               	movlb	0	; select bank0
  5314     0226  00D0               	movwf	___flge@ff2
  5315     0227  3193  23D4  3180   	fcall	___flge
  5316     022A  1C03               	btfss	3,0
  5317     022B  2A2D               	goto	u7461
  5318     022C  2A2E               	goto	u7460
  5319     022D                     u7461:
  5320     022D  299E               	goto	l5234
  5321     022E                     u7460:
  5322     022E                     l5242:
  5323                           
  5324                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 664:   if ((labs((g)
      +                          .u-(u).u) <= 1)) {
  5325     022E  0021               	movlb	1	; select bank1
  5326     022F  084C               	movf	efgtoa@u^(0+128),w
  5327     0230  0246               	subwf	efgtoa@g^(0+128),w
  5328     0231  00A0               	movwf	??_efgtoa^(0+128)
  5329     0232  084D               	movf	(efgtoa@u+1)^(0+128),w
  5330     0233  3B47               	subwfb	(efgtoa@g+1)^(0+128),w
  5331     0234  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5332     0235  084E               	movf	(efgtoa@u+2)^(0+128),w
  5333     0236  3B48               	subwfb	(efgtoa@g+2)^(0+128),w
  5334     0237  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5335     0238  084F               	movf	(efgtoa@u+3)^(0+128),w
  5336     0239  3B49               	subwfb	(efgtoa@g+3)^(0+128),w
  5337     023A  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5338     023B  0823               	movf	(??_efgtoa+3)^(0+128),w
  5339     023C  0020               	movlb	0	; select bank0
  5340     023D  00A3               	movwf	labs@a+3
  5341     023E  0021               	movlb	1	; select bank1
  5342     023F  0822               	movf	(??_efgtoa+2)^(0+128),w
  5343     0240  0020               	movlb	0	; select bank0
  5344     0241  00A2               	movwf	labs@a+2
  5345     0242  0021               	movlb	1	; select bank1
  5346     0243  0821               	movf	(??_efgtoa+1)^(0+128),w
  5347     0244  0020               	movlb	0	; select bank0
  5348     0245  00A1               	movwf	labs@a+1
  5349     0246  0021               	movlb	1	; select bank1
  5350     0247  0820               	movf	??_efgtoa^(0+128),w
  5351     0248  0020               	movlb	0	; select bank0
  5352     0249  00A0               	movwf	labs@a
  5353     024A  319E  26DC  3180   	fcall	_labs
  5354     024D  0020               	movlb	0	; select bank0
  5355     024E  1BA3               	btfsc	?_labs+3,7
  5356     024F  2A5F               	goto	u7470
  5357     0250  0823               	movf	?_labs+3,w
  5358     0251  1D03               	btfss	3,2
  5359     0252  2A5E               	goto	u7471
  5360     0253  0822               	movf	?_labs+2,w
  5361     0254  1D03               	btfss	3,2
  5362     0255  2A5E               	goto	u7471
  5363     0256  0821               	movf	?_labs+1,w
  5364     0257  1D03               	btfss	3,2
  5365     0258  2A5E               	goto	u7471
  5366     0259  3002               	movlw	2
  5367     025A  0220               	subwf	?_labs,w
  5368     025B  1803               	btfsc	3,0
  5369     025C  2A5E               	goto	u7471
  5370     025D  2A5F               	goto	u7470
  5371     025E                     u7471:
  5372     025E  2ACA               	goto	l5254
  5373     025F                     u7470:
  5374     025F                     l5244:
  5375                           
  5376                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 665:    g = u;
  5377     025F  0021               	movlb	1	; select bank1
  5378     0260  084F               	movf	(efgtoa@u+3)^(0+128),w
  5379     0261  00C9               	movwf	(efgtoa@g+3)^(0+128)
  5380     0262  084E               	movf	(efgtoa@u+2)^(0+128),w
  5381     0263  00C8               	movwf	(efgtoa@g+2)^(0+128)
  5382     0264  084D               	movf	(efgtoa@u+1)^(0+128),w
  5383     0265  00C7               	movwf	(efgtoa@g+1)^(0+128)
  5384     0266  084C               	movf	efgtoa@u^(0+128),w
  5385     0267  00C6               	movwf	efgtoa@g^(0+128)
  5386                           
  5387                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 666:   }
  5388     0268  2AF1               	goto	l5256
  5389     0269                     l5246:
  5390                           
  5391                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 669:     u.f = u.f/1
      +                          0.0;
  5392     0269  3041               	movlw	65
  5393     026A  0020               	movlb	0	; select bank0
  5394     026B  00A3               	movwf	___fldiv@a+3
  5395     026C  3020               	movlw	32
  5396     026D  00A2               	movwf	___fldiv@a+2
  5397     026E  3000               	movlw	0
  5398     026F  00A1               	movwf	___fldiv@a+1
  5399     0270  3000               	movlw	0
  5400     0271  00A0               	movwf	___fldiv@a
  5401     0272  0021               	movlb	1	; select bank1
  5402     0273  084F               	movf	(efgtoa@u+3)^(0+128),w
  5403     0274  0020               	movlb	0	; select bank0
  5404     0275  00A7               	movwf	___fldiv@b+3
  5405     0276  0021               	movlb	1	; select bank1
  5406     0277  084E               	movf	(efgtoa@u+2)^(0+128),w
  5407     0278  0020               	movlb	0	; select bank0
  5408     0279  00A6               	movwf	___fldiv@b+2
  5409     027A  0021               	movlb	1	; select bank1
  5410     027B  084D               	movf	(efgtoa@u+1)^(0+128),w
  5411     027C  0020               	movlb	0	; select bank0
  5412     027D  00A5               	movwf	___fldiv@b+1
  5413     027E  0021               	movlb	1	; select bank1
  5414     027F  084C               	movf	efgtoa@u^(0+128),w
  5415     0280  0020               	movlb	0	; select bank0
  5416     0281  00A4               	movwf	___fldiv@b
  5417     0282  3196  265C  3180   	fcall	___fldiv
  5418     0285  0020               	movlb	0	; select bank0
  5419     0286  0823               	movf	?___fldiv+3,w
  5420     0287  0021               	movlb	1	; select bank1
  5421     0288  00CF               	movwf	(efgtoa@u+3)^(0+128)
  5422     0289  0020               	movlb	0	; select bank0
  5423     028A  0822               	movf	?___fldiv+2,w
  5424     028B  0021               	movlb	1	; select bank1
  5425     028C  00CE               	movwf	(efgtoa@u+2)^(0+128)
  5426     028D  0020               	movlb	0	; select bank0
  5427     028E  0821               	movf	?___fldiv+1,w
  5428     028F  0021               	movlb	1	; select bank1
  5429     0290  00CD               	movwf	(efgtoa@u+1)^(0+128)
  5430     0291  0020               	movlb	0	; select bank0
  5431     0292  0820               	movf	?___fldiv,w
  5432     0293  0021               	movlb	1	; select bank1
  5433     0294  00CC               	movwf	efgtoa@u^(0+128)
  5434     0295                     l5248:
  5435                           
  5436                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 670:     --e;
  5437     0295  30FF               	movlw	255
  5438     0296  07B3               	addwf	efgtoa@e^(0+128),f
  5439     0297  30FF               	movlw	255
  5440     0298  3DB4               	addwfc	(efgtoa@e+1)^(0+128),f
  5441     0299                     l5250:
  5442                           
  5443                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 671:     if ((labs((
      +                          g).u-(u).u) <= 1)) {
  5444     0299  084C               	movf	efgtoa@u^(0+128),w
  5445     029A  0246               	subwf	efgtoa@g^(0+128),w
  5446     029B  00A0               	movwf	??_efgtoa^(0+128)
  5447     029C  084D               	movf	(efgtoa@u+1)^(0+128),w
  5448     029D  3B47               	subwfb	(efgtoa@g+1)^(0+128),w
  5449     029E  00A1               	movwf	(??_efgtoa^(0+128)+1)
  5450     029F  084E               	movf	(efgtoa@u+2)^(0+128),w
  5451     02A0  3B48               	subwfb	(efgtoa@g+2)^(0+128),w
  5452     02A1  00A2               	movwf	(??_efgtoa^(0+128)+2)
  5453     02A2  084F               	movf	(efgtoa@u+3)^(0+128),w
  5454     02A3  3B49               	subwfb	(efgtoa@g+3)^(0+128),w
  5455     02A4  00A3               	movwf	(??_efgtoa^(0+128)+3)
  5456     02A5  0823               	movf	(??_efgtoa+3)^(0+128),w
  5457     02A6  0020               	movlb	0	; select bank0
  5458     02A7  00A3               	movwf	labs@a+3
  5459     02A8  0021               	movlb	1	; select bank1
  5460     02A9  0822               	movf	(??_efgtoa+2)^(0+128),w
  5461     02AA  0020               	movlb	0	; select bank0
  5462     02AB  00A2               	movwf	labs@a+2
  5463     02AC  0021               	movlb	1	; select bank1
  5464     02AD  0821               	movf	(??_efgtoa+1)^(0+128),w
  5465     02AE  0020               	movlb	0	; select bank0
  5466     02AF  00A1               	movwf	labs@a+1
  5467     02B0  0021               	movlb	1	; select bank1
  5468     02B1  0820               	movf	??_efgtoa^(0+128),w
  5469     02B2  0020               	movlb	0	; select bank0
  5470     02B3  00A0               	movwf	labs@a
  5471     02B4  319E  26DC  3180   	fcall	_labs
  5472     02B7  0020               	movlb	0	; select bank0
  5473     02B8  1BA3               	btfsc	?_labs+3,7
  5474     02B9  2AC9               	goto	u7480
  5475     02BA  0823               	movf	?_labs+3,w
  5476     02BB  1D03               	btfss	3,2
  5477     02BC  2AC8               	goto	u7481
  5478     02BD  0822               	movf	?_labs+2,w
  5479     02BE  1D03               	btfss	3,2
  5480     02BF  2AC8               	goto	u7481
  5481     02C0  0821               	movf	?_labs+1,w
  5482     02C1  1D03               	btfss	3,2
  5483     02C2  2AC8               	goto	u7481
  5484     02C3  3002               	movlw	2
  5485     02C4  0220               	subwf	?_labs,w
  5486     02C5  1803               	btfsc	3,0
  5487     02C6  2AC8               	goto	u7481
  5488     02C7  2AC9               	goto	u7480
  5489     02C8                     u7481:
  5490     02C8  2ACA               	goto	l5254
  5491     02C9                     u7480:
  5492     02C9  2A5F               	goto	l5244
  5493     02CA                     l5254:
  5494                           
  5495                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 668:    while (g.f <
      +                           u.f) {
  5496     02CA  0021               	movlb	1	; select bank1
  5497     02CB  0849               	movf	(efgtoa@g+3)^(0+128),w
  5498     02CC  0020               	movlb	0	; select bank0
  5499     02CD  00CF               	movwf	___flge@ff1+3
  5500     02CE  0021               	movlb	1	; select bank1
  5501     02CF  0848               	movf	(efgtoa@g+2)^(0+128),w
  5502     02D0  0020               	movlb	0	; select bank0
  5503     02D1  00CE               	movwf	___flge@ff1+2
  5504     02D2  0021               	movlb	1	; select bank1
  5505     02D3  0847               	movf	(efgtoa@g+1)^(0+128),w
  5506     02D4  0020               	movlb	0	; select bank0
  5507     02D5  00CD               	movwf	___flge@ff1+1
  5508     02D6  0021               	movlb	1	; select bank1
  5509     02D7  0846               	movf	efgtoa@g^(0+128),w
  5510     02D8  0020               	movlb	0	; select bank0
  5511     02D9  00CC               	movwf	___flge@ff1
  5512     02DA  0021               	movlb	1	; select bank1
  5513     02DB  084F               	movf	(efgtoa@u+3)^(0+128),w
  5514     02DC  0020               	movlb	0	; select bank0
  5515     02DD  00D3               	movwf	___flge@ff2+3
  5516     02DE  0021               	movlb	1	; select bank1
  5517     02DF  084E               	movf	(efgtoa@u+2)^(0+128),w
  5518     02E0  0020               	movlb	0	; select bank0
  5519     02E1  00D2               	movwf	___flge@ff2+2
  5520     02E2  0021               	movlb	1	; select bank1
  5521     02E3  084D               	movf	(efgtoa@u+1)^(0+128),w
  5522     02E4  0020               	movlb	0	; select bank0
  5523     02E5  00D1               	movwf	___flge@ff2+1
  5524     02E6  0021               	movlb	1	; select bank1
  5525     02E7  084C               	movf	efgtoa@u^(0+128),w
  5526     02E8  0020               	movlb	0	; select bank0
  5527     02E9  00D0               	movwf	___flge@ff2
  5528     02EA  3193  23D4  3180   	fcall	___flge
  5529     02ED  1C03               	btfss	3,0
  5530     02EE  2AF0               	goto	u7491
  5531     02EF  2AF1               	goto	u7490
  5532     02F0                     u7491:
  5533     02F0  2A69               	goto	l5246
  5534     02F1                     u7490:
  5535     02F1                     l5256:
  5536                           
  5537                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 683:  mode = c;
  5538     02F1  0020               	movlb	0	; select bank0
  5539     02F2  086E               	movf	efgtoa@c,w
  5540     02F3  0021               	movlb	1	; select bank1
  5541     02F4  00AD               	movwf	efgtoa@mode^(0+128)
  5542                           
  5543                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 685:     nmode = mod
      +                          e;
  5544     02F5  082D               	movf	efgtoa@mode^(0+128),w
  5545     02F6  00AE               	movwf	efgtoa@nmode^(0+128)
  5546     02F7                     l5258:
  5547                           
  5548                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 695:  {;/Application
      +                          s/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 696:         p = (prec < 0) ? 6 :
      +                           prec;
  5549     02F7  0022               	movlb	2	; select bank2
  5550     02F8  1BCB               	btfsc	(_prec+1)^(0+256),7
  5551     02F9  2AFB               	goto	u7501
  5552     02FA  2AFC               	goto	u7500
  5553     02FB                     u7501:
  5554     02FB  2B04               	goto	l5262
  5555     02FC                     u7500:
  5556     02FC                     l5260:
  5557     02FC  084B               	movf	(_prec+1)^(0+256),w
  5558     02FD  0021               	movlb	1	; select bank1
  5559     02FE  00A7               	movwf	(efgtoa@p+1)^(0+128)
  5560     02FF  0022               	movlb	2	; select bank2
  5561     0300  084A               	movf	_prec^(0+256),w
  5562     0301  0021               	movlb	1	; select bank1
  5563     0302  00A6               	movwf	efgtoa@p^(0+128)
  5564     0303  2B09               	goto	l1221
  5565     0304                     l5262:
  5566     0304  3006               	movlw	6
  5567     0305  0021               	movlb	1	; select bank1
  5568     0306  00A6               	movwf	efgtoa@p^(0+128)
  5569     0307  3000               	movlw	0
  5570     0308  00A7               	movwf	(efgtoa@p^(0+128)+1)
  5571     0309                     l1221:
  5572                           
  5573                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 697:     };/Applicat
      +                          ions/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 711:     m = p;
  5574     0309  0827               	movf	(efgtoa@p+1)^(0+128),w
  5575     030A  00B2               	movwf	(efgtoa@m+1)^(0+128)
  5576     030B  0826               	movf	efgtoa@p^(0+128),w
  5577     030C  00B1               	movwf	efgtoa@m^(0+128)
  5578                           
  5579                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 715:  {;/Application
      +                          s/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 716:         ++m;
  5580     030D  3001               	movlw	1
  5581     030E  07B1               	addwf	efgtoa@m^(0+128),f
  5582     030F  3000               	movlw	0
  5583     0310  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5584     0311                     l5264:
  5585                           
  5586                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 717:     };/Applicat
      +                          ions/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 721:     if (nmode == 'f') {
  5587     0311  3066               	movlw	102
  5588     0312  062E               	xorwf	efgtoa@nmode^(0+128),w
  5589     0313  1D03               	btfss	3,2
  5590     0314  2B16               	goto	u7511
  5591     0315  2B17               	goto	u7510
  5592     0316                     u7511:
  5593     0316  2B2F               	goto	l5276
  5594     0317                     u7510:
  5595     0317                     l5266:
  5596                           
  5597                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 722:         if (e <
      +                           0) {
  5598     0317  1FB4               	btfss	(efgtoa@e+1)^(0+128),7
  5599     0318  2B1A               	goto	u7521
  5600     0319  2B1B               	goto	u7520
  5601     031A                     u7521:
  5602     031A  2B25               	goto	l5272
  5603     031B                     u7520:
  5604     031B                     l5268:
  5605                           
  5606                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 723:             u.f
      +                           = 1.0;
  5607     031B  303F               	movlw	63
  5608     031C  00CF               	movwf	(efgtoa@u+3)^(0+128)
  5609     031D  3080               	movlw	128
  5610     031E  00CE               	movwf	(efgtoa@u+2)^(0+128)
  5611     031F  3000               	movlw	0
  5612     0320  00CD               	movwf	(efgtoa@u+1)^(0+128)
  5613     0321  3000               	movlw	0
  5614     0322  00CC               	movwf	efgtoa@u^(0+128)
  5615     0323                     l5270:
  5616                           
  5617                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 724:             e =
      +                           0;
  5618     0323  01B3               	clrf	efgtoa@e^(0+128)
  5619     0324  01B4               	clrf	(efgtoa@e+1)^(0+128)
  5620     0325                     l5272:
  5621                           
  5622                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 726:         if (!(m
      +                          ode == 'g')) {
  5623     0325  3067               	movlw	103
  5624     0326  062D               	xorwf	efgtoa@mode^(0+128),w
  5625     0327  1903               	btfsc	3,2
  5626     0328  2B2A               	goto	u7531
  5627     0329  2B2B               	goto	u7530
  5628     032A                     u7531:
  5629     032A  2B2F               	goto	l5276
  5630     032B                     u7530:
  5631     032B                     l5274:
  5632                           
  5633                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 727:             m +
      +                          = e;
  5634     032B  0833               	movf	efgtoa@e^(0+128),w
  5635     032C  07B1               	addwf	efgtoa@m^(0+128),f
  5636     032D  0834               	movf	(efgtoa@e+1)^(0+128),w
  5637     032E  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  5638     032F                     l5276:
  5639                           
  5640                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 733:     i = 0;
  5641     032F  01BB               	clrf	efgtoa@i^(0+128)
  5642     0330  01BC               	clrf	(efgtoa@i+1)^(0+128)
  5643     0331                     l5278:
  5644                           
  5645                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 734:     h = g.f;
  5646     0331  0849               	movf	(efgtoa@g+3)^(0+128),w
  5647     0332  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5648     0333  0848               	movf	(efgtoa@g+2)^(0+128),w
  5649     0334  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5650     0335  0847               	movf	(efgtoa@g+1)^(0+128),w
  5651     0336  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5652     0337  0846               	movf	efgtoa@g^(0+128),w
  5653     0338  00BD               	movwf	efgtoa@h^(0+128)
  5654     0339                     l5280:
  5655                           
  5656                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 735:     ou = u;
  5657     0339  084F               	movf	(efgtoa@u+3)^(0+128),w
  5658     033A  00BA               	movwf	(efgtoa@ou+3)^(0+128)
  5659     033B  084E               	movf	(efgtoa@u+2)^(0+128),w
  5660     033C  00B9               	movwf	(efgtoa@ou+2)^(0+128)
  5661     033D  084D               	movf	(efgtoa@u+1)^(0+128),w
  5662     033E  00B8               	movwf	(efgtoa@ou+1)^(0+128)
  5663     033F  084C               	movf	efgtoa@u^(0+128),w
  5664     0340  00B7               	movwf	efgtoa@ou^(0+128)
  5665                           
  5666                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < 
      +                          m) {
  5667     0341  2C19               	goto	l5286
  5668     0342                     l5282:
  5669                           
  5670                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 737:         l = flo
      +                          orf(h/u.f);
  5671     0342  0021               	movlb	1	; select bank1
  5672     0343  084F               	movf	(efgtoa@u+3)^(0+128),w
  5673     0344  0020               	movlb	0	; select bank0
  5674     0345  00A3               	movwf	___fldiv@a+3
  5675     0346  0021               	movlb	1	; select bank1
  5676     0347  084E               	movf	(efgtoa@u+2)^(0+128),w
  5677     0348  0020               	movlb	0	; select bank0
  5678     0349  00A2               	movwf	___fldiv@a+2
  5679     034A  0021               	movlb	1	; select bank1
  5680     034B  084D               	movf	(efgtoa@u+1)^(0+128),w
  5681     034C  0020               	movlb	0	; select bank0
  5682     034D  00A1               	movwf	___fldiv@a+1
  5683     034E  0021               	movlb	1	; select bank1
  5684     034F  084C               	movf	efgtoa@u^(0+128),w
  5685     0350  0020               	movlb	0	; select bank0
  5686     0351  00A0               	movwf	___fldiv@a
  5687     0352  0021               	movlb	1	; select bank1
  5688     0353  0840               	movf	(efgtoa@h+3)^(0+128),w
  5689     0354  0020               	movlb	0	; select bank0
  5690     0355  00A7               	movwf	___fldiv@b+3
  5691     0356  0021               	movlb	1	; select bank1
  5692     0357  083F               	movf	(efgtoa@h+2)^(0+128),w
  5693     0358  0020               	movlb	0	; select bank0
  5694     0359  00A6               	movwf	___fldiv@b+2
  5695     035A  0021               	movlb	1	; select bank1
  5696     035B  083E               	movf	(efgtoa@h+1)^(0+128),w
  5697     035C  0020               	movlb	0	; select bank0
  5698     035D  00A5               	movwf	___fldiv@b+1
  5699     035E  0021               	movlb	1	; select bank1
  5700     035F  083D               	movf	efgtoa@h^(0+128),w
  5701     0360  0020               	movlb	0	; select bank0
  5702     0361  00A4               	movwf	___fldiv@b
  5703     0362  3196  265C  3180   	fcall	___fldiv
  5704     0365  0020               	movlb	0	; select bank0
  5705     0366  0823               	movf	?___fldiv+3,w
  5706     0367  00BD               	movwf	floorf@x+3
  5707     0368  0822               	movf	?___fldiv+2,w
  5708     0369  00BC               	movwf	floorf@x+2
  5709     036A  0821               	movf	?___fldiv+1,w
  5710     036B  00BB               	movwf	floorf@x+1
  5711     036C  0820               	movf	?___fldiv,w
  5712     036D  00BA               	movwf	floorf@x
  5713     036E  3194  245F  3180   	fcall	_floorf
  5714     0371  0020               	movlb	0	; select bank0
  5715     0372  083D               	movf	?_floorf+3,w
  5716     0373  0021               	movlb	1	; select bank1
  5717     0374  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5718     0375  0020               	movlb	0	; select bank0
  5719     0376  083C               	movf	?_floorf+2,w
  5720     0377  0021               	movlb	1	; select bank1
  5721     0378  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5722     0379  0020               	movlb	0	; select bank0
  5723     037A  083B               	movf	?_floorf+1,w
  5724     037B  0021               	movlb	1	; select bank1
  5725     037C  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5726     037D  0020               	movlb	0	; select bank0
  5727     037E  083A               	movf	?_floorf,w
  5728     037F  0021               	movlb	1	; select bank1
  5729     0380  00C1               	movwf	efgtoa@l^(0+128)
  5730                           
  5731                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 738:         d = (in
      +                          t)l;
  5732     0381  0844               	movf	(efgtoa@l+3)^(0+128),w
  5733     0382  0020               	movlb	0	; select bank0
  5734     0383  00A3               	movwf	___fltol@f1+3
  5735     0384  0021               	movlb	1	; select bank1
  5736     0385  0843               	movf	(efgtoa@l+2)^(0+128),w
  5737     0386  0020               	movlb	0	; select bank0
  5738     0387  00A2               	movwf	___fltol@f1+2
  5739     0388  0021               	movlb	1	; select bank1
  5740     0389  0842               	movf	(efgtoa@l+1)^(0+128),w
  5741     038A  0020               	movlb	0	; select bank0
  5742     038B  00A1               	movwf	___fltol@f1+1
  5743     038C  0021               	movlb	1	; select bank1
  5744     038D  0841               	movf	efgtoa@l^(0+128),w
  5745     038E  0020               	movlb	0	; select bank0
  5746     038F  00A0               	movwf	___fltol@f1
  5747     0390  3192  22E6  3180   	fcall	___fltol
  5748     0393  0020               	movlb	0	; select bank0
  5749     0394  0821               	movf	?___fltol+1,w
  5750     0395  0021               	movlb	1	; select bank1
  5751     0396  00B0               	movwf	(efgtoa@d+1)^(0+128)
  5752     0397  0020               	movlb	0	; select bank0
  5753     0398  0820               	movf	?___fltol,w
  5754     0399  0021               	movlb	1	; select bank1
  5755     039A  00AF               	movwf	efgtoa@d^(0+128)
  5756                           
  5757                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 739:         h -= l*
      +                          u.f;
  5758     039B  084F               	movf	(efgtoa@u+3)^(0+128),w
  5759     039C  0020               	movlb	0	; select bank0
  5760     039D  00B9               	movwf	___flmul@a+3
  5761     039E  0021               	movlb	1	; select bank1
  5762     039F  084E               	movf	(efgtoa@u+2)^(0+128),w
  5763     03A0  0020               	movlb	0	; select bank0
  5764     03A1  00B8               	movwf	___flmul@a+2
  5765     03A2  0021               	movlb	1	; select bank1
  5766     03A3  084D               	movf	(efgtoa@u+1)^(0+128),w
  5767     03A4  0020               	movlb	0	; select bank0
  5768     03A5  00B7               	movwf	___flmul@a+1
  5769     03A6  0021               	movlb	1	; select bank1
  5770     03A7  084C               	movf	efgtoa@u^(0+128),w
  5771     03A8  0020               	movlb	0	; select bank0
  5772     03A9  00B6               	movwf	___flmul@a
  5773     03AA  0021               	movlb	1	; select bank1
  5774     03AB  0844               	movf	(efgtoa@l+3)^(0+128),w
  5775     03AC  0020               	movlb	0	; select bank0
  5776     03AD  00B5               	movwf	___flmul@b+3
  5777     03AE  0021               	movlb	1	; select bank1
  5778     03AF  0843               	movf	(efgtoa@l+2)^(0+128),w
  5779     03B0  0020               	movlb	0	; select bank0
  5780     03B1  00B4               	movwf	___flmul@b+2
  5781     03B2  0021               	movlb	1	; select bank1
  5782     03B3  0842               	movf	(efgtoa@l+1)^(0+128),w
  5783     03B4  0020               	movlb	0	; select bank0
  5784     03B5  00B3               	movwf	___flmul@b+1
  5785     03B6  0021               	movlb	1	; select bank1
  5786     03B7  0841               	movf	efgtoa@l^(0+128),w
  5787     03B8  0020               	movlb	0	; select bank0
  5788     03B9  00B2               	movwf	___flmul@b
  5789     03BA  318D  25C5  3180   	fcall	___flmul
  5790     03BD  0020               	movlb	0	; select bank0
  5791     03BE  0835               	movf	?___flmul+3,w
  5792     03BF  00E3               	movwf	___flsub@a+3
  5793     03C0  0834               	movf	?___flmul+2,w
  5794     03C1  00E2               	movwf	___flsub@a+2
  5795     03C2  0833               	movf	?___flmul+1,w
  5796     03C3  00E1               	movwf	___flsub@a+1
  5797     03C4  0832               	movf	?___flmul,w
  5798     03C5  00E0               	movwf	___flsub@a
  5799     03C6  0021               	movlb	1	; select bank1
  5800     03C7  0840               	movf	(efgtoa@h+3)^(0+128),w
  5801     03C8  0020               	movlb	0	; select bank0
  5802     03C9  00E7               	movwf	___flsub@b+3
  5803     03CA  0021               	movlb	1	; select bank1
  5804     03CB  083F               	movf	(efgtoa@h+2)^(0+128),w
  5805     03CC  0020               	movlb	0	; select bank0
  5806     03CD  00E6               	movwf	___flsub@b+2
  5807     03CE  0021               	movlb	1	; select bank1
  5808     03CF  083E               	movf	(efgtoa@h+1)^(0+128),w
  5809     03D0  0020               	movlb	0	; select bank0
  5810     03D1  00E5               	movwf	___flsub@b+1
  5811     03D2  0021               	movlb	1	; select bank1
  5812     03D3  083D               	movf	efgtoa@h^(0+128),w
  5813     03D4  0020               	movlb	0	; select bank0
  5814     03D5  00E4               	movwf	___flsub@b
  5815     03D6  319F  27C0  3180   	fcall	___flsub
  5816     03D9  0020               	movlb	0	; select bank0
  5817     03DA  0863               	movf	?___flsub+3,w
  5818     03DB  0021               	movlb	1	; select bank1
  5819     03DC  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5820     03DD  0020               	movlb	0	; select bank0
  5821     03DE  0862               	movf	?___flsub+2,w
  5822     03DF  0021               	movlb	1	; select bank1
  5823     03E0  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5824     03E1  0020               	movlb	0	; select bank0
  5825     03E2  0861               	movf	?___flsub+1,w
  5826     03E3  0021               	movlb	1	; select bank1
  5827     03E4  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5828     03E5  0020               	movlb	0	; select bank0
  5829     03E6  0860               	movf	?___flsub,w
  5830     03E7  0021               	movlb	1	; select bank1
  5831     03E8  00BD               	movwf	efgtoa@h^(0+128)
  5832                           
  5833                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 740:         u.f = u
      +                          .f/10.0;
  5834     03E9  3041               	movlw	65
  5835     03EA  0020               	movlb	0	; select bank0
  5836     03EB  00A3               	movwf	___fldiv@a+3
  5837     03EC  3020               	movlw	32
  5838     03ED  00A2               	movwf	___fldiv@a+2
  5839     03EE  3000               	movlw	0
  5840     03EF  00A1               	movwf	___fldiv@a+1
  5841     03F0  3000               	movlw	0
  5842     03F1  00A0               	movwf	___fldiv@a
  5843     03F2  0021               	movlb	1	; select bank1
  5844     03F3  084F               	movf	(efgtoa@u+3)^(0+128),w
  5845     03F4  0020               	movlb	0	; select bank0
  5846     03F5  00A7               	movwf	___fldiv@b+3
  5847     03F6  0021               	movlb	1	; select bank1
  5848     03F7  084E               	movf	(efgtoa@u+2)^(0+128),w
  5849     03F8  0020               	movlb	0	; select bank0
  5850     03F9  00A6               	movwf	___fldiv@b+2
  5851     03FA  0021               	movlb	1	; select bank1
  5852     03FB  084D               	movf	(efgtoa@u+1)^(0+128),w
  5853     03FC  0020               	movlb	0	; select bank0
  5854     03FD  00A5               	movwf	___fldiv@b+1
  5855     03FE  0021               	movlb	1	; select bank1
  5856     03FF  084C               	movf	efgtoa@u^(0+128),w
  5857     0400  0020               	movlb	0	; select bank0
  5858     0401  00A4               	movwf	___fldiv@b
  5859     0402  3196  265C  3180   	fcall	___fldiv
  5860     0405  0020               	movlb	0	; select bank0
  5861     0406  0823               	movf	?___fldiv+3,w
  5862     0407  0021               	movlb	1	; select bank1
  5863     0408  00CF               	movwf	(efgtoa@u+3)^(0+128)
  5864     0409  0020               	movlb	0	; select bank0
  5865     040A  0822               	movf	?___fldiv+2,w
  5866     040B  0021               	movlb	1	; select bank1
  5867     040C  00CE               	movwf	(efgtoa@u+2)^(0+128)
  5868     040D  0020               	movlb	0	; select bank0
  5869     040E  0821               	movf	?___fldiv+1,w
  5870     040F  0021               	movlb	1	; select bank1
  5871     0410  00CD               	movwf	(efgtoa@u+1)^(0+128)
  5872     0411  0020               	movlb	0	; select bank0
  5873     0412  0820               	movf	?___fldiv,w
  5874     0413  0021               	movlb	1	; select bank1
  5875     0414  00CC               	movwf	efgtoa@u^(0+128)
  5876     0415                     l5284:
  5877                           
  5878                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 741:         ++i;
  5879     0415  3001               	movlw	1
  5880     0416  07BB               	addwf	efgtoa@i^(0+128),f
  5881     0417  3000               	movlw	0
  5882     0418  3DBC               	addwfc	(efgtoa@i+1)^(0+128),f
  5883     0419                     l5286:
  5884                           
  5885                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < 
      +                          m) {
  5886     0419  083C               	movf	(efgtoa@i+1)^(0+128),w
  5887     041A  3A80               	xorlw	128
  5888     041B  00A0               	movwf	??_efgtoa^(0+128)
  5889     041C  0832               	movf	(efgtoa@m+1)^(0+128),w
  5890     041D  3A80               	xorlw	128
  5891     041E  0220               	subwf	??_efgtoa^(0+128),w
  5892     041F  1D03               	skipz
  5893     0420  2C23               	goto	u7545
  5894     0421  0831               	movf	efgtoa@m^(0+128),w
  5895     0422  023B               	subwf	efgtoa@i^(0+128),w
  5896     0423                     u7545:
  5897     0423  1C03               	skipc
  5898     0424  2C26               	goto	u7541
  5899     0425  2C27               	goto	u7540
  5900     0426                     u7541:
  5901     0426  2B42               	goto	l5282
  5902     0427                     u7540:
  5903     0427                     l5288:
  5904                           
  5905                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 745:     l = u.f*5.0
      +                          ;
  5906     0427  3040               	movlw	64
  5907     0428  0020               	movlb	0	; select bank0
  5908     0429  00B5               	movwf	___flmul@b+3
  5909     042A  30A0               	movlw	160
  5910     042B  00B4               	movwf	___flmul@b+2
  5911     042C  3000               	movlw	0
  5912     042D  00B3               	movwf	___flmul@b+1
  5913     042E  3000               	movlw	0
  5914     042F  00B2               	movwf	___flmul@b
  5915     0430  0021               	movlb	1	; select bank1
  5916     0431  084F               	movf	(efgtoa@u+3)^(0+128),w
  5917     0432  0020               	movlb	0	; select bank0
  5918     0433  00B9               	movwf	___flmul@a+3
  5919     0434  0021               	movlb	1	; select bank1
  5920     0435  084E               	movf	(efgtoa@u+2)^(0+128),w
  5921     0436  0020               	movlb	0	; select bank0
  5922     0437  00B8               	movwf	___flmul@a+2
  5923     0438  0021               	movlb	1	; select bank1
  5924     0439  084D               	movf	(efgtoa@u+1)^(0+128),w
  5925     043A  0020               	movlb	0	; select bank0
  5926     043B  00B7               	movwf	___flmul@a+1
  5927     043C  0021               	movlb	1	; select bank1
  5928     043D  084C               	movf	efgtoa@u^(0+128),w
  5929     043E  0020               	movlb	0	; select bank0
  5930     043F  00B6               	movwf	___flmul@a
  5931     0440  318D  25C5  3180   	fcall	___flmul
  5932     0443  0020               	movlb	0	; select bank0
  5933     0444  0835               	movf	?___flmul+3,w
  5934     0445  0021               	movlb	1	; select bank1
  5935     0446  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5936     0447  0020               	movlb	0	; select bank0
  5937     0448  0834               	movf	?___flmul+2,w
  5938     0449  0021               	movlb	1	; select bank1
  5939     044A  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5940     044B  0020               	movlb	0	; select bank0
  5941     044C  0833               	movf	?___flmul+1,w
  5942     044D  0021               	movlb	1	; select bank1
  5943     044E  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5944     044F  0020               	movlb	0	; select bank0
  5945     0450  0832               	movf	?___flmul,w
  5946     0451  0021               	movlb	1	; select bank1
  5947     0452  00C1               	movwf	efgtoa@l^(0+128)
  5948                           
  5949                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 746:     if (h < l) 
      +                          {
  5950     0453  0840               	movf	(efgtoa@h+3)^(0+128),w
  5951     0454  0020               	movlb	0	; select bank0
  5952     0455  00CF               	movwf	___flge@ff1+3
  5953     0456  0021               	movlb	1	; select bank1
  5954     0457  083F               	movf	(efgtoa@h+2)^(0+128),w
  5955     0458  0020               	movlb	0	; select bank0
  5956     0459  00CE               	movwf	___flge@ff1+2
  5957     045A  0021               	movlb	1	; select bank1
  5958     045B  083E               	movf	(efgtoa@h+1)^(0+128),w
  5959     045C  0020               	movlb	0	; select bank0
  5960     045D  00CD               	movwf	___flge@ff1+1
  5961     045E  0021               	movlb	1	; select bank1
  5962     045F  083D               	movf	efgtoa@h^(0+128),w
  5963     0460  0020               	movlb	0	; select bank0
  5964     0461  00CC               	movwf	___flge@ff1
  5965     0462  0021               	movlb	1	; select bank1
  5966     0463  0844               	movf	(efgtoa@l+3)^(0+128),w
  5967     0464  0020               	movlb	0	; select bank0
  5968     0465  00D3               	movwf	___flge@ff2+3
  5969     0466  0021               	movlb	1	; select bank1
  5970     0467  0843               	movf	(efgtoa@l+2)^(0+128),w
  5971     0468  0020               	movlb	0	; select bank0
  5972     0469  00D2               	movwf	___flge@ff2+2
  5973     046A  0021               	movlb	1	; select bank1
  5974     046B  0842               	movf	(efgtoa@l+1)^(0+128),w
  5975     046C  0020               	movlb	0	; select bank0
  5976     046D  00D1               	movwf	___flge@ff2+1
  5977     046E  0021               	movlb	1	; select bank1
  5978     046F  0841               	movf	efgtoa@l^(0+128),w
  5979     0470  0020               	movlb	0	; select bank0
  5980     0471  00D0               	movwf	___flge@ff2
  5981     0472  3193  23D4  3180   	fcall	___flge
  5982     0475  1803               	btfsc	3,0
  5983     0476  2C78               	goto	u7551
  5984     0477  2C79               	goto	u7550
  5985     0478                     u7551:
  5986     0478  2C83               	goto	l5292
  5987     0479                     u7550:
  5988     0479                     l5290:
  5989                           
  5990                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 747:         l = 0.0
      +                          ;
  5991     0479  3000               	movlw	0
  5992     047A  0021               	movlb	1	; select bank1
  5993     047B  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5994     047C  3000               	movlw	0
  5995     047D  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5996     047E  3000               	movlw	0
  5997     047F  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5998     0480  3000               	movlw	0
  5999     0481  00C1               	movwf	efgtoa@l^(0+128)
  6000                           
  6001                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 748:     } else {
  6002     0482  2CB7               	goto	l5298
  6003     0483                     l5292:
  6004                           
  6005                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 750:         if ((h 
      +                          == l) && !(d % 2)) {
  6006     0483  0021               	movlb	1	; select bank1
  6007     0484  0840               	movf	(efgtoa@h+3)^(0+128),w
  6008     0485  0020               	movlb	0	; select bank0
  6009     0486  00A3               	movwf	___fleq@ff1+3
  6010     0487  0021               	movlb	1	; select bank1
  6011     0488  083F               	movf	(efgtoa@h+2)^(0+128),w
  6012     0489  0020               	movlb	0	; select bank0
  6013     048A  00A2               	movwf	___fleq@ff1+2
  6014     048B  0021               	movlb	1	; select bank1
  6015     048C  083E               	movf	(efgtoa@h+1)^(0+128),w
  6016     048D  0020               	movlb	0	; select bank0
  6017     048E  00A1               	movwf	___fleq@ff1+1
  6018     048F  0021               	movlb	1	; select bank1
  6019     0490  083D               	movf	efgtoa@h^(0+128),w
  6020     0491  0020               	movlb	0	; select bank0
  6021     0492  00A0               	movwf	___fleq@ff1
  6022     0493  0021               	movlb	1	; select bank1
  6023     0494  0844               	movf	(efgtoa@l+3)^(0+128),w
  6024     0495  0020               	movlb	0	; select bank0
  6025     0496  00A7               	movwf	___fleq@ff2+3
  6026     0497  0021               	movlb	1	; select bank1
  6027     0498  0843               	movf	(efgtoa@l+2)^(0+128),w
  6028     0499  0020               	movlb	0	; select bank0
  6029     049A  00A6               	movwf	___fleq@ff2+2
  6030     049B  0021               	movlb	1	; select bank1
  6031     049C  0842               	movf	(efgtoa@l+1)^(0+128),w
  6032     049D  0020               	movlb	0	; select bank0
  6033     049E  00A5               	movwf	___fleq@ff2+1
  6034     049F  0021               	movlb	1	; select bank1
  6035     04A0  0841               	movf	efgtoa@l^(0+128),w
  6036     04A1  0020               	movlb	0	; select bank0
  6037     04A2  00A4               	movwf	___fleq@ff2
  6038     04A3  3191  2180  3180   	fcall	___fleq
  6039     04A6  1C03               	btfss	3,0
  6040     04A7  2CA9               	goto	u7561
  6041     04A8  2CAA               	goto	u7560
  6042     04A9                     u7561:
  6043     04A9  2CB7               	goto	l5298
  6044     04AA                     u7560:
  6045     04AA                     l5294:
  6046     04AA  0021               	movlb	1	; select bank1
  6047     04AB  182F               	btfsc	efgtoa@d^(0+128),0
  6048     04AC  2CAE               	goto	u7571
  6049     04AD  2CAF               	goto	u7570
  6050     04AE                     u7571:
  6051     04AE  2CB7               	goto	l5298
  6052     04AF                     u7570:
  6053     04AF                     l5296:
  6054                           
  6055                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 751:             l =
      +                           0.0;
  6056     04AF  3000               	movlw	0
  6057     04B0  00C4               	movwf	(efgtoa@l+3)^(0+128)
  6058     04B1  3000               	movlw	0
  6059     04B2  00C3               	movwf	(efgtoa@l+2)^(0+128)
  6060     04B3  3000               	movlw	0
  6061     04B4  00C2               	movwf	(efgtoa@l+1)^(0+128)
  6062     04B5  3000               	movlw	0
  6063     04B6  00C1               	movwf	efgtoa@l^(0+128)
  6064     04B7                     l5298:
  6065                           
  6066                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 756:     h = g.f + l
      +                          ;
  6067     04B7  0021               	movlb	1	; select bank1
  6068     04B8  0844               	movf	(efgtoa@l+3)^(0+128),w
  6069     04B9  0020               	movlb	0	; select bank0
  6070     04BA  00CF               	movwf	___fladd@b+3
  6071     04BB  0021               	movlb	1	; select bank1
  6072     04BC  0843               	movf	(efgtoa@l+2)^(0+128),w
  6073     04BD  0020               	movlb	0	; select bank0
  6074     04BE  00CE               	movwf	___fladd@b+2
  6075     04BF  0021               	movlb	1	; select bank1
  6076     04C0  0842               	movf	(efgtoa@l+1)^(0+128),w
  6077     04C1  0020               	movlb	0	; select bank0
  6078     04C2  00CD               	movwf	___fladd@b+1
  6079     04C3  0021               	movlb	1	; select bank1
  6080     04C4  0841               	movf	efgtoa@l^(0+128),w
  6081     04C5  0020               	movlb	0	; select bank0
  6082     04C6  00CC               	movwf	___fladd@b
  6083     04C7  0021               	movlb	1	; select bank1
  6084     04C8  0849               	movf	(efgtoa@g+3)^(0+128),w
  6085     04C9  0020               	movlb	0	; select bank0
  6086     04CA  00D3               	movwf	___fladd@a+3
  6087     04CB  0021               	movlb	1	; select bank1
  6088     04CC  0848               	movf	(efgtoa@g+2)^(0+128),w
  6089     04CD  0020               	movlb	0	; select bank0
  6090     04CE  00D2               	movwf	___fladd@a+2
  6091     04CF  0021               	movlb	1	; select bank1
  6092     04D0  0847               	movf	(efgtoa@g+1)^(0+128),w
  6093     04D1  0020               	movlb	0	; select bank0
  6094     04D2  00D1               	movwf	___fladd@a+1
  6095     04D3  0021               	movlb	1	; select bank1
  6096     04D4  0846               	movf	efgtoa@g^(0+128),w
  6097     04D5  0020               	movlb	0	; select bank0
  6098     04D6  00D0               	movwf	___fladd@a
  6099     04D7  318B  23B9  3180   	fcall	___fladd
  6100     04DA  0020               	movlb	0	; select bank0
  6101     04DB  084F               	movf	?___fladd+3,w
  6102     04DC  0021               	movlb	1	; select bank1
  6103     04DD  00C0               	movwf	(efgtoa@h+3)^(0+128)
  6104     04DE  0020               	movlb	0	; select bank0
  6105     04DF  084E               	movf	?___fladd+2,w
  6106     04E0  0021               	movlb	1	; select bank1
  6107     04E1  00BF               	movwf	(efgtoa@h+2)^(0+128)
  6108     04E2  0020               	movlb	0	; select bank0
  6109     04E3  084D               	movf	?___fladd+1,w
  6110     04E4  0021               	movlb	1	; select bank1
  6111     04E5  00BE               	movwf	(efgtoa@h+1)^(0+128)
  6112     04E6  0020               	movlb	0	; select bank0
  6113     04E7  084C               	movf	?___fladd,w
  6114     04E8  0021               	movlb	1	; select bank1
  6115     04E9  00BD               	movwf	efgtoa@h^(0+128)
  6116     04EA                     l5300:
  6117                           
  6118                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 758:  if (h >= (ou.f
      +                          *10.0)) {
  6119     04EA  0840               	movf	(efgtoa@h+3)^(0+128),w
  6120     04EB  0020               	movlb	0	; select bank0
  6121     04EC  00CF               	movwf	___flge@ff1+3
  6122     04ED  0021               	movlb	1	; select bank1
  6123     04EE  083F               	movf	(efgtoa@h+2)^(0+128),w
  6124     04EF  0020               	movlb	0	; select bank0
  6125     04F0  00CE               	movwf	___flge@ff1+2
  6126     04F1  0021               	movlb	1	; select bank1
  6127     04F2  083E               	movf	(efgtoa@h+1)^(0+128),w
  6128     04F3  0020               	movlb	0	; select bank0
  6129     04F4  00CD               	movwf	___flge@ff1+1
  6130     04F5  0021               	movlb	1	; select bank1
  6131     04F6  083D               	movf	efgtoa@h^(0+128),w
  6132     04F7  0020               	movlb	0	; select bank0
  6133     04F8  00CC               	movwf	___flge@ff1
  6134     04F9  3041               	movlw	65
  6135     04FA  00B5               	movwf	___flmul@b+3
  6136     04FB  3020               	movlw	32
  6137     04FC  00B4               	movwf	___flmul@b+2
  6138     04FD  3000               	movlw	0
  6139     04FE  00B3               	movwf	___flmul@b+1
  6140     04FF  3000               	movlw	0
  6141     0500  00B2               	movwf	___flmul@b
  6142     0501  0021               	movlb	1	; select bank1
  6143     0502  083A               	movf	(efgtoa@ou+3)^(0+128),w
  6144     0503  0020               	movlb	0	; select bank0
  6145     0504  00B9               	movwf	___flmul@a+3
  6146     0505  0021               	movlb	1	; select bank1
  6147     0506  0839               	movf	(efgtoa@ou+2)^(0+128),w
  6148     0507  0020               	movlb	0	; select bank0
  6149     0508  00B8               	movwf	___flmul@a+2
  6150     0509  0021               	movlb	1	; select bank1
  6151     050A  0838               	movf	(efgtoa@ou+1)^(0+128),w
  6152     050B  0020               	movlb	0	; select bank0
  6153     050C  00B7               	movwf	___flmul@a+1
  6154     050D  0021               	movlb	1	; select bank1
  6155     050E  0837               	movf	efgtoa@ou^(0+128),w
  6156     050F  0020               	movlb	0	; select bank0
  6157     0510  00B6               	movwf	___flmul@a
  6158     0511  318D  25C5  3180   	fcall	___flmul
  6159     0514  0020               	movlb	0	; select bank0
  6160     0515  0835               	movf	?___flmul+3,w
  6161     0516  00D3               	movwf	___flge@ff2+3
  6162     0517  0834               	movf	?___flmul+2,w
  6163     0518  00D2               	movwf	___flge@ff2+2
  6164     0519  0833               	movf	?___flmul+1,w
  6165     051A  00D1               	movwf	___flge@ff2+1
  6166     051B  0832               	movf	?___flmul,w
  6167     051C  00D0               	movwf	___flge@ff2
  6168     051D  3193  23D4  3180   	fcall	___flge
  6169     0520  1C03               	btfss	3,0
  6170     0521  2D23               	goto	u7581
  6171     0522  2D24               	goto	u7580
  6172     0523                     u7581:
  6173     0523  2D5F               	goto	l1231
  6174     0524                     u7580:
  6175     0524                     l5302:
  6176                           
  6177                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 759:   e++;
  6178     0524  3001               	movlw	1
  6179     0525  0021               	movlb	1	; select bank1
  6180     0526  07B3               	addwf	efgtoa@e^(0+128),f
  6181     0527  3000               	movlw	0
  6182     0528  3DB4               	addwfc	(efgtoa@e+1)^(0+128),f
  6183     0529                     l5304:
  6184                           
  6185                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 760:   ou.f *= 10.0;
  6186     0529  3041               	movlw	65
  6187     052A  0020               	movlb	0	; select bank0
  6188     052B  00B5               	movwf	___flmul@b+3
  6189     052C  3020               	movlw	32
  6190     052D  00B4               	movwf	___flmul@b+2
  6191     052E  3000               	movlw	0
  6192     052F  00B3               	movwf	___flmul@b+1
  6193     0530  3000               	movlw	0
  6194     0531  00B2               	movwf	___flmul@b
  6195     0532  0021               	movlb	1	; select bank1
  6196     0533  083A               	movf	(efgtoa@ou+3)^(0+128),w
  6197     0534  0020               	movlb	0	; select bank0
  6198     0535  00B9               	movwf	___flmul@a+3
  6199     0536  0021               	movlb	1	; select bank1
  6200     0537  0839               	movf	(efgtoa@ou+2)^(0+128),w
  6201     0538  0020               	movlb	0	; select bank0
  6202     0539  00B8               	movwf	___flmul@a+2
  6203     053A  0021               	movlb	1	; select bank1
  6204     053B  0838               	movf	(efgtoa@ou+1)^(0+128),w
  6205     053C  0020               	movlb	0	; select bank0
  6206     053D  00B7               	movwf	___flmul@a+1
  6207     053E  0021               	movlb	1	; select bank1
  6208     053F  0837               	movf	efgtoa@ou^(0+128),w
  6209     0540  0020               	movlb	0	; select bank0
  6210     0541  00B6               	movwf	___flmul@a
  6211     0542  318D  25C5  3180   	fcall	___flmul
  6212     0545  0020               	movlb	0	; select bank0
  6213     0546  0835               	movf	?___flmul+3,w
  6214     0547  0021               	movlb	1	; select bank1
  6215     0548  00BA               	movwf	(efgtoa@ou+3)^(0+128)
  6216     0549  0020               	movlb	0	; select bank0
  6217     054A  0834               	movf	?___flmul+2,w
  6218     054B  0021               	movlb	1	; select bank1
  6219     054C  00B9               	movwf	(efgtoa@ou+2)^(0+128)
  6220     054D  0020               	movlb	0	; select bank0
  6221     054E  0833               	movf	?___flmul+1,w
  6222     054F  0021               	movlb	1	; select bank1
  6223     0550  00B8               	movwf	(efgtoa@ou+1)^(0+128)
  6224     0551  0020               	movlb	0	; select bank0
  6225     0552  0832               	movf	?___flmul,w
  6226     0553  0021               	movlb	1	; select bank1
  6227     0554  00B7               	movwf	efgtoa@ou^(0+128)
  6228     0555                     l5306:
  6229                           
  6230                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 762:   if (nmode == 
      +                          'f') {
  6231     0555  3066               	movlw	102
  6232     0556  062E               	xorwf	efgtoa@nmode^(0+128),w
  6233     0557  1D03               	btfss	3,2
  6234     0558  2D5A               	goto	u7591
  6235     0559  2D5B               	goto	u7590
  6236     055A                     u7591:
  6237     055A  2D5F               	goto	l1231
  6238     055B                     u7590:
  6239     055B                     l5308:
  6240                           
  6241                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 764:    m++;
  6242     055B  3001               	movlw	1
  6243     055C  07B1               	addwf	efgtoa@m^(0+128),f
  6244     055D  3000               	movlw	0
  6245     055E  3DB2               	addwfc	(efgtoa@m+1)^(0+128),f
  6246     055F                     l1231:	
  6247                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 767:  }
  6248                           
  6249                           
  6250                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 770:     u = ou;
  6251     055F  0021               	movlb	1	; select bank1
  6252     0560  083A               	movf	(efgtoa@ou+3)^(0+128),w
  6253     0561  00CF               	movwf	(efgtoa@u+3)^(0+128)
  6254     0562  0839               	movf	(efgtoa@ou+2)^(0+128),w
  6255     0563  00CE               	movwf	(efgtoa@u+2)^(0+128)
  6256     0564  0838               	movf	(efgtoa@ou+1)^(0+128),w
  6257     0565  00CD               	movwf	(efgtoa@u+1)^(0+128)
  6258     0566  0837               	movf	efgtoa@ou^(0+128),w
  6259     0567  00CC               	movwf	efgtoa@u^(0+128)
  6260                           
  6261                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 774:  ne = e;
  6262     0568  0834               	movf	(efgtoa@e+1)^(0+128),w
  6263     0569  00A5               	movwf	(efgtoa@ne+1)^(0+128)
  6264     056A  0833               	movf	efgtoa@e^(0+128),w
  6265     056B  00A4               	movwf	efgtoa@ne^(0+128)
  6266     056C                     l5310:
  6267                           
  6268                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 776:     pp = 0;
  6269     056C  01AC               	clrf	efgtoa@pp^(0+128)
  6270     056D                     l5312:
  6271                           
  6272                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 777:     t = 0;
  6273     056D  01A8               	clrf	efgtoa@t^(0+128)
  6274     056E  01A9               	clrf	(efgtoa@t+1)^(0+128)
  6275     056F                     l5314:
  6276                           
  6277                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 778:     i = 0;
  6278     056F  01BB               	clrf	efgtoa@i^(0+128)
  6279     0570  01BC               	clrf	(efgtoa@i+1)^(0+128)
  6280                           
  6281                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6282     0571  2EBA               	goto	l5358
  6283     0572                     l5316:
  6284                           
  6285                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 780:         l = flo
      +                          orf(h/u.f);
  6286     0572  0021               	movlb	1	; select bank1
  6287     0573  084F               	movf	(efgtoa@u+3)^(0+128),w
  6288     0574  0020               	movlb	0	; select bank0
  6289     0575  00A3               	movwf	___fldiv@a+3
  6290     0576  0021               	movlb	1	; select bank1
  6291     0577  084E               	movf	(efgtoa@u+2)^(0+128),w
  6292     0578  0020               	movlb	0	; select bank0
  6293     0579  00A2               	movwf	___fldiv@a+2
  6294     057A  0021               	movlb	1	; select bank1
  6295     057B  084D               	movf	(efgtoa@u+1)^(0+128),w
  6296     057C  0020               	movlb	0	; select bank0
  6297     057D  00A1               	movwf	___fldiv@a+1
  6298     057E  0021               	movlb	1	; select bank1
  6299     057F  084C               	movf	efgtoa@u^(0+128),w
  6300     0580  0020               	movlb	0	; select bank0
  6301     0581  00A0               	movwf	___fldiv@a
  6302     0582  0021               	movlb	1	; select bank1
  6303     0583  0840               	movf	(efgtoa@h+3)^(0+128),w
  6304     0584  0020               	movlb	0	; select bank0
  6305     0585  00A7               	movwf	___fldiv@b+3
  6306     0586  0021               	movlb	1	; select bank1
  6307     0587  083F               	movf	(efgtoa@h+2)^(0+128),w
  6308     0588  0020               	movlb	0	; select bank0
  6309     0589  00A6               	movwf	___fldiv@b+2
  6310     058A  0021               	movlb	1	; select bank1
  6311     058B  083E               	movf	(efgtoa@h+1)^(0+128),w
  6312     058C  0020               	movlb	0	; select bank0
  6313     058D  00A5               	movwf	___fldiv@b+1
  6314     058E  0021               	movlb	1	; select bank1
  6315     058F  083D               	movf	efgtoa@h^(0+128),w
  6316     0590  0020               	movlb	0	; select bank0
  6317     0591  00A4               	movwf	___fldiv@b
  6318     0592  3196  265C  3180   	fcall	___fldiv
  6319     0595  0020               	movlb	0	; select bank0
  6320     0596  0823               	movf	?___fldiv+3,w
  6321     0597  00BD               	movwf	floorf@x+3
  6322     0598  0822               	movf	?___fldiv+2,w
  6323     0599  00BC               	movwf	floorf@x+2
  6324     059A  0821               	movf	?___fldiv+1,w
  6325     059B  00BB               	movwf	floorf@x+1
  6326     059C  0820               	movf	?___fldiv,w
  6327     059D  00BA               	movwf	floorf@x
  6328     059E  3194  245F  3180   	fcall	_floorf
  6329     05A1  0020               	movlb	0	; select bank0
  6330     05A2  083D               	movf	?_floorf+3,w
  6331     05A3  0021               	movlb	1	; select bank1
  6332     05A4  00C4               	movwf	(efgtoa@l+3)^(0+128)
  6333     05A5  0020               	movlb	0	; select bank0
  6334     05A6  083C               	movf	?_floorf+2,w
  6335     05A7  0021               	movlb	1	; select bank1
  6336     05A8  00C3               	movwf	(efgtoa@l+2)^(0+128)
  6337     05A9  0020               	movlb	0	; select bank0
  6338     05AA  083B               	movf	?_floorf+1,w
  6339     05AB  0021               	movlb	1	; select bank1
  6340     05AC  00C2               	movwf	(efgtoa@l+1)^(0+128)
  6341     05AD  0020               	movlb	0	; select bank0
  6342     05AE  083A               	movf	?_floorf,w
  6343     05AF  0021               	movlb	1	; select bank1
  6344     05B0  00C1               	movwf	efgtoa@l^(0+128)
  6345                           
  6346                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 781:         d = (in
      +                          t)l > 9 ? 9 : (int)l;
  6347     05B1  0844               	movf	(efgtoa@l+3)^(0+128),w
  6348     05B2  0020               	movlb	0	; select bank0
  6349     05B3  00A3               	movwf	___fltol@f1+3
  6350     05B4  0021               	movlb	1	; select bank1
  6351     05B5  0843               	movf	(efgtoa@l+2)^(0+128),w
  6352     05B6  0020               	movlb	0	; select bank0
  6353     05B7  00A2               	movwf	___fltol@f1+2
  6354     05B8  0021               	movlb	1	; select bank1
  6355     05B9  0842               	movf	(efgtoa@l+1)^(0+128),w
  6356     05BA  0020               	movlb	0	; select bank0
  6357     05BB  00A1               	movwf	___fltol@f1+1
  6358     05BC  0021               	movlb	1	; select bank1
  6359     05BD  0841               	movf	efgtoa@l^(0+128),w
  6360     05BE  0020               	movlb	0	; select bank0
  6361     05BF  00A0               	movwf	___fltol@f1
  6362     05C0  3192  22E6  3180   	fcall	___fltol
  6363     05C3  0020               	movlb	0	; select bank0
  6364     05C4  0821               	movf	?___fltol+1,w
  6365     05C5  3A80               	xorlw	128
  6366     05C6  0021               	movlb	1	; select bank1
  6367     05C7  00A0               	movwf	??_efgtoa^(0+128)
  6368     05C8  3080               	movlw	128
  6369     05C9  0220               	subwf	??_efgtoa^(0+128),w
  6370     05CA  1D03               	skipz
  6371     05CB  2DCF               	goto	u7605
  6372     05CC  300A               	movlw	10
  6373     05CD  0020               	movlb	0	; select bank0
  6374     05CE  0220               	subwf	?___fltol,w
  6375     05CF                     u7605:
  6376     05CF  1803               	skipnc
  6377     05D0  2DD2               	goto	u7601
  6378     05D1  2DD3               	goto	u7600
  6379     05D2                     u7601:
  6380     05D2  2DEF               	goto	l5320
  6381     05D3                     u7600:
  6382     05D3                     l5318:
  6383     05D3  0021               	movlb	1	; select bank1
  6384     05D4  0844               	movf	(efgtoa@l+3)^(0+128),w
  6385     05D5  0020               	movlb	0	; select bank0
  6386     05D6  00A3               	movwf	___fltol@f1+3
  6387     05D7  0021               	movlb	1	; select bank1
  6388     05D8  0843               	movf	(efgtoa@l+2)^(0+128),w
  6389     05D9  0020               	movlb	0	; select bank0
  6390     05DA  00A2               	movwf	___fltol@f1+2
  6391     05DB  0021               	movlb	1	; select bank1
  6392     05DC  0842               	movf	(efgtoa@l+1)^(0+128),w
  6393     05DD  0020               	movlb	0	; select bank0
  6394     05DE  00A1               	movwf	___fltol@f1+1
  6395     05DF  0021               	movlb	1	; select bank1
  6396     05E0  0841               	movf	efgtoa@l^(0+128),w
  6397     05E1  0020               	movlb	0	; select bank0
  6398     05E2  00A0               	movwf	___fltol@f1
  6399     05E3  3192  22E6  3180   	fcall	___fltol
  6400     05E6  0020               	movlb	0	; select bank0
  6401     05E7  0821               	movf	?___fltol+1,w
  6402     05E8  0021               	movlb	1	; select bank1
  6403     05E9  00B0               	movwf	(efgtoa@d+1)^(0+128)
  6404     05EA  0020               	movlb	0	; select bank0
  6405     05EB  0820               	movf	?___fltol,w
  6406     05EC  0021               	movlb	1	; select bank1
  6407     05ED  00AF               	movwf	efgtoa@d^(0+128)
  6408     05EE  2DF4               	goto	l5322
  6409     05EF                     l5320:
  6410     05EF  3009               	movlw	9
  6411     05F0  0021               	movlb	1	; select bank1
  6412     05F1  00AF               	movwf	efgtoa@d^(0+128)
  6413     05F2  3000               	movlw	0
  6414     05F3  00B0               	movwf	(efgtoa@d^(0+128)+1)
  6415     05F4                     l5322:
  6416                           
  6417                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 792:   {;/Applicatio
      +                          ns/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 793:             if (!pp && (ne 
      +                          < 0)) {
  6418     05F4  082C               	movf	efgtoa@pp^(0+128),w
  6419     05F5  1D03               	btfss	3,2
  6420     05F6  2DF8               	goto	u7611
  6421     05F7  2DF9               	goto	u7610
  6422     05F8                     u7611:
  6423     05F8  2E22               	goto	l5342
  6424     05F9                     u7610:
  6425     05F9                     l5324:
  6426     05F9  1FA5               	btfss	(efgtoa@ne+1)^(0+128),7
  6427     05FA  2DFC               	goto	u7621
  6428     05FB  2DFD               	goto	u7620
  6429     05FC                     u7621:
  6430     05FC  2E22               	goto	l5342
  6431     05FD                     u7620:
  6432     05FD                     l5326:
  6433                           
  6434                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 794:                
      +                           dbuf[n++] = '.';
  6435     05FD  084A               	movf	efgtoa@n^(0+128),w
  6436     05FE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6437     05FF  0086               	movwf	6
  6438     0600  3002               	movlw	2	; select bank4/5
  6439     0601  0087               	movwf	7
  6440     0602  302E               	movlw	46
  6441     0603  0081               	movwf	1
  6442     0604                     l5328:
  6443     0604  3001               	movlw	1
  6444     0605  07CA               	addwf	efgtoa@n^(0+128),f
  6445     0606  3000               	movlw	0
  6446     0607  3DCB               	addwfc	(efgtoa@n+1)^(0+128),f
  6447     0608                     l5330:
  6448                           
  6449                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 795:                
      +                           --w;
  6450     0608  30FF               	movlw	255
  6451     0609  07B5               	addwf	efgtoa@w^(0+128),f
  6452     060A  30FF               	movlw	255
  6453     060B  3DB6               	addwfc	(efgtoa@w+1)^(0+128),f
  6454     060C                     l5332:
  6455                           
  6456                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 796:                
      +                           pp = 1;
  6457     060C  3001               	movlw	1
  6458     060D  00AC               	movwf	efgtoa@pp^(0+128)
  6459     060E  2E22               	goto	l5342
  6460     060F                     l5334:
  6461                           
  6462                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 799:                
      +                           dbuf[n++] = '0';
  6463     060F  084A               	movf	efgtoa@n^(0+128),w
  6464     0610  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6465     0611  0086               	movwf	6
  6466     0612  3002               	movlw	2	; select bank4/5
  6467     0613  0087               	movwf	7
  6468     0614  3030               	movlw	48
  6469     0615  0081               	movwf	1
  6470     0616                     l5336:
  6471     0616  3001               	movlw	1
  6472     0617  07CA               	addwf	efgtoa@n^(0+128),f
  6473     0618  3000               	movlw	0
  6474     0619  3DCB               	addwfc	(efgtoa@n+1)^(0+128),f
  6475     061A                     l5338:
  6476                           
  6477                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 800:                
      +                           --w;
  6478     061A  30FF               	movlw	255
  6479     061B  07B5               	addwf	efgtoa@w^(0+128),f
  6480     061C  30FF               	movlw	255
  6481     061D  3DB6               	addwfc	(efgtoa@w+1)^(0+128),f
  6482     061E                     l5340:
  6483                           
  6484                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 801:                
      +                           --t;
  6485     061E  30FF               	movlw	255
  6486     061F  07A8               	addwf	efgtoa@t^(0+128),f
  6487     0620  30FF               	movlw	255
  6488     0621  3DA9               	addwfc	(efgtoa@t+1)^(0+128),f
  6489     0622                     l5342:
  6490                           
  6491                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 798:             whi
      +                          le (t) {
  6492     0622  0828               	movf	efgtoa@t^(0+128),w
  6493     0623  0429               	iorwf	(efgtoa@t+1)^(0+128),w
  6494     0624  1D03               	btfss	3,2
  6495     0625  2E27               	goto	u7631
  6496     0626  2E28               	goto	u7630
  6497     0627                     u7631:
  6498     0627  2E0F               	goto	l5334
  6499     0628                     u7630:
  6500     0628                     l5344:
  6501                           
  6502                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 803:             dbu
      +                          f[n++] = (char)((int)'0' + d);
  6503     0628  084A               	movf	efgtoa@n^(0+128),w
  6504     0629  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6505     062A  0086               	movwf	6
  6506     062B  3002               	movlw	2	; select bank4/5
  6507     062C  0087               	movwf	7
  6508     062D  082F               	movf	efgtoa@d^(0+128),w
  6509     062E  3E30               	addlw	48
  6510     062F  0081               	movwf	1
  6511     0630                     l5346:
  6512     0630  3001               	movlw	1
  6513     0631  07CA               	addwf	efgtoa@n^(0+128),f
  6514     0632  3000               	movlw	0
  6515     0633  3DCB               	addwfc	(efgtoa@n+1)^(0+128),f
  6516     0634                     l5348:
  6517                           
  6518                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 804:             --w
      +                          ;
  6519     0634  30FF               	movlw	255
  6520     0635  07B5               	addwf	efgtoa@w^(0+128),f
  6521     0636  30FF               	movlw	255
  6522     0637  3DB6               	addwfc	(efgtoa@w+1)^(0+128),f
  6523     0638                     l5350:
  6524                           
  6525                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 805:         };/Appl
      +                          ications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 806:         h -= l*u.f;
  6526     0638  084F               	movf	(efgtoa@u+3)^(0+128),w
  6527     0639  0020               	movlb	0	; select bank0
  6528     063A  00B9               	movwf	___flmul@a+3
  6529     063B  0021               	movlb	1	; select bank1
  6530     063C  084E               	movf	(efgtoa@u+2)^(0+128),w
  6531     063D  0020               	movlb	0	; select bank0
  6532     063E  00B8               	movwf	___flmul@a+2
  6533     063F  0021               	movlb	1	; select bank1
  6534     0640  084D               	movf	(efgtoa@u+1)^(0+128),w
  6535     0641  0020               	movlb	0	; select bank0
  6536     0642  00B7               	movwf	___flmul@a+1
  6537     0643  0021               	movlb	1	; select bank1
  6538     0644  084C               	movf	efgtoa@u^(0+128),w
  6539     0645  0020               	movlb	0	; select bank0
  6540     0646  00B6               	movwf	___flmul@a
  6541     0647  0021               	movlb	1	; select bank1
  6542     0648  0844               	movf	(efgtoa@l+3)^(0+128),w
  6543     0649  0020               	movlb	0	; select bank0
  6544     064A  00B5               	movwf	___flmul@b+3
  6545     064B  0021               	movlb	1	; select bank1
  6546     064C  0843               	movf	(efgtoa@l+2)^(0+128),w
  6547     064D  0020               	movlb	0	; select bank0
  6548     064E  00B4               	movwf	___flmul@b+2
  6549     064F  0021               	movlb	1	; select bank1
  6550     0650  0842               	movf	(efgtoa@l+1)^(0+128),w
  6551     0651  0020               	movlb	0	; select bank0
  6552     0652  00B3               	movwf	___flmul@b+1
  6553     0653  0021               	movlb	1	; select bank1
  6554     0654  0841               	movf	efgtoa@l^(0+128),w
  6555     0655  0020               	movlb	0	; select bank0
  6556     0656  00B2               	movwf	___flmul@b
  6557     0657  318D  25C5  3180   	fcall	___flmul
  6558     065A  0020               	movlb	0	; select bank0
  6559     065B  0835               	movf	?___flmul+3,w
  6560     065C  00E3               	movwf	___flsub@a+3
  6561     065D  0834               	movf	?___flmul+2,w
  6562     065E  00E2               	movwf	___flsub@a+2
  6563     065F  0833               	movf	?___flmul+1,w
  6564     0660  00E1               	movwf	___flsub@a+1
  6565     0661  0832               	movf	?___flmul,w
  6566     0662  00E0               	movwf	___flsub@a
  6567     0663  0021               	movlb	1	; select bank1
  6568     0664  0840               	movf	(efgtoa@h+3)^(0+128),w
  6569     0665  0020               	movlb	0	; select bank0
  6570     0666  00E7               	movwf	___flsub@b+3
  6571     0667  0021               	movlb	1	; select bank1
  6572     0668  083F               	movf	(efgtoa@h+2)^(0+128),w
  6573     0669  0020               	movlb	0	; select bank0
  6574     066A  00E6               	movwf	___flsub@b+2
  6575     066B  0021               	movlb	1	; select bank1
  6576     066C  083E               	movf	(efgtoa@h+1)^(0+128),w
  6577     066D  0020               	movlb	0	; select bank0
  6578     066E  00E5               	movwf	___flsub@b+1
  6579     066F  0021               	movlb	1	; select bank1
  6580     0670  083D               	movf	efgtoa@h^(0+128),w
  6581     0671  0020               	movlb	0	; select bank0
  6582     0672  00E4               	movwf	___flsub@b
  6583     0673  319F  27C0  3180   	fcall	___flsub
  6584     0676  0020               	movlb	0	; select bank0
  6585     0677  0863               	movf	?___flsub+3,w
  6586     0678  0021               	movlb	1	; select bank1
  6587     0679  00C0               	movwf	(efgtoa@h+3)^(0+128)
  6588     067A  0020               	movlb	0	; select bank0
  6589     067B  0862               	movf	?___flsub+2,w
  6590     067C  0021               	movlb	1	; select bank1
  6591     067D  00BF               	movwf	(efgtoa@h+2)^(0+128)
  6592     067E  0020               	movlb	0	; select bank0
  6593     067F  0861               	movf	?___flsub+1,w
  6594     0680  0021               	movlb	1	; select bank1
  6595     0681  00BE               	movwf	(efgtoa@h+1)^(0+128)
  6596     0682  0020               	movlb	0	; select bank0
  6597     0683  0860               	movf	?___flsub,w
  6598     0684  0021               	movlb	1	; select bank1
  6599     0685  00BD               	movwf	efgtoa@h^(0+128)
  6600     0686                     l5352:
  6601                           
  6602                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 807:         u.f = u
      +                          .f/10.0;
  6603     0686  3041               	movlw	65
  6604     0687  0020               	movlb	0	; select bank0
  6605     0688  00A3               	movwf	___fldiv@a+3
  6606     0689  3020               	movlw	32
  6607     068A  00A2               	movwf	___fldiv@a+2
  6608     068B  3000               	movlw	0
  6609     068C  00A1               	movwf	___fldiv@a+1
  6610     068D  3000               	movlw	0
  6611     068E  00A0               	movwf	___fldiv@a
  6612     068F  0021               	movlb	1	; select bank1
  6613     0690  084F               	movf	(efgtoa@u+3)^(0+128),w
  6614     0691  0020               	movlb	0	; select bank0
  6615     0692  00A7               	movwf	___fldiv@b+3
  6616     0693  0021               	movlb	1	; select bank1
  6617     0694  084E               	movf	(efgtoa@u+2)^(0+128),w
  6618     0695  0020               	movlb	0	; select bank0
  6619     0696  00A6               	movwf	___fldiv@b+2
  6620     0697  0021               	movlb	1	; select bank1
  6621     0698  084D               	movf	(efgtoa@u+1)^(0+128),w
  6622     0699  0020               	movlb	0	; select bank0
  6623     069A  00A5               	movwf	___fldiv@b+1
  6624     069B  0021               	movlb	1	; select bank1
  6625     069C  084C               	movf	efgtoa@u^(0+128),w
  6626     069D  0020               	movlb	0	; select bank0
  6627     069E  00A4               	movwf	___fldiv@b
  6628     069F  3196  265C  3180   	fcall	___fldiv
  6629     06A2  0020               	movlb	0	; select bank0
  6630     06A3  0823               	movf	?___fldiv+3,w
  6631     06A4  0021               	movlb	1	; select bank1
  6632     06A5  00CF               	movwf	(efgtoa@u+3)^(0+128)
  6633     06A6  0020               	movlb	0	; select bank0
  6634     06A7  0822               	movf	?___fldiv+2,w
  6635     06A8  0021               	movlb	1	; select bank1
  6636     06A9  00CE               	movwf	(efgtoa@u+2)^(0+128)
  6637     06AA  0020               	movlb	0	; select bank0
  6638     06AB  0821               	movf	?___fldiv+1,w
  6639     06AC  0021               	movlb	1	; select bank1
  6640     06AD  00CD               	movwf	(efgtoa@u+1)^(0+128)
  6641     06AE  0020               	movlb	0	; select bank0
  6642     06AF  0820               	movf	?___fldiv,w
  6643     06B0  0021               	movlb	1	; select bank1
  6644     06B1  00CC               	movwf	efgtoa@u^(0+128)
  6645     06B2                     l5354:
  6646                           
  6647                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 808:         --ne;
  6648     06B2  30FF               	movlw	255
  6649     06B3  07A4               	addwf	efgtoa@ne^(0+128),f
  6650     06B4  30FF               	movlw	255
  6651     06B5  3DA5               	addwfc	(efgtoa@ne+1)^(0+128),f
  6652     06B6                     l5356:
  6653                           
  6654                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 809:         ++i;
  6655     06B6  3001               	movlw	1
  6656     06B7  07BB               	addwf	efgtoa@i^(0+128),f
  6657     06B8  3000               	movlw	0
  6658     06B9  3DBC               	addwfc	(efgtoa@i+1)^(0+128),f
  6659     06BA                     l5358:
  6660                           
  6661                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i <
      +                           m) && (n < (80 - 5))) {
  6662     06BA  083C               	movf	(efgtoa@i+1)^(0+128),w
  6663     06BB  3A80               	xorlw	128
  6664     06BC  00A0               	movwf	??_efgtoa^(0+128)
  6665     06BD  0832               	movf	(efgtoa@m+1)^(0+128),w
  6666     06BE  3A80               	xorlw	128
  6667     06BF  0220               	subwf	??_efgtoa^(0+128),w
  6668     06C0  1D03               	skipz
  6669     06C1  2EC4               	goto	u7645
  6670     06C2  0831               	movf	efgtoa@m^(0+128),w
  6671     06C3  023B               	subwf	efgtoa@i^(0+128),w
  6672     06C4                     u7645:
  6673     06C4  1803               	skipnc
  6674     06C5  2EC7               	goto	u7641
  6675     06C6  2EC8               	goto	u7640
  6676     06C7                     u7641:
  6677     06C7  2ED6               	goto	l5362
  6678     06C8                     u7640:
  6679     06C8                     l5360:
  6680     06C8  0021               	movlb	1	; select bank1
  6681     06C9  084B               	movf	(efgtoa@n+1)^(0+128),w
  6682     06CA  3A80               	xorlw	128
  6683     06CB  00A0               	movwf	??_efgtoa^(0+128)
  6684     06CC  3080               	movlw	128
  6685     06CD  0220               	subwf	??_efgtoa^(0+128),w
  6686     06CE  1D03               	skipz
  6687     06CF  2ED2               	goto	u7655
  6688     06D0  304B               	movlw	75
  6689     06D1  024A               	subwf	efgtoa@n^(0+128),w
  6690     06D2                     u7655:
  6691     06D2  1C03               	skipc
  6692     06D3  2ED5               	goto	u7651
  6693     06D4  2ED6               	goto	u7650
  6694     06D5                     u7651:
  6695     06D5  2D72               	goto	l5316
  6696     06D6                     u7650:
  6697     06D6                     l5362:
  6698                           
  6699                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 816:  i = sizeof(dbu
      +                          f) - 1;
  6700     06D6  304F               	movlw	79
  6701     06D7  0021               	movlb	1	; select bank1
  6702     06D8  00BB               	movwf	efgtoa@i^(0+128)
  6703     06D9  3000               	movlw	0
  6704     06DA  00BC               	movwf	(efgtoa@i^(0+128)+1)
  6705     06DB                     l5364:
  6706                           
  6707                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 817:     dbuf[i] = '
      +                          \0';
  6708     06DB  083B               	movf	efgtoa@i^(0+128),w
  6709     06DC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6710     06DD  0086               	movwf	6
  6711     06DE  3002               	movlw	2	; select bank4/5
  6712     06DF  0087               	movwf	7
  6713     06E0  0181               	clrf	1
  6714     06E1                     l5366:
  6715                           
  6716                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 848:  memcpy(&dbuf[i
      +                          -n], &dbuf[0], (size_t)n);
  6717     06E1  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6718     06E2  00A0               	movwf	??_efgtoa^(0+128)
  6719     06E3  084A               	movf	efgtoa@n^(0+128),w
  6720     06E4  0220               	subwf	??_efgtoa^(0+128),w
  6721     06E5  073B               	addwf	efgtoa@i^(0+128),w
  6722     06E6  0020               	movlb	0	; select bank0
  6723     06E7  00A0               	movwf	memcpy@d1
  6724     06E8  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6725     06E9  00A1               	movwf	memcpy@s1
  6726     06EA  0021               	movlb	1	; select bank1
  6727     06EB  084B               	movf	(efgtoa@n+1)^(0+128),w
  6728     06EC  0020               	movlb	0	; select bank0
  6729     06ED  00A3               	movwf	memcpy@n+1
  6730     06EE  0021               	movlb	1	; select bank1
  6731     06EF  084A               	movf	efgtoa@n^(0+128),w
  6732     06F0  0020               	movlb	0	; select bank0
  6733     06F1  00A2               	movwf	memcpy@n
  6734     06F2  3190  2066  3180   	fcall	_memcpy
  6735     06F5                     l5368:
  6736                           
  6737                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 849:  n = i-n;
  6738     06F5  0021               	movlb	1	; select bank1
  6739     06F6  084A               	movf	efgtoa@n^(0+128),w
  6740     06F7  023B               	subwf	efgtoa@i^(0+128),w
  6741     06F8  00CA               	movwf	efgtoa@n^(0+128)
  6742     06F9  084B               	movf	(efgtoa@n+1)^(0+128),w
  6743     06FA  3B3C               	subwfb	(efgtoa@i+1)^(0+128),w
  6744     06FB  00CB               	movwf	(efgtoa@n+1)^(0+128)
  6745     06FC                     l5370:
  6746                           
  6747                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 850:  i = sign == 0 
      +                          ? 0 : 1;
  6748     06FC  0845               	movf	efgtoa@sign^(0+128),w
  6749     06FD  1D03               	btfss	3,2
  6750     06FE  2F00               	goto	u7661
  6751     06FF  2F02               	goto	u7660
  6752     0700                     u7661:
  6753     0700  3001               	movlw	1
  6754     0701  2F03               	goto	u7670
  6755     0702                     u7660:
  6756     0702  3000               	movlw	0
  6757     0703                     u7670:
  6758     0703  00A0               	movwf	??_efgtoa^(0+128)
  6759     0704  01A1               	clrf	(??_efgtoa^(0+128)+1)
  6760     0705  0820               	movf	??_efgtoa^(0+128),w
  6761     0706  00BB               	movwf	efgtoa@i^(0+128)
  6762     0707  0821               	movf	(??_efgtoa+1)^(0+128),w
  6763     0708  00BC               	movwf	(efgtoa@i+1)^(0+128)
  6764     0709                     l5372:
  6765                           
  6766                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 861:  if (sign) {
  6767     0709  0845               	movf	efgtoa@sign^(0+128),w
  6768     070A  1903               	btfsc	3,2
  6769     070B  2F0D               	goto	u7681
  6770     070C  2F0E               	goto	u7680
  6771     070D                     u7681:
  6772     070D  2F19               	goto	l5376
  6773     070E                     u7680:
  6774     070E                     l5374:
  6775                           
  6776                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 862:   dbuf[--n] = s
      +                          ign;
  6777     070E  30FF               	movlw	255
  6778     070F  07CA               	addwf	efgtoa@n^(0+128),f
  6779     0710  30FF               	movlw	255
  6780     0711  3DCB               	addwfc	(efgtoa@n+1)^(0+128),f
  6781     0712  084A               	movf	efgtoa@n^(0+128),w
  6782     0713  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6783     0714  0086               	movwf	6
  6784     0715  3002               	movlw	2	; select bank4/5
  6785     0716  0087               	movwf	7
  6786     0717  0845               	movf	efgtoa@sign^(0+128),w
  6787     0718  0081               	movwf	1
  6788     0719                     l5376:
  6789                           
  6790                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 864:  w -= i;
  6791     0719  083B               	movf	efgtoa@i^(0+128),w
  6792     071A  02B5               	subwf	efgtoa@w^(0+128),f
  6793     071B  083C               	movf	(efgtoa@i+1)^(0+128),w
  6794     071C  3BB6               	subwfb	(efgtoa@w+1)^(0+128),f
  6795     071D                     l5378:
  6796                           
  6797                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 867:     return (voi
      +                          d) pad(fp, &dbuf[n], w);
  6798     071D  0020               	movlb	0	; select bank0
  6799     071E  0869               	movf	efgtoa@fp+1,w
  6800     071F  00B5               	movwf	pad@fp+1
  6801     0720  0868               	movf	efgtoa@fp,w
  6802     0721  00B4               	movwf	pad@fp
  6803     0722  0021               	movlb	1	; select bank1
  6804     0723  084A               	movf	efgtoa@n^(0+128),w
  6805     0724  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6806     0725  0020               	movlb	0	; select bank0
  6807     0726  00B6               	movwf	pad@buf
  6808     0727  0021               	movlb	1	; select bank1
  6809     0728  0836               	movf	(efgtoa@w+1)^(0+128),w
  6810     0729  0020               	movlb	0	; select bank0
  6811     072A  00B8               	movwf	pad@p+1
  6812     072B  0021               	movlb	1	; select bank1
  6813     072C  0835               	movf	efgtoa@w^(0+128),w
  6814     072D  0020               	movlb	0	; select bank0
  6815     072E  00B7               	movwf	pad@p
  6816     072F  3190  20DC  3180   	fcall	_pad
  6817     0732                     l1205:
  6818     0732  0008               	return
  6819     0733                     __end_of_efgtoa:
  6820                           
  6821                           	psect	text7
  6822     1F0C                     __ptext7:	
  6823 ;; *************** function _strcpy *****************
  6824 ;; Defined at:
  6825 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  dest            1    0[BANK0 ] PTR unsigned char 
  6828 ;;		 -> dbuf(80), 
  6829 ;;  src             2    1[BANK0 ] PTR const unsigned char 
  6830 ;;		 -> STR_8(4), STR_5(4), 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  d               1    5[BANK0 ] PTR unsigned char 
  6833 ;;		 -> dbuf(80), 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    0[BANK0 ] PTR unsigned char 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6843 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;Total ram usage:        6 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 4
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_efgtoa
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857     1F0C                     _strcpy:	
  6858                           ;psect for function _strcpy
  6859                           
  6860     1F0C                     l5130:	
  6861                           ;incstack = 0
  6862                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6863                           
  6864     1F0C  0020               	movlb	0	; select bank0
  6865     1F0D  0820               	movf	strcpy@dest,w
  6866     1F0E  00A5               	movwf	strcpy@d
  6867     1F0F                     l5132:
  6868     1F0F  0825               	movf	strcpy@d,w
  6869     1F10  0086               	movwf	6
  6870     1F11  3002               	movlw	2	; select bank4/5
  6871     1F12  0087               	movwf	7
  6872     1F13  0AA5               	incf	strcpy@d,f
  6873     1F14  0822               	movf	strcpy@src+1,w
  6874     1F15  00A4               	movwf	??_strcpy+1
  6875     1F16  0821               	movf	strcpy@src,w
  6876     1F17  00A3               	movwf	??_strcpy
  6877     1F18  0AA1               	incf	strcpy@src,f
  6878     1F19  1903               	skipnz
  6879     1F1A  0AA2               	incf	strcpy@src+1,f
  6880     1F1B  0823               	movf	??_strcpy,w
  6881     1F1C  0084               	movwf	4
  6882     1F1D  0824               	movf	??_strcpy+1,w
  6883     1F1E  0085               	movwf	5
  6884     1F1F  0800               	movf	0,w	;code access
  6885     1F20  3FC0               	movwi [0]fsr1
  6886     1F21  0889               	movf	9,f
  6887     1F22  1D03               	btfss	3,2
  6888     1F23  2F25               	goto	u7231
  6889     1F24  2F26               	goto	u7230
  6890     1F25                     u7231:
  6891     1F25  2F0F               	goto	l5132
  6892     1F26                     u7230:
  6893     1F26                     l1344:
  6894     1F26  0008               	return
  6895     1F27                     __end_of_strcpy:
  6896                           
  6897                           	psect	text8
  6898     10DC                     __ptext8:	
  6899 ;; *************** function _pad *****************
  6900 ;; Defined at:
  6901 ;;		line 193 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  6904 ;;		 -> NULL(0), 
  6905 ;;  buf             1   22[BANK0 ] PTR unsigned char 
  6906 ;;		 -> dbuf(80), 
  6907 ;;  p               2   23[BANK0 ] int 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;  i               2   26[BANK0 ] int 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6919 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;Total ram usage:        8 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 8
  6926 ;; This function calls:
  6927 ;;		_fputc
  6928 ;;		_fputs
  6929 ;; This function is called by:
  6930 ;;		_efgtoa
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934     10DC                     _pad:	
  6935                           ;psect for function _pad
  6936                           
  6937     10DC                     l5094:	
  6938                           ;incstack = 0
  6939                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6940                           
  6941                           
  6942                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.50/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 205:  if (p
      +                           < 0) {
  6943     10DC  0020               	movlb	0	; select bank0
  6944     10DD  1FB8               	btfss	pad@p+1,7
  6945     10DE  28E0               	goto	u7131
  6946     10DF  28E1               	goto	u7130
  6947     10E0                     u7131:
  6948     10E0  28E3               	goto	l1190
  6949     10E1                     u7130:
  6950     10E1                     l5096:
  6951                           
  6952                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  6953     10E1  01B7               	clrf	pad@p
  6954     10E2  01B8               	clrf	pad@p+1
  6955     10E3                     l1190:	
  6956                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 207:  }
  6957                           
  6958                           
  6959                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  6960     10E3  01BA               	clrf	pad@i
  6961     10E4  01BB               	clrf	pad@i+1
  6962                           
  6963                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6964     10E5  28F7               	goto	l5102
  6965     10E6                     l5098:
  6966                           
  6967                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  6968     10E6  3020               	movlw	32
  6969     10E7  0020               	movlb	0	; select bank0
  6970     10E8  00A3               	movwf	fputc@c
  6971     10E9  3000               	movlw	0
  6972     10EA  00A4               	movwf	fputc@c+1
  6973     10EB  0835               	movf	pad@fp+1,w
  6974     10EC  00A6               	movwf	fputc@fp+1
  6975     10ED  0834               	movf	pad@fp,w
  6976     10EE  00A5               	movwf	fputc@fp
  6977     10EF  3192  2288  3190   	fcall	_fputc
  6978     10F2                     l5100:
  6979                           
  6980                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 211:         ++i;
  6981     10F2  3001               	movlw	1
  6982     10F3  0020               	movlb	0	; select bank0
  6983     10F4  07BA               	addwf	pad@i,f
  6984     10F5  3000               	movlw	0
  6985     10F6  3DBB               	addwfc	pad@i+1,f
  6986     10F7                     l5102:
  6987                           
  6988                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  6989     10F7  083B               	movf	pad@i+1,w
  6990     10F8  3A80               	xorlw	128
  6991     10F9  00B9               	movwf	??_pad
  6992     10FA  0838               	movf	pad@p+1,w
  6993     10FB  3A80               	xorlw	128
  6994     10FC  0239               	subwf	??_pad,w
  6995     10FD  1D03               	skipz
  6996     10FE  2901               	goto	u7145
  6997     10FF  0837               	movf	pad@p,w
  6998     1100  023A               	subwf	pad@i,w
  6999     1101                     u7145:
  7000     1101  1C03               	skipc
  7001     1102  2904               	goto	u7141
  7002     1103  2905               	goto	u7140
  7003     1104                     u7141:
  7004     1104  28E6               	goto	l5098
  7005     1105                     u7140:
  7006     1105                     l5104:
  7007                           
  7008                           ;/Applications/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  7009     1105  0020               	movlb	0	; select bank0
  7010     1106  0836               	movf	pad@buf,w
  7011     1107  00AC               	movwf	fputs@s
  7012     1108  0835               	movf	pad@fp+1,w
  7013     1109  00AE               	movwf	fputs@fp+1
  7014     110A  0834               	movf	pad@fp,w
  7015     110B  00AD               	movwf	fputs@fp
  7016     110C  3188  2008  3190   	fcall	_fputs
  7017     110F                     l1194:
  7018     110F  0008               	return
  7019     1110                     __end_of_pad:
  7020                           
  7021                           	psect	text9
  7022     0808                     __ptext9:	
  7023 ;; *************** function _fputs *****************
  7024 ;; Defined at:
  7025 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputs.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  s               1   12[BANK0 ] PTR const unsigned char 
  7028 ;;		 -> dbuf(80), 
  7029 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  7030 ;;		 -> NULL(0), 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  i               2   18[BANK0 ] int 
  7033 ;;  c               1   17[BANK0 ] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  2   12[BANK0 ] int 
  7036 ;; Registers used:
  7037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7043 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7045 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7046 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;Total ram usage:        8 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 7
  7050 ;; This function calls:
  7051 ;;		_fputc
  7052 ;; This function is called by:
  7053 ;;		_pad
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057     0808                     _fputs:	
  7058                           ;psect for function _fputs
  7059                           
  7060     0808                     l4710:	
  7061                           ;incstack = 0
  7062                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7063                           
  7064     0808  0020               	movlb	0	; select bank0
  7065     0809  01B2               	clrf	fputs@i
  7066     080A  01B3               	clrf	fputs@i+1
  7067     080B  281F               	goto	l4716
  7068     080C                     l4712:
  7069     080C  0831               	movf	fputs@c,w
  7070     080D  00AF               	movwf	??_fputs
  7071     080E  01B0               	clrf	??_fputs+1
  7072     080F  082F               	movf	??_fputs,w
  7073     0810  00A3               	movwf	fputc@c
  7074     0811  0830               	movf	??_fputs+1,w
  7075     0812  00A4               	movwf	fputc@c+1
  7076     0813  082E               	movf	fputs@fp+1,w
  7077     0814  00A6               	movwf	fputc@fp+1
  7078     0815  082D               	movf	fputs@fp,w
  7079     0816  00A5               	movwf	fputc@fp
  7080     0817  3192  2288  3188   	fcall	_fputc
  7081     081A                     l4714:
  7082     081A  3001               	movlw	1
  7083     081B  0020               	movlb	0	; select bank0
  7084     081C  07B2               	addwf	fputs@i,f
  7085     081D  3000               	movlw	0
  7086     081E  3DB3               	addwfc	fputs@i+1,f
  7087     081F                     l4716:
  7088     081F  082C               	movf	fputs@s,w
  7089     0820  0732               	addwf	fputs@i,w
  7090     0821  0086               	movwf	6
  7091     0822  3002               	movlw	2	; select bank4/5
  7092     0823  0087               	movwf	7
  7093     0824  0801               	movf	1,w
  7094     0825  00B1               	movwf	fputs@c
  7095     0826  0831               	movf	fputs@c,w
  7096     0827  1D03               	btfss	3,2
  7097     0828  282A               	goto	u6321
  7098     0829  282B               	goto	u6320
  7099     082A                     u6321:
  7100     082A  280C               	goto	l4712
  7101     082B                     u6320:
  7102     082B                     l1338:
  7103     082B  0008               	return
  7104     082C                     __end_of_fputs:
  7105                           
  7106                           	psect	text10
  7107     1288                     __ptext10:	
  7108 ;; *************** function _fputc *****************
  7109 ;; Defined at:
  7110 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  c               2    3[BANK0 ] int 
  7113 ;;  fp              2    5[BANK0 ] PTR struct _IO_FILE
  7114 ;;		 -> NULL(0), 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  2    3[BANK0 ] int 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;Total ram usage:        9 bytes
  7131 ;; Hardware stack levels used: 1
  7132 ;; Hardware stack levels required when called: 6
  7133 ;; This function calls:
  7134 ;;		_putch
  7135 ;; This function is called by:
  7136 ;;		_pad
  7137 ;;		_vfpfcnvrt
  7138 ;;		_fputs
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142     1288                     _fputc:	
  7143                           ;psect for function _fputc
  7144                           
  7145     1288                     l4484:	
  7146                           ;incstack = 0
  7147                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7148                           
  7149     1288  0020               	movlb	0	; select bank0
  7150     1289  0825               	movf	fputc@fp,w
  7151     128A  0426               	iorwf	fputc@fp+1,w
  7152     128B  1903               	btfsc	3,2
  7153     128C  2A8E               	goto	u5791
  7154     128D  2A8F               	goto	u5790
  7155     128E                     u5791:
  7156     128E  2A95               	goto	l4488
  7157     128F                     u5790:
  7158     128F                     l4486:
  7159     128F  0825               	movf	fputc@fp,w
  7160     1290  0426               	iorwf	fputc@fp+1,w
  7161     1291  1D03               	btfss	3,2
  7162     1292  2A94               	goto	u5801
  7163     1293  2A95               	goto	u5800
  7164     1294                     u5801:
  7165     1294  2A9A               	goto	l4490
  7166     1295                     u5800:
  7167     1295                     l4488:
  7168     1295  0823               	movf	fputc@c,w
  7169     1296  319E  2690  3192   	fcall	_putch
  7170     1299  2AE5               	goto	l1330
  7171     129A                     l4490:
  7172     129A  0825               	movf	fputc@fp,w
  7173     129B  0086               	movwf	6
  7174     129C  0826               	movf	fputc@fp+1,w
  7175     129D  0087               	movwf	7
  7176     129E  3149               	addfsr 1,9
  7177     129F  0016               	moviw fsr1++
  7178     12A0  0401               	iorwf	1,w
  7179     12A1  1903               	btfsc	3,2
  7180     12A2  2AA4               	goto	u5811
  7181     12A3  2AA5               	goto	u5810
  7182     12A4                     u5811:
  7183     12A4  2AC5               	goto	l4494
  7184     12A5                     u5810:
  7185     12A5                     l4492:
  7186     12A5  0825               	movf	fputc@fp,w
  7187     12A6  0086               	movwf	6
  7188     12A7  0826               	movf	fputc@fp+1,w
  7189     12A8  0087               	movwf	7
  7190     12A9  3149               	addfsr 1,9
  7191     12AA  3F40               	moviw [0]fsr1
  7192     12AB  00A7               	movwf	??_fputc
  7193     12AC  3F41               	moviw [1]fsr1
  7194     12AD  00A8               	movwf	??_fputc+1
  7195     12AE  0825               	movf	fputc@fp,w
  7196     12AF  0086               	movwf	6
  7197     12B0  0826               	movf	fputc@fp+1,w
  7198     12B1  0087               	movwf	7
  7199     12B2  3142               	addfsr 1,2
  7200     12B3  3F40               	moviw [0]fsr1
  7201     12B4  00A9               	movwf	??_fputc+2
  7202     12B5  3F41               	moviw [1]fsr1
  7203     12B6  00AA               	movwf	??_fputc+3
  7204     12B7  082A               	movf	??_fputc+3,w
  7205     12B8  3A80               	xorlw	128
  7206     12B9  00AB               	movwf	??_fputc+4
  7207     12BA  0828               	movf	??_fputc+1,w
  7208     12BB  3A80               	xorlw	128
  7209     12BC  022B               	subwf	??_fputc+4,w
  7210     12BD  1D03               	skipz
  7211     12BE  2AC1               	goto	u5825
  7212     12BF  0827               	movf	??_fputc,w
  7213     12C0  0229               	subwf	??_fputc+2,w
  7214     12C1                     u5825:
  7215     12C1  1803               	skipnc
  7216     12C2  2AC4               	goto	u5821
  7217     12C3  2AC5               	goto	u5820
  7218     12C4                     u5821:
  7219     12C4  2AE5               	goto	l1330
  7220     12C5                     u5820:
  7221     12C5                     l4494:
  7222     12C5  0020               	movlb	0	; select bank0
  7223     12C6  0825               	movf	fputc@fp,w
  7224     12C7  0086               	movwf	6
  7225     12C8  0826               	movf	fputc@fp+1,w
  7226     12C9  0087               	movwf	7
  7227     12CA  3142               	addfsr 1,2
  7228     12CB  0825               	movf	fputc@fp,w
  7229     12CC  0084               	movwf	4
  7230     12CD  0826               	movf	fputc@fp+1,w
  7231     12CE  0085               	movwf	5
  7232     12CF  3F00               	moviw [0]fsr0
  7233     12D0  00A7               	movwf	??_fputc
  7234     12D1  3F01               	moviw [1]fsr0
  7235     12D2  00A8               	movwf	??_fputc+1
  7236     12D3  3F40               	moviw [0]fsr1
  7237     12D4  0727               	addwf	??_fputc,w
  7238     12D5  0084               	movwf	4
  7239     12D6  3F41               	moviw [1]fsr1
  7240     12D7  3D28               	addwfc	??_fputc+1,w
  7241     12D8  0085               	movwf	5
  7242     12D9  0823               	movf	fputc@c,w
  7243     12DA  0080               	movwf	0
  7244     12DB                     l4496:
  7245     12DB  0825               	movf	fputc@fp,w
  7246     12DC  0086               	movwf	6
  7247     12DD  0826               	movf	fputc@fp+1,w
  7248     12DE  0087               	movwf	7
  7249     12DF  3142               	addfsr 1,2
  7250     12E0  3001               	movlw	1
  7251     12E1  0781               	addwf	1,f
  7252     12E2  3141               	addfsr 1,1
  7253     12E3  1803               	skipnc
  7254     12E4  0A81               	incf	1,f
  7255     12E5                     l1330:
  7256     12E5  0008               	return
  7257     12E6                     __end_of_fputc:
  7258                           
  7259                           	psect	text11
  7260     1E90                     __ptext11:	
  7261 ;; *************** function _putch *****************
  7262 ;; Defined at:
  7263 ;;		line 401 in file "mcc_generated_files/uart/src/eusart.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  txData          1    wreg     unsigned char 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  txData          1    2[BANK0 ] unsigned char 
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1    wreg      void 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;Total ram usage:        1 bytes
  7282 ;; Hardware stack levels used: 1
  7283 ;; Hardware stack levels required when called: 5
  7284 ;; This function calls:
  7285 ;;		_EUSART_IsTxReady
  7286 ;;		_EUSART_Write
  7287 ;; This function is called by:
  7288 ;;		_fputc
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292     1E90                     _putch:	
  7293                           ;psect for function _putch
  7294                           
  7295                           
  7296                           ;incstack = 0
  7297                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7298                           ;putch@txData stored from wreg
  7299     1E90  0020               	movlb	0	; select bank0
  7300     1E91  00A2               	movwf	putch@txData
  7301     1E92                     l4476:
  7302     1E92                     l4478:	
  7303                           ;mcc_generated_files/uart/src/eusart.c: 401: void putch(char txData);mcc_generated_files
      +                          /uart/src/eusart.c: 402: {;mcc_generated_files/uart/src/eusart.c: 403:     while(!(EUSAR
      +                          T_IsTxReady()))
  7304                           
  7305                           
  7306                           ;mcc_generated_files/uart/src/eusart.c: 403:     while(!(EUSART_IsTxReady()))
  7307     1E92  3188  2000  319E   	fcall	_EUSART_IsTxReady
  7308     1E95  3A00               	xorlw	0
  7309     1E96  1903               	skipnz
  7310     1E97  2E99               	goto	u5781
  7311     1E98  2E9A               	goto	u5780
  7312     1E99                     u5781:
  7313     1E99  2E92               	goto	l4478
  7314     1E9A                     u5780:
  7315     1E9A                     l4480:
  7316                           
  7317                           ;mcc_generated_files/uart/src/eusart.c: 407:     return EUSART_Write(txData);;	Return va
      +                          lue of _putch is never used
  7318     1E9A  0020               	movlb	0	; select bank0
  7319     1E9B  0822               	movf	putch@txData,w
  7320     1E9C  00A0               	movwf	EUSART_Write@txData
  7321     1E9D  3187  27D8  319E   	fcall	_EUSART_Write
  7322     1EA0                     l458:
  7323     1EA0  0008               	return
  7324     1EA1                     __end_of_putch:
  7325                           
  7326                           	psect	text12
  7327     07D8                     __ptext12:	
  7328 ;; *************** function _EUSART_Write *****************
  7329 ;; Defined at:
  7330 ;;		line 345 in file "mcc_generated_files/uart/src/eusart.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  txData          1    0[BANK0 ] unsigned char 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  tempTxHead      1    1[BANK0 ] unsigned char 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7344 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;Total ram usage:        2 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 4
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_putch
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358     07D8                     _EUSART_Write:	
  7359                           ;psect for function _EUSART_Write
  7360                           
  7361                           
  7362                           ;Skip over the trampoline to the duplicate function for level 1
  7363     07D8  1C7E               	btfss	int$flags,0
  7364     07D9  2FDC               	goto	_EUSART_Write$intlevel0
  7365     07DA  3190  2801         	ljmp	i1_EUSART_Write
  7366     07DC                     _EUSART_Write$intlevel0:
  7367     07DC                     l4460:	
  7368                           ;incstack = 0
  7369                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7370                           
  7371                           
  7372                           ;mcc_generated_files/uart/src/eusart.c: 345: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 346: {;mcc_generated_files/uart/src/eusart.c: 347:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 349:     if(0 == PIE1bits.TXIE)
  7373     07DC  0021               	movlb	1	; select bank1
  7374     07DD  1A11               	btfsc	17,4	;volatile
  7375     07DE  2FE0               	goto	u5761
  7376     07DF  2FE1               	goto	u5760
  7377     07E0                     u5761:
  7378     07E0  2FE6               	goto	l4464
  7379     07E1                     u5760:
  7380     07E1                     l4462:
  7381                           
  7382                           ;mcc_generated_files/uart/src/eusart.c: 350:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 351:         TX1REG = txData;
  7383     07E1  0020               	movlb	0	; select bank0
  7384     07E2  0820               	movf	EUSART_Write@txData,w
  7385     07E3  0023               	movlb	3	; select bank3
  7386     07E4  009A               	movwf	26	;volatile
  7387                           
  7388                           ;mcc_generated_files/uart/src/eusart.c: 352:     }
  7389     07E5  2FFD               	goto	l437
  7390     07E6                     l4464:
  7391     07E6  0873               	movf	_eusartTxBufferRemaining,w	;volatile
  7392     07E7  1903               	btfsc	3,2
  7393     07E8  2FEA               	goto	u5771
  7394     07E9  2FEB               	goto	u5770
  7395     07EA                     u5771:
  7396     07EA  2FFD               	goto	l437
  7397     07EB                     u5770:
  7398     07EB                     l4466:
  7399                           
  7400                           ;mcc_generated_files/uart/src/eusart.c: 354:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 355:        eusartTxBuffer[eusartTxHead] = txData;
  7401     07EB  0875               	movf	_eusartTxHead,w
  7402     07EC  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  7403     07ED  0086               	movwf	6
  7404     07EE  3001               	movlw	1	; select bank2/3
  7405     07EF  0087               	movwf	7
  7406     07F0  0020               	movlb	0	; select bank0
  7407     07F1  0820               	movf	EUSART_Write@txData,w
  7408     07F2  0081               	movwf	1
  7409     07F3                     l4468:
  7410                           
  7411                           ;mcc_generated_files/uart/src/eusart.c: 356:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
  7412     07F3  0875               	movf	_eusartTxHead,w	;volatile
  7413     07F4  3E01               	addlw	1
  7414     07F5  3907               	andlw	7
  7415     07F6  00A1               	movwf	EUSART_Write@tempTxHead
  7416     07F7                     l4470:
  7417                           
  7418                           ;mcc_generated_files/uart/src/eusart.c: 358:        eusartTxHead = tempTxHead;
  7419     07F7  0821               	movf	EUSART_Write@tempTxHead,w
  7420     07F8  00F5               	movwf	_eusartTxHead	;volatile
  7421     07F9                     l4472:
  7422                           
  7423                           ;mcc_generated_files/uart/src/eusart.c: 359:        PIE1bits.TXIE = 0;
  7424     07F9  0021               	movlb	1	; select bank1
  7425     07FA  1211               	bcf	17,4	;volatile
  7426     07FB                     l4474:
  7427                           
  7428                           ;mcc_generated_files/uart/src/eusart.c: 360:        eusartTxBufferRemaining--;
  7429     07FB  3001               	movlw	1
  7430     07FC  02F3               	subwf	_eusartTxBufferRemaining,f	;volatile
  7431     07FD                     l437:	
  7432                           ;mcc_generated_files/uart/src/eusart.c: 361:     }
  7433                           
  7434                           
  7435                           ;mcc_generated_files/uart/src/eusart.c: 366:     PIE1bits.TXIE = 1;
  7436     07FD  0021               	movlb	1	; select bank1
  7437     07FE  1611               	bsf	17,4	;volatile
  7438     07FF                     l440:
  7439     07FF  0008               	return
  7440     0800                     __end_of_EUSART_Write:
  7441                           
  7442                           	psect	text13
  7443     0800                     __ptext13:	
  7444 ;; *************** function _EUSART_IsTxReady *****************
  7445 ;; Defined at:
  7446 ;;		line 261 in file "mcc_generated_files/uart/src/eusart.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;		None
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      _Bool 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;Total ram usage:        0 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 4
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_putch
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474     0800                     _EUSART_IsTxReady:	
  7475                           ;psect for function _EUSART_IsTxReady
  7476                           
  7477     0800                     l4456:	
  7478                           ;incstack = 0
  7479                           ; Regs used in _EUSART_IsTxReady: [wreg+status,2+status,0]
  7480                           
  7481                           
  7482                           ;mcc_generated_files/uart/src/eusart.c: 263:     return (eusartTxBufferRemaining ? 1 : 0
      +                          );
  7483     0800  0873               	movf	_eusartTxBufferRemaining,w	;volatile
  7484     0801  1D03               	btfss	3,2
  7485     0802  2804               	goto	u5741
  7486     0803  2806               	goto	u5740
  7487     0804                     u5741:
  7488     0804  3001               	movlw	1
  7489     0805  2807               	goto	u5750
  7490     0806                     u5740:
  7491     0806  3000               	movlw	0
  7492     0807                     u5750:
  7493     0807                     l413:
  7494     0807  0008               	return
  7495     0808                     __end_of_EUSART_IsTxReady:
  7496                           
  7497                           	psect	text14
  7498     1066                     __ptext14:	
  7499 ;; *************** function _memcpy *****************
  7500 ;; Defined at:
  7501 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/memcpy.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  d1              1    0[BANK0 ] PTR void 
  7504 ;;		 -> dbuf(80), 
  7505 ;;  s1              1    1[BANK0 ] PTR const void 
  7506 ;;		 -> dbuf(80), 
  7507 ;;  n               2    2[BANK0 ] unsigned int 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  7510 ;;		 -> dbuf(80), 
  7511 ;;  d               1    5[BANK0 ] PTR unsigned char 
  7512 ;;		 -> dbuf(80), 
  7513 ;;  tmp             1    4[BANK0 ] unsigned char 
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    0[BANK0 ] PTR void 
  7516 ;; Registers used:
  7517 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7523 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;Total ram usage:        7 bytes
  7528 ;; Hardware stack levels used: 1
  7529 ;; Hardware stack levels required when called: 4
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_efgtoa
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537     1066                     _memcpy:	
  7538                           ;psect for function _memcpy
  7539                           
  7540     1066                     l5172:	
  7541                           ;incstack = 0
  7542                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7543                           
  7544     1066  0020               	movlb	0	; select bank0
  7545     1067  0821               	movf	memcpy@s1,w
  7546     1068  00A6               	movwf	memcpy@s
  7547     1069  0820               	movf	memcpy@d1,w
  7548     106A  00A5               	movwf	memcpy@d
  7549     106B  287C               	goto	l1315
  7550     106C                     l5174:
  7551     106C  0826               	movf	memcpy@s,w
  7552     106D  0086               	movwf	6
  7553     106E  3002               	movlw	2	; select bank4/5
  7554     106F  0087               	movwf	7
  7555     1070  0801               	movf	1,w
  7556     1071  00A4               	movwf	memcpy@tmp
  7557     1072                     l5176:
  7558     1072  3001               	movlw	1
  7559     1073  07A6               	addwf	memcpy@s,f
  7560     1074                     l5178:
  7561     1074  0825               	movf	memcpy@d,w
  7562     1075  0086               	movwf	6
  7563     1076  3002               	movlw	2	; select bank4/5
  7564     1077  0087               	movwf	7
  7565     1078  0824               	movf	memcpy@tmp,w
  7566     1079  0081               	movwf	1
  7567     107A  3001               	movlw	1
  7568     107B  07A5               	addwf	memcpy@d,f
  7569     107C                     l1315:
  7570     107C  3001               	movlw	1
  7571     107D  02A2               	subwf	memcpy@n,f
  7572     107E  3000               	movlw	0
  7573     107F  3BA3               	subwfb	memcpy@n+1,f
  7574     1080  0A22               	incf	memcpy@n,w
  7575     1081  1D03               	skipz
  7576     1082  2887               	goto	u7361
  7577     1083  0A23               	incf	memcpy@n+1,w
  7578     1084  1D03               	btfss	3,2
  7579     1085  2887               	goto	u7361
  7580     1086  2888               	goto	u7360
  7581     1087                     u7361:
  7582     1087  286C               	goto	l5174
  7583     1088                     u7360:
  7584     1088                     l1318:
  7585     1088  0008               	return
  7586     1089                     __end_of_memcpy:
  7587                           
  7588                           	psect	text15
  7589     1EDC                     __ptext15:	
  7590 ;; *************** function _labs *****************
  7591 ;; Defined at:
  7592 ;;		line 1 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/labs.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  a               4    0[BANK0 ] long 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  4    0[BANK0 ] long 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;Total ram usage:        4 bytes
  7611 ;; Hardware stack levels used: 1
  7612 ;; Hardware stack levels required when called: 4
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		_efgtoa
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620     1EDC                     _labs:	
  7621                           ;psect for function _labs
  7622                           
  7623     1EDC                     l5134:	
  7624                           ;incstack = 0
  7625                           ; Regs used in _labs: [wreg+status,2+status,0]
  7626                           
  7627     1EDC  0020               	movlb	0	; select bank0
  7628     1EDD  1BA3               	btfsc	labs@a+3,7
  7629     1EDE  2EE0               	goto	u7241
  7630     1EDF  2EE1               	goto	u7240
  7631     1EE0                     u7241:
  7632     1EE0  2EE2               	goto	l5138
  7633     1EE1                     u7240:
  7634     1EE1                     l5136:
  7635     1EE1  2EF1               	goto	l1312
  7636     1EE2                     l5138:
  7637     1EE2  0920               	comf	labs@a,w
  7638     1EE3  00A0               	movwf	?_labs
  7639     1EE4  0921               	comf	labs@a+1,w
  7640     1EE5  00A1               	movwf	?_labs+1
  7641     1EE6  0922               	comf	labs@a+2,w
  7642     1EE7  00A2               	movwf	?_labs+2
  7643     1EE8  0923               	comf	labs@a+3,w
  7644     1EE9  00A3               	movwf	?_labs+3
  7645     1EEA  0AA0               	incf	?_labs,f
  7646     1EEB  1903               	skipnz
  7647     1EEC  0AA1               	incf	?_labs+1,f
  7648     1EED  1903               	skipnz
  7649     1EEE  0AA2               	incf	?_labs+2,f
  7650     1EEF  1903               	skipnz
  7651     1EF0  0AA3               	incf	?_labs+3,f
  7652     1EF1                     l1312:
  7653     1EF1  0008               	return
  7654     1EF2                     __end_of_labs:
  7655                           
  7656                           	psect	text16
  7657     145F                     __ptext16:	
  7658 ;; *************** function _floorf *****************
  7659 ;; Defined at:
  7660 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/floorf.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  x               4   26[BANK0 ] float 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  u               4   42[BANK0 ] struct .
  7665 ;;  m               4   36[BANK0 ] unsigned long 
  7666 ;;  e               2   40[BANK0 ] int 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  4   26[BANK0 ] float 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;Total ram usage:       20 bytes
  7681 ;; Hardware stack levels used: 1
  7682 ;; Hardware stack levels required when called: 4
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_efgtoa
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690     145F                     _floorf:	
  7691                           ;psect for function _floorf
  7692                           
  7693     145F                     l5142:	
  7694                           ;incstack = 0
  7695                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7696                           
  7697     145F  0022               	movlb	2	; select bank2
  7698     1460  083B               	movf	(floorf@F521+3)^(0+256),w
  7699     1461  0020               	movlb	0	; select bank0
  7700     1462  00CD               	movwf	floorf@u+3
  7701     1463  0022               	movlb	2	; select bank2
  7702     1464  083A               	movf	(floorf@F521+2)^(0+256),w
  7703     1465  0020               	movlb	0	; select bank0
  7704     1466  00CC               	movwf	floorf@u+2
  7705     1467  0022               	movlb	2	; select bank2
  7706     1468  0839               	movf	(floorf@F521+1)^(0+256),w
  7707     1469  0020               	movlb	0	; select bank0
  7708     146A  00CB               	movwf	floorf@u+1
  7709     146B  0022               	movlb	2	; select bank2
  7710     146C  0838               	movf	floorf@F521^(0+256),w
  7711     146D  0020               	movlb	0	; select bank0
  7712     146E  00CA               	movwf	floorf@u
  7713     146F  083D               	movf	floorf@x+3,w
  7714     1470  00CD               	movwf	floorf@u+3
  7715     1471  083C               	movf	floorf@x+2,w
  7716     1472  00CC               	movwf	floorf@u+2
  7717     1473  083B               	movf	floorf@x+1,w
  7718     1474  00CB               	movwf	floorf@u+1
  7719     1475  083A               	movf	floorf@x,w
  7720     1476  00CA               	movwf	floorf@u
  7721     1477                     l5144:
  7722     1477  084A               	movf	floorf@u,w
  7723     1478  00BE               	movwf	??_floorf
  7724     1479  084B               	movf	floorf@u+1,w
  7725     147A  00BF               	movwf	??_floorf+1
  7726     147B  084C               	movf	floorf@u+2,w
  7727     147C  00C0               	movwf	??_floorf+2
  7728     147D  084D               	movf	floorf@u+3,w
  7729     147E  00C1               	movwf	??_floorf+3
  7730     147F  3017               	movlw	23
  7731     1480                     u7255:
  7732     1480  36C1               	lsrf	??_floorf+3,f
  7733     1481  0CC0               	rrf	??_floorf+2,f
  7734     1482  0CBF               	rrf	??_floorf+1,f
  7735     1483  0CBE               	rrf	??_floorf,f
  7736     1484                     u7250:
  7737     1484  0B89               	decfsz	9,f
  7738     1485  2C80               	goto	u7255
  7739     1486  30FF               	movlw	255
  7740     1487  053E               	andwf	??_floorf,w
  7741     1488  00C2               	movwf	??_floorf+4
  7742     1489  3000               	movlw	0
  7743     148A  053F               	andwf	??_floorf+1,w
  7744     148B  00C3               	movwf	??_floorf+5
  7745     148C  0842               	movf	??_floorf+4,w
  7746     148D  3E81               	addlw	129
  7747     148E  00C8               	movwf	floorf@e
  7748     148F  30FF               	movlw	255
  7749     1490  3D43               	addwfc	??_floorf+5,w
  7750     1491  00C9               	movwf	floorf@e+1
  7751     1492                     l5146:
  7752     1492  0849               	movf	floorf@e+1,w
  7753     1493  3A80               	xorlw	128
  7754     1494  00BE               	movwf	??_floorf
  7755     1495  3080               	movlw	128
  7756     1496  023E               	subwf	??_floorf,w
  7757     1497  1D03               	skipz
  7758     1498  2C9B               	goto	u7265
  7759     1499  3017               	movlw	23
  7760     149A  0248               	subwf	floorf@e,w
  7761     149B                     u7265:
  7762     149B  1C03               	skipc
  7763     149C  2C9E               	goto	u7261
  7764     149D  2C9F               	goto	u7260
  7765     149E                     u7261:
  7766     149E  2CA0               	goto	l1297
  7767     149F                     u7260:
  7768     149F                     l5148:
  7769     149F  2D49               	goto	l1298
  7770     14A0                     l1297:
  7771     14A0  0020               	movlb	0	; select bank0
  7772     14A1  1BC9               	btfsc	floorf@e+1,7
  7773     14A2  2CA4               	goto	u7271
  7774     14A3  2CA5               	goto	u7270
  7775     14A4                     u7271:
  7776     14A4  2D02               	goto	l5162
  7777     14A5                     u7270:
  7778     14A5                     l5150:
  7779     14A5  30FF               	movlw	255
  7780     14A6  00BE               	movwf	??_floorf
  7781     14A7  30FF               	movlw	255
  7782     14A8  00BF               	movwf	??_floorf+1
  7783     14A9  307F               	movlw	127
  7784     14AA  00C0               	movwf	??_floorf+2
  7785     14AB  3000               	movlw	0
  7786     14AC  00C1               	movwf	??_floorf+3
  7787     14AD  0A48               	incf	floorf@e,w
  7788     14AE  2CB3               	goto	u7280
  7789     14AF                     u7285:
  7790     14AF  37C1               	asrf	??_floorf+3,f
  7791     14B0  0CC0               	rrf	??_floorf+2,f
  7792     14B1  0CBF               	rrf	??_floorf+1,f
  7793     14B2  0CBE               	rrf	??_floorf,f
  7794     14B3                     u7280:
  7795     14B3  0B89               	decfsz	9,f
  7796     14B4  2CAF               	goto	u7285
  7797     14B5  0841               	movf	??_floorf+3,w
  7798     14B6  00C7               	movwf	floorf@m+3
  7799     14B7  0840               	movf	??_floorf+2,w
  7800     14B8  00C6               	movwf	floorf@m+2
  7801     14B9  083F               	movf	??_floorf+1,w
  7802     14BA  00C5               	movwf	floorf@m+1
  7803     14BB  083E               	movf	??_floorf,w
  7804     14BC  00C4               	movwf	floorf@m
  7805     14BD                     l5152:
  7806     14BD  084A               	movf	floorf@u,w
  7807     14BE  0544               	andwf	floorf@m,w
  7808     14BF  00BE               	movwf	??_floorf
  7809     14C0  084B               	movf	floorf@u+1,w
  7810     14C1  0545               	andwf	floorf@m+1,w
  7811     14C2  00BF               	movwf	??_floorf+1
  7812     14C3  084C               	movf	floorf@u+2,w
  7813     14C4  0546               	andwf	floorf@m+2,w
  7814     14C5  00C0               	movwf	??_floorf+2
  7815     14C6  084D               	movf	floorf@u+3,w
  7816     14C7  0547               	andwf	floorf@m+3,w
  7817     14C8  00C1               	movwf	??_floorf+3
  7818     14C9  0841               	movf	??_floorf+3,w
  7819     14CA  0440               	iorwf	??_floorf+2,w
  7820     14CB  043F               	iorwf	??_floorf+1,w
  7821     14CC  043E               	iorwf	??_floorf,w
  7822     14CD  1D03               	skipz
  7823     14CE  2CD0               	goto	u7291
  7824     14CF  2CD1               	goto	u7290
  7825     14D0                     u7291:
  7826     14D0  2CD2               	goto	l5156
  7827     14D1                     u7290:
  7828     14D1  2C9F               	goto	l5148
  7829     14D2                     l5156:
  7830     14D2  084A               	movf	floorf@u,w
  7831     14D3  00BE               	movwf	??_floorf
  7832     14D4  084B               	movf	floorf@u+1,w
  7833     14D5  00BF               	movwf	??_floorf+1
  7834     14D6  084C               	movf	floorf@u+2,w
  7835     14D7  00C0               	movwf	??_floorf+2
  7836     14D8  084D               	movf	floorf@u+3,w
  7837     14D9  00C1               	movwf	??_floorf+3
  7838     14DA  301F               	movlw	31
  7839     14DB                     u7305:
  7840     14DB  36C1               	lsrf	??_floorf+3,f
  7841     14DC  0CC0               	rrf	??_floorf+2,f
  7842     14DD  0CBF               	rrf	??_floorf+1,f
  7843     14DE  0CBE               	rrf	??_floorf,f
  7844     14DF                     u7300:
  7845     14DF  0B89               	decfsz	9,f
  7846     14E0  2CDB               	goto	u7305
  7847     14E1  0841               	movf	??_floorf+3,w
  7848     14E2  0440               	iorwf	??_floorf+2,w
  7849     14E3  043F               	iorwf	??_floorf+1,w
  7850     14E4  043E               	iorwf	??_floorf,w
  7851     14E5  1903               	skipnz
  7852     14E6  2CE8               	goto	u7311
  7853     14E7  2CE9               	goto	u7310
  7854     14E8                     u7311:
  7855     14E8  2CF1               	goto	l5160
  7856     14E9                     u7310:
  7857     14E9                     l5158:
  7858     14E9  0844               	movf	floorf@m,w
  7859     14EA  07CA               	addwf	floorf@u,f
  7860     14EB  0845               	movf	floorf@m+1,w
  7861     14EC  3DCB               	addwfc	floorf@u+1,f
  7862     14ED  0846               	movf	floorf@m+2,w
  7863     14EE  3DCC               	addwfc	floorf@u+2,f
  7864     14EF  0847               	movf	floorf@m+3,w
  7865     14F0  3DCD               	addwfc	floorf@u+3,f
  7866     14F1                     l5160:
  7867     14F1  0944               	comf	floorf@m,w
  7868     14F2  00BE               	movwf	??_floorf
  7869     14F3  0945               	comf	floorf@m+1,w
  7870     14F4  00BF               	movwf	??_floorf+1
  7871     14F5  0946               	comf	floorf@m+2,w
  7872     14F6  00C0               	movwf	??_floorf+2
  7873     14F7  0947               	comf	floorf@m+3,w
  7874     14F8  00C1               	movwf	??_floorf+3
  7875     14F9  083E               	movf	??_floorf,w
  7876     14FA  05CA               	andwf	floorf@u,f
  7877     14FB  083F               	movf	??_floorf+1,w
  7878     14FC  05CB               	andwf	floorf@u+1,f
  7879     14FD  0840               	movf	??_floorf+2,w
  7880     14FE  05CC               	andwf	floorf@u+2,f
  7881     14FF  0841               	movf	??_floorf+3,w
  7882     1500  05CD               	andwf	floorf@u+3,f
  7883     1501  2D41               	goto	l1302
  7884     1502                     l5162:
  7885     1502  084A               	movf	floorf@u,w
  7886     1503  00BE               	movwf	??_floorf
  7887     1504  084B               	movf	floorf@u+1,w
  7888     1505  00BF               	movwf	??_floorf+1
  7889     1506  084C               	movf	floorf@u+2,w
  7890     1507  00C0               	movwf	??_floorf+2
  7891     1508  084D               	movf	floorf@u+3,w
  7892     1509  00C1               	movwf	??_floorf+3
  7893     150A  301F               	movlw	31
  7894     150B                     u7325:
  7895     150B  36C1               	lsrf	??_floorf+3,f
  7896     150C  0CC0               	rrf	??_floorf+2,f
  7897     150D  0CBF               	rrf	??_floorf+1,f
  7898     150E  0CBE               	rrf	??_floorf,f
  7899     150F                     u7320:
  7900     150F  0B89               	decfsz	9,f
  7901     1510  2D0B               	goto	u7325
  7902     1511  0841               	movf	??_floorf+3,w
  7903     1512  0440               	iorwf	??_floorf+2,w
  7904     1513  043F               	iorwf	??_floorf+1,w
  7905     1514  043E               	iorwf	??_floorf,w
  7906     1515  1D03               	skipz
  7907     1516  2D18               	goto	u7331
  7908     1517  2D19               	goto	u7330
  7909     1518                     u7331:
  7910     1518  2D22               	goto	l5166
  7911     1519                     u7330:
  7912     1519                     l5164:
  7913     1519  3000               	movlw	0
  7914     151A  00CD               	movwf	floorf@u+3
  7915     151B  3000               	movlw	0
  7916     151C  00CC               	movwf	floorf@u+2
  7917     151D  3000               	movlw	0
  7918     151E  00CB               	movwf	floorf@u+1
  7919     151F  3000               	movlw	0
  7920     1520  00CA               	movwf	floorf@u
  7921     1521  2D41               	goto	l1302
  7922     1522                     l5166:
  7923     1522  084A               	movf	floorf@u,w
  7924     1523  00BE               	movwf	??_floorf
  7925     1524  084B               	movf	floorf@u+1,w
  7926     1525  00BF               	movwf	??_floorf+1
  7927     1526  084C               	movf	floorf@u+2,w
  7928     1527  00C0               	movwf	??_floorf+2
  7929     1528  084D               	movf	floorf@u+3,w
  7930     1529  00C1               	movwf	??_floorf+3
  7931     152A  3001               	movlw	1
  7932     152B                     u7345:
  7933     152B  35BE               	lslf	??_floorf,f
  7934     152C  0DBF               	rlf	??_floorf+1,f
  7935     152D  0DC0               	rlf	??_floorf+2,f
  7936     152E  0DC1               	rlf	??_floorf+3,f
  7937     152F                     u7340:
  7938     152F  0B89               	decfsz	9,f
  7939     1530  2D2B               	goto	u7345
  7940     1531  0841               	movf	??_floorf+3,w
  7941     1532  0440               	iorwf	??_floorf+2,w
  7942     1533  043F               	iorwf	??_floorf+1,w
  7943     1534  043E               	iorwf	??_floorf,w
  7944     1535  1903               	skipnz
  7945     1536  2D38               	goto	u7351
  7946     1537  2D39               	goto	u7350
  7947     1538                     u7351:
  7948     1538  2D41               	goto	l1302
  7949     1539                     u7350:
  7950     1539                     l5168:
  7951     1539  30BF               	movlw	191
  7952     153A  00CD               	movwf	floorf@u+3
  7953     153B  3080               	movlw	128
  7954     153C  00CC               	movwf	floorf@u+2
  7955     153D  3000               	movlw	0
  7956     153E  00CB               	movwf	floorf@u+1
  7957     153F  3000               	movlw	0
  7958     1540  00CA               	movwf	floorf@u
  7959     1541                     l1302:
  7960     1541  084D               	movf	floorf@u+3,w
  7961     1542  00BD               	movwf	?_floorf+3
  7962     1543  084C               	movf	floorf@u+2,w
  7963     1544  00BC               	movwf	?_floorf+2
  7964     1545  084B               	movf	floorf@u+1,w
  7965     1546  00BB               	movwf	?_floorf+1
  7966     1547  084A               	movf	floorf@u,w
  7967     1548  00BA               	movwf	?_floorf
  7968     1549                     l1298:
  7969     1549  0008               	return
  7970     154A                     __end_of_floorf:
  7971                           
  7972                           	psect	text17
  7973     1355                     __ptext17:	
  7974 ;; *************** function ___fpclassifyf *****************
  7975 ;; Defined at:
  7976 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/__fpclassifyf.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  x               4    0[BANK0 ] float 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  u               4   12[BANK0 ] struct .
  7981 ;;  e               2   10[BANK0 ] int 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  2    0[BANK0 ] int 
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7991 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;Total ram usage:       16 bytes
  7996 ;; Hardware stack levels used: 1
  7997 ;; Hardware stack levels required when called: 4
  7998 ;; This function calls:
  7999 ;;		Nothing
  8000 ;; This function is called by:
  8001 ;;		_efgtoa
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005     1355                     ___fpclassifyf:	
  8006                           ;psect for function ___fpclassifyf
  8007                           
  8008     1355                     l5106:	
  8009                           ;incstack = 0
  8010                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  8011                           
  8012     1355  0022               	movlb	2	; select bank2
  8013     1356  083F               	movf	(___fpclassifyf@F465+3)^(0+256),w
  8014     1357  0020               	movlb	0	; select bank0
  8015     1358  00AF               	movwf	___fpclassifyf@u+3
  8016     1359  0022               	movlb	2	; select bank2
  8017     135A  083E               	movf	(___fpclassifyf@F465+2)^(0+256),w
  8018     135B  0020               	movlb	0	; select bank0
  8019     135C  00AE               	movwf	___fpclassifyf@u+2
  8020     135D  0022               	movlb	2	; select bank2
  8021     135E  083D               	movf	(___fpclassifyf@F465+1)^(0+256),w
  8022     135F  0020               	movlb	0	; select bank0
  8023     1360  00AD               	movwf	___fpclassifyf@u+1
  8024     1361  0022               	movlb	2	; select bank2
  8025     1362  083C               	movf	___fpclassifyf@F465^(0+256),w
  8026     1363  0020               	movlb	0	; select bank0
  8027     1364  00AC               	movwf	___fpclassifyf@u
  8028     1365  0823               	movf	___fpclassifyf@x+3,w
  8029     1366  00AF               	movwf	___fpclassifyf@u+3
  8030     1367  0822               	movf	___fpclassifyf@x+2,w
  8031     1368  00AE               	movwf	___fpclassifyf@u+2
  8032     1369  0821               	movf	___fpclassifyf@x+1,w
  8033     136A  00AD               	movwf	___fpclassifyf@u+1
  8034     136B  0820               	movf	___fpclassifyf@x,w
  8035     136C  00AC               	movwf	___fpclassifyf@u
  8036     136D                     l5108:
  8037     136D  082C               	movf	___fpclassifyf@u,w
  8038     136E  00A4               	movwf	??___fpclassifyf
  8039     136F  082D               	movf	___fpclassifyf@u+1,w
  8040     1370  00A5               	movwf	??___fpclassifyf+1
  8041     1371  082E               	movf	___fpclassifyf@u+2,w
  8042     1372  00A6               	movwf	??___fpclassifyf+2
  8043     1373  082F               	movf	___fpclassifyf@u+3,w
  8044     1374  00A7               	movwf	??___fpclassifyf+3
  8045     1375  3017               	movlw	23
  8046     1376                     u7155:
  8047     1376  36A7               	lsrf	??___fpclassifyf+3,f
  8048     1377  0CA6               	rrf	??___fpclassifyf+2,f
  8049     1378  0CA5               	rrf	??___fpclassifyf+1,f
  8050     1379  0CA4               	rrf	??___fpclassifyf,f
  8051     137A                     u7150:
  8052     137A  0B89               	decfsz	9,f
  8053     137B  2B76               	goto	u7155
  8054     137C  30FF               	movlw	255
  8055     137D  0524               	andwf	??___fpclassifyf,w
  8056     137E  00AA               	movwf	___fpclassifyf@e
  8057     137F  3000               	movlw	0
  8058     1380  0525               	andwf	??___fpclassifyf+1,w
  8059     1381  00AB               	movwf	___fpclassifyf@e+1
  8060     1382                     l5110:
  8061     1382  082A               	movf	___fpclassifyf@e,w
  8062     1383  042B               	iorwf	___fpclassifyf@e+1,w
  8063     1384  1D03               	btfss	3,2
  8064     1385  2B87               	goto	u7161
  8065     1386  2B88               	goto	u7160
  8066     1387                     u7161:
  8067     1387  2BA9               	goto	l5120
  8068     1388                     u7160:
  8069     1388                     l5112:
  8070     1388  082C               	movf	___fpclassifyf@u,w
  8071     1389  00A4               	movwf	??___fpclassifyf
  8072     138A  082D               	movf	___fpclassifyf@u+1,w
  8073     138B  00A5               	movwf	??___fpclassifyf+1
  8074     138C  082E               	movf	___fpclassifyf@u+2,w
  8075     138D  00A6               	movwf	??___fpclassifyf+2
  8076     138E  082F               	movf	___fpclassifyf@u+3,w
  8077     138F  00A7               	movwf	??___fpclassifyf+3
  8078     1390  3001               	movlw	1
  8079     1391                     u7175:
  8080     1391  35A4               	lslf	??___fpclassifyf,f
  8081     1392  0DA5               	rlf	??___fpclassifyf+1,f
  8082     1393  0DA6               	rlf	??___fpclassifyf+2,f
  8083     1394  0DA7               	rlf	??___fpclassifyf+3,f
  8084     1395                     u7170:
  8085     1395  0B89               	decfsz	9,f
  8086     1396  2B91               	goto	u7175
  8087     1397  0827               	movf	??___fpclassifyf+3,w
  8088     1398  0426               	iorwf	??___fpclassifyf+2,w
  8089     1399  0425               	iorwf	??___fpclassifyf+1,w
  8090     139A  0424               	iorwf	??___fpclassifyf,w
  8091     139B  1D03               	skipz
  8092     139C  2B9E               	goto	u7181
  8093     139D  2B9F               	goto	u7180
  8094     139E                     u7181:
  8095     139E  2BA4               	goto	l5116
  8096     139F                     u7180:
  8097     139F                     l5114:
  8098     139F  3002               	movlw	2
  8099     13A0  00A0               	movwf	?___fpclassifyf
  8100     13A1  3000               	movlw	0
  8101     13A2  00A1               	movwf	?___fpclassifyf+1
  8102     13A3  2BD3               	goto	l1291
  8103     13A4                     l5116:
  8104     13A4  3003               	movlw	3
  8105     13A5  00A0               	movwf	?___fpclassifyf
  8106     13A6  3000               	movlw	0
  8107     13A7  00A1               	movwf	?___fpclassifyf+1
  8108     13A8  2BD3               	goto	l1291
  8109     13A9                     l5120:
  8110     13A9  0A2A               	incf	___fpclassifyf@e,w
  8111     13AA  042B               	iorwf	___fpclassifyf@e+1,w
  8112     13AB  1D03               	btfss	3,2
  8113     13AC  2BAE               	goto	u7191
  8114     13AD  2BAF               	goto	u7190
  8115     13AE                     u7191:
  8116     13AE  2BCF               	goto	l5126
  8117     13AF                     u7190:
  8118     13AF                     l5122:
  8119     13AF  082C               	movf	___fpclassifyf@u,w
  8120     13B0  00A4               	movwf	??___fpclassifyf
  8121     13B1  082D               	movf	___fpclassifyf@u+1,w
  8122     13B2  00A5               	movwf	??___fpclassifyf+1
  8123     13B3  082E               	movf	___fpclassifyf@u+2,w
  8124     13B4  00A6               	movwf	??___fpclassifyf+2
  8125     13B5  082F               	movf	___fpclassifyf@u+3,w
  8126     13B6  00A7               	movwf	??___fpclassifyf+3
  8127     13B7  3009               	movlw	9
  8128     13B8                     u7205:
  8129     13B8  35A4               	lslf	??___fpclassifyf,f
  8130     13B9  0DA5               	rlf	??___fpclassifyf+1,f
  8131     13BA  0DA6               	rlf	??___fpclassifyf+2,f
  8132     13BB  0DA7               	rlf	??___fpclassifyf+3,f
  8133     13BC                     u7200:
  8134     13BC  0B89               	decfsz	9,f
  8135     13BD  2BB8               	goto	u7205
  8136     13BE  0827               	movf	??___fpclassifyf+3,w
  8137     13BF  0426               	iorwf	??___fpclassifyf+2,w
  8138     13C0  0425               	iorwf	??___fpclassifyf+1,w
  8139     13C1  0424               	iorwf	??___fpclassifyf,w
  8140     13C2  1903               	skipnz
  8141     13C3  2BC5               	goto	u7211
  8142     13C4  2BC7               	goto	u7210
  8143     13C5                     u7211:
  8144     13C5  3001               	movlw	1
  8145     13C6  2BC8               	goto	u7220
  8146     13C7                     u7210:
  8147     13C7  3000               	movlw	0
  8148     13C8                     u7220:
  8149     13C8  00A8               	movwf	??___fpclassifyf+4
  8150     13C9  01A9               	clrf	??___fpclassifyf+5
  8151     13CA  0828               	movf	??___fpclassifyf+4,w
  8152     13CB  00A0               	movwf	?___fpclassifyf
  8153     13CC  0829               	movf	??___fpclassifyf+5,w
  8154     13CD  00A1               	movwf	?___fpclassifyf+1
  8155     13CE  2BD3               	goto	l1291
  8156     13CF                     l5126:
  8157     13CF  3004               	movlw	4
  8158     13D0  00A0               	movwf	?___fpclassifyf
  8159     13D1  3000               	movlw	0
  8160     13D2  00A1               	movwf	?___fpclassifyf+1
  8161     13D3                     l1291:
  8162     13D3  0008               	return
  8163     13D4                     __end_of___fpclassifyf:
  8164                           
  8165                           	psect	text18
  8166     12E6                     __ptext18:	
  8167 ;; *************** function ___fltol *****************
  8168 ;; Defined at:
  8169 ;;		line 43 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  f1              4    0[BANK0 ] int 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;  exp1            1    9[BANK0 ] unsigned char 
  8174 ;;  sign1           1    8[BANK0 ] unsigned char 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  4    0[BANK0 ] long 
  8177 ;; Registers used:
  8178 ;;		wreg, status,2, status,0
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;Total ram usage:       10 bytes
  8189 ;; Hardware stack levels used: 1
  8190 ;; Hardware stack levels required when called: 4
  8191 ;; This function calls:
  8192 ;;		Nothing
  8193 ;; This function is called by:
  8194 ;;		_efgtoa
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198     12E6                     ___fltol:	
  8199                           ;psect for function ___fltol
  8200                           
  8201     12E6                     l4772:	
  8202                           ;incstack = 0
  8203                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8204                           
  8205     12E6  1003               	clrc
  8206     12E7  0020               	movlb	0	; select bank0
  8207     12E8  0D22               	rlf	___fltol@f1+2,w
  8208     12E9  0D23               	rlf	___fltol@f1+3,w
  8209     12EA  00A9               	movwf	___fltol@exp1
  8210     12EB  0829               	movf	___fltol@exp1,w
  8211     12EC  1D03               	btfss	3,2
  8212     12ED  2AEF               	goto	u6461
  8213     12EE  2AF0               	goto	u6460
  8214     12EF                     u6461:
  8215     12EF  2AF9               	goto	l4778
  8216     12F0                     u6460:
  8217     12F0                     l4774:
  8218     12F0  3000               	movlw	0
  8219     12F1  00A3               	movwf	?___fltol+3
  8220     12F2  3000               	movlw	0
  8221     12F3  00A2               	movwf	?___fltol+2
  8222     12F4  3000               	movlw	0
  8223     12F5  00A1               	movwf	?___fltol+1
  8224     12F6  3000               	movlw	0
  8225     12F7  00A0               	movwf	?___fltol
  8226     12F8  2B54               	goto	l894
  8227     12F9                     l4778:
  8228     12F9  0820               	movf	___fltol@f1,w
  8229     12FA  00A4               	movwf	??___fltol
  8230     12FB  0821               	movf	___fltol@f1+1,w
  8231     12FC  00A5               	movwf	??___fltol+1
  8232     12FD  0822               	movf	___fltol@f1+2,w
  8233     12FE  00A6               	movwf	??___fltol+2
  8234     12FF  0823               	movf	___fltol@f1+3,w
  8235     1300  00A7               	movwf	??___fltol+3
  8236     1301  301F               	movlw	31
  8237     1302                     u6475:
  8238     1302  36A7               	lsrf	??___fltol+3,f
  8239     1303  0CA6               	rrf	??___fltol+2,f
  8240     1304  0CA5               	rrf	??___fltol+1,f
  8241     1305  0CA4               	rrf	??___fltol,f
  8242     1306                     u6470:
  8243     1306  0B89               	decfsz	9,f
  8244     1307  2B02               	goto	u6475
  8245     1308  0824               	movf	??___fltol,w
  8246     1309  00A8               	movwf	___fltol@sign1
  8247     130A                     l4780:
  8248     130A  17A2               	bsf	___fltol@f1+2,7
  8249     130B                     l4782:
  8250     130B  30FF               	movlw	255
  8251     130C  05A0               	andwf	___fltol@f1,f
  8252     130D  30FF               	movlw	255
  8253     130E  05A1               	andwf	___fltol@f1+1,f
  8254     130F  30FF               	movlw	255
  8255     1310  05A2               	andwf	___fltol@f1+2,f
  8256     1311  3000               	movlw	0
  8257     1312  05A3               	andwf	___fltol@f1+3,f
  8258     1313                     l4784:
  8259     1313  3096               	movlw	150
  8260     1314  02A9               	subwf	___fltol@exp1,f
  8261     1315                     l4786:
  8262     1315  1FA9               	btfss	___fltol@exp1,7
  8263     1316  2B18               	goto	u6481
  8264     1317  2B19               	goto	u6480
  8265     1318                     u6481:
  8266     1318  2B2F               	goto	l4796
  8267     1319                     u6480:
  8268     1319                     l4788:
  8269     1319  0829               	movf	___fltol@exp1,w
  8270     131A  3A80               	xorlw	128
  8271     131B  3E97               	addlw	151
  8272     131C  1803               	skipnc
  8273     131D  2B1F               	goto	u6491
  8274     131E  2B20               	goto	u6490
  8275     131F                     u6491:
  8276     131F  2B21               	goto	l4794
  8277     1320                     u6490:
  8278     1320  2AF0               	goto	l4774
  8279     1321                     l4794:
  8280     1321  3001               	movlw	1
  8281     1322                     u6505:
  8282     1322  36A3               	lsrf	___fltol@f1+3,f
  8283     1323  0CA2               	rrf	___fltol@f1+2,f
  8284     1324  0CA1               	rrf	___fltol@f1+1,f
  8285     1325  0CA0               	rrf	___fltol@f1,f
  8286     1326  0B89               	decfsz	9,f
  8287     1327  2B22               	goto	u6505
  8288     1328  3001               	movlw	1
  8289     1329  07A9               	addwf	___fltol@exp1,f
  8290     132A  1D03               	btfss	3,2
  8291     132B  2B2D               	goto	u6511
  8292     132C  2B2E               	goto	u6510
  8293     132D                     u6511:
  8294     132D  2B21               	goto	l4794
  8295     132E                     u6510:
  8296     132E  2B44               	goto	l4804
  8297     132F                     l4796:
  8298     132F  3020               	movlw	32
  8299     1330  0229               	subwf	___fltol@exp1,w
  8300     1331  1C03               	skipc
  8301     1332  2B34               	goto	u6521
  8302     1333  2B35               	goto	u6520
  8303     1334                     u6521:
  8304     1334  2B3F               	goto	l901
  8305     1335                     u6520:
  8306     1335  2AF0               	goto	l4774
  8307     1336                     l4802:
  8308     1336  3001               	movlw	1
  8309     1337                     u6535:
  8310     1337  35A0               	lslf	___fltol@f1,f
  8311     1338  0DA1               	rlf	___fltol@f1+1,f
  8312     1339  0DA2               	rlf	___fltol@f1+2,f
  8313     133A  0DA3               	rlf	___fltol@f1+3,f
  8314     133B  0B89               	decfsz	9,f
  8315     133C  2B37               	goto	u6535
  8316     133D  3001               	movlw	1
  8317     133E  02A9               	subwf	___fltol@exp1,f
  8318     133F                     l901:
  8319     133F  0829               	movf	___fltol@exp1,w
  8320     1340  1D03               	btfss	3,2
  8321     1341  2B43               	goto	u6541
  8322     1342  2B44               	goto	u6540
  8323     1343                     u6541:
  8324     1343  2B36               	goto	l4802
  8325     1344                     u6540:
  8326     1344                     l4804:
  8327     1344  0828               	movf	___fltol@sign1,w
  8328     1345  1903               	btfsc	3,2
  8329     1346  2B48               	goto	u6551
  8330     1347  2B49               	goto	u6550
  8331     1348                     u6551:
  8332     1348  2B54               	goto	l904
  8333     1349                     u6550:
  8334     1349                     l4806:
  8335     1349  09A0               	comf	___fltol@f1,f
  8336     134A  09A1               	comf	___fltol@f1+1,f
  8337     134B  09A2               	comf	___fltol@f1+2,f
  8338     134C  09A3               	comf	___fltol@f1+3,f
  8339     134D  0AA0               	incf	___fltol@f1,f
  8340     134E  1903               	skipnz
  8341     134F  0AA1               	incf	___fltol@f1+1,f
  8342     1350  1903               	skipnz
  8343     1351  0AA2               	incf	___fltol@f1+2,f
  8344     1352  1903               	skipnz
  8345     1353  0AA3               	incf	___fltol@f1+3,f
  8346     1354                     l904:
  8347     1354                     l894:
  8348     1354  0008               	return
  8349     1355                     __end_of___fltol:
  8350                           
  8351                           	psect	text19
  8352     1FC0                     __ptext19:	
  8353 ;; *************** function ___flsub *****************
  8354 ;; Defined at:
  8355 ;;		line 242 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  a               4   64[BANK0 ] long 
  8358 ;;  b               4   68[BANK0 ] long 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  4   64[BANK0 ] long 
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0, pclath, cstack
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8370 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;Total ram usage:        8 bytes
  8375 ;; Hardware stack levels used: 1
  8376 ;; Hardware stack levels required when called: 5
  8377 ;; This function calls:
  8378 ;;		___fladd
  8379 ;; This function is called by:
  8380 ;;		_efgtoa
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384     1FC0                     ___flsub:	
  8385                           ;psect for function ___flsub
  8386                           
  8387     1FC0                     l4808:	
  8388                           ;incstack = 0
  8389                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8390                           
  8391     1FC0  3080               	movlw	128
  8392     1FC1  0020               	movlb	0	; select bank0
  8393     1FC2  06E3               	xorwf	___flsub@a+3,f
  8394     1FC3                     l4810:
  8395     1FC3  0867               	movf	___flsub@b+3,w
  8396     1FC4  00CF               	movwf	___fladd@b+3
  8397     1FC5  0866               	movf	___flsub@b+2,w
  8398     1FC6  00CE               	movwf	___fladd@b+2
  8399     1FC7  0865               	movf	___flsub@b+1,w
  8400     1FC8  00CD               	movwf	___fladd@b+1
  8401     1FC9  0864               	movf	___flsub@b,w
  8402     1FCA  00CC               	movwf	___fladd@b
  8403     1FCB  0863               	movf	___flsub@a+3,w
  8404     1FCC  00D3               	movwf	___fladd@a+3
  8405     1FCD  0862               	movf	___flsub@a+2,w
  8406     1FCE  00D2               	movwf	___fladd@a+2
  8407     1FCF  0861               	movf	___flsub@a+1,w
  8408     1FD0  00D1               	movwf	___fladd@a+1
  8409     1FD1  0860               	movf	___flsub@a,w
  8410     1FD2  00D0               	movwf	___fladd@a
  8411     1FD3  318B  23B9  319F   	fcall	___fladd
  8412     1FD6  0020               	movlb	0	; select bank0
  8413     1FD7  084F               	movf	?___fladd+3,w
  8414     1FD8  00E3               	movwf	?___flsub+3
  8415     1FD9  084E               	movf	?___fladd+2,w
  8416     1FDA  00E2               	movwf	?___flsub+2
  8417     1FDB  084D               	movf	?___fladd+1,w
  8418     1FDC  00E1               	movwf	?___flsub+1
  8419     1FDD  084C               	movf	?___fladd,w
  8420     1FDE  00E0               	movwf	?___flsub
  8421     1FDF                     l1047:
  8422     1FDF  0008               	return
  8423     1FE0                     __end_of___flsub:
  8424                           
  8425                           	psect	text20
  8426     0BB9                     __ptext20:	
  8427 ;; *************** function ___fladd *****************
  8428 ;; Defined at:
  8429 ;;		line 10 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  b               4   44[BANK0 ] long 
  8432 ;;  a               4   48[BANK0 ] long 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  grs             1   63[BANK0 ] unsigned char 
  8435 ;;  bexp            1   62[BANK0 ] unsigned char 
  8436 ;;  aexp            1   61[BANK0 ] unsigned char 
  8437 ;;  signs           1   60[BANK0 ] unsigned char 
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  4   44[BANK0 ] unsigned char 
  8440 ;; Registers used:
  8441 ;;		wreg, status,2, status,0
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8447 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8450 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;Total ram usage:       20 bytes
  8452 ;; Hardware stack levels used: 1
  8453 ;; Hardware stack levels required when called: 4
  8454 ;; This function calls:
  8455 ;;		Nothing
  8456 ;; This function is called by:
  8457 ;;		_main
  8458 ;;		___flsub
  8459 ;;		_efgtoa
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463     0BB9                     ___fladd:	
  8464                           ;psect for function ___fladd
  8465                           
  8466     0BB9                     l4500:	
  8467                           ;incstack = 0
  8468                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8469                           
  8470     0BB9  0020               	movlb	0	; select bank0
  8471     0BBA  084F               	movf	___fladd@b+3,w
  8472     0BBB  3980               	andlw	128
  8473     0BBC  00DC               	movwf	___fladd@signs
  8474     0BBD                     l4502:
  8475     0BBD  354F               	lslf	___fladd@b+3,w
  8476     0BBE  00DE               	movwf	___fladd@bexp
  8477     0BBF                     l4504:
  8478     0BBF  1FCE               	btfss	___fladd@b+2,7
  8479     0BC0  2BC2               	goto	u5831
  8480     0BC1  2BC3               	goto	u5830
  8481     0BC2                     u5831:
  8482     0BC2  2BC4               	goto	l4508
  8483     0BC3                     u5830:
  8484     0BC3                     l4506:
  8485     0BC3  145E               	bsf	___fladd@bexp,0
  8486     0BC4                     l4508:
  8487     0BC4  085E               	movf	___fladd@bexp,w
  8488     0BC5  1903               	btfsc	3,2
  8489     0BC6  2BC8               	goto	u5841
  8490     0BC7  2BC9               	goto	u5840
  8491     0BC8                     u5841:
  8492     0BC8  2BD9               	goto	l4518
  8493     0BC9                     u5840:
  8494     0BC9                     l4510:
  8495     0BC9  0A5E               	incf	___fladd@bexp,w
  8496     0BCA  1D03               	btfss	3,2
  8497     0BCB  2BCD               	goto	u5851
  8498     0BCC  2BCE               	goto	u5850
  8499     0BCD                     u5851:
  8500     0BCD  2BD6               	goto	l4514
  8501     0BCE                     u5850:
  8502     0BCE                     l4512:
  8503     0BCE  3000               	movlw	0
  8504     0BCF  00CF               	movwf	___fladd@b+3
  8505     0BD0  3000               	movlw	0
  8506     0BD1  00CE               	movwf	___fladd@b+2
  8507     0BD2  3000               	movlw	0
  8508     0BD3  00CD               	movwf	___fladd@b+1
  8509     0BD4  3000               	movlw	0
  8510     0BD5  00CC               	movwf	___fladd@b
  8511     0BD6                     l4514:
  8512     0BD6  17CE               	bsf	___fladd@b+2,7
  8513     0BD7                     l4516:
  8514     0BD7  01CF               	clrf	___fladd@b+3
  8515     0BD8  2BE1               	goto	l4520
  8516     0BD9                     l4518:
  8517     0BD9  3000               	movlw	0
  8518     0BDA  00CF               	movwf	___fladd@b+3
  8519     0BDB  3000               	movlw	0
  8520     0BDC  00CE               	movwf	___fladd@b+2
  8521     0BDD  3000               	movlw	0
  8522     0BDE  00CD               	movwf	___fladd@b+1
  8523     0BDF  3000               	movlw	0
  8524     0BE0  00CC               	movwf	___fladd@b
  8525     0BE1                     l4520:
  8526     0BE1  0853               	movf	___fladd@a+3,w
  8527     0BE2  3980               	andlw	128
  8528     0BE3  00DD               	movwf	___fladd@aexp
  8529     0BE4                     l4522:
  8530     0BE4  085D               	movf	___fladd@aexp,w
  8531     0BE5  065C               	xorwf	___fladd@signs,w
  8532     0BE6  1903               	skipnz
  8533     0BE7  2BE9               	goto	u5861
  8534     0BE8  2BEA               	goto	u5860
  8535     0BE9                     u5861:
  8536     0BE9  2BEB               	goto	l4526
  8537     0BEA                     u5860:
  8538     0BEA                     l4524:
  8539     0BEA  175C               	bsf	___fladd@signs,6
  8540     0BEB                     l4526:
  8541     0BEB  3553               	lslf	___fladd@a+3,w
  8542     0BEC  00DD               	movwf	___fladd@aexp
  8543     0BED                     l4528:
  8544     0BED  1FD2               	btfss	___fladd@a+2,7
  8545     0BEE  2BF0               	goto	u5871
  8546     0BEF  2BF1               	goto	u5870
  8547     0BF0                     u5871:
  8548     0BF0  2BF2               	goto	l4532
  8549     0BF1                     u5870:
  8550     0BF1                     l4530:
  8551     0BF1  145D               	bsf	___fladd@aexp,0
  8552     0BF2                     l4532:
  8553     0BF2  085D               	movf	___fladd@aexp,w
  8554     0BF3  1903               	btfsc	3,2
  8555     0BF4  2BF6               	goto	u5881
  8556     0BF5  2BF7               	goto	u5880
  8557     0BF6                     u5881:
  8558     0BF6  2C07               	goto	l4542
  8559     0BF7                     u5880:
  8560     0BF7                     l4534:
  8561     0BF7  0A5D               	incf	___fladd@aexp,w
  8562     0BF8  1D03               	btfss	3,2
  8563     0BF9  2BFB               	goto	u5891
  8564     0BFA  2BFC               	goto	u5890
  8565     0BFB                     u5891:
  8566     0BFB  2C04               	goto	l4538
  8567     0BFC                     u5890:
  8568     0BFC                     l4536:
  8569     0BFC  3000               	movlw	0
  8570     0BFD  00D3               	movwf	___fladd@a+3
  8571     0BFE  3000               	movlw	0
  8572     0BFF  00D2               	movwf	___fladd@a+2
  8573     0C00  3000               	movlw	0
  8574     0C01  00D1               	movwf	___fladd@a+1
  8575     0C02  3000               	movlw	0
  8576     0C03  00D0               	movwf	___fladd@a
  8577     0C04                     l4538:
  8578     0C04  17D2               	bsf	___fladd@a+2,7
  8579     0C05                     l4540:
  8580     0C05  01D3               	clrf	___fladd@a+3
  8581     0C06  2C0F               	goto	l1001
  8582     0C07                     l4542:
  8583     0C07  3000               	movlw	0
  8584     0C08  00D3               	movwf	___fladd@a+3
  8585     0C09  3000               	movlw	0
  8586     0C0A  00D2               	movwf	___fladd@a+2
  8587     0C0B  3000               	movlw	0
  8588     0C0C  00D1               	movwf	___fladd@a+1
  8589     0C0D  3000               	movlw	0
  8590     0C0E  00D0               	movwf	___fladd@a
  8591     0C0F                     l1001:
  8592     0C0F  085E               	movf	___fladd@bexp,w
  8593     0C10  025D               	subwf	___fladd@aexp,w
  8594     0C11  1803               	skipnc
  8595     0C12  2C14               	goto	u5901
  8596     0C13  2C15               	goto	u5900
  8597     0C14                     u5901:
  8598     0C14  2C39               	goto	l4578
  8599     0C15                     u5900:
  8600     0C15                     l4544:
  8601     0C15  1F5C               	btfss	___fladd@signs,6
  8602     0C16  2C18               	goto	u5911
  8603     0C17  2C19               	goto	u5910
  8604     0C18                     u5911:
  8605     0C18  2C1B               	goto	l4548
  8606     0C19                     u5910:
  8607     0C19                     l4546:
  8608     0C19  3080               	movlw	128
  8609     0C1A  06DC               	xorwf	___fladd@signs,f
  8610     0C1B                     l4548:
  8611     0C1B  085E               	movf	___fladd@bexp,w
  8612     0C1C  00DF               	movwf	___fladd@grs
  8613     0C1D                     l4550:
  8614     0C1D  085D               	movf	___fladd@aexp,w
  8615     0C1E  00DE               	movwf	___fladd@bexp
  8616     0C1F                     l4552:
  8617     0C1F  085F               	movf	___fladd@grs,w
  8618     0C20  00DD               	movwf	___fladd@aexp
  8619     0C21                     l4554:
  8620     0C21  084C               	movf	___fladd@b,w
  8621     0C22  00DF               	movwf	___fladd@grs
  8622     0C23                     l4556:
  8623     0C23  0850               	movf	___fladd@a,w
  8624     0C24  00CC               	movwf	___fladd@b
  8625     0C25                     l4558:
  8626     0C25  085F               	movf	___fladd@grs,w
  8627     0C26  00D0               	movwf	___fladd@a
  8628     0C27                     l4560:
  8629     0C27  084D               	movf	___fladd@b+1,w
  8630     0C28  00DF               	movwf	___fladd@grs
  8631     0C29                     l4562:
  8632     0C29  0851               	movf	___fladd@a+1,w
  8633     0C2A  00CD               	movwf	___fladd@b+1
  8634     0C2B                     l4564:
  8635     0C2B  085F               	movf	___fladd@grs,w
  8636     0C2C  00D1               	movwf	___fladd@a+1
  8637     0C2D                     l4566:
  8638     0C2D  084E               	movf	___fladd@b+2,w
  8639     0C2E  00DF               	movwf	___fladd@grs
  8640     0C2F                     l4568:
  8641     0C2F  0852               	movf	___fladd@a+2,w
  8642     0C30  00CE               	movwf	___fladd@b+2
  8643     0C31                     l4570:
  8644     0C31  085F               	movf	___fladd@grs,w
  8645     0C32  00D2               	movwf	___fladd@a+2
  8646     0C33                     l4572:
  8647     0C33  084F               	movf	___fladd@b+3,w
  8648     0C34  00DF               	movwf	___fladd@grs
  8649     0C35                     l4574:
  8650     0C35  0853               	movf	___fladd@a+3,w
  8651     0C36  00CF               	movwf	___fladd@b+3
  8652     0C37                     l4576:
  8653     0C37  085F               	movf	___fladd@grs,w
  8654     0C38  00D3               	movwf	___fladd@a+3
  8655     0C39                     l4578:
  8656     0C39  01DF               	clrf	___fladd@grs
  8657     0C3A                     l4580:
  8658     0C3A  085D               	movf	___fladd@aexp,w
  8659     0C3B  00D4               	movwf	??___fladd
  8660     0C3C  01D5               	clrf	??___fladd+1
  8661     0C3D  0855               	movf	??___fladd+1,w
  8662     0C3E  00D7               	movwf	??___fladd+3
  8663     0C3F  085E               	movf	___fladd@bexp,w
  8664     0C40  0254               	subwf	??___fladd,w
  8665     0C41  00D6               	movwf	??___fladd+2
  8666     0C42  1C03               	skipc
  8667     0C43  03D7               	decf	??___fladd+3,f
  8668     0C44  0857               	movf	??___fladd+3,w
  8669     0C45  3A80               	xorlw	128
  8670     0C46  00D8               	movwf	??___fladd+4
  8671     0C47  3080               	movlw	128
  8672     0C48  0258               	subwf	??___fladd+4,w
  8673     0C49  1D03               	skipz
  8674     0C4A  2C4D               	goto	u5925
  8675     0C4B  301A               	movlw	26
  8676     0C4C  0256               	subwf	??___fladd+2,w
  8677     0C4D                     u5925:
  8678     0C4D  1C03               	skipc
  8679     0C4E  2C50               	goto	u5921
  8680     0C4F  2C51               	goto	u5920
  8681     0C50                     u5921:
  8682     0C50  2C87               	goto	l4596
  8683     0C51                     u5920:
  8684     0C51                     l4582:
  8685     0C51  0020               	movlb	0	; select bank0
  8686     0C52  084F               	movf	___fladd@b+3,w
  8687     0C53  044E               	iorwf	___fladd@b+2,w
  8688     0C54  044D               	iorwf	___fladd@b+1,w
  8689     0C55  044C               	iorwf	___fladd@b,w
  8690     0C56  1D03               	skipz
  8691     0C57  2C59               	goto	u5931
  8692     0C58  2C5B               	goto	u5930
  8693     0C59                     u5931:
  8694     0C59  3001               	movlw	1
  8695     0C5A  2C5C               	goto	u5940
  8696     0C5B                     u5930:
  8697     0C5B  3000               	movlw	0
  8698     0C5C                     u5940:
  8699     0C5C  00DF               	movwf	___fladd@grs
  8700     0C5D  3000               	movlw	0
  8701     0C5E  00CF               	movwf	___fladd@b+3
  8702     0C5F  3000               	movlw	0
  8703     0C60  00CE               	movwf	___fladd@b+2
  8704     0C61  3000               	movlw	0
  8705     0C62  00CD               	movwf	___fladd@b+1
  8706     0C63  3000               	movlw	0
  8707     0C64  00CC               	movwf	___fladd@b
  8708     0C65  085D               	movf	___fladd@aexp,w
  8709     0C66  00DE               	movwf	___fladd@bexp
  8710     0C67  2C8E               	goto	l1005
  8711     0C68                     l1007:
  8712     0C68  1C5F               	btfss	___fladd@grs,0
  8713     0C69  2C6B               	goto	u5951
  8714     0C6A  2C6C               	goto	u5950
  8715     0C6B                     u5951:
  8716     0C6B  2C76               	goto	l4586
  8717     0C6C                     u5950:
  8718     0C6C                     l4584:
  8719     0C6C  085F               	movf	___fladd@grs,w
  8720     0C6D  00D4               	movwf	??___fladd
  8721     0C6E  3001               	movlw	1
  8722     0C6F                     u5965:
  8723     0C6F  36D4               	lsrf	??___fladd,f
  8724     0C70  0B89               	decfsz	9,f
  8725     0C71  2C6F               	goto	u5965
  8726     0C72  0854               	movf	??___fladd,w
  8727     0C73  3801               	iorlw	1
  8728     0C74  00DF               	movwf	___fladd@grs
  8729     0C75  2C78               	goto	l4588
  8730     0C76                     l4586:
  8731     0C76  1003               	clrc
  8732     0C77  0CDF               	rrf	___fladd@grs,f
  8733     0C78                     l4588:
  8734     0C78  1C4C               	btfss	___fladd@b,0
  8735     0C79  2C7B               	goto	u5971
  8736     0C7A  2C7C               	goto	u5970
  8737     0C7B                     u5971:
  8738     0C7B  2C7D               	goto	l4592
  8739     0C7C                     u5970:
  8740     0C7C                     l4590:
  8741     0C7C  17DF               	bsf	___fladd@grs,7
  8742     0C7D                     l4592:
  8743     0C7D  3001               	movlw	1
  8744     0C7E  00D4               	movwf	??___fladd
  8745     0C7F                     u5985:
  8746     0C7F  37CF               	asrf	___fladd@b+3,f
  8747     0C80  0CCE               	rrf	___fladd@b+2,f
  8748     0C81  0CCD               	rrf	___fladd@b+1,f
  8749     0C82  0CCC               	rrf	___fladd@b,f
  8750     0C83  0BD4               	decfsz	??___fladd& (0+127),f
  8751     0C84  2C7F               	goto	u5985
  8752     0C85                     l4594:
  8753     0C85  3001               	movlw	1
  8754     0C86  07DE               	addwf	___fladd@bexp,f
  8755     0C87                     l4596:
  8756     0C87  0020               	movlb	0	; select bank0
  8757     0C88  085D               	movf	___fladd@aexp,w
  8758     0C89  025E               	subwf	___fladd@bexp,w
  8759     0C8A  1C03               	skipc
  8760     0C8B  2C8D               	goto	u5991
  8761     0C8C  2C8E               	goto	u5990
  8762     0C8D                     u5991:
  8763     0C8D  2C68               	goto	l1007
  8764     0C8E                     u5990:
  8765     0C8E                     l1005:
  8766     0C8E  1B5C               	btfsc	___fladd@signs,6
  8767     0C8F  2C91               	goto	u6001
  8768     0C90  2C92               	goto	u6000
  8769     0C91                     u6001:
  8770     0C91  2CCC               	goto	l4622
  8771     0C92                     u6000:
  8772     0C92                     l4598:
  8773     0C92  085E               	movf	___fladd@bexp,w
  8774     0C93  1D03               	btfss	3,2
  8775     0C94  2C96               	goto	u6011
  8776     0C95  2C97               	goto	u6010
  8777     0C96                     u6011:
  8778     0C96  2CA0               	goto	l4604
  8779     0C97                     u6010:
  8780     0C97                     l4600:
  8781     0C97  3000               	movlw	0
  8782     0C98  00CF               	movwf	?___fladd+3
  8783     0C99  3000               	movlw	0
  8784     0C9A  00CE               	movwf	?___fladd+2
  8785     0C9B  3000               	movlw	0
  8786     0C9C  00CD               	movwf	?___fladd+1
  8787     0C9D  3000               	movlw	0
  8788     0C9E  00CC               	movwf	?___fladd
  8789     0C9F  2DC4               	goto	l1014
  8790     0CA0                     l4604:
  8791     0CA0  0850               	movf	___fladd@a,w
  8792     0CA1  07CC               	addwf	___fladd@b,f
  8793     0CA2  0851               	movf	___fladd@a+1,w
  8794     0CA3  3DCD               	addwfc	___fladd@b+1,f
  8795     0CA4  0852               	movf	___fladd@a+2,w
  8796     0CA5  3DCE               	addwfc	___fladd@b+2,f
  8797     0CA6  0853               	movf	___fladd@a+3,w
  8798     0CA7  3DCF               	addwfc	___fladd@b+3,f
  8799     0CA8                     l4606:
  8800     0CA8  1C4F               	btfss	___fladd@b+3,0
  8801     0CA9  2CAB               	goto	u6021
  8802     0CAA  2CAC               	goto	u6020
  8803     0CAB                     u6021:
  8804     0CAB  2D56               	goto	l4658
  8805     0CAC                     u6020:
  8806     0CAC                     l4608:
  8807     0CAC  1C5F               	btfss	___fladd@grs,0
  8808     0CAD  2CAF               	goto	u6031
  8809     0CAE  2CB0               	goto	u6030
  8810     0CAF                     u6031:
  8811     0CAF  2CBA               	goto	l4612
  8812     0CB0                     u6030:
  8813     0CB0                     l4610:
  8814     0CB0  085F               	movf	___fladd@grs,w
  8815     0CB1  00D4               	movwf	??___fladd
  8816     0CB2  3001               	movlw	1
  8817     0CB3                     u6045:
  8818     0CB3  36D4               	lsrf	??___fladd,f
  8819     0CB4  0B89               	decfsz	9,f
  8820     0CB5  2CB3               	goto	u6045
  8821     0CB6  0854               	movf	??___fladd,w
  8822     0CB7  3801               	iorlw	1
  8823     0CB8  00DF               	movwf	___fladd@grs
  8824     0CB9  2CBC               	goto	l4614
  8825     0CBA                     l4612:
  8826     0CBA  1003               	clrc
  8827     0CBB  0CDF               	rrf	___fladd@grs,f
  8828     0CBC                     l4614:
  8829     0CBC  1C4C               	btfss	___fladd@b,0
  8830     0CBD  2CBF               	goto	u6051
  8831     0CBE  2CC0               	goto	u6050
  8832     0CBF                     u6051:
  8833     0CBF  2CC1               	goto	l4618
  8834     0CC0                     u6050:
  8835     0CC0                     l4616:
  8836     0CC0  17DF               	bsf	___fladd@grs,7
  8837     0CC1                     l4618:
  8838     0CC1  3001               	movlw	1
  8839     0CC2  00D4               	movwf	??___fladd
  8840     0CC3                     u6065:
  8841     0CC3  37CF               	asrf	___fladd@b+3,f
  8842     0CC4  0CCE               	rrf	___fladd@b+2,f
  8843     0CC5  0CCD               	rrf	___fladd@b+1,f
  8844     0CC6  0CCC               	rrf	___fladd@b,f
  8845     0CC7  0BD4               	decfsz	??___fladd& (0+127),f
  8846     0CC8  2CC3               	goto	u6065
  8847     0CC9                     l4620:
  8848     0CC9  3001               	movlw	1
  8849     0CCA  07DE               	addwf	___fladd@bexp,f
  8850     0CCB  2D56               	goto	l4658
  8851     0CCC                     l4622:
  8852     0CCC  084F               	movf	___fladd@b+3,w
  8853     0CCD  3A80               	xorlw	128
  8854     0CCE  00D4               	movwf	??___fladd
  8855     0CCF  0853               	movf	___fladd@a+3,w
  8856     0CD0  3A80               	xorlw	128
  8857     0CD1  0254               	subwf	??___fladd,w
  8858     0CD2  1D03               	skipz
  8859     0CD3  2CDE               	goto	u6073
  8860     0CD4  0852               	movf	___fladd@a+2,w
  8861     0CD5  024E               	subwf	___fladd@b+2,w
  8862     0CD6  1D03               	skipz
  8863     0CD7  2CDE               	goto	u6073
  8864     0CD8  0851               	movf	___fladd@a+1,w
  8865     0CD9  024D               	subwf	___fladd@b+1,w
  8866     0CDA  1D03               	skipz
  8867     0CDB  2CDE               	goto	u6073
  8868     0CDC  0850               	movf	___fladd@a,w
  8869     0CDD  024C               	subwf	___fladd@b,w
  8870     0CDE                     u6073:
  8871     0CDE  1803               	skipnc
  8872     0CDF  2CE1               	goto	u6071
  8873     0CE0  2CE2               	goto	u6070
  8874     0CE1                     u6071:
  8875     0CE1  2D17               	goto	l4634
  8876     0CE2                     u6070:
  8877     0CE2                     l4624:
  8878     0CE2  30FF               	movlw	255
  8879     0CE3  00D4               	movwf	??___fladd
  8880     0CE4  30FF               	movlw	255
  8881     0CE5  00D5               	movwf	??___fladd+1
  8882     0CE6  30FF               	movlw	255
  8883     0CE7  00D6               	movwf	??___fladd+2
  8884     0CE8  30FF               	movlw	255
  8885     0CE9  00D7               	movwf	??___fladd+3
  8886     0CEA  084C               	movf	___fladd@b,w
  8887     0CEB  0250               	subwf	___fladd@a,w
  8888     0CEC  00D8               	movwf	??___fladd+4
  8889     0CED  084D               	movf	___fladd@b+1,w
  8890     0CEE  3B51               	subwfb	___fladd@a+1,w
  8891     0CEF  00D9               	movwf	??___fladd+5
  8892     0CF0  084E               	movf	___fladd@b+2,w
  8893     0CF1  3B52               	subwfb	___fladd@a+2,w
  8894     0CF2  00DA               	movwf	??___fladd+6
  8895     0CF3  084F               	movf	___fladd@b+3,w
  8896     0CF4  3B53               	subwfb	___fladd@a+3,w
  8897     0CF5  00DB               	movwf	??___fladd+7
  8898     0CF6  0858               	movf	??___fladd+4,w
  8899     0CF7  07D4               	addwf	??___fladd,f
  8900     0CF8  0859               	movf	??___fladd+5,w
  8901     0CF9  3DD5               	addwfc	??___fladd+1,f
  8902     0CFA  085A               	movf	??___fladd+6,w
  8903     0CFB  3DD6               	addwfc	??___fladd+2,f
  8904     0CFC  085B               	movf	??___fladd+7,w
  8905     0CFD  3DD7               	addwfc	??___fladd+3,f
  8906     0CFE  0857               	movf	??___fladd+3,w
  8907     0CFF  00CF               	movwf	___fladd@b+3
  8908     0D00  0856               	movf	??___fladd+2,w
  8909     0D01  00CE               	movwf	___fladd@b+2
  8910     0D02  0855               	movf	??___fladd+1,w
  8911     0D03  00CD               	movwf	___fladd@b+1
  8912     0D04  0854               	movf	??___fladd,w
  8913     0D05  00CC               	movwf	___fladd@b
  8914     0D06                     l4626:
  8915     0D06  3080               	movlw	128
  8916     0D07  06DC               	xorwf	___fladd@signs,f
  8917     0D08                     l4628:
  8918     0D08  035F               	decf	___fladd@grs,w
  8919     0D09  3AFF               	xorlw	255
  8920     0D0A  00DF               	movwf	___fladd@grs
  8921     0D0B                     l4630:
  8922     0D0B  085F               	movf	___fladd@grs,w
  8923     0D0C  1D03               	btfss	3,2
  8924     0D0D  2D0F               	goto	u6081
  8925     0D0E  2D10               	goto	u6080
  8926     0D0F                     u6081:
  8927     0D0F  2D1F               	goto	l1022
  8928     0D10                     u6080:
  8929     0D10                     l4632:
  8930     0D10  3001               	movlw	1
  8931     0D11  07CC               	addwf	___fladd@b,f
  8932     0D12  3000               	movlw	0
  8933     0D13  3DCD               	addwfc	___fladd@b+1,f
  8934     0D14  3DCE               	addwfc	___fladd@b+2,f
  8935     0D15  3DCF               	addwfc	___fladd@b+3,f
  8936     0D16  2D1F               	goto	l1022
  8937     0D17                     l4634:
  8938     0D17  0850               	movf	___fladd@a,w
  8939     0D18  02CC               	subwf	___fladd@b,f
  8940     0D19  0851               	movf	___fladd@a+1,w
  8941     0D1A  3BCD               	subwfb	___fladd@b+1,f
  8942     0D1B  0852               	movf	___fladd@a+2,w
  8943     0D1C  3BCE               	subwfb	___fladd@b+2,f
  8944     0D1D  0853               	movf	___fladd@a+3,w
  8945     0D1E  3BCF               	subwfb	___fladd@b+3,f
  8946     0D1F                     l1022:
  8947     0D1F  084F               	movf	___fladd@b+3,w
  8948     0D20  044E               	iorwf	___fladd@b+2,w
  8949     0D21  044D               	iorwf	___fladd@b+1,w
  8950     0D22  044C               	iorwf	___fladd@b,w
  8951     0D23  1D03               	skipz
  8952     0D24  2D26               	goto	u6091
  8953     0D25  2D27               	goto	u6090
  8954     0D26                     u6091:
  8955     0D26  2D52               	goto	l4656
  8956     0D27                     u6090:
  8957     0D27                     l4636:
  8958     0D27  085F               	movf	___fladd@grs,w
  8959     0D28  1D03               	btfss	3,2
  8960     0D29  2D2B               	goto	u6101
  8961     0D2A  2D2C               	goto	u6100
  8962     0D2B                     u6101:
  8963     0D2B  2D52               	goto	l4656
  8964     0D2C                     u6100:
  8965     0D2C                     l4638:
  8966     0D2C  3000               	movlw	0
  8967     0D2D  00CF               	movwf	?___fladd+3
  8968     0D2E  3000               	movlw	0
  8969     0D2F  00CE               	movwf	?___fladd+2
  8970     0D30  3000               	movlw	0
  8971     0D31  00CD               	movwf	?___fladd+1
  8972     0D32  3000               	movlw	0
  8973     0D33  00CC               	movwf	?___fladd
  8974     0D34  2DC4               	goto	l1014
  8975     0D35                     l4642:
  8976     0D35  3001               	movlw	1
  8977     0D36                     u6115:
  8978     0D36  35CC               	lslf	___fladd@b,f
  8979     0D37  0DCD               	rlf	___fladd@b+1,f
  8980     0D38  0DCE               	rlf	___fladd@b+2,f
  8981     0D39  0DCF               	rlf	___fladd@b+3,f
  8982     0D3A  0B89               	decfsz	9,f
  8983     0D3B  2D36               	goto	u6115
  8984     0D3C                     l4644:
  8985     0D3C  1FDF               	btfss	___fladd@grs,7
  8986     0D3D  2D3F               	goto	u6121
  8987     0D3E  2D40               	goto	u6120
  8988     0D3F                     u6121:
  8989     0D3F  2D41               	goto	l1026
  8990     0D40                     u6120:
  8991     0D40                     l4646:
  8992     0D40  144C               	bsf	___fladd@b,0
  8993     0D41                     l1026:
  8994     0D41  1C5F               	btfss	___fladd@grs,0
  8995     0D42  2D44               	goto	u6131
  8996     0D43  2D45               	goto	u6130
  8997     0D44                     u6131:
  8998     0D44  2D49               	goto	l4650
  8999     0D45                     u6130:
  9000     0D45                     l4648:
  9001     0D45  1403               	setc
  9002     0D46  0D5F               	rlf	___fladd@grs,w
  9003     0D47  00DF               	movwf	___fladd@grs
  9004     0D48  2D4B               	goto	l4652
  9005     0D49                     l4650:
  9006     0D49  1003               	clrc
  9007     0D4A  0DDF               	rlf	___fladd@grs,f
  9008     0D4B                     l4652:
  9009     0D4B  085E               	movf	___fladd@bexp,w
  9010     0D4C  1903               	btfsc	3,2
  9011     0D4D  2D4F               	goto	u6141
  9012     0D4E  2D50               	goto	u6140
  9013     0D4F                     u6141:
  9014     0D4F  2D52               	goto	l4656
  9015     0D50                     u6140:
  9016     0D50                     l4654:
  9017     0D50  3001               	movlw	1
  9018     0D51  02DE               	subwf	___fladd@bexp,f
  9019     0D52                     l4656:
  9020     0D52  1FCE               	btfss	___fladd@b+2,7
  9021     0D53  2D55               	goto	u6151
  9022     0D54  2D56               	goto	u6150
  9023     0D55                     u6151:
  9024     0D55  2D35               	goto	l4642
  9025     0D56                     u6150:
  9026     0D56                     l4658:
  9027     0D56  01DD               	clrf	___fladd@aexp
  9028     0D57                     l4660:
  9029     0D57  1FDF               	btfss	___fladd@grs,7
  9030     0D58  2D5A               	goto	u6161
  9031     0D59  2D5B               	goto	u6160
  9032     0D5A                     u6161:
  9033     0D5A  2D69               	goto	l4668
  9034     0D5B                     u6160:
  9035     0D5B                     l4662:
  9036     0D5B  085F               	movf	___fladd@grs,w
  9037     0D5C  397F               	andlw	127
  9038     0D5D  1903               	btfsc	3,2
  9039     0D5E  2D60               	goto	u6171
  9040     0D5F  2D61               	goto	u6170
  9041     0D60                     u6171:
  9042     0D60  2D64               	goto	l1032
  9043     0D61                     u6170:
  9044     0D61                     l4664:
  9045     0D61  3001               	movlw	1
  9046     0D62  00DD               	movwf	___fladd@aexp
  9047     0D63  2D69               	goto	l4668
  9048     0D64                     l1032:
  9049     0D64  1C4C               	btfss	___fladd@b,0
  9050     0D65  2D67               	goto	u6181
  9051     0D66  2D68               	goto	u6180
  9052     0D67                     u6181:
  9053     0D67  2D69               	goto	l4668
  9054     0D68                     u6180:
  9055     0D68  2D61               	goto	l4664
  9056     0D69                     l4668:
  9057     0D69  085D               	movf	___fladd@aexp,w
  9058     0D6A  1903               	btfsc	3,2
  9059     0D6B  2D6D               	goto	u6191
  9060     0D6C  2D6E               	goto	u6190
  9061     0D6D                     u6191:
  9062     0D6D  2D97               	goto	l1035
  9063     0D6E                     u6190:
  9064     0D6E                     l4670:
  9065     0D6E  3001               	movlw	1
  9066     0D6F  07CC               	addwf	___fladd@b,f
  9067     0D70  3000               	movlw	0
  9068     0D71  3DCD               	addwfc	___fladd@b+1,f
  9069     0D72  3DCE               	addwfc	___fladd@b+2,f
  9070     0D73  3DCF               	addwfc	___fladd@b+3,f
  9071     0D74                     l4672:
  9072     0D74  1C4F               	btfss	___fladd@b+3,0
  9073     0D75  2D77               	goto	u6201
  9074     0D76  2D78               	goto	u6200
  9075     0D77                     u6201:
  9076     0D77  2D97               	goto	l1035
  9077     0D78                     u6200:
  9078     0D78                     l4674:
  9079     0D78  084C               	movf	___fladd@b,w
  9080     0D79  00D4               	movwf	??___fladd
  9081     0D7A  084D               	movf	___fladd@b+1,w
  9082     0D7B  00D5               	movwf	??___fladd+1
  9083     0D7C  084E               	movf	___fladd@b+2,w
  9084     0D7D  00D6               	movwf	??___fladd+2
  9085     0D7E  084F               	movf	___fladd@b+3,w
  9086     0D7F  00D7               	movwf	??___fladd+3
  9087     0D80  3001               	movlw	1
  9088     0D81  00D8               	movwf	??___fladd+4
  9089     0D82                     u6215:
  9090     0D82  37D7               	asrf	??___fladd+3,f
  9091     0D83  0CD6               	rrf	??___fladd+2,f
  9092     0D84  0CD5               	rrf	??___fladd+1,f
  9093     0D85  0CD4               	rrf	??___fladd,f
  9094     0D86                     u6210:
  9095     0D86  0BD8               	decfsz	??___fladd+4,f
  9096     0D87  2D82               	goto	u6215
  9097     0D88  0857               	movf	??___fladd+3,w
  9098     0D89  00CF               	movwf	___fladd@b+3
  9099     0D8A  0856               	movf	??___fladd+2,w
  9100     0D8B  00CE               	movwf	___fladd@b+2
  9101     0D8C  0855               	movf	??___fladd+1,w
  9102     0D8D  00CD               	movwf	___fladd@b+1
  9103     0D8E  0854               	movf	??___fladd,w
  9104     0D8F  00CC               	movwf	___fladd@b
  9105     0D90  0A5E               	incf	___fladd@bexp,w
  9106     0D91  1903               	btfsc	3,2
  9107     0D92  2D94               	goto	u6221
  9108     0D93  2D95               	goto	u6220
  9109     0D94                     u6221:
  9110     0D94  2D97               	goto	l1035
  9111     0D95                     u6220:
  9112     0D95                     l4676:
  9113     0D95  3001               	movlw	1
  9114     0D96  07DE               	addwf	___fladd@bexp,f
  9115     0D97                     l1035:
  9116     0D97  0A5E               	incf	___fladd@bexp,w
  9117     0D98  1903               	btfsc	3,2
  9118     0D99  2D9B               	goto	u6231
  9119     0D9A  2D9C               	goto	u6230
  9120     0D9B                     u6231:
  9121     0D9B  2DA1               	goto	l4680
  9122     0D9C                     u6230:
  9123     0D9C                     l4678:
  9124     0D9C  085E               	movf	___fladd@bexp,w
  9125     0D9D  1D03               	btfss	3,2
  9126     0D9E  2DA0               	goto	u6241
  9127     0D9F  2DA1               	goto	u6240
  9128     0DA0                     u6241:
  9129     0DA0  2DAF               	goto	l4686
  9130     0DA1                     u6240:
  9131     0DA1                     l4680:
  9132     0DA1  3000               	movlw	0
  9133     0DA2  00CF               	movwf	___fladd@b+3
  9134     0DA3  3000               	movlw	0
  9135     0DA4  00CE               	movwf	___fladd@b+2
  9136     0DA5  3000               	movlw	0
  9137     0DA6  00CD               	movwf	___fladd@b+1
  9138     0DA7  3000               	movlw	0
  9139     0DA8  00CC               	movwf	___fladd@b
  9140     0DA9                     l4682:
  9141     0DA9  085E               	movf	___fladd@bexp,w
  9142     0DAA  1D03               	btfss	3,2
  9143     0DAB  2DAD               	goto	u6251
  9144     0DAC  2DAE               	goto	u6250
  9145     0DAD                     u6251:
  9146     0DAD  2DAF               	goto	l4686
  9147     0DAE                     u6250:
  9148     0DAE                     l4684:
  9149     0DAE  01DC               	clrf	___fladd@signs
  9150     0DAF                     l4686:
  9151     0DAF  1C5E               	btfss	___fladd@bexp,0
  9152     0DB0  2DB2               	goto	u6261
  9153     0DB1  2DB3               	goto	u6260
  9154     0DB2                     u6261:
  9155     0DB2  2DB5               	goto	l4690
  9156     0DB3                     u6260:
  9157     0DB3                     l4688:
  9158     0DB3  17CE               	bsf	___fladd@b+2,7
  9159     0DB4  2DB7               	goto	l1043
  9160     0DB5                     l4690:
  9161     0DB5  307F               	movlw	127
  9162     0DB6  05CE               	andwf	___fladd@b+2,f
  9163     0DB7                     l1043:
  9164     0DB7  085E               	movf	___fladd@bexp,w
  9165     0DB8  00D4               	movwf	??___fladd
  9166     0DB9  3001               	movlw	1
  9167     0DBA                     u6275:
  9168     0DBA  36D4               	lsrf	??___fladd,f
  9169     0DBB  0B89               	decfsz	9,f
  9170     0DBC  2DBA               	goto	u6275
  9171     0DBD  0854               	movf	??___fladd,w
  9172     0DBE  00CF               	movwf	___fladd@b+3
  9173     0DBF                     l4692:
  9174     0DBF  1FDC               	btfss	___fladd@signs,7
  9175     0DC0  2DC2               	goto	u6281
  9176     0DC1  2DC3               	goto	u6280
  9177     0DC2                     u6281:
  9178     0DC2  2DC4               	goto	l1044
  9179     0DC3                     u6280:
  9180     0DC3                     l4694:
  9181     0DC3  17CF               	bsf	___fladd@b+3,7
  9182     0DC4                     l1044:
  9183     0DC4                     l1014:
  9184     0DC4  0008               	return
  9185     0DC5                     __end_of___fladd:
  9186                           
  9187                           	psect	text21
  9188     1E37                     __ptext21:	
  9189 ;; *************** function ___flneg *****************
  9190 ;; Defined at:
  9191 ;;		line 15 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/flneg.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  f1              4    0[BANK0 ] unsigned char 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  4    0[BANK0 ] unsigned char 
  9198 ;; Registers used:
  9199 ;;		wreg
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;Total ram usage:        4 bytes
  9210 ;; Hardware stack levels used: 1
  9211 ;; Hardware stack levels required when called: 4
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_efgtoa
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219     1E37                     ___flneg:	
  9220                           ;psect for function ___flneg
  9221                           
  9222     1E37                     l4764:	
  9223                           ;incstack = 0
  9224                           ; Regs used in ___flneg: [wreg]
  9225                           
  9226     1E37  0020               	movlb	0	; select bank0
  9227     1E38  0823               	movf	___flneg@f1+3,w
  9228     1E39  0422               	iorwf	___flneg@f1+2,w
  9229     1E3A  0421               	iorwf	___flneg@f1+1,w
  9230     1E3B  0420               	iorwf	___flneg@f1,w
  9231     1E3C  1903               	skipnz
  9232     1E3D  2E3F               	goto	u6451
  9233     1E3E  2E40               	goto	u6450
  9234     1E3F                     u6451:
  9235     1E3F  2E42               	goto	l4768
  9236     1E40                     u6450:
  9237     1E40                     l4766:
  9238     1E40  3080               	movlw	128
  9239     1E41  06A3               	xorwf	___flneg@f1+3,f
  9240     1E42                     l4768:
  9241     1E42                     l890:
  9242     1E42  0008               	return
  9243     1E43                     __end_of___flneg:
  9244                           
  9245                           	psect	text22
  9246     0DC5                     __ptext22:	
  9247 ;; *************** function ___flmul *****************
  9248 ;; Defined at:
  9249 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  b               4   18[BANK0 ] unsigned char 
  9252 ;;  a               4   22[BANK0 ] unsigned char 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  prod            4   38[BANK0 ] struct .
  9255 ;;  grs             4   33[BANK0 ] unsigned long 
  9256 ;;  temp            2   42[BANK0 ] struct .
  9257 ;;  bexp            1   37[BANK0 ] unsigned char 
  9258 ;;  aexp            1   32[BANK0 ] unsigned char 
  9259 ;;  sign            1   31[BANK0 ] unsigned char 
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  4   18[BANK0 ] unsigned char 
  9262 ;; Registers used:
  9263 ;;		wreg, status,2, status,0, pclath, cstack
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9269 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;Total ram usage:       26 bytes
  9274 ;; Hardware stack levels used: 1
  9275 ;; Hardware stack levels required when called: 5
  9276 ;; This function calls:
  9277 ;;		__Umul8_16
  9278 ;; This function is called by:
  9279 ;;		_main
  9280 ;;		_efgtoa
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284     0DC5                     ___flmul:	
  9285                           ;psect for function ___flmul
  9286                           
  9287     0DC5                     l4954:	
  9288                           ;incstack = 0
  9289                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9290                           
  9291     0DC5  0020               	movlb	0	; select bank0
  9292     0DC6  0835               	movf	___flmul@b+3,w
  9293     0DC7  3980               	andlw	128
  9294     0DC8  00BF               	movwf	___flmul@sign
  9295     0DC9                     l4956:
  9296     0DC9  3535               	lslf	___flmul@b+3,w
  9297     0DCA  00C5               	movwf	___flmul@bexp
  9298     0DCB                     l4958:
  9299     0DCB  1FB4               	btfss	___flmul@b+2,7
  9300     0DCC  2DCE               	goto	u6861
  9301     0DCD  2DCF               	goto	u6860
  9302     0DCE                     u6861:
  9303     0DCE  2DD0               	goto	l4962
  9304     0DCF                     u6860:
  9305     0DCF                     l4960:
  9306     0DCF  1445               	bsf	___flmul@bexp,0
  9307     0DD0                     l4962:
  9308     0DD0  0845               	movf	___flmul@bexp,w
  9309     0DD1  1903               	btfsc	3,2
  9310     0DD2  2DD4               	goto	u6871
  9311     0DD3  2DD5               	goto	u6870
  9312     0DD4                     u6871:
  9313     0DD4  2DE4               	goto	l4970
  9314     0DD5                     u6870:
  9315     0DD5                     l4964:
  9316     0DD5  0A45               	incf	___flmul@bexp,w
  9317     0DD6  1D03               	btfss	3,2
  9318     0DD7  2DD9               	goto	u6881
  9319     0DD8  2DDA               	goto	u6880
  9320     0DD9                     u6881:
  9321     0DD9  2DE2               	goto	l4968
  9322     0DDA                     u6880:
  9323     0DDA                     l4966:
  9324     0DDA  3000               	movlw	0
  9325     0DDB  00B5               	movwf	___flmul@b+3
  9326     0DDC  3000               	movlw	0
  9327     0DDD  00B4               	movwf	___flmul@b+2
  9328     0DDE  3000               	movlw	0
  9329     0DDF  00B3               	movwf	___flmul@b+1
  9330     0DE0  3000               	movlw	0
  9331     0DE1  00B2               	movwf	___flmul@b
  9332     0DE2                     l4968:
  9333     0DE2  17B4               	bsf	___flmul@b+2,7
  9334     0DE3  2DEC               	goto	l4972
  9335     0DE4                     l4970:
  9336     0DE4  3000               	movlw	0
  9337     0DE5  00B5               	movwf	___flmul@b+3
  9338     0DE6  3000               	movlw	0
  9339     0DE7  00B4               	movwf	___flmul@b+2
  9340     0DE8  3000               	movlw	0
  9341     0DE9  00B3               	movwf	___flmul@b+1
  9342     0DEA  3000               	movlw	0
  9343     0DEB  00B2               	movwf	___flmul@b
  9344     0DEC                     l4972:
  9345     0DEC  0839               	movf	___flmul@a+3,w
  9346     0DED  3980               	andlw	128
  9347     0DEE  06BF               	xorwf	___flmul@sign,f
  9348     0DEF                     l4974:
  9349     0DEF  3539               	lslf	___flmul@a+3,w
  9350     0DF0  00C0               	movwf	___flmul@aexp
  9351     0DF1                     l4976:
  9352     0DF1  1FB8               	btfss	___flmul@a+2,7
  9353     0DF2  2DF4               	goto	u6891
  9354     0DF3  2DF5               	goto	u6890
  9355     0DF4                     u6891:
  9356     0DF4  2DF6               	goto	l4980
  9357     0DF5                     u6890:
  9358     0DF5                     l4978:
  9359     0DF5  1440               	bsf	___flmul@aexp,0
  9360     0DF6                     l4980:
  9361     0DF6  0840               	movf	___flmul@aexp,w
  9362     0DF7  1903               	btfsc	3,2
  9363     0DF8  2DFA               	goto	u6901
  9364     0DF9  2DFB               	goto	u6900
  9365     0DFA                     u6901:
  9366     0DFA  2E0A               	goto	l4988
  9367     0DFB                     u6900:
  9368     0DFB                     l4982:
  9369     0DFB  0A40               	incf	___flmul@aexp,w
  9370     0DFC  1D03               	btfss	3,2
  9371     0DFD  2DFF               	goto	u6911
  9372     0DFE  2E00               	goto	u6910
  9373     0DFF                     u6911:
  9374     0DFF  2E08               	goto	l4986
  9375     0E00                     u6910:
  9376     0E00                     l4984:
  9377     0E00  3000               	movlw	0
  9378     0E01  00B9               	movwf	___flmul@a+3
  9379     0E02  3000               	movlw	0
  9380     0E03  00B8               	movwf	___flmul@a+2
  9381     0E04  3000               	movlw	0
  9382     0E05  00B7               	movwf	___flmul@a+1
  9383     0E06  3000               	movlw	0
  9384     0E07  00B6               	movwf	___flmul@a
  9385     0E08                     l4986:
  9386     0E08  17B8               	bsf	___flmul@a+2,7
  9387     0E09  2E12               	goto	l4990
  9388     0E0A                     l4988:
  9389     0E0A  3000               	movlw	0
  9390     0E0B  00B9               	movwf	___flmul@a+3
  9391     0E0C  3000               	movlw	0
  9392     0E0D  00B8               	movwf	___flmul@a+2
  9393     0E0E  3000               	movlw	0
  9394     0E0F  00B7               	movwf	___flmul@a+1
  9395     0E10  3000               	movlw	0
  9396     0E11  00B6               	movwf	___flmul@a
  9397     0E12                     l4990:
  9398     0E12  0840               	movf	___flmul@aexp,w
  9399     0E13  1903               	btfsc	3,2
  9400     0E14  2E16               	goto	u6921
  9401     0E15  2E17               	goto	u6920
  9402     0E16                     u6921:
  9403     0E16  2E1C               	goto	l4994
  9404     0E17                     u6920:
  9405     0E17                     l4992:
  9406     0E17  0845               	movf	___flmul@bexp,w
  9407     0E18  1D03               	btfss	3,2
  9408     0E19  2E1B               	goto	u6931
  9409     0E1A  2E1C               	goto	u6930
  9410     0E1B                     u6931:
  9411     0E1B  2E25               	goto	l4998
  9412     0E1C                     u6930:
  9413     0E1C                     l4994:
  9414     0E1C  3000               	movlw	0
  9415     0E1D  00B5               	movwf	?___flmul+3
  9416     0E1E  3000               	movlw	0
  9417     0E1F  00B4               	movwf	?___flmul+2
  9418     0E20  3000               	movlw	0
  9419     0E21  00B3               	movwf	?___flmul+1
  9420     0E22  3000               	movlw	0
  9421     0E23  00B2               	movwf	?___flmul
  9422     0E24  2FFF               	goto	l1097
  9423     0E25                     l4998:
  9424     0E25  0832               	movf	___flmul@b,w
  9425     0E26  00A0               	movwf	__Umul8_16@multiplicand
  9426     0E27  0838               	movf	___flmul@a+2,w
  9427     0E28  3190  2089  318D   	fcall	__Umul8_16
  9428     0E2B  0020               	movlb	0	; select bank0
  9429     0E2C  0821               	movf	?__Umul8_16+1,w
  9430     0E2D  00CB               	movwf	___flmul@temp+1
  9431     0E2E  0820               	movf	?__Umul8_16,w
  9432     0E2F  00CA               	movwf	___flmul@temp
  9433     0E30                     l5000:
  9434     0E30  084A               	movf	___flmul@temp,w
  9435     0E31  00BA               	movwf	??___flmul
  9436     0E32  01BB               	clrf	??___flmul+1
  9437     0E33  01BC               	clrf	??___flmul+2
  9438     0E34  01BD               	clrf	??___flmul+3
  9439     0E35  083D               	movf	??___flmul+3,w
  9440     0E36  00C4               	movwf	___flmul@grs+3
  9441     0E37  083C               	movf	??___flmul+2,w
  9442     0E38  00C3               	movwf	___flmul@grs+2
  9443     0E39  083B               	movf	??___flmul+1,w
  9444     0E3A  00C2               	movwf	___flmul@grs+1
  9445     0E3B  083A               	movf	??___flmul,w
  9446     0E3C  00C1               	movwf	___flmul@grs
  9447     0E3D                     l5002:
  9448     0E3D  084B               	movf	___flmul@temp+1,w
  9449     0E3E  00BA               	movwf	??___flmul
  9450     0E3F  01BB               	clrf	??___flmul+1
  9451     0E40  01BC               	clrf	??___flmul+2
  9452     0E41  01BD               	clrf	??___flmul+3
  9453     0E42  083D               	movf	??___flmul+3,w
  9454     0E43  00C9               	movwf	___flmul@prod+3
  9455     0E44  083C               	movf	??___flmul+2,w
  9456     0E45  00C8               	movwf	___flmul@prod+2
  9457     0E46  083B               	movf	??___flmul+1,w
  9458     0E47  00C7               	movwf	___flmul@prod+1
  9459     0E48  083A               	movf	??___flmul,w
  9460     0E49  00C6               	movwf	___flmul@prod
  9461     0E4A  0833               	movf	___flmul@b+1,w
  9462     0E4B  00A0               	movwf	__Umul8_16@multiplicand
  9463     0E4C  0837               	movf	___flmul@a+1,w
  9464     0E4D  3190  2089  318D   	fcall	__Umul8_16
  9465     0E50  0020               	movlb	0	; select bank0
  9466     0E51  0821               	movf	?__Umul8_16+1,w
  9467     0E52  00CB               	movwf	___flmul@temp+1
  9468     0E53  0820               	movf	?__Umul8_16,w
  9469     0E54  00CA               	movwf	___flmul@temp
  9470     0E55                     l5004:
  9471     0E55  084A               	movf	___flmul@temp,w
  9472     0E56  00BA               	movwf	??___flmul
  9473     0E57  01BB               	clrf	??___flmul+1
  9474     0E58  01BC               	clrf	??___flmul+2
  9475     0E59  01BD               	clrf	??___flmul+3
  9476     0E5A  083A               	movf	??___flmul,w
  9477     0E5B  07C1               	addwf	___flmul@grs,f
  9478     0E5C  083B               	movf	??___flmul+1,w
  9479     0E5D  3DC2               	addwfc	___flmul@grs+1,f
  9480     0E5E  083C               	movf	??___flmul+2,w
  9481     0E5F  3DC3               	addwfc	___flmul@grs+2,f
  9482     0E60  083D               	movf	??___flmul+3,w
  9483     0E61  3DC4               	addwfc	___flmul@grs+3,f
  9484     0E62                     l5006:
  9485     0E62  084B               	movf	___flmul@temp+1,w
  9486     0E63  00BA               	movwf	??___flmul
  9487     0E64  01BB               	clrf	??___flmul+1
  9488     0E65  01BC               	clrf	??___flmul+2
  9489     0E66  01BD               	clrf	??___flmul+3
  9490     0E67  083A               	movf	??___flmul,w
  9491     0E68  07C6               	addwf	___flmul@prod,f
  9492     0E69  083B               	movf	??___flmul+1,w
  9493     0E6A  3DC7               	addwfc	___flmul@prod+1,f
  9494     0E6B  083C               	movf	??___flmul+2,w
  9495     0E6C  3DC8               	addwfc	___flmul@prod+2,f
  9496     0E6D  083D               	movf	??___flmul+3,w
  9497     0E6E  3DC9               	addwfc	___flmul@prod+3,f
  9498     0E6F  0834               	movf	___flmul@b+2,w
  9499     0E70  00A0               	movwf	__Umul8_16@multiplicand
  9500     0E71  0836               	movf	___flmul@a,w
  9501     0E72  3190  2089  318D   	fcall	__Umul8_16
  9502     0E75  0020               	movlb	0	; select bank0
  9503     0E76  0821               	movf	?__Umul8_16+1,w
  9504     0E77  00CB               	movwf	___flmul@temp+1
  9505     0E78  0820               	movf	?__Umul8_16,w
  9506     0E79  00CA               	movwf	___flmul@temp
  9507     0E7A                     l5008:
  9508     0E7A  084A               	movf	___flmul@temp,w
  9509     0E7B  00BA               	movwf	??___flmul
  9510     0E7C  01BB               	clrf	??___flmul+1
  9511     0E7D  01BC               	clrf	??___flmul+2
  9512     0E7E  01BD               	clrf	??___flmul+3
  9513     0E7F  083A               	movf	??___flmul,w
  9514     0E80  07C1               	addwf	___flmul@grs,f
  9515     0E81  083B               	movf	??___flmul+1,w
  9516     0E82  3DC2               	addwfc	___flmul@grs+1,f
  9517     0E83  083C               	movf	??___flmul+2,w
  9518     0E84  3DC3               	addwfc	___flmul@grs+2,f
  9519     0E85  083D               	movf	??___flmul+3,w
  9520     0E86  3DC4               	addwfc	___flmul@grs+3,f
  9521     0E87                     l5010:
  9522     0E87  084B               	movf	___flmul@temp+1,w
  9523     0E88  00BA               	movwf	??___flmul
  9524     0E89  01BB               	clrf	??___flmul+1
  9525     0E8A  01BC               	clrf	??___flmul+2
  9526     0E8B  01BD               	clrf	??___flmul+3
  9527     0E8C  083A               	movf	??___flmul,w
  9528     0E8D  07C6               	addwf	___flmul@prod,f
  9529     0E8E  083B               	movf	??___flmul+1,w
  9530     0E8F  3DC7               	addwfc	___flmul@prod+1,f
  9531     0E90  083C               	movf	??___flmul+2,w
  9532     0E91  3DC8               	addwfc	___flmul@prod+2,f
  9533     0E92  083D               	movf	??___flmul+3,w
  9534     0E93  3DC9               	addwfc	___flmul@prod+3,f
  9535     0E94                     l5012:
  9536     0E94  3008               	movlw	8
  9537     0E95                     u6945:
  9538     0E95  35C1               	lslf	___flmul@grs,f
  9539     0E96  0DC2               	rlf	___flmul@grs+1,f
  9540     0E97  0DC3               	rlf	___flmul@grs+2,f
  9541     0E98  0DC4               	rlf	___flmul@grs+3,f
  9542     0E99  0B89               	decfsz	9,f
  9543     0E9A  2E95               	goto	u6945
  9544     0E9B                     l5014:
  9545     0E9B  0833               	movf	___flmul@b+1,w
  9546     0E9C  00A0               	movwf	__Umul8_16@multiplicand
  9547     0E9D  0836               	movf	___flmul@a,w
  9548     0E9E  3190  2089  318D   	fcall	__Umul8_16
  9549     0EA1  0020               	movlb	0	; select bank0
  9550     0EA2  0821               	movf	?__Umul8_16+1,w
  9551     0EA3  00CB               	movwf	___flmul@temp+1
  9552     0EA4  0820               	movf	?__Umul8_16,w
  9553     0EA5  00CA               	movwf	___flmul@temp
  9554     0EA6                     l5016:
  9555     0EA6  084A               	movf	___flmul@temp,w
  9556     0EA7  07C1               	addwf	___flmul@grs,f
  9557     0EA8  084B               	movf	___flmul@temp+1,w
  9558     0EA9  3DC2               	addwfc	___flmul@grs+1,f
  9559     0EAA  3000               	movlw	0
  9560     0EAB  3DC3               	addwfc	___flmul@grs+2,f
  9561     0EAC  3DC4               	addwfc	___flmul@grs+3,f
  9562     0EAD                     l5018:
  9563     0EAD  0832               	movf	___flmul@b,w
  9564     0EAE  00A0               	movwf	__Umul8_16@multiplicand
  9565     0EAF  0837               	movf	___flmul@a+1,w
  9566     0EB0  3190  2089  318D   	fcall	__Umul8_16
  9567     0EB3  0020               	movlb	0	; select bank0
  9568     0EB4  0821               	movf	?__Umul8_16+1,w
  9569     0EB5  00CB               	movwf	___flmul@temp+1
  9570     0EB6  0820               	movf	?__Umul8_16,w
  9571     0EB7  00CA               	movwf	___flmul@temp
  9572     0EB8                     l5020:
  9573     0EB8  084A               	movf	___flmul@temp,w
  9574     0EB9  07C1               	addwf	___flmul@grs,f
  9575     0EBA  084B               	movf	___flmul@temp+1,w
  9576     0EBB  3DC2               	addwfc	___flmul@grs+1,f
  9577     0EBC  3000               	movlw	0
  9578     0EBD  3DC3               	addwfc	___flmul@grs+2,f
  9579     0EBE  3DC4               	addwfc	___flmul@grs+3,f
  9580     0EBF                     l5022:
  9581     0EBF  3008               	movlw	8
  9582     0EC0                     u6955:
  9583     0EC0  35C1               	lslf	___flmul@grs,f
  9584     0EC1  0DC2               	rlf	___flmul@grs+1,f
  9585     0EC2  0DC3               	rlf	___flmul@grs+2,f
  9586     0EC3  0DC4               	rlf	___flmul@grs+3,f
  9587     0EC4  0B89               	decfsz	9,f
  9588     0EC5  2EC0               	goto	u6955
  9589     0EC6  0832               	movf	___flmul@b,w
  9590     0EC7  00A0               	movwf	__Umul8_16@multiplicand
  9591     0EC8  0836               	movf	___flmul@a,w
  9592     0EC9  3190  2089  318D   	fcall	__Umul8_16
  9593     0ECC  0020               	movlb	0	; select bank0
  9594     0ECD  0821               	movf	?__Umul8_16+1,w
  9595     0ECE  00CB               	movwf	___flmul@temp+1
  9596     0ECF  0820               	movf	?__Umul8_16,w
  9597     0ED0  00CA               	movwf	___flmul@temp
  9598     0ED1                     l5024:
  9599     0ED1  084A               	movf	___flmul@temp,w
  9600     0ED2  07C1               	addwf	___flmul@grs,f
  9601     0ED3  084B               	movf	___flmul@temp+1,w
  9602     0ED4  3DC2               	addwfc	___flmul@grs+1,f
  9603     0ED5  3000               	movlw	0
  9604     0ED6  3DC3               	addwfc	___flmul@grs+2,f
  9605     0ED7  3DC4               	addwfc	___flmul@grs+3,f
  9606     0ED8                     l5026:
  9607     0ED8  0833               	movf	___flmul@b+1,w
  9608     0ED9  00A0               	movwf	__Umul8_16@multiplicand
  9609     0EDA  0838               	movf	___flmul@a+2,w
  9610     0EDB  3190  2089  318D   	fcall	__Umul8_16
  9611     0EDE  0020               	movlb	0	; select bank0
  9612     0EDF  0821               	movf	?__Umul8_16+1,w
  9613     0EE0  00CB               	movwf	___flmul@temp+1
  9614     0EE1  0820               	movf	?__Umul8_16,w
  9615     0EE2  00CA               	movwf	___flmul@temp
  9616     0EE3  084A               	movf	___flmul@temp,w
  9617     0EE4  07C6               	addwf	___flmul@prod,f
  9618     0EE5  084B               	movf	___flmul@temp+1,w
  9619     0EE6  3DC7               	addwfc	___flmul@prod+1,f
  9620     0EE7  3000               	movlw	0
  9621     0EE8  3DC8               	addwfc	___flmul@prod+2,f
  9622     0EE9  3DC9               	addwfc	___flmul@prod+3,f
  9623     0EEA                     l5028:
  9624     0EEA  0834               	movf	___flmul@b+2,w
  9625     0EEB  00A0               	movwf	__Umul8_16@multiplicand
  9626     0EEC  0837               	movf	___flmul@a+1,w
  9627     0EED  3190  2089  318D   	fcall	__Umul8_16
  9628     0EF0  0020               	movlb	0	; select bank0
  9629     0EF1  0821               	movf	?__Umul8_16+1,w
  9630     0EF2  00CB               	movwf	___flmul@temp+1
  9631     0EF3  0820               	movf	?__Umul8_16,w
  9632     0EF4  00CA               	movwf	___flmul@temp
  9633     0EF5                     l5030:
  9634     0EF5  084A               	movf	___flmul@temp,w
  9635     0EF6  07C6               	addwf	___flmul@prod,f
  9636     0EF7  084B               	movf	___flmul@temp+1,w
  9637     0EF8  3DC7               	addwfc	___flmul@prod+1,f
  9638     0EF9  3000               	movlw	0
  9639     0EFA  3DC8               	addwfc	___flmul@prod+2,f
  9640     0EFB  3DC9               	addwfc	___flmul@prod+3,f
  9641     0EFC  0834               	movf	___flmul@b+2,w
  9642     0EFD  00A0               	movwf	__Umul8_16@multiplicand
  9643     0EFE  0838               	movf	___flmul@a+2,w
  9644     0EFF  3190  2089  318D   	fcall	__Umul8_16
  9645     0F02  0020               	movlb	0	; select bank0
  9646     0F03  0821               	movf	?__Umul8_16+1,w
  9647     0F04  00CB               	movwf	___flmul@temp+1
  9648     0F05  0820               	movf	?__Umul8_16,w
  9649     0F06  00CA               	movwf	___flmul@temp
  9650     0F07                     l5032:
  9651     0F07  084A               	movf	___flmul@temp,w
  9652     0F08  00BA               	movwf	??___flmul
  9653     0F09  084B               	movf	___flmul@temp+1,w
  9654     0F0A  00BB               	movwf	??___flmul+1
  9655     0F0B  01BC               	clrf	??___flmul+2
  9656     0F0C  01BD               	clrf	??___flmul+3
  9657     0F0D  3008               	movlw	8
  9658     0F0E                     u6965:
  9659     0F0E  35BA               	lslf	??___flmul,f
  9660     0F0F  0DBB               	rlf	??___flmul+1,f
  9661     0F10  0DBC               	rlf	??___flmul+2,f
  9662     0F11  0DBD               	rlf	??___flmul+3,f
  9663     0F12                     u6960:
  9664     0F12  0B89               	decfsz	9,f
  9665     0F13  2F0E               	goto	u6965
  9666     0F14  083A               	movf	??___flmul,w
  9667     0F15  07C6               	addwf	___flmul@prod,f
  9668     0F16  083B               	movf	??___flmul+1,w
  9669     0F17  3DC7               	addwfc	___flmul@prod+1,f
  9670     0F18  083C               	movf	??___flmul+2,w
  9671     0F19  3DC8               	addwfc	___flmul@prod+2,f
  9672     0F1A  083D               	movf	??___flmul+3,w
  9673     0F1B  3DC9               	addwfc	___flmul@prod+3,f
  9674     0F1C                     l5034:
  9675     0F1C  0841               	movf	___flmul@grs,w
  9676     0F1D  00BA               	movwf	??___flmul
  9677     0F1E  0842               	movf	___flmul@grs+1,w
  9678     0F1F  00BB               	movwf	??___flmul+1
  9679     0F20  0843               	movf	___flmul@grs+2,w
  9680     0F21  00BC               	movwf	??___flmul+2
  9681     0F22  0844               	movf	___flmul@grs+3,w
  9682     0F23  00BD               	movwf	??___flmul+3
  9683     0F24  3018               	movlw	24
  9684     0F25                     u6975:
  9685     0F25  36BD               	lsrf	??___flmul+3,f
  9686     0F26  0CBC               	rrf	??___flmul+2,f
  9687     0F27  0CBB               	rrf	??___flmul+1,f
  9688     0F28  0CBA               	rrf	??___flmul,f
  9689     0F29                     u6970:
  9690     0F29  0B89               	decfsz	9,f
  9691     0F2A  2F25               	goto	u6975
  9692     0F2B  083A               	movf	??___flmul,w
  9693     0F2C  07C6               	addwf	___flmul@prod,f
  9694     0F2D  083B               	movf	??___flmul+1,w
  9695     0F2E  3DC7               	addwfc	___flmul@prod+1,f
  9696     0F2F  083C               	movf	??___flmul+2,w
  9697     0F30  3DC8               	addwfc	___flmul@prod+2,f
  9698     0F31  083D               	movf	??___flmul+3,w
  9699     0F32  3DC9               	addwfc	___flmul@prod+3,f
  9700     0F33                     l5036:
  9701     0F33  3008               	movlw	8
  9702     0F34                     u6985:
  9703     0F34  35C1               	lslf	___flmul@grs,f
  9704     0F35  0DC2               	rlf	___flmul@grs+1,f
  9705     0F36  0DC3               	rlf	___flmul@grs+2,f
  9706     0F37  0DC4               	rlf	___flmul@grs+3,f
  9707     0F38  0B89               	decfsz	9,f
  9708     0F39  2F34               	goto	u6985
  9709     0F3A                     l5038:
  9710     0F3A  0845               	movf	___flmul@bexp,w
  9711     0F3B  0740               	addwf	___flmul@aexp,w
  9712     0F3C  00BA               	movwf	??___flmul
  9713     0F3D  01BB               	clrf	??___flmul+1
  9714     0F3E  0DBB               	rlf	??___flmul+1,f
  9715     0F3F  083A               	movf	??___flmul,w
  9716     0F40  3E82               	addlw	130
  9717     0F41  00CA               	movwf	___flmul@temp
  9718     0F42  30FF               	movlw	255
  9719     0F43  3D3B               	addwfc	??___flmul+1,w
  9720     0F44  00CB               	movwf	___flmul@temp+1
  9721     0F45  2F5D               	goto	l5050
  9722     0F46                     l5040:
  9723     0F46  3001               	movlw	1
  9724     0F47                     u6995:
  9725     0F47  35C6               	lslf	___flmul@prod,f
  9726     0F48  0DC7               	rlf	___flmul@prod+1,f
  9727     0F49  0DC8               	rlf	___flmul@prod+2,f
  9728     0F4A  0DC9               	rlf	___flmul@prod+3,f
  9729     0F4B  0B89               	decfsz	9,f
  9730     0F4C  2F47               	goto	u6995
  9731     0F4D                     l5042:
  9732     0F4D  1FC4               	btfss	___flmul@grs+3,7
  9733     0F4E  2F50               	goto	u7001
  9734     0F4F  2F51               	goto	u7000
  9735     0F50                     u7001:
  9736     0F50  2F52               	goto	l5046
  9737     0F51                     u7000:
  9738     0F51                     l5044:
  9739     0F51  1446               	bsf	___flmul@prod,0
  9740     0F52                     l5046:
  9741     0F52  3001               	movlw	1
  9742     0F53                     u7015:
  9743     0F53  35C1               	lslf	___flmul@grs,f
  9744     0F54  0DC2               	rlf	___flmul@grs+1,f
  9745     0F55  0DC3               	rlf	___flmul@grs+2,f
  9746     0F56  0DC4               	rlf	___flmul@grs+3,f
  9747     0F57  0B89               	decfsz	9,f
  9748     0F58  2F53               	goto	u7015
  9749     0F59                     l5048:
  9750     0F59  30FF               	movlw	255
  9751     0F5A  07CA               	addwf	___flmul@temp,f
  9752     0F5B  30FF               	movlw	255
  9753     0F5C  3DCB               	addwfc	___flmul@temp+1,f
  9754     0F5D                     l5050:
  9755     0F5D  1FC8               	btfss	___flmul@prod+2,7
  9756     0F5E  2F60               	goto	u7021
  9757     0F5F  2F61               	goto	u7020
  9758     0F60                     u7021:
  9759     0F60  2F46               	goto	l5040
  9760     0F61                     u7020:
  9761     0F61                     l5052:
  9762     0F61  01C0               	clrf	___flmul@aexp
  9763     0F62                     l5054:
  9764     0F62  1FC4               	btfss	___flmul@grs+3,7
  9765     0F63  2F65               	goto	u7031
  9766     0F64  2F66               	goto	u7030
  9767     0F65                     u7031:
  9768     0F65  2F82               	goto	l5062
  9769     0F66                     u7030:
  9770     0F66                     l5056:
  9771     0F66  30FF               	movlw	255
  9772     0F67  0541               	andwf	___flmul@grs,w
  9773     0F68  00BA               	movwf	??___flmul
  9774     0F69  30FF               	movlw	255
  9775     0F6A  0542               	andwf	___flmul@grs+1,w
  9776     0F6B  00BB               	movwf	??___flmul+1
  9777     0F6C  30FF               	movlw	255
  9778     0F6D  0543               	andwf	___flmul@grs+2,w
  9779     0F6E  00BC               	movwf	??___flmul+2
  9780     0F6F  307F               	movlw	127
  9781     0F70  0544               	andwf	___flmul@grs+3,w
  9782     0F71  00BD               	movwf	??___flmul+3
  9783     0F72  083D               	movf	??___flmul+3,w
  9784     0F73  043C               	iorwf	??___flmul+2,w
  9785     0F74  043B               	iorwf	??___flmul+1,w
  9786     0F75  043A               	iorwf	??___flmul,w
  9787     0F76  1903               	skipnz
  9788     0F77  2F79               	goto	u7041
  9789     0F78  2F7A               	goto	u7040
  9790     0F79                     u7041:
  9791     0F79  2F7D               	goto	l1103
  9792     0F7A                     u7040:
  9793     0F7A                     l5058:
  9794     0F7A  3001               	movlw	1
  9795     0F7B  00C0               	movwf	___flmul@aexp
  9796     0F7C  2F82               	goto	l5062
  9797     0F7D                     l1103:
  9798     0F7D  1C46               	btfss	___flmul@prod,0
  9799     0F7E  2F80               	goto	u7051
  9800     0F7F  2F81               	goto	u7050
  9801     0F80                     u7051:
  9802     0F80  2F82               	goto	l5062
  9803     0F81                     u7050:
  9804     0F81  2F7A               	goto	l5058
  9805     0F82                     l5062:
  9806     0F82  0840               	movf	___flmul@aexp,w
  9807     0F83  1903               	btfsc	3,2
  9808     0F84  2F86               	goto	u7061
  9809     0F85  2F87               	goto	u7060
  9810     0F86                     u7061:
  9811     0F86  2FAD               	goto	l5072
  9812     0F87                     u7060:
  9813     0F87                     l5064:
  9814     0F87  3001               	movlw	1
  9815     0F88  07C6               	addwf	___flmul@prod,f
  9816     0F89  3000               	movlw	0
  9817     0F8A  3DC7               	addwfc	___flmul@prod+1,f
  9818     0F8B  3DC8               	addwfc	___flmul@prod+2,f
  9819     0F8C  3DC9               	addwfc	___flmul@prod+3,f
  9820     0F8D                     l5066:
  9821     0F8D  1C49               	btfss	___flmul@prod+3,0
  9822     0F8E  2F90               	goto	u7071
  9823     0F8F  2F91               	goto	u7070
  9824     0F90                     u7071:
  9825     0F90  2FAD               	goto	l5072
  9826     0F91                     u7070:
  9827     0F91                     l5068:
  9828     0F91  0846               	movf	___flmul@prod,w
  9829     0F92  00BA               	movwf	??___flmul
  9830     0F93  0847               	movf	___flmul@prod+1,w
  9831     0F94  00BB               	movwf	??___flmul+1
  9832     0F95  0848               	movf	___flmul@prod+2,w
  9833     0F96  00BC               	movwf	??___flmul+2
  9834     0F97  0849               	movf	___flmul@prod+3,w
  9835     0F98  00BD               	movwf	??___flmul+3
  9836     0F99  3001               	movlw	1
  9837     0F9A  00BE               	movwf	??___flmul+4
  9838     0F9B                     u7085:
  9839     0F9B  37BD               	asrf	??___flmul+3,f
  9840     0F9C  0CBC               	rrf	??___flmul+2,f
  9841     0F9D  0CBB               	rrf	??___flmul+1,f
  9842     0F9E  0CBA               	rrf	??___flmul,f
  9843     0F9F                     u7080:
  9844     0F9F  0BBE               	decfsz	??___flmul+4,f
  9845     0FA0  2F9B               	goto	u7085
  9846     0FA1  083D               	movf	??___flmul+3,w
  9847     0FA2  00C9               	movwf	___flmul@prod+3
  9848     0FA3  083C               	movf	??___flmul+2,w
  9849     0FA4  00C8               	movwf	___flmul@prod+2
  9850     0FA5  083B               	movf	??___flmul+1,w
  9851     0FA6  00C7               	movwf	___flmul@prod+1
  9852     0FA7  083A               	movf	??___flmul,w
  9853     0FA8  00C6               	movwf	___flmul@prod
  9854     0FA9                     l5070:
  9855     0FA9  3001               	movlw	1
  9856     0FAA  07CA               	addwf	___flmul@temp,f
  9857     0FAB  3000               	movlw	0
  9858     0FAC  3DCB               	addwfc	___flmul@temp+1,f
  9859     0FAD                     l5072:
  9860     0FAD  084B               	movf	___flmul@temp+1,w
  9861     0FAE  3A80               	xorlw	128
  9862     0FAF  00BA               	movwf	??___flmul
  9863     0FB0  3080               	movlw	128
  9864     0FB1  023A               	subwf	??___flmul,w
  9865     0FB2  1D03               	skipz
  9866     0FB3  2FB6               	goto	u7095
  9867     0FB4  30FF               	movlw	255
  9868     0FB5  024A               	subwf	___flmul@temp,w
  9869     0FB6                     u7095:
  9870     0FB6  1C03               	skipc
  9871     0FB7  2FB9               	goto	u7091
  9872     0FB8  2FBA               	goto	u7090
  9873     0FB9                     u7091:
  9874     0FB9  2FC4               	goto	l5076
  9875     0FBA                     u7090:
  9876     0FBA                     l5074:
  9877     0FBA  307F               	movlw	127
  9878     0FBB  0020               	movlb	0	; select bank0
  9879     0FBC  00C9               	movwf	___flmul@prod+3
  9880     0FBD  3080               	movlw	128
  9881     0FBE  00C8               	movwf	___flmul@prod+2
  9882     0FBF  3000               	movlw	0
  9883     0FC0  00C7               	movwf	___flmul@prod+1
  9884     0FC1  3000               	movlw	0
  9885     0FC2  00C6               	movwf	___flmul@prod
  9886     0FC3  2FF5               	goto	l1109
  9887     0FC4                     l5076:
  9888     0FC4  0020               	movlb	0	; select bank0
  9889     0FC5  084B               	movf	___flmul@temp+1,w
  9890     0FC6  3A80               	xorlw	128
  9891     0FC7  00BA               	movwf	??___flmul
  9892     0FC8  3080               	movlw	128
  9893     0FC9  023A               	subwf	??___flmul,w
  9894     0FCA  1D03               	skipz
  9895     0FCB  2FCE               	goto	u7105
  9896     0FCC  3001               	movlw	1
  9897     0FCD  024A               	subwf	___flmul@temp,w
  9898     0FCE                     u7105:
  9899     0FCE  1803               	skipnc
  9900     0FCF  2FD1               	goto	u7101
  9901     0FD0  2FD2               	goto	u7100
  9902     0FD1                     u7101:
  9903     0FD1  2FDD               	goto	l5082
  9904     0FD2                     u7100:
  9905     0FD2                     l5078:
  9906     0FD2  3000               	movlw	0
  9907     0FD3  0020               	movlb	0	; select bank0
  9908     0FD4  00C9               	movwf	___flmul@prod+3
  9909     0FD5  3000               	movlw	0
  9910     0FD6  00C8               	movwf	___flmul@prod+2
  9911     0FD7  3000               	movlw	0
  9912     0FD8  00C7               	movwf	___flmul@prod+1
  9913     0FD9  3000               	movlw	0
  9914     0FDA  00C6               	movwf	___flmul@prod
  9915     0FDB                     l5080:
  9916     0FDB  01BF               	clrf	___flmul@sign
  9917     0FDC  2FF5               	goto	l1109
  9918     0FDD                     l5082:
  9919     0FDD  0020               	movlb	0	; select bank0
  9920     0FDE  084A               	movf	___flmul@temp,w
  9921     0FDF  00C5               	movwf	___flmul@bexp
  9922     0FE0  30FF               	movlw	255
  9923     0FE1  05C6               	andwf	___flmul@prod,f
  9924     0FE2  30FF               	movlw	255
  9925     0FE3  05C7               	andwf	___flmul@prod+1,f
  9926     0FE4  307F               	movlw	127
  9927     0FE5  05C8               	andwf	___flmul@prod+2,f
  9928     0FE6  3000               	movlw	0
  9929     0FE7  05C9               	andwf	___flmul@prod+3,f
  9930     0FE8                     l5084:
  9931     0FE8  1C45               	btfss	___flmul@bexp,0
  9932     0FE9  2FEB               	goto	u7111
  9933     0FEA  2FEC               	goto	u7110
  9934     0FEB                     u7111:
  9935     0FEB  2FED               	goto	l5088
  9936     0FEC                     u7110:
  9937     0FEC                     l5086:
  9938     0FEC  17C8               	bsf	___flmul@prod+2,7
  9939     0FED                     l5088:
  9940     0FED  0845               	movf	___flmul@bexp,w
  9941     0FEE  00BA               	movwf	??___flmul
  9942     0FEF  3001               	movlw	1
  9943     0FF0                     u7125:
  9944     0FF0  36BA               	lsrf	??___flmul,f
  9945     0FF1  0B89               	decfsz	9,f
  9946     0FF2  2FF0               	goto	u7125
  9947     0FF3  083A               	movf	??___flmul,w
  9948     0FF4  00C9               	movwf	___flmul@prod+3
  9949     0FF5                     l1109:
  9950     0FF5  083F               	movf	___flmul@sign,w
  9951     0FF6  04C9               	iorwf	___flmul@prod+3,f
  9952     0FF7                     l5090:
  9953     0FF7  0849               	movf	___flmul@prod+3,w
  9954     0FF8  00B5               	movwf	?___flmul+3
  9955     0FF9  0848               	movf	___flmul@prod+2,w
  9956     0FFA  00B4               	movwf	?___flmul+2
  9957     0FFB  0847               	movf	___flmul@prod+1,w
  9958     0FFC  00B3               	movwf	?___flmul+1
  9959     0FFD  0846               	movf	___flmul@prod,w
  9960     0FFE  00B2               	movwf	?___flmul
  9961     0FFF                     l1097:
  9962     0FFF  0008               	return
  9963     1000                     __end_of___flmul:
  9964                           
  9965                           	psect	text23
  9966     1089                     __ptext23:	
  9967 ;; *************** function __Umul8_16 *****************
  9968 ;; Defined at:
  9969 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/Umul8_16.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;  multiplier      1    wreg     unsigned char 
  9972 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9975 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  9976 ;;  product         2    4[BANK0 ] unsigned short 
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  2    0[BANK0 ] unsigned int 
  9979 ;; Registers used:
  9980 ;;		wreg, status,2, status,0
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;Total ram usage:        9 bytes
  9991 ;; Hardware stack levels used: 1
  9992 ;; Hardware stack levels required when called: 4
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		___flmul
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000     1089                     __Umul8_16:	
 10001                           ;psect for function __Umul8_16
 10002                           
 10003                           
 10004                           ;incstack = 0
 10005                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10006                           ;__Umul8_16@multiplier stored from wreg
 10007     1089  0020               	movlb	0	; select bank0
 10008     108A  00A8               	movwf	__Umul8_16@multiplier
 10009     108B                     l4696:
 10010     108B  01A4               	clrf	__Umul8_16@product
 10011     108C  01A5               	clrf	__Umul8_16@product+1
 10012     108D                     l4698:
 10013     108D  0820               	movf	__Umul8_16@multiplicand,w
 10014     108E  00A2               	movwf	??__Umul8_16
 10015     108F  01A3               	clrf	??__Umul8_16+1
 10016     1090  0822               	movf	??__Umul8_16,w
 10017     1091  00A6               	movwf	__Umul8_16@word_mpld
 10018     1092  0823               	movf	??__Umul8_16+1,w
 10019     1093  00A7               	movwf	__Umul8_16@word_mpld+1
 10020     1094                     l4700:
 10021     1094  1C28               	btfss	__Umul8_16@multiplier,0
 10022     1095  2897               	goto	u6291
 10023     1096  2898               	goto	u6290
 10024     1097                     u6291:
 10025     1097  289C               	goto	l1116
 10026     1098                     u6290:
 10027     1098                     l4702:
 10028     1098  0826               	movf	__Umul8_16@word_mpld,w
 10029     1099  07A4               	addwf	__Umul8_16@product,f
 10030     109A  0827               	movf	__Umul8_16@word_mpld+1,w
 10031     109B  3DA5               	addwfc	__Umul8_16@product+1,f
 10032     109C                     l1116:
 10033     109C  3001               	movlw	1
 10034     109D                     u6305:
 10035     109D  35A6               	lslf	__Umul8_16@word_mpld,f
 10036     109E  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 10037     109F  0B89               	decfsz	9,f
 10038     10A0  289D               	goto	u6305
 10039     10A1  1003               	clrc
 10040     10A2  0CA8               	rrf	__Umul8_16@multiplier,f
 10041     10A3                     l4704:
 10042     10A3  0828               	movf	__Umul8_16@multiplier,w
 10043     10A4  1D03               	btfss	3,2
 10044     10A5  28A7               	goto	u6311
 10045     10A6  28A8               	goto	u6310
 10046     10A7                     u6311:
 10047     10A7  2894               	goto	l4700
 10048     10A8                     u6310:
 10049     10A8                     l4706:
 10050     10A8  0825               	movf	__Umul8_16@product+1,w
 10051     10A9  00A1               	movwf	?__Umul8_16+1
 10052     10AA  0824               	movf	__Umul8_16@product,w
 10053     10AB  00A0               	movwf	?__Umul8_16
 10054     10AC                     l1118:
 10055     10AC  0008               	return
 10056     10AD                     __end_of__Umul8_16:
 10057                           
 10058                           	psect	text24
 10059     1180                     __ptext24:	
 10060 ;; *************** function ___fleq *****************
 10061 ;; Defined at:
 10062 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/fleq.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  ff1             4    0[BANK0 ] unsigned int 
 10065 ;;  ff2             4    4[BANK0 ] unsigned int 
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;		None
 10068 ;; Return value:  Size  Location     Type
 10069 ;;		None               void
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10077 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;Total ram usage:       12 bytes
 10082 ;; Hardware stack levels used: 1
 10083 ;; Hardware stack levels required when called: 4
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_efgtoa
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091     1180                     ___fleq:	
 10092                           ;psect for function ___fleq
 10093                           
 10094     1180                     l4732:	
 10095                           ;incstack = 0
 10096                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10097                           
 10098     1180  3000               	movlw	0
 10099     1181  0020               	movlb	0	; select bank0
 10100     1182  0520               	andwf	___fleq@ff1,w
 10101     1183  00A8               	movwf	??___fleq
 10102     1184  3000               	movlw	0
 10103     1185  0521               	andwf	___fleq@ff1+1,w
 10104     1186  00A9               	movwf	??___fleq+1
 10105     1187  3080               	movlw	128
 10106     1188  0522               	andwf	___fleq@ff1+2,w
 10107     1189  00AA               	movwf	??___fleq+2
 10108     118A  307F               	movlw	127
 10109     118B  0523               	andwf	___fleq@ff1+3,w
 10110     118C  00AB               	movwf	??___fleq+3
 10111     118D  082B               	movf	??___fleq+3,w
 10112     118E  042A               	iorwf	??___fleq+2,w
 10113     118F  0429               	iorwf	??___fleq+1,w
 10114     1190  0428               	iorwf	??___fleq,w
 10115     1191  1D03               	skipz
 10116     1192  2994               	goto	u6371
 10117     1193  2995               	goto	u6370
 10118     1194                     u6371:
 10119     1194  299D               	goto	l869
 10120     1195                     u6370:
 10121     1195                     l4734:
 10122     1195  3000               	movlw	0
 10123     1196  00A3               	movwf	___fleq@ff1+3
 10124     1197  3000               	movlw	0
 10125     1198  00A2               	movwf	___fleq@ff1+2
 10126     1199  3000               	movlw	0
 10127     119A  00A1               	movwf	___fleq@ff1+1
 10128     119B  3000               	movlw	0
 10129     119C  00A0               	movwf	___fleq@ff1
 10130     119D                     l869:
 10131     119D  3000               	movlw	0
 10132     119E  0524               	andwf	___fleq@ff2,w
 10133     119F  00A8               	movwf	??___fleq
 10134     11A0  3000               	movlw	0
 10135     11A1  0525               	andwf	___fleq@ff2+1,w
 10136     11A2  00A9               	movwf	??___fleq+1
 10137     11A3  3080               	movlw	128
 10138     11A4  0526               	andwf	___fleq@ff2+2,w
 10139     11A5  00AA               	movwf	??___fleq+2
 10140     11A6  307F               	movlw	127
 10141     11A7  0527               	andwf	___fleq@ff2+3,w
 10142     11A8  00AB               	movwf	??___fleq+3
 10143     11A9  082B               	movf	??___fleq+3,w
 10144     11AA  042A               	iorwf	??___fleq+2,w
 10145     11AB  0429               	iorwf	??___fleq+1,w
 10146     11AC  0428               	iorwf	??___fleq,w
 10147     11AD  1D03               	skipz
 10148     11AE  29B0               	goto	u6381
 10149     11AF  29B1               	goto	u6380
 10150     11B0                     u6381:
 10151     11B0  29B9               	goto	l870
 10152     11B1                     u6380:
 10153     11B1                     l4736:
 10154     11B1  3000               	movlw	0
 10155     11B2  00A7               	movwf	___fleq@ff2+3
 10156     11B3  3000               	movlw	0
 10157     11B4  00A6               	movwf	___fleq@ff2+2
 10158     11B5  3000               	movlw	0
 10159     11B6  00A5               	movwf	___fleq@ff2+1
 10160     11B7  3000               	movlw	0
 10161     11B8  00A4               	movwf	___fleq@ff2
 10162     11B9                     l870:
 10163     11B9  0827               	movf	___fleq@ff2+3,w
 10164     11BA  0623               	xorwf	___fleq@ff1+3,w
 10165     11BB  1D03               	skipz
 10166     11BC  29C7               	goto	u6395
 10167     11BD  0826               	movf	___fleq@ff2+2,w
 10168     11BE  0622               	xorwf	___fleq@ff1+2,w
 10169     11BF  1D03               	skipz
 10170     11C0  29C7               	goto	u6395
 10171     11C1  0825               	movf	___fleq@ff2+1,w
 10172     11C2  0621               	xorwf	___fleq@ff1+1,w
 10173     11C3  1D03               	skipz
 10174     11C4  29C7               	goto	u6395
 10175     11C5  0824               	movf	___fleq@ff2,w
 10176     11C6  0620               	xorwf	___fleq@ff1,w
 10177     11C7                     u6395:
 10178     11C7  1903               	skipnz
 10179     11C8  29CA               	goto	u6391
 10180     11C9  29CB               	goto	u6390
 10181     11CA                     u6391:
 10182     11CA  29CD               	goto	l4740
 10183     11CB                     u6390:
 10184     11CB                     l4738:
 10185     11CB  1003               	clrc
 10186     11CC  29CE               	goto	l875
 10187     11CD                     l4740:
 10188     11CD  1403               	setc
 10189     11CE                     l875:
 10190     11CE  0008               	return
 10191     11CF                     __end_of___fleq:
 10192                           
 10193                           	psect	text25
 10194     165C                     __ptext25:	
 10195 ;; *************** function ___fldiv *****************
 10196 ;; Defined at:
 10197 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcdiv.c"
 10198 ;; Parameters:    Size  Location     Type
 10199 ;;  a               4    0[BANK0 ] unsigned int 
 10200 ;;  b               4    4[BANK0 ] unsigned int 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  grs             4   20[BANK0 ] unsigned long 
 10203 ;;  rem             4   13[BANK0 ] unsigned long 
 10204 ;;  new_exp         2   18[BANK0 ] short 
 10205 ;;  aexp            1   25[BANK0 ] unsigned char 
 10206 ;;  bexp            1   24[BANK0 ] unsigned char 
 10207 ;;  sign            1   17[BANK0 ] unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  4    0[BANK0 ] unsigned char 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10217 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;Total ram usage:       26 bytes
 10222 ;; Hardware stack levels used: 1
 10223 ;; Hardware stack levels required when called: 4
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_efgtoa
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231     165C                     ___fldiv:	
 10232                           ;psect for function ___fldiv
 10233                           
 10234     165C                     l4814:	
 10235                           ;incstack = 0
 10236                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10237                           
 10238     165C  0020               	movlb	0	; select bank0
 10239     165D  0827               	movf	___fldiv@b+3,w
 10240     165E  3980               	andlw	128
 10241     165F  00B1               	movwf	___fldiv@sign
 10242     1660                     l4816:
 10243     1660  3527               	lslf	___fldiv@b+3,w
 10244     1661  00B8               	movwf	___fldiv@bexp
 10245     1662                     l4818:
 10246     1662  1FA6               	btfss	___fldiv@b+2,7
 10247     1663  2E65               	goto	u6561
 10248     1664  2E66               	goto	u6560
 10249     1665                     u6561:
 10250     1665  2E67               	goto	l4822
 10251     1666                     u6560:
 10252     1666                     l4820:
 10253     1666  1438               	bsf	___fldiv@bexp,0
 10254     1667                     l4822:
 10255     1667  0838               	movf	___fldiv@bexp,w
 10256     1668  1903               	btfsc	3,2
 10257     1669  2E6B               	goto	u6571
 10258     166A  2E6C               	goto	u6570
 10259     166B                     u6571:
 10260     166B  2E7C               	goto	l4832
 10261     166C                     u6570:
 10262     166C                     l4824:
 10263     166C  0A38               	incf	___fldiv@bexp,w
 10264     166D  1D03               	btfss	3,2
 10265     166E  2E70               	goto	u6581
 10266     166F  2E71               	goto	u6580
 10267     1670                     u6581:
 10268     1670  2E79               	goto	l4828
 10269     1671                     u6580:
 10270     1671                     l4826:
 10271     1671  3000               	movlw	0
 10272     1672  00A7               	movwf	___fldiv@b+3
 10273     1673  3000               	movlw	0
 10274     1674  00A6               	movwf	___fldiv@b+2
 10275     1675  3000               	movlw	0
 10276     1676  00A5               	movwf	___fldiv@b+1
 10277     1677  3000               	movlw	0
 10278     1678  00A4               	movwf	___fldiv@b
 10279     1679                     l4828:
 10280     1679  17A6               	bsf	___fldiv@b+2,7
 10281     167A                     l4830:
 10282     167A  01A7               	clrf	___fldiv@b+3
 10283     167B  2E84               	goto	l4834
 10284     167C                     l4832:
 10285     167C  3000               	movlw	0
 10286     167D  00A7               	movwf	___fldiv@b+3
 10287     167E  3000               	movlw	0
 10288     167F  00A6               	movwf	___fldiv@b+2
 10289     1680  3000               	movlw	0
 10290     1681  00A5               	movwf	___fldiv@b+1
 10291     1682  3000               	movlw	0
 10292     1683  00A4               	movwf	___fldiv@b
 10293     1684                     l4834:
 10294     1684  0823               	movf	___fldiv@a+3,w
 10295     1685  3980               	andlw	128
 10296     1686  06B1               	xorwf	___fldiv@sign,f
 10297     1687                     l4836:
 10298     1687  3523               	lslf	___fldiv@a+3,w
 10299     1688  00B9               	movwf	___fldiv@aexp
 10300     1689                     l4838:
 10301     1689  1FA2               	btfss	___fldiv@a+2,7
 10302     168A  2E8C               	goto	u6591
 10303     168B  2E8D               	goto	u6590
 10304     168C                     u6591:
 10305     168C  2E8E               	goto	l4842
 10306     168D                     u6590:
 10307     168D                     l4840:
 10308     168D  1439               	bsf	___fldiv@aexp,0
 10309     168E                     l4842:
 10310     168E  0839               	movf	___fldiv@aexp,w
 10311     168F  1903               	btfsc	3,2
 10312     1690  2E92               	goto	u6601
 10313     1691  2E93               	goto	u6600
 10314     1692                     u6601:
 10315     1692  2EA3               	goto	l4852
 10316     1693                     u6600:
 10317     1693                     l4844:
 10318     1693  0A39               	incf	___fldiv@aexp,w
 10319     1694  1D03               	btfss	3,2
 10320     1695  2E97               	goto	u6611
 10321     1696  2E98               	goto	u6610
 10322     1697                     u6611:
 10323     1697  2EA0               	goto	l4848
 10324     1698                     u6610:
 10325     1698                     l4846:
 10326     1698  3000               	movlw	0
 10327     1699  00A3               	movwf	___fldiv@a+3
 10328     169A  3000               	movlw	0
 10329     169B  00A2               	movwf	___fldiv@a+2
 10330     169C  3000               	movlw	0
 10331     169D  00A1               	movwf	___fldiv@a+1
 10332     169E  3000               	movlw	0
 10333     169F  00A0               	movwf	___fldiv@a
 10334     16A0                     l4848:
 10335     16A0  17A2               	bsf	___fldiv@a+2,7
 10336     16A1                     l4850:
 10337     16A1  01A3               	clrf	___fldiv@a+3
 10338     16A2  2EAB               	goto	l1057
 10339     16A3                     l4852:
 10340     16A3  3000               	movlw	0
 10341     16A4  00A3               	movwf	___fldiv@a+3
 10342     16A5  3000               	movlw	0
 10343     16A6  00A2               	movwf	___fldiv@a+2
 10344     16A7  3000               	movlw	0
 10345     16A8  00A1               	movwf	___fldiv@a+1
 10346     16A9  3000               	movlw	0
 10347     16AA  00A0               	movwf	___fldiv@a
 10348     16AB                     l1057:
 10349     16AB  0823               	movf	___fldiv@a+3,w
 10350     16AC  0422               	iorwf	___fldiv@a+2,w
 10351     16AD  0421               	iorwf	___fldiv@a+1,w
 10352     16AE  0420               	iorwf	___fldiv@a,w
 10353     16AF  1D03               	skipz
 10354     16B0  2EB2               	goto	u6621
 10355     16B1  2EB3               	goto	u6620
 10356     16B2                     u6621:
 10357     16B2  2ECA               	goto	l4862
 10358     16B3                     u6620:
 10359     16B3                     l4854:
 10360     16B3  3000               	movlw	0
 10361     16B4  00A7               	movwf	___fldiv@b+3
 10362     16B5  3000               	movlw	0
 10363     16B6  00A6               	movwf	___fldiv@b+2
 10364     16B7  3000               	movlw	0
 10365     16B8  00A5               	movwf	___fldiv@b+1
 10366     16B9  3000               	movlw	0
 10367     16BA  00A4               	movwf	___fldiv@b
 10368     16BB  3080               	movlw	128
 10369     16BC  04A6               	iorwf	___fldiv@b+2,f
 10370     16BD  307F               	movlw	127
 10371     16BE  04A7               	iorwf	___fldiv@b+3,f
 10372     16BF                     l4856:
 10373     16BF  0831               	movf	___fldiv@sign,w
 10374     16C0  04A7               	iorwf	___fldiv@b+3,f
 10375     16C1                     l4858:
 10376     16C1  0827               	movf	___fldiv@b+3,w
 10377     16C2  00A3               	movwf	?___fldiv+3
 10378     16C3  0826               	movf	___fldiv@b+2,w
 10379     16C4  00A2               	movwf	?___fldiv+2
 10380     16C5  0825               	movf	___fldiv@b+1,w
 10381     16C6  00A1               	movwf	?___fldiv+1
 10382     16C7  0824               	movf	___fldiv@b,w
 10383     16C8  00A0               	movwf	?___fldiv
 10384     16C9  2FFF               	goto	l1059
 10385     16CA                     l4862:
 10386     16CA  0838               	movf	___fldiv@bexp,w
 10387     16CB  1D03               	btfss	3,2
 10388     16CC  2ECE               	goto	u6631
 10389     16CD  2ECF               	goto	u6630
 10390     16CE                     u6631:
 10391     16CE  2ED8               	goto	l4868
 10392     16CF                     u6630:
 10393     16CF                     l4864:
 10394     16CF  3000               	movlw	0
 10395     16D0  00A3               	movwf	?___fldiv+3
 10396     16D1  3000               	movlw	0
 10397     16D2  00A2               	movwf	?___fldiv+2
 10398     16D3  3000               	movlw	0
 10399     16D4  00A1               	movwf	?___fldiv+1
 10400     16D5  3000               	movlw	0
 10401     16D6  00A0               	movwf	?___fldiv
 10402     16D7  2FFF               	goto	l1059
 10403     16D8                     l4868:
 10404     16D8  0838               	movf	___fldiv@bexp,w
 10405     16D9  00A8               	movwf	??___fldiv
 10406     16DA  01A9               	clrf	??___fldiv+1
 10407     16DB  0829               	movf	??___fldiv+1,w
 10408     16DC  00AB               	movwf	??___fldiv+3
 10409     16DD  0839               	movf	___fldiv@aexp,w
 10410     16DE  0228               	subwf	??___fldiv,w
 10411     16DF  00AA               	movwf	??___fldiv+2
 10412     16E0  1C03               	skipc
 10413     16E1  03AB               	decf	??___fldiv+3,f
 10414     16E2  082A               	movf	??___fldiv+2,w
 10415     16E3  3E7F               	addlw	127
 10416     16E4  00B2               	movwf	___fldiv@new_exp
 10417     16E5  3000               	movlw	0
 10418     16E6  3D2B               	addwfc	??___fldiv+3,w
 10419     16E7  00B3               	movwf	___fldiv@new_exp+1
 10420     16E8                     l4870:
 10421     16E8  0827               	movf	___fldiv@b+3,w
 10422     16E9  00B0               	movwf	___fldiv@rem+3
 10423     16EA  0826               	movf	___fldiv@b+2,w
 10424     16EB  00AF               	movwf	___fldiv@rem+2
 10425     16EC  0825               	movf	___fldiv@b+1,w
 10426     16ED  00AE               	movwf	___fldiv@rem+1
 10427     16EE  0824               	movf	___fldiv@b,w
 10428     16EF  00AD               	movwf	___fldiv@rem
 10429     16F0                     l4872:
 10430     16F0  3000               	movlw	0
 10431     16F1  00A7               	movwf	___fldiv@b+3
 10432     16F2  3000               	movlw	0
 10433     16F3  00A6               	movwf	___fldiv@b+2
 10434     16F4  3000               	movlw	0
 10435     16F5  00A5               	movwf	___fldiv@b+1
 10436     16F6  3000               	movlw	0
 10437     16F7  00A4               	movwf	___fldiv@b
 10438     16F8                     l4874:
 10439     16F8  3000               	movlw	0
 10440     16F9  00B7               	movwf	___fldiv@grs+3
 10441     16FA  3000               	movlw	0
 10442     16FB  00B6               	movwf	___fldiv@grs+2
 10443     16FC  3000               	movlw	0
 10444     16FD  00B5               	movwf	___fldiv@grs+1
 10445     16FE  3000               	movlw	0
 10446     16FF  00B4               	movwf	___fldiv@grs
 10447     1700                     l4876:
 10448     1700  01B9               	clrf	___fldiv@aexp
 10449     1701  2F3E               	goto	l4896
 10450     1702                     l4878:
 10451     1702  0839               	movf	___fldiv@aexp,w
 10452     1703  1903               	btfsc	3,2
 10453     1704  2F06               	goto	u6641
 10454     1705  2F07               	goto	u6640
 10455     1706                     u6641:
 10456     1706  2F21               	goto	l4888
 10457     1707                     u6640:
 10458     1707                     l4880:
 10459     1707  3001               	movlw	1
 10460     1708                     u6655:
 10461     1708  35AD               	lslf	___fldiv@rem,f
 10462     1709  0DAE               	rlf	___fldiv@rem+1,f
 10463     170A  0DAF               	rlf	___fldiv@rem+2,f
 10464     170B  0DB0               	rlf	___fldiv@rem+3,f
 10465     170C  0B89               	decfsz	9,f
 10466     170D  2F08               	goto	u6655
 10467     170E  3001               	movlw	1
 10468     170F                     u6665:
 10469     170F  35A4               	lslf	___fldiv@b,f
 10470     1710  0DA5               	rlf	___fldiv@b+1,f
 10471     1711  0DA6               	rlf	___fldiv@b+2,f
 10472     1712  0DA7               	rlf	___fldiv@b+3,f
 10473     1713  0B89               	decfsz	9,f
 10474     1714  2F0F               	goto	u6665
 10475     1715                     l4882:
 10476     1715  1FB7               	btfss	___fldiv@grs+3,7
 10477     1716  2F18               	goto	u6671
 10478     1717  2F19               	goto	u6670
 10479     1718                     u6671:
 10480     1718  2F1A               	goto	l4886
 10481     1719                     u6670:
 10482     1719                     l4884:
 10483     1719  1424               	bsf	___fldiv@b,0
 10484     171A                     l4886:
 10485     171A  3001               	movlw	1
 10486     171B                     u6685:
 10487     171B  35B4               	lslf	___fldiv@grs,f
 10488     171C  0DB5               	rlf	___fldiv@grs+1,f
 10489     171D  0DB6               	rlf	___fldiv@grs+2,f
 10490     171E  0DB7               	rlf	___fldiv@grs+3,f
 10491     171F  0B89               	decfsz	9,f
 10492     1720  2F1B               	goto	u6685
 10493     1721                     l4888:
 10494     1721  0823               	movf	___fldiv@a+3,w
 10495     1722  0230               	subwf	___fldiv@rem+3,w
 10496     1723  1D03               	skipz
 10497     1724  2F2F               	goto	u6695
 10498     1725  0822               	movf	___fldiv@a+2,w
 10499     1726  022F               	subwf	___fldiv@rem+2,w
 10500     1727  1D03               	skipz
 10501     1728  2F2F               	goto	u6695
 10502     1729  0821               	movf	___fldiv@a+1,w
 10503     172A  022E               	subwf	___fldiv@rem+1,w
 10504     172B  1D03               	skipz
 10505     172C  2F2F               	goto	u6695
 10506     172D  0820               	movf	___fldiv@a,w
 10507     172E  022D               	subwf	___fldiv@rem,w
 10508     172F                     u6695:
 10509     172F  1C03               	skipc
 10510     1730  2F32               	goto	u6691
 10511     1731  2F33               	goto	u6690
 10512     1732                     u6691:
 10513     1732  2F3C               	goto	l4894
 10514     1733                     u6690:
 10515     1733                     l4890:
 10516     1733  1737               	bsf	___fldiv@grs+3,6
 10517     1734                     l4892:
 10518     1734  0820               	movf	___fldiv@a,w
 10519     1735  02AD               	subwf	___fldiv@rem,f
 10520     1736  0821               	movf	___fldiv@a+1,w
 10521     1737  3BAE               	subwfb	___fldiv@rem+1,f
 10522     1738  0822               	movf	___fldiv@a+2,w
 10523     1739  3BAF               	subwfb	___fldiv@rem+2,f
 10524     173A  0823               	movf	___fldiv@a+3,w
 10525     173B  3BB0               	subwfb	___fldiv@rem+3,f
 10526     173C                     l4894:
 10527     173C  3001               	movlw	1
 10528     173D  07B9               	addwf	___fldiv@aexp,f
 10529     173E                     l4896:
 10530     173E  301A               	movlw	26
 10531     173F  0239               	subwf	___fldiv@aexp,w
 10532     1740  1C03               	skipc
 10533     1741  2F43               	goto	u6701
 10534     1742  2F44               	goto	u6700
 10535     1743                     u6701:
 10536     1743  2F02               	goto	l4878
 10537     1744                     u6700:
 10538     1744                     l4898:
 10539     1744  0830               	movf	___fldiv@rem+3,w
 10540     1745  042F               	iorwf	___fldiv@rem+2,w
 10541     1746  042E               	iorwf	___fldiv@rem+1,w
 10542     1747  042D               	iorwf	___fldiv@rem,w
 10543     1748  1903               	skipnz
 10544     1749  2F4B               	goto	u6711
 10545     174A  2F4C               	goto	u6710
 10546     174B                     u6711:
 10547     174B  2F65               	goto	l4912
 10548     174C                     u6710:
 10549     174C                     l4900:
 10550     174C  1434               	bsf	___fldiv@grs,0
 10551     174D  2F65               	goto	l4912
 10552     174E                     l4902:
 10553     174E  3001               	movlw	1
 10554     174F                     u6725:
 10555     174F  35A4               	lslf	___fldiv@b,f
 10556     1750  0DA5               	rlf	___fldiv@b+1,f
 10557     1751  0DA6               	rlf	___fldiv@b+2,f
 10558     1752  0DA7               	rlf	___fldiv@b+3,f
 10559     1753  0B89               	decfsz	9,f
 10560     1754  2F4F               	goto	u6725
 10561     1755                     l4904:
 10562     1755  1FB7               	btfss	___fldiv@grs+3,7
 10563     1756  2F58               	goto	u6731
 10564     1757  2F59               	goto	u6730
 10565     1758                     u6731:
 10566     1758  2F5A               	goto	l4908
 10567     1759                     u6730:
 10568     1759                     l4906:
 10569     1759  1424               	bsf	___fldiv@b,0
 10570     175A                     l4908:
 10571     175A  3001               	movlw	1
 10572     175B                     u6745:
 10573     175B  35B4               	lslf	___fldiv@grs,f
 10574     175C  0DB5               	rlf	___fldiv@grs+1,f
 10575     175D  0DB6               	rlf	___fldiv@grs+2,f
 10576     175E  0DB7               	rlf	___fldiv@grs+3,f
 10577     175F  0B89               	decfsz	9,f
 10578     1760  2F5B               	goto	u6745
 10579     1761                     l4910:
 10580     1761  30FF               	movlw	255
 10581     1762  07B2               	addwf	___fldiv@new_exp,f
 10582     1763  30FF               	movlw	255
 10583     1764  3DB3               	addwfc	___fldiv@new_exp+1,f
 10584     1765                     l4912:
 10585     1765  1FA6               	btfss	___fldiv@b+2,7
 10586     1766  2F68               	goto	u6751
 10587     1767  2F69               	goto	u6750
 10588     1768                     u6751:
 10589     1768  2F4E               	goto	l4902
 10590     1769                     u6750:
 10591     1769                     l4914:
 10592     1769  01B9               	clrf	___fldiv@aexp
 10593     176A                     l4916:
 10594     176A  1FB7               	btfss	___fldiv@grs+3,7
 10595     176B  2F6D               	goto	u6761
 10596     176C  2F6E               	goto	u6760
 10597     176D                     u6761:
 10598     176D  2F8A               	goto	l4924
 10599     176E                     u6760:
 10600     176E                     l4918:
 10601     176E  30FF               	movlw	255
 10602     176F  0534               	andwf	___fldiv@grs,w
 10603     1770  00A8               	movwf	??___fldiv
 10604     1771  30FF               	movlw	255
 10605     1772  0535               	andwf	___fldiv@grs+1,w
 10606     1773  00A9               	movwf	??___fldiv+1
 10607     1774  30FF               	movlw	255
 10608     1775  0536               	andwf	___fldiv@grs+2,w
 10609     1776  00AA               	movwf	??___fldiv+2
 10610     1777  307F               	movlw	127
 10611     1778  0537               	andwf	___fldiv@grs+3,w
 10612     1779  00AB               	movwf	??___fldiv+3
 10613     177A  082B               	movf	??___fldiv+3,w
 10614     177B  042A               	iorwf	??___fldiv+2,w
 10615     177C  0429               	iorwf	??___fldiv+1,w
 10616     177D  0428               	iorwf	??___fldiv,w
 10617     177E  1903               	skipnz
 10618     177F  2F81               	goto	u6771
 10619     1780  2F82               	goto	u6770
 10620     1781                     u6771:
 10621     1781  2F85               	goto	l1073
 10622     1782                     u6770:
 10623     1782                     l4920:
 10624     1782  3001               	movlw	1
 10625     1783  00B9               	movwf	___fldiv@aexp
 10626     1784  2F8A               	goto	l4924
 10627     1785                     l1073:
 10628     1785  1C24               	btfss	___fldiv@b,0
 10629     1786  2F88               	goto	u6781
 10630     1787  2F89               	goto	u6780
 10631     1788                     u6781:
 10632     1788  2F8A               	goto	l4924
 10633     1789                     u6780:
 10634     1789  2F82               	goto	l4920
 10635     178A                     l4924:
 10636     178A  0839               	movf	___fldiv@aexp,w
 10637     178B  1903               	btfsc	3,2
 10638     178C  2F8E               	goto	u6791
 10639     178D  2F8F               	goto	u6790
 10640     178E                     u6791:
 10641     178E  2FB5               	goto	l4934
 10642     178F                     u6790:
 10643     178F                     l4926:
 10644     178F  3001               	movlw	1
 10645     1790  07A4               	addwf	___fldiv@b,f
 10646     1791  3000               	movlw	0
 10647     1792  3DA5               	addwfc	___fldiv@b+1,f
 10648     1793  3DA6               	addwfc	___fldiv@b+2,f
 10649     1794  3DA7               	addwfc	___fldiv@b+3,f
 10650     1795                     l4928:
 10651     1795  1C27               	btfss	___fldiv@b+3,0
 10652     1796  2F98               	goto	u6801
 10653     1797  2F99               	goto	u6800
 10654     1798                     u6801:
 10655     1798  2FB5               	goto	l4934
 10656     1799                     u6800:
 10657     1799                     l4930:
 10658     1799  0824               	movf	___fldiv@b,w
 10659     179A  00A8               	movwf	??___fldiv
 10660     179B  0825               	movf	___fldiv@b+1,w
 10661     179C  00A9               	movwf	??___fldiv+1
 10662     179D  0826               	movf	___fldiv@b+2,w
 10663     179E  00AA               	movwf	??___fldiv+2
 10664     179F  0827               	movf	___fldiv@b+3,w
 10665     17A0  00AB               	movwf	??___fldiv+3
 10666     17A1  3001               	movlw	1
 10667     17A2  00AC               	movwf	??___fldiv+4
 10668     17A3                     u6815:
 10669     17A3  37AB               	asrf	??___fldiv+3,f
 10670     17A4  0CAA               	rrf	??___fldiv+2,f
 10671     17A5  0CA9               	rrf	??___fldiv+1,f
 10672     17A6  0CA8               	rrf	??___fldiv,f
 10673     17A7                     u6810:
 10674     17A7  0BAC               	decfsz	??___fldiv+4,f
 10675     17A8  2FA3               	goto	u6815
 10676     17A9  082B               	movf	??___fldiv+3,w
 10677     17AA  00A7               	movwf	___fldiv@b+3
 10678     17AB  082A               	movf	??___fldiv+2,w
 10679     17AC  00A6               	movwf	___fldiv@b+2
 10680     17AD  0829               	movf	??___fldiv+1,w
 10681     17AE  00A5               	movwf	___fldiv@b+1
 10682     17AF  0828               	movf	??___fldiv,w
 10683     17B0  00A4               	movwf	___fldiv@b
 10684     17B1                     l4932:
 10685     17B1  3001               	movlw	1
 10686     17B2  07B2               	addwf	___fldiv@new_exp,f
 10687     17B3  3000               	movlw	0
 10688     17B4  3DB3               	addwfc	___fldiv@new_exp+1,f
 10689     17B5                     l4934:
 10690     17B5  0833               	movf	___fldiv@new_exp+1,w
 10691     17B6  3A80               	xorlw	128
 10692     17B7  00A8               	movwf	??___fldiv
 10693     17B8  3080               	movlw	128
 10694     17B9  0228               	subwf	??___fldiv,w
 10695     17BA  1D03               	skipz
 10696     17BB  2FBE               	goto	u6825
 10697     17BC  30FF               	movlw	255
 10698     17BD  0232               	subwf	___fldiv@new_exp,w
 10699     17BE                     u6825:
 10700     17BE  1C03               	skipc
 10701     17BF  2FC1               	goto	u6821
 10702     17C0  2FC2               	goto	u6820
 10703     17C1                     u6821:
 10704     17C1  2FCF               	goto	l1078
 10705     17C2                     u6820:
 10706     17C2                     l4936:
 10707     17C2  30FF               	movlw	255
 10708     17C3  0020               	movlb	0	; select bank0
 10709     17C4  00B2               	movwf	___fldiv@new_exp
 10710     17C5  3000               	movlw	0
 10711     17C6  00B3               	movwf	___fldiv@new_exp+1
 10712     17C7  3000               	movlw	0
 10713     17C8  00A7               	movwf	___fldiv@b+3
 10714     17C9  3000               	movlw	0
 10715     17CA  00A6               	movwf	___fldiv@b+2
 10716     17CB  3000               	movlw	0
 10717     17CC  00A5               	movwf	___fldiv@b+1
 10718     17CD  3000               	movlw	0
 10719     17CE  00A4               	movwf	___fldiv@b
 10720     17CF                     l1078:
 10721     17CF  0020               	movlb	0	; select bank0
 10722     17D0  0833               	movf	___fldiv@new_exp+1,w
 10723     17D1  3A80               	xorlw	128
 10724     17D2  00A8               	movwf	??___fldiv
 10725     17D3  3080               	movlw	128
 10726     17D4  0228               	subwf	??___fldiv,w
 10727     17D5  1D03               	skipz
 10728     17D6  2FD9               	goto	u6835
 10729     17D7  3001               	movlw	1
 10730     17D8  0232               	subwf	___fldiv@new_exp,w
 10731     17D9                     u6835:
 10732     17D9  1803               	skipnc
 10733     17DA  2FDC               	goto	u6831
 10734     17DB  2FDD               	goto	u6830
 10735     17DC                     u6831:
 10736     17DC  2FE9               	goto	l1079
 10737     17DD                     u6830:
 10738     17DD                     l4938:
 10739     17DD  0020               	movlb	0	; select bank0
 10740     17DE  01B2               	clrf	___fldiv@new_exp
 10741     17DF  01B3               	clrf	___fldiv@new_exp+1
 10742     17E0                     l4940:
 10743     17E0  3000               	movlw	0
 10744     17E1  00A7               	movwf	___fldiv@b+3
 10745     17E2  3000               	movlw	0
 10746     17E3  00A6               	movwf	___fldiv@b+2
 10747     17E4  3000               	movlw	0
 10748     17E5  00A5               	movwf	___fldiv@b+1
 10749     17E6  3000               	movlw	0
 10750     17E7  00A4               	movwf	___fldiv@b
 10751     17E8                     l4942:
 10752     17E8  01B1               	clrf	___fldiv@sign
 10753     17E9                     l1079:
 10754     17E9  0020               	movlb	0	; select bank0
 10755     17EA  0832               	movf	___fldiv@new_exp,w
 10756     17EB  00B8               	movwf	___fldiv@bexp
 10757     17EC                     l4944:
 10758     17EC  1C38               	btfss	___fldiv@bexp,0
 10759     17ED  2FEF               	goto	u6841
 10760     17EE  2FF0               	goto	u6840
 10761     17EF                     u6841:
 10762     17EF  2FF2               	goto	l4948
 10763     17F0                     u6840:
 10764     17F0                     l4946:
 10765     17F0  17A6               	bsf	___fldiv@b+2,7
 10766     17F1  2FF4               	goto	l1081
 10767     17F2                     l4948:
 10768     17F2  307F               	movlw	127
 10769     17F3  05A6               	andwf	___fldiv@b+2,f
 10770     17F4                     l1081:
 10771     17F4  0838               	movf	___fldiv@bexp,w
 10772     17F5  00A8               	movwf	??___fldiv
 10773     17F6  3001               	movlw	1
 10774     17F7                     u6855:
 10775     17F7  36A8               	lsrf	??___fldiv,f
 10776     17F8  0B89               	decfsz	9,f
 10777     17F9  2FF7               	goto	u6855
 10778     17FA  0828               	movf	??___fldiv,w
 10779     17FB  00A7               	movwf	___fldiv@b+3
 10780     17FC  0831               	movf	___fldiv@sign,w
 10781     17FD  04A7               	iorwf	___fldiv@b+3,f
 10782     17FE  2EC1               	goto	l4858
 10783     17FF                     l1059:
 10784     17FF  0008               	return
 10785     1800                     __end_of___fldiv:
 10786                           
 10787                           	psect	text26
 10788     082C                     __ptext26:	
 10789 ;; *************** function _handle_voltage *****************
 10790 ;; Defined at:
 10791 ;;		line 75 in file "main.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  voltage         4   56[BANK0 ] unsigned char 
 10794 ;;  threshold       4   60[BANK0 ] unsigned char 
 10795 ;;  mode            1   64[BANK0 ] unsigned char 
 10796 ;;  reset_flg       1   65[BANK0 ] PTR unsigned char 
 10797 ;;		 -> reset_flg_12(1), reset_flg_24(1), 
 10798 ;;  LED_SetHigh     2   66[BANK0 ] PTR FTN()void 
 10799 ;;		 -> LED_12V_On(1), LED_24V_On(1), 
 10800 ;;  LED_SetLow      2   68[BANK0 ] PTR FTN()void 
 10801 ;;		 -> LED_12V_Off(1), LED_24V_Off(1), 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10813 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;Total ram usage:       14 bytes
 10818 ;; Hardware stack levels used: 1
 10819 ;; Hardware stack levels required when called: 6
 10820 ;; This function calls:
 10821 ;;		_LED_12V_Off
 10822 ;;		_LED_12V_On
 10823 ;;		_LED_24V_Off
 10824 ;;		_LED_24V_On
 10825 ;;		___flge
 10826 ;;		_delay_ms
 10827 ;;		_handle_buzzer
 10828 ;; This function is called by:
 10829 ;;		_main
 10830 ;; This function uses a non-reentrant model
 10831 ;;
 10832                           
 10833     082C                     _handle_voltage:	
 10834                           ;psect for function _handle_voltage
 10835                           
 10836     082C                     l5628:	
 10837                           ;incstack = 0
 10838                           ; Regs used in _handle_voltage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10839                           
 10840                           
 10841                           ;main.c: 75: void handle_voltage(double voltage, double threshold, char mode, char *rese
      +                          t_flg, void (*LED_SetHigh)(), void (*LED_SetLow)());main.c: 76: {;main.c: 77:     if (vo
      +                          ltage < threshold && *reset_flg == 3) {
 10842     082C  0020               	movlb	0	; select bank0
 10843     082D  085B               	movf	handle_voltage@voltage+3,w
 10844     082E  00CF               	movwf	___flge@ff1+3
 10845     082F  085A               	movf	handle_voltage@voltage+2,w
 10846     0830  00CE               	movwf	___flge@ff1+2
 10847     0831  0859               	movf	handle_voltage@voltage+1,w
 10848     0832  00CD               	movwf	___flge@ff1+1
 10849     0833  0858               	movf	handle_voltage@voltage,w
 10850     0834  00CC               	movwf	___flge@ff1
 10851     0835  085F               	movf	handle_voltage@threshold+3,w
 10852     0836  00D3               	movwf	___flge@ff2+3
 10853     0837  085E               	movf	handle_voltage@threshold+2,w
 10854     0838  00D2               	movwf	___flge@ff2+2
 10855     0839  085D               	movf	handle_voltage@threshold+1,w
 10856     083A  00D1               	movwf	___flge@ff2+1
 10857     083B  085C               	movf	handle_voltage@threshold,w
 10858     083C  00D0               	movwf	___flge@ff2
 10859     083D  3193  23D4  3188   	fcall	___flge
 10860     0840  1803               	btfsc	3,0
 10861     0841  2843               	goto	u7811
 10862     0842  2844               	goto	u7810
 10863     0843                     u7811:
 10864     0843  285D               	goto	l5638
 10865     0844                     u7810:
 10866     0844                     l5630:
 10867     0844  0020               	movlb	0	; select bank0
 10868     0845  0861               	movf	handle_voltage@reset_flg,w
 10869     0846  0086               	movwf	6
 10870     0847  3001               	movlw	1	; select bank2/3
 10871     0848  0087               	movwf	7
 10872     0849  3003               	movlw	3
 10873     084A  0601               	xorwf	1,w
 10874     084B  1D03               	btfss	3,2
 10875     084C  284E               	goto	u7821
 10876     084D  284F               	goto	u7820
 10877     084E                     u7821:
 10878     084E  285D               	goto	l5638
 10879     084F                     u7820:
 10880     084F                     l5632:
 10881                           
 10882                           ;main.c: 78:         *reset_flg = 4;
 10883     084F  0861               	movf	handle_voltage@reset_flg,w
 10884     0850  0086               	movwf	6
 10885     0851  3001               	movlw	1	; select bank2/3
 10886     0852  0087               	movwf	7
 10887     0853  3004               	movlw	4
 10888     0854  0081               	movwf	1
 10889     0855                     l5634:
 10890     0855  0022               	movlb	2	; select bank2
 10891     0856  110C               	bcf	12,2	;volatile
 10892     0857                     l5636:
 10893                           
 10894                           ;main.c: 80:         LED_SetLow();
 10895     0857  0020               	movlb	0	; select bank0
 10896     0858  0865               	movf	handle_voltage@LED_SetLow+1,w
 10897     0859  008A               	movwf	10
 10898     085A  0864               	movf	handle_voltage@LED_SetLow,w
 10899     085B  000A               	callw
 10900     085C  3188               	pagesel	$
 10901     085D                     l5638:
 10902                           
 10903                           ;main.c: 83:     if(*reset_flg == 0){
 10904     085D  0020               	movlb	0	; select bank0
 10905     085E  0861               	movf	handle_voltage@reset_flg,w
 10906     085F  0086               	movwf	6
 10907     0860  3001               	movlw	1	; select bank2/3
 10908     0861  0087               	movwf	7
 10909     0862  0801               	movf	1,w
 10910     0863  1D03               	btfss	3,2
 10911     0864  2866               	goto	u7831
 10912     0865  2867               	goto	u7830
 10913     0866                     u7831:
 10914     0866  2876               	goto	l5646
 10915     0867                     u7830:
 10916     0867                     l5640:
 10917                           
 10918                           ;main.c: 84:         delay_ms(500);
 10919     0867  30F4               	movlw	244
 10920     0868  00A0               	movwf	delay_ms@ms
 10921     0869  3001               	movlw	1
 10922     086A  00A1               	movwf	delay_ms@ms+1
 10923     086B  319F  2727  3188   	fcall	_delay_ms
 10924     086E                     l5642:
 10925                           
 10926                           ;main.c: 85:         *reset_flg = 1;
 10927     086E  0020               	movlb	0	; select bank0
 10928     086F  0861               	movf	handle_voltage@reset_flg,w
 10929     0870  0086               	movwf	6
 10930     0871  3001               	movlw	1	; select bank2/3
 10931     0872  0087               	movwf	7
 10932     0873  3001               	movlw	1
 10933     0874  0081               	movwf	1
 10934     0875  29D7               	goto	l571
 10935     0876                     l5646:
 10936                           
 10937                           ;main.c: 90:     if (((mode == 24 && voltage <= 19.8) || (mode == 12 && voltage <= 9.9))
      +                           && *reset_flg == 1) {
 10938     0876  3018               	movlw	24
 10939     0877  0660               	xorwf	handle_voltage@mode,w
 10940     0878  1D03               	btfss	3,2
 10941     0879  287B               	goto	u7841
 10942     087A  287C               	goto	u7840
 10943     087B                     u7841:
 10944     087B  2893               	goto	l5650
 10945     087C                     u7840:
 10946     087C                     l5648:
 10947     087C  3041               	movlw	65
 10948     087D  00CF               	movwf	___flge@ff1+3
 10949     087E  309E               	movlw	158
 10950     087F  00CE               	movwf	___flge@ff1+2
 10951     0880  3066               	movlw	102
 10952     0881  00CD               	movwf	___flge@ff1+1
 10953     0882  3066               	movlw	102
 10954     0883  00CC               	movwf	___flge@ff1
 10955     0884  085B               	movf	handle_voltage@voltage+3,w
 10956     0885  00D3               	movwf	___flge@ff2+3
 10957     0886  085A               	movf	handle_voltage@voltage+2,w
 10958     0887  00D2               	movwf	___flge@ff2+2
 10959     0888  0859               	movf	handle_voltage@voltage+1,w
 10960     0889  00D1               	movwf	___flge@ff2+1
 10961     088A  0858               	movf	handle_voltage@voltage,w
 10962     088B  00D0               	movwf	___flge@ff2
 10963     088C  3193  23D4  3188   	fcall	___flge
 10964     088F  1803               	btfsc	3,0
 10965     0890  2892               	goto	u7851
 10966     0891  2893               	goto	u7850
 10967     0892                     u7851:
 10968     0892  28B1               	goto	l5654
 10969     0893                     u7850:
 10970     0893                     l5650:
 10971     0893  300C               	movlw	12
 10972     0894  0020               	movlb	0	; select bank0
 10973     0895  0660               	xorwf	handle_voltage@mode,w
 10974     0896  1D03               	btfss	3,2
 10975     0897  2899               	goto	u7861
 10976     0898  289A               	goto	u7860
 10977     0899                     u7861:
 10978     0899  28D3               	goto	l5662
 10979     089A                     u7860:
 10980     089A                     l5652:
 10981     089A  3041               	movlw	65
 10982     089B  00CF               	movwf	___flge@ff1+3
 10983     089C  301E               	movlw	30
 10984     089D  00CE               	movwf	___flge@ff1+2
 10985     089E  3066               	movlw	102
 10986     089F  00CD               	movwf	___flge@ff1+1
 10987     08A0  3066               	movlw	102
 10988     08A1  00CC               	movwf	___flge@ff1
 10989     08A2  085B               	movf	handle_voltage@voltage+3,w
 10990     08A3  00D3               	movwf	___flge@ff2+3
 10991     08A4  085A               	movf	handle_voltage@voltage+2,w
 10992     08A5  00D2               	movwf	___flge@ff2+2
 10993     08A6  0859               	movf	handle_voltage@voltage+1,w
 10994     08A7  00D1               	movwf	___flge@ff2+1
 10995     08A8  0858               	movf	handle_voltage@voltage,w
 10996     08A9  00D0               	movwf	___flge@ff2
 10997     08AA  3193  23D4  3188   	fcall	___flge
 10998     08AD  1C03               	btfss	3,0
 10999     08AE  28B0               	goto	u7871
 11000     08AF  28B1               	goto	u7870
 11001     08B0                     u7871:
 11002     08B0  28D3               	goto	l5662
 11003     08B1                     u7870:
 11004     08B1                     l5654:
 11005     08B1  0020               	movlb	0	; select bank0
 11006     08B2  0861               	movf	handle_voltage@reset_flg,w
 11007     08B3  0086               	movwf	6
 11008     08B4  3001               	movlw	1	; select bank2/3
 11009     08B5  0087               	movwf	7
 11010     08B6  0301               	decf	1,w
 11011     08B7  1D03               	btfss	3,2
 11012     08B8  28BA               	goto	u7881
 11013     08B9  28BB               	goto	u7880
 11014     08BA                     u7881:
 11015     08BA  28D3               	goto	l5662
 11016     08BB                     u7880:
 11017     08BB                     l5656:
 11018                           
 11019                           ;main.c: 91:         LED_SetHigh();
 11020     08BB  0863               	movf	handle_voltage@LED_SetHigh+1,w
 11021     08BC  008A               	movwf	10
 11022     08BD  0862               	movf	handle_voltage@LED_SetHigh,w
 11023     08BE  000A               	callw
 11024     08BF  3188               	pagesel	$
 11025                           
 11026                           ;main.c: 92:         delay_ms(5000);
 11027     08C0  3088               	movlw	136
 11028     08C1  0020               	movlb	0	; select bank0
 11029     08C2  00A0               	movwf	delay_ms@ms
 11030     08C3  3013               	movlw	19
 11031     08C4  00A1               	movwf	delay_ms@ms+1
 11032     08C5  319F  2727  3188   	fcall	_delay_ms
 11033     08C8                     l5658:
 11034                           
 11035                           ;main.c: 93:         *reset_flg = 2;
 11036     08C8  0020               	movlb	0	; select bank0
 11037     08C9  0861               	movf	handle_voltage@reset_flg,w
 11038     08CA  0086               	movwf	6
 11039     08CB  3001               	movlw	1	; select bank2/3
 11040     08CC  0087               	movwf	7
 11041     08CD  3002               	movlw	2
 11042     08CE  0081               	movwf	1
 11043     08CF                     l5660:
 11044                           
 11045                           ;main.c: 94:         handle_buzzer();
 11046     08CF  319F  27A0  3188   	fcall	_handle_buzzer
 11047                           
 11048                           ;main.c: 95:     }else if(((mode == 24 && voltage > 19.8) || (mode == 12 && voltage > 9.
      +                          9)) && *reset_flg == 1){
 11049     08D2  291E               	goto	l5674
 11050     08D3                     l5662:
 11051     08D3  3018               	movlw	24
 11052     08D4  0020               	movlb	0	; select bank0
 11053     08D5  0660               	xorwf	handle_voltage@mode,w
 11054     08D6  1D03               	btfss	3,2
 11055     08D7  28D9               	goto	u7891
 11056     08D8  28DA               	goto	u7890
 11057     08D9                     u7891:
 11058     08D9  28F1               	goto	l5666
 11059     08DA                     u7890:
 11060     08DA                     l5664:
 11061     08DA  3041               	movlw	65
 11062     08DB  00CF               	movwf	___flge@ff1+3
 11063     08DC  309E               	movlw	158
 11064     08DD  00CE               	movwf	___flge@ff1+2
 11065     08DE  3066               	movlw	102
 11066     08DF  00CD               	movwf	___flge@ff1+1
 11067     08E0  3066               	movlw	102
 11068     08E1  00CC               	movwf	___flge@ff1
 11069     08E2  085B               	movf	handle_voltage@voltage+3,w
 11070     08E3  00D3               	movwf	___flge@ff2+3
 11071     08E4  085A               	movf	handle_voltage@voltage+2,w
 11072     08E5  00D2               	movwf	___flge@ff2+2
 11073     08E6  0859               	movf	handle_voltage@voltage+1,w
 11074     08E7  00D1               	movwf	___flge@ff2+1
 11075     08E8  0858               	movf	handle_voltage@voltage,w
 11076     08E9  00D0               	movwf	___flge@ff2
 11077     08EA  3193  23D4  3188   	fcall	___flge
 11078     08ED  1C03               	btfss	3,0
 11079     08EE  28F0               	goto	u7901
 11080     08EF  28F1               	goto	u7900
 11081     08F0                     u7901:
 11082     08F0  290F               	goto	l5670
 11083     08F1                     u7900:
 11084     08F1                     l5666:
 11085     08F1  300C               	movlw	12
 11086     08F2  0020               	movlb	0	; select bank0
 11087     08F3  0660               	xorwf	handle_voltage@mode,w
 11088     08F4  1D03               	btfss	3,2
 11089     08F5  28F7               	goto	u7911
 11090     08F6  28F8               	goto	u7910
 11091     08F7                     u7911:
 11092     08F7  291E               	goto	l5674
 11093     08F8                     u7910:
 11094     08F8                     l5668:
 11095     08F8  3041               	movlw	65
 11096     08F9  00CF               	movwf	___flge@ff1+3
 11097     08FA  301E               	movlw	30
 11098     08FB  00CE               	movwf	___flge@ff1+2
 11099     08FC  3066               	movlw	102
 11100     08FD  00CD               	movwf	___flge@ff1+1
 11101     08FE  3066               	movlw	102
 11102     08FF  00CC               	movwf	___flge@ff1
 11103     0900  085B               	movf	handle_voltage@voltage+3,w
 11104     0901  00D3               	movwf	___flge@ff2+3
 11105     0902  085A               	movf	handle_voltage@voltage+2,w
 11106     0903  00D2               	movwf	___flge@ff2+2
 11107     0904  0859               	movf	handle_voltage@voltage+1,w
 11108     0905  00D1               	movwf	___flge@ff2+1
 11109     0906  0858               	movf	handle_voltage@voltage,w
 11110     0907  00D0               	movwf	___flge@ff2
 11111     0908  3193  23D4  3188   	fcall	___flge
 11112     090B  1803               	btfsc	3,0
 11113     090C  290E               	goto	u7921
 11114     090D  290F               	goto	u7920
 11115     090E                     u7921:
 11116     090E  291E               	goto	l5674
 11117     090F                     u7920:
 11118     090F                     l5670:
 11119     090F  0020               	movlb	0	; select bank0
 11120     0910  0861               	movf	handle_voltage@reset_flg,w
 11121     0911  0086               	movwf	6
 11122     0912  3001               	movlw	1	; select bank2/3
 11123     0913  0087               	movwf	7
 11124     0914  0301               	decf	1,w
 11125     0915  1D03               	btfss	3,2
 11126     0916  2918               	goto	u7931
 11127     0917  2919               	goto	u7930
 11128     0918                     u7931:
 11129     0918  291E               	goto	l5674
 11130     0919                     u7930:
 11131     0919                     l5672:
 11132                           
 11133                           ;main.c: 96:         *reset_flg = 0;
 11134     0919  0861               	movf	handle_voltage@reset_flg,w
 11135     091A  0086               	movwf	6
 11136     091B  3001               	movlw	1	; select bank2/3
 11137     091C  0087               	movwf	7
 11138     091D  0181               	clrf	1
 11139     091E                     l5674:
 11140                           
 11141                           ;main.c: 99:     if (((mode == 24 && voltage <= 18.6) || (mode == 12 && voltage <= 9.3))
      +                           && *reset_flg <= 2) {
 11142     091E  3018               	movlw	24
 11143     091F  0020               	movlb	0	; select bank0
 11144     0920  0660               	xorwf	handle_voltage@mode,w
 11145     0921  1D03               	btfss	3,2
 11146     0922  2924               	goto	u7941
 11147     0923  2925               	goto	u7940
 11148     0924                     u7941:
 11149     0924  293C               	goto	l5678
 11150     0925                     u7940:
 11151     0925                     l5676:
 11152     0925  3041               	movlw	65
 11153     0926  00CF               	movwf	___flge@ff1+3
 11154     0927  3094               	movlw	148
 11155     0928  00CE               	movwf	___flge@ff1+2
 11156     0929  30CC               	movlw	204
 11157     092A  00CD               	movwf	___flge@ff1+1
 11158     092B  30CD               	movlw	205
 11159     092C  00CC               	movwf	___flge@ff1
 11160     092D  085B               	movf	handle_voltage@voltage+3,w
 11161     092E  00D3               	movwf	___flge@ff2+3
 11162     092F  085A               	movf	handle_voltage@voltage+2,w
 11163     0930  00D2               	movwf	___flge@ff2+2
 11164     0931  0859               	movf	handle_voltage@voltage+1,w
 11165     0932  00D1               	movwf	___flge@ff2+1
 11166     0933  0858               	movf	handle_voltage@voltage,w
 11167     0934  00D0               	movwf	___flge@ff2
 11168     0935  3193  23D4  3188   	fcall	___flge
 11169     0938  1803               	btfsc	3,0
 11170     0939  293B               	goto	u7951
 11171     093A  293C               	goto	u7950
 11172     093B                     u7951:
 11173     093B  295A               	goto	l5682
 11174     093C                     u7950:
 11175     093C                     l5678:
 11176     093C  300C               	movlw	12
 11177     093D  0020               	movlb	0	; select bank0
 11178     093E  0660               	xorwf	handle_voltage@mode,w
 11179     093F  1D03               	btfss	3,2
 11180     0940  2942               	goto	u7961
 11181     0941  2943               	goto	u7960
 11182     0942                     u7961:
 11183     0942  296B               	goto	l5686
 11184     0943                     u7960:
 11185     0943                     l5680:
 11186     0943  3041               	movlw	65
 11187     0944  00CF               	movwf	___flge@ff1+3
 11188     0945  3014               	movlw	20
 11189     0946  00CE               	movwf	___flge@ff1+2
 11190     0947  30CC               	movlw	204
 11191     0948  00CD               	movwf	___flge@ff1+1
 11192     0949  30CD               	movlw	205
 11193     094A  00CC               	movwf	___flge@ff1
 11194     094B  085B               	movf	handle_voltage@voltage+3,w
 11195     094C  00D3               	movwf	___flge@ff2+3
 11196     094D  085A               	movf	handle_voltage@voltage+2,w
 11197     094E  00D2               	movwf	___flge@ff2+2
 11198     094F  0859               	movf	handle_voltage@voltage+1,w
 11199     0950  00D1               	movwf	___flge@ff2+1
 11200     0951  0858               	movf	handle_voltage@voltage,w
 11201     0952  00D0               	movwf	___flge@ff2
 11202     0953  3193  23D4  3188   	fcall	___flge
 11203     0956  1C03               	btfss	3,0
 11204     0957  2959               	goto	u7971
 11205     0958  295A               	goto	u7970
 11206     0959                     u7971:
 11207     0959  296B               	goto	l5686
 11208     095A                     u7970:
 11209     095A                     l5682:
 11210     095A  0020               	movlb	0	; select bank0
 11211     095B  0861               	movf	handle_voltage@reset_flg,w
 11212     095C  0086               	movwf	6
 11213     095D  3001               	movlw	1	; select bank2/3
 11214     095E  0087               	movwf	7
 11215     095F  3003               	movlw	3
 11216     0960  0201               	subwf	1,w
 11217     0961  1803               	skipnc
 11218     0962  2964               	goto	u7981
 11219     0963  2965               	goto	u7980
 11220     0964                     u7981:
 11221     0964  296B               	goto	l5686
 11222     0965                     u7980:
 11223     0965                     l5684:
 11224                           
 11225                           ;main.c: 100:         *reset_flg = 3;
 11226     0965  0861               	movf	handle_voltage@reset_flg,w
 11227     0966  0086               	movwf	6
 11228     0967  3001               	movlw	1	; select bank2/3
 11229     0968  0087               	movwf	7
 11230     0969  3003               	movlw	3
 11231     096A  0081               	movwf	1
 11232     096B                     l5686:
 11233                           
 11234                           ;main.c: 105:     if (((mode == 24 && voltage >= 9.0) || (mode == 12 && voltage >= 6.0))
      +                           && *reset_flg == 4) {
 11235     096B  3018               	movlw	24
 11236     096C  0020               	movlb	0	; select bank0
 11237     096D  0660               	xorwf	handle_voltage@mode,w
 11238     096E  1D03               	btfss	3,2
 11239     096F  2971               	goto	u7991
 11240     0970  2972               	goto	u7990
 11241     0971                     u7991:
 11242     0971  2989               	goto	l5690
 11243     0972                     u7990:
 11244     0972                     l5688:
 11245     0972  085B               	movf	handle_voltage@voltage+3,w
 11246     0973  00CF               	movwf	___flge@ff1+3
 11247     0974  085A               	movf	handle_voltage@voltage+2,w
 11248     0975  00CE               	movwf	___flge@ff1+2
 11249     0976  0859               	movf	handle_voltage@voltage+1,w
 11250     0977  00CD               	movwf	___flge@ff1+1
 11251     0978  0858               	movf	handle_voltage@voltage,w
 11252     0979  00CC               	movwf	___flge@ff1
 11253     097A  3041               	movlw	65
 11254     097B  00D3               	movwf	___flge@ff2+3
 11255     097C  3010               	movlw	16
 11256     097D  00D2               	movwf	___flge@ff2+2
 11257     097E  3000               	movlw	0
 11258     097F  00D1               	movwf	___flge@ff2+1
 11259     0980  3000               	movlw	0
 11260     0981  00D0               	movwf	___flge@ff2
 11261     0982  3193  23D4  3188   	fcall	___flge
 11262     0985  1803               	btfsc	3,0
 11263     0986  2988               	goto	u8001
 11264     0987  2989               	goto	u8000
 11265     0988                     u8001:
 11266     0988  29A7               	goto	l5694
 11267     0989                     u8000:
 11268     0989                     l5690:
 11269     0989  300C               	movlw	12
 11270     098A  0020               	movlb	0	; select bank0
 11271     098B  0660               	xorwf	handle_voltage@mode,w
 11272     098C  1D03               	btfss	3,2
 11273     098D  298F               	goto	u8011
 11274     098E  2990               	goto	u8010
 11275     098F                     u8011:
 11276     098F  29D7               	goto	l571
 11277     0990                     u8010:
 11278     0990                     l5692:
 11279     0990  085B               	movf	handle_voltage@voltage+3,w
 11280     0991  00CF               	movwf	___flge@ff1+3
 11281     0992  085A               	movf	handle_voltage@voltage+2,w
 11282     0993  00CE               	movwf	___flge@ff1+2
 11283     0994  0859               	movf	handle_voltage@voltage+1,w
 11284     0995  00CD               	movwf	___flge@ff1+1
 11285     0996  0858               	movf	handle_voltage@voltage,w
 11286     0997  00CC               	movwf	___flge@ff1
 11287     0998  3040               	movlw	64
 11288     0999  00D3               	movwf	___flge@ff2+3
 11289     099A  30C0               	movlw	192
 11290     099B  00D2               	movwf	___flge@ff2+2
 11291     099C  3000               	movlw	0
 11292     099D  00D1               	movwf	___flge@ff2+1
 11293     099E  3000               	movlw	0
 11294     099F  00D0               	movwf	___flge@ff2
 11295     09A0  3193  23D4  3188   	fcall	___flge
 11296     09A3  1C03               	btfss	3,0
 11297     09A4  29A6               	goto	u8021
 11298     09A5  29A7               	goto	u8020
 11299     09A6                     u8021:
 11300     09A6  29D7               	goto	l571
 11301     09A7                     u8020:
 11302     09A7                     l5694:
 11303     09A7  0020               	movlb	0	; select bank0
 11304     09A8  0861               	movf	handle_voltage@reset_flg,w
 11305     09A9  0086               	movwf	6
 11306     09AA  3001               	movlw	1	; select bank2/3
 11307     09AB  0087               	movwf	7
 11308     09AC  3004               	movlw	4
 11309     09AD  0601               	xorwf	1,w
 11310     09AE  1D03               	btfss	3,2
 11311     09AF  29B1               	goto	u8031
 11312     09B0  29B2               	goto	u8030
 11313     09B1                     u8031:
 11314     09B1  29D7               	goto	l571
 11315     09B2                     u8030:
 11316     09B2                     l5696:
 11317                           
 11318                           ;main.c: 106:         *reset_flg = 0;
 11319     09B2  0861               	movf	handle_voltage@reset_flg,w
 11320     09B3  0086               	movwf	6
 11321     09B4  3001               	movlw	1	; select bank2/3
 11322     09B5  0087               	movwf	7
 11323     09B6  0181               	clrf	1
 11324     09B7                     l5698:
 11325     09B7  0022               	movlb	2	; select bank2
 11326     09B8  150C               	bsf	12,2	;volatile
 11327     09B9                     l5700:
 11328                           
 11329                           ;main.c: 108:         LED_SetHigh();
 11330     09B9  0020               	movlb	0	; select bank0
 11331     09BA  0863               	movf	handle_voltage@LED_SetHigh+1,w
 11332     09BB  008A               	movwf	10
 11333     09BC  0862               	movf	handle_voltage@LED_SetHigh,w
 11334     09BD  000A               	callw
 11335     09BE  3188               	pagesel	$
 11336     09BF                     l5702:
 11337                           
 11338                           ;main.c: 109:         delay_ms(500);
 11339     09BF  30F4               	movlw	244
 11340     09C0  0020               	movlb	0	; select bank0
 11341     09C1  00A0               	movwf	delay_ms@ms
 11342     09C2  3001               	movlw	1
 11343     09C3  00A1               	movwf	delay_ms@ms+1
 11344     09C4  319F  2727  3188   	fcall	_delay_ms
 11345     09C7                     l5704:
 11346     09C7  0022               	movlb	2	; select bank2
 11347     09C8  110C               	bcf	12,2	;volatile
 11348     09C9                     l5706:
 11349                           
 11350                           ;main.c: 111:         LED_SetLow();
 11351     09C9  0020               	movlb	0	; select bank0
 11352     09CA  0865               	movf	handle_voltage@LED_SetLow+1,w
 11353     09CB  008A               	movwf	10
 11354     09CC  0864               	movf	handle_voltage@LED_SetLow,w
 11355     09CD  000A               	callw
 11356     09CE  3188               	pagesel	$
 11357     09CF                     l5708:
 11358                           
 11359                           ;main.c: 112:         delay_ms(2000);
 11360     09CF  30D0               	movlw	208
 11361     09D0  0020               	movlb	0	; select bank0
 11362     09D1  00A0               	movwf	delay_ms@ms
 11363     09D2  3007               	movlw	7
 11364     09D3  00A1               	movwf	delay_ms@ms+1
 11365     09D4  319F  2727  3188   	fcall	_delay_ms
 11366     09D7                     l571:
 11367     09D7  0008               	return
 11368     09D8                     __end_of_handle_voltage:
 11369                           
 11370                           	psect	text27
 11371     1FA0                     __ptext27:	
 11372 ;; *************** function _handle_buzzer *****************
 11373 ;; Defined at:
 11374 ;;		line 116 in file "main.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;		None
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  i               1    5[BANK0 ] unsigned char 
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, status,2, status,0, pclath, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;Total ram usage:        1 bytes
 11393 ;; Hardware stack levels used: 1
 11394 ;; Hardware stack levels required when called: 5
 11395 ;; This function calls:
 11396 ;;		_delay_ms
 11397 ;; This function is called by:
 11398 ;;		_handle_voltage
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402     1FA0                     _handle_buzzer:	
 11403                           ;psect for function _handle_buzzer
 11404                           
 11405     1FA0                     l5568:	
 11406                           ;incstack = 0
 11407                           ; Regs used in _handle_buzzer: [wreg+status,2+status,0+pclath+cstack]
 11408                           
 11409                           
 11410                           ;main.c: 117:     for (char i = 0; i < 2; i++) {
 11411     1FA0  0020               	movlb	0	; select bank0
 11412     1FA1  01A5               	clrf	handle_buzzer@i
 11413     1FA2                     l601:	
 11414                           ;main.c: 118:         do { LATAbits.LATA2 = 1; } while(0);
 11415                           
 11416     1FA2  0022               	movlb	2	; select bank2
 11417     1FA3  150C               	bsf	12,2	;volatile
 11418     1FA4                     l5574:
 11419                           
 11420                           ;main.c: 119:         delay_ms(800);
 11421     1FA4  3020               	movlw	32
 11422     1FA5  0020               	movlb	0	; select bank0
 11423     1FA6  00A0               	movwf	delay_ms@ms
 11424     1FA7  3003               	movlw	3
 11425     1FA8  00A1               	movwf	delay_ms@ms+1
 11426     1FA9  319F  2727  319F   	fcall	_delay_ms
 11427     1FAC                     l5576:
 11428     1FAC  0022               	movlb	2	; select bank2
 11429     1FAD  110C               	bcf	12,2	;volatile
 11430     1FAE                     l604:
 11431                           
 11432                           ;main.c: 121:         delay_ms(500);
 11433     1FAE  30F4               	movlw	244
 11434     1FAF  0020               	movlb	0	; select bank0
 11435     1FB0  00A0               	movwf	delay_ms@ms
 11436     1FB1  3001               	movlw	1
 11437     1FB2  00A1               	movwf	delay_ms@ms+1
 11438     1FB3  319F  2727  319F   	fcall	_delay_ms
 11439     1FB6                     l5578:
 11440                           
 11441                           ;main.c: 122:     }
 11442     1FB6  3001               	movlw	1
 11443     1FB7  0020               	movlb	0	; select bank0
 11444     1FB8  07A5               	addwf	handle_buzzer@i,f
 11445     1FB9                     l5580:
 11446     1FB9  3002               	movlw	2
 11447     1FBA  0225               	subwf	handle_buzzer@i,w
 11448     1FBB  1C03               	skipc
 11449     1FBC  2FBE               	goto	u7771
 11450     1FBD  2FBF               	goto	u7770
 11451     1FBE                     u7771:
 11452     1FBE  2FA2               	goto	l601
 11453     1FBF                     u7770:
 11454     1FBF                     l605:
 11455     1FBF  0008               	return
 11456     1FC0                     __end_of_handle_buzzer:
 11457                           
 11458                           	psect	text28
 11459     1F27                     __ptext28:	
 11460 ;; *************** function _delay_ms *****************
 11461 ;; Defined at:
 11462 ;;		line 125 in file "main.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  ms              2    0[BANK0 ] unsigned int 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;  i               2    3[BANK0 ] unsigned int 
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      void 
 11469 ;; Registers used:
 11470 ;;		wreg, status,2
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11477 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11480 ;;Total ram usage:        5 bytes
 11481 ;; Hardware stack levels used: 1
 11482 ;; Hardware stack levels required when called: 4
 11483 ;; This function calls:
 11484 ;;		Nothing
 11485 ;; This function is called by:
 11486 ;;		_main
 11487 ;;		_handle_voltage
 11488 ;;		_handle_buzzer
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492     1F27                     _delay_ms:	
 11493                           ;psect for function _delay_ms
 11494                           
 11495     1F27                     l5412:	
 11496                           ;incstack = 0
 11497                           ; Regs used in _delay_ms: [wreg+status,2]
 11498                           
 11499                           
 11500                           ;main.c: 126:     for (unsigned int i = 0; i < ms; i++) {
 11501     1F27  0020               	movlb	0	; select bank0
 11502     1F28  01A3               	clrf	delay_ms@i
 11503     1F29  01A4               	clrf	delay_ms@i+1
 11504     1F2A  2F39               	goto	l608
 11505     1F2B                     l5414:
 11506                           
 11507                           ;main.c: 127:         _delay((unsigned long)((1)*(16000000/4000.0)));
 11508     1F2B  3006               	movlw	6
 11509     1F2C  0020               	movlb	0	; select bank0
 11510     1F2D  00A2               	movwf	??_delay_ms
 11511     1F2E  3030               	movlw	48
 11512     1F2F                     u8217:
 11513     1F2F  0B89               	decfsz	9,f
 11514     1F30  2F2F               	goto	u8217
 11515     1F31  0BA2               	decfsz	??_delay_ms,f
 11516     1F32  2F2F               	goto	u8217
 11517     1F33  0000               	nop
 11518                           
 11519                           ;main.c: 128:     }
 11520     1F34  3001               	movlw	1
 11521     1F35  0020               	movlb	0	; select bank0
 11522     1F36  07A3               	addwf	delay_ms@i,f
 11523     1F37  3000               	movlw	0
 11524     1F38  3DA4               	addwfc	delay_ms@i+1,f
 11525     1F39                     l608:
 11526     1F39  0821               	movf	delay_ms@ms+1,w
 11527     1F3A  0224               	subwf	delay_ms@i+1,w
 11528     1F3B  1D03               	skipz
 11529     1F3C  2F3F               	goto	u7735
 11530     1F3D  0820               	movf	delay_ms@ms,w
 11531     1F3E  0223               	subwf	delay_ms@i,w
 11532     1F3F                     u7735:
 11533     1F3F  1C03               	skipc
 11534     1F40  2F42               	goto	u7731
 11535     1F41  2F43               	goto	u7730
 11536     1F42                     u7731:
 11537     1F42  2F2B               	goto	l5414
 11538     1F43                     u7730:
 11539     1F43                     l611:
 11540     1F43  0008               	return
 11541     1F44                     __end_of_delay_ms:
 11542                           
 11543                           	psect	text29
 11544     13D4                     __ptext29:	
 11545 ;; *************** function ___flge *****************
 11546 ;; Defined at:
 11547 ;;		line 4 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/flge.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  ff1             4   44[BANK0 ] void 
 11550 ;;  ff2             4   48[BANK0 ] void 
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;		None
 11553 ;; Return value:  Size  Location     Type
 11554 ;;		None               void
 11555 ;; Registers used:
 11556 ;;		wreg, status,2, status,0
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11562 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;Total ram usage:       12 bytes
 11567 ;; Hardware stack levels used: 1
 11568 ;; Hardware stack levels required when called: 4
 11569 ;; This function calls:
 11570 ;;		Nothing
 11571 ;; This function is called by:
 11572 ;;		_main
 11573 ;;		_handle_voltage
 11574 ;;		_efgtoa
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578     13D4                     ___flge:	
 11579                           ;psect for function ___flge
 11580                           
 11581     13D4                     l4744:	
 11582                           ;incstack = 0
 11583                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11584                           
 11585     13D4  3000               	movlw	0
 11586     13D5  0020               	movlb	0	; select bank0
 11587     13D6  054C               	andwf	___flge@ff1,w
 11588     13D7  00D4               	movwf	??___flge
 11589     13D8  3000               	movlw	0
 11590     13D9  054D               	andwf	___flge@ff1+1,w
 11591     13DA  00D5               	movwf	??___flge+1
 11592     13DB  3080               	movlw	128
 11593     13DC  054E               	andwf	___flge@ff1+2,w
 11594     13DD  00D6               	movwf	??___flge+2
 11595     13DE  307F               	movlw	127
 11596     13DF  054F               	andwf	___flge@ff1+3,w
 11597     13E0  00D7               	movwf	??___flge+3
 11598     13E1  0857               	movf	??___flge+3,w
 11599     13E2  0456               	iorwf	??___flge+2,w
 11600     13E3  0455               	iorwf	??___flge+1,w
 11601     13E4  0454               	iorwf	??___flge,w
 11602     13E5  1D03               	skipz
 11603     13E6  2BE8               	goto	u6401
 11604     13E7  2BE9               	goto	u6400
 11605     13E8                     u6401:
 11606     13E8  2BF1               	goto	l878
 11607     13E9                     u6400:
 11608     13E9                     l4746:
 11609     13E9  3000               	movlw	0
 11610     13EA  00CF               	movwf	___flge@ff1+3
 11611     13EB  3000               	movlw	0
 11612     13EC  00CE               	movwf	___flge@ff1+2
 11613     13ED  3000               	movlw	0
 11614     13EE  00CD               	movwf	___flge@ff1+1
 11615     13EF  3000               	movlw	0
 11616     13F0  00CC               	movwf	___flge@ff1
 11617     13F1                     l878:
 11618     13F1  3000               	movlw	0
 11619     13F2  0550               	andwf	___flge@ff2,w
 11620     13F3  00D4               	movwf	??___flge
 11621     13F4  3000               	movlw	0
 11622     13F5  0551               	andwf	___flge@ff2+1,w
 11623     13F6  00D5               	movwf	??___flge+1
 11624     13F7  3080               	movlw	128
 11625     13F8  0552               	andwf	___flge@ff2+2,w
 11626     13F9  00D6               	movwf	??___flge+2
 11627     13FA  307F               	movlw	127
 11628     13FB  0553               	andwf	___flge@ff2+3,w
 11629     13FC  00D7               	movwf	??___flge+3
 11630     13FD  0857               	movf	??___flge+3,w
 11631     13FE  0456               	iorwf	??___flge+2,w
 11632     13FF  0455               	iorwf	??___flge+1,w
 11633     1400  0454               	iorwf	??___flge,w
 11634     1401  1D03               	skipz
 11635     1402  2C04               	goto	u6411
 11636     1403  2C05               	goto	u6410
 11637     1404                     u6411:
 11638     1404  2C0D               	goto	l4750
 11639     1405                     u6410:
 11640     1405                     l4748:
 11641     1405  3000               	movlw	0
 11642     1406  00D3               	movwf	___flge@ff2+3
 11643     1407  3000               	movlw	0
 11644     1408  00D2               	movwf	___flge@ff2+2
 11645     1409  3000               	movlw	0
 11646     140A  00D1               	movwf	___flge@ff2+1
 11647     140B  3000               	movlw	0
 11648     140C  00D0               	movwf	___flge@ff2
 11649     140D                     l4750:
 11650     140D  1FCF               	btfss	___flge@ff1+3,7
 11651     140E  2C10               	goto	u6421
 11652     140F  2C11               	goto	u6420
 11653     1410                     u6421:
 11654     1410  2C29               	goto	l4754
 11655     1411                     u6420:
 11656     1411                     l4752:
 11657     1411  3000               	movlw	0
 11658     1412  00D4               	movwf	??___flge
 11659     1413  3000               	movlw	0
 11660     1414  00D5               	movwf	??___flge+1
 11661     1415  3000               	movlw	0
 11662     1416  00D6               	movwf	??___flge+2
 11663     1417  3080               	movlw	128
 11664     1418  00D7               	movwf	??___flge+3
 11665     1419  084C               	movf	___flge@ff1,w
 11666     141A  02D4               	subwf	??___flge,f
 11667     141B  084D               	movf	___flge@ff1+1,w
 11668     141C  3BD5               	subwfb	??___flge+1,f
 11669     141D  084E               	movf	___flge@ff1+2,w
 11670     141E  3BD6               	subwfb	??___flge+2,f
 11671     141F  084F               	movf	___flge@ff1+3,w
 11672     1420  3BD7               	subwfb	??___flge+3,f
 11673     1421  0857               	movf	??___flge+3,w
 11674     1422  00CF               	movwf	___flge@ff1+3
 11675     1423  0856               	movf	??___flge+2,w
 11676     1424  00CE               	movwf	___flge@ff1+2
 11677     1425  0855               	movf	??___flge+1,w
 11678     1426  00CD               	movwf	___flge@ff1+1
 11679     1427  0854               	movf	??___flge,w
 11680     1428  00CC               	movwf	___flge@ff1
 11681     1429                     l4754:
 11682     1429  1FD3               	btfss	___flge@ff2+3,7
 11683     142A  2C2C               	goto	u6431
 11684     142B  2C2D               	goto	u6430
 11685     142C                     u6431:
 11686     142C  2C45               	goto	l881
 11687     142D                     u6430:
 11688     142D                     l4756:
 11689     142D  3000               	movlw	0
 11690     142E  00D4               	movwf	??___flge
 11691     142F  3000               	movlw	0
 11692     1430  00D5               	movwf	??___flge+1
 11693     1431  3000               	movlw	0
 11694     1432  00D6               	movwf	??___flge+2
 11695     1433  3080               	movlw	128
 11696     1434  00D7               	movwf	??___flge+3
 11697     1435  0850               	movf	___flge@ff2,w
 11698     1436  02D4               	subwf	??___flge,f
 11699     1437  0851               	movf	___flge@ff2+1,w
 11700     1438  3BD5               	subwfb	??___flge+1,f
 11701     1439  0852               	movf	___flge@ff2+2,w
 11702     143A  3BD6               	subwfb	??___flge+2,f
 11703     143B  0853               	movf	___flge@ff2+3,w
 11704     143C  3BD7               	subwfb	??___flge+3,f
 11705     143D  0857               	movf	??___flge+3,w
 11706     143E  00D3               	movwf	___flge@ff2+3
 11707     143F  0856               	movf	??___flge+2,w
 11708     1440  00D2               	movwf	___flge@ff2+2
 11709     1441  0855               	movf	??___flge+1,w
 11710     1442  00D1               	movwf	___flge@ff2+1
 11711     1443  0854               	movf	??___flge,w
 11712     1444  00D0               	movwf	___flge@ff2
 11713     1445                     l881:
 11714     1445  3080               	movlw	128
 11715     1446  06CF               	xorwf	___flge@ff1+3,f
 11716     1447  3080               	movlw	128
 11717     1448  06D3               	xorwf	___flge@ff2+3,f
 11718     1449  0853               	movf	___flge@ff2+3,w
 11719     144A  024F               	subwf	___flge@ff1+3,w
 11720     144B  1D03               	skipz
 11721     144C  2C57               	goto	u6445
 11722     144D  0852               	movf	___flge@ff2+2,w
 11723     144E  024E               	subwf	___flge@ff1+2,w
 11724     144F  1D03               	skipz
 11725     1450  2C57               	goto	u6445
 11726     1451  0851               	movf	___flge@ff2+1,w
 11727     1452  024D               	subwf	___flge@ff1+1,w
 11728     1453  1D03               	skipz
 11729     1454  2C57               	goto	u6445
 11730     1455  0850               	movf	___flge@ff2,w
 11731     1456  024C               	subwf	___flge@ff1,w
 11732     1457                     u6445:
 11733     1457  1803               	skipnc
 11734     1458  2C5A               	goto	u6441
 11735     1459  2C5B               	goto	u6440
 11736     145A                     u6441:
 11737     145A  2C5D               	goto	l4760
 11738     145B                     u6440:
 11739     145B                     l4758:
 11740     145B  1003               	clrc
 11741     145C  2C5E               	goto	l886
 11742     145D                     l4760:
 11743     145D  1403               	setc
 11744     145E                     l886:
 11745     145E  0008               	return
 11746     145F                     __end_of___flge:
 11747                           
 11748                           	psect	text30
 11749     1DF2                     __ptext30:	
 11750 ;; *************** function _LED_12V_On *****************
 11751 ;; Defined at:
 11752 ;;		line 20 in file "main.c"
 11753 ;; Parameters:    Size  Location     Type
 11754 ;;		None
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;		None
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1    wreg      void 
 11759 ;; Registers used:
 11760 ;;		None
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;Total ram usage:        0 bytes
 11771 ;; Hardware stack levels used: 1
 11772 ;; Hardware stack levels required when called: 4
 11773 ;; This function calls:
 11774 ;;		Nothing
 11775 ;; This function is called by:
 11776 ;;		_main
 11777 ;;		_handle_voltage
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781     1DF2                     _LED_12V_On:	
 11782                           ;psect for function _LED_12V_On
 11783                           
 11784     1DF2                     l527:	
 11785                           ;incstack = 0
 11786                           ; Regs used in _LED_12V_On: []
 11787                           
 11788     1DF2  0022               	movlb	2	; select bank2
 11789     1DF3  168C               	bsf	12,5	;volatile
 11790     1DF4                     l529:
 11791     1DF4  0008               	return
 11792     1DF5                     __end_of_LED_12V_On:
 11793                           
 11794                           	psect	text31
 11795     1DEF                     __ptext31:	
 11796 ;; *************** function _LED_24V_On *****************
 11797 ;; Defined at:
 11798 ;;		line 18 in file "main.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;		None
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;		None
 11803 ;; Return value:  Size  Location     Type
 11804 ;;                  1    wreg      void 
 11805 ;; Registers used:
 11806 ;;		None
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/0
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;Total ram usage:        0 bytes
 11817 ;; Hardware stack levels used: 1
 11818 ;; Hardware stack levels required when called: 4
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_main
 11823 ;;		_handle_voltage
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827     1DEF                     _LED_24V_On:	
 11828                           ;psect for function _LED_24V_On
 11829                           
 11830     1DEF                     l517:	
 11831                           ;incstack = 0
 11832                           ; Regs used in _LED_24V_On: []
 11833                           
 11834     1DEF  0022               	movlb	2	; select bank2
 11835     1DF0  160C               	bsf	12,4	;volatile
 11836     1DF1                     l519:
 11837     1DF1  0008               	return
 11838     1DF2                     __end_of_LED_24V_On:
 11839                           
 11840                           	psect	text32
 11841     1DEC                     __ptext32:	
 11842 ;; *************** function _LED_12V_Off *****************
 11843 ;; Defined at:
 11844 ;;		line 21 in file "main.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		None
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used: 1
 11864 ;; Hardware stack levels required when called: 4
 11865 ;; This function calls:
 11866 ;;		Nothing
 11867 ;; This function is called by:
 11868 ;;		_main
 11869 ;;		_handle_voltage
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873     1DEC                     _LED_12V_Off:	
 11874                           ;psect for function _LED_12V_Off
 11875                           
 11876     1DEC                     l532:	
 11877                           ;incstack = 0
 11878                           ; Regs used in _LED_12V_Off: []
 11879                           
 11880     1DEC  0022               	movlb	2	; select bank2
 11881     1DED  128C               	bcf	12,5	;volatile
 11882     1DEE                     l534:
 11883     1DEE  0008               	return
 11884     1DEF                     __end_of_LED_12V_Off:
 11885                           
 11886                           	psect	text33
 11887     1DE9                     __ptext33:	
 11888 ;; *************** function _LED_24V_Off *****************
 11889 ;; Defined at:
 11890 ;;		line 19 in file "main.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;		None
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;		None
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      void 
 11897 ;; Registers used:
 11898 ;;		None
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 0/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;Total ram usage:        0 bytes
 11909 ;; Hardware stack levels used: 1
 11910 ;; Hardware stack levels required when called: 4
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_main
 11915 ;;		_handle_voltage
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919     1DE9                     _LED_24V_Off:	
 11920                           ;psect for function _LED_24V_Off
 11921                           
 11922     1DE9                     l522:	
 11923                           ;incstack = 0
 11924                           ; Regs used in _LED_24V_Off: []
 11925                           
 11926     1DE9  0022               	movlb	2	; select bank2
 11927     1DEA  120C               	bcf	12,4	;volatile
 11928     1DEB                     l524:
 11929     1DEB  0008               	return
 11930     1DEC                     __end_of_LED_24V_Off:
 11931                           
 11932                           	psect	text34
 11933     0733                     __ptext34:	
 11934 ;; *************** function ___xxtofl *****************
 11935 ;; Defined at:
 11936 ;;		line 10 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/xxtofl.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  sign            1    wreg     unsigned char 
 11939 ;;  val             4    4[BANK0 ] long 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;  sign            1   12[BANK0 ] unsigned char 
 11942 ;;  arg             4   14[BANK0 ] unsigned long 
 11943 ;;  exp             1   13[BANK0 ] unsigned char 
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  4    4[BANK0 ] unsigned char 
 11946 ;; Registers used:
 11947 ;;		wreg, status,2, status,0
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11957 ;;Total ram usage:       14 bytes
 11958 ;; Hardware stack levels used: 1
 11959 ;; Hardware stack levels required when called: 4
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_main
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967     0733                     ___xxtofl:	
 11968                           ;psect for function ___xxtofl
 11969                           
 11970                           
 11971                           ;incstack = 0
 11972                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11973                           ;___xxtofl@sign stored from wreg
 11974     0733  0020               	movlb	0	; select bank0
 11975     0734  00AC               	movwf	___xxtofl@sign
 11976     0735                     l5710:
 11977     0735  082C               	movf	___xxtofl@sign,w
 11978     0736  1903               	btfsc	3,2
 11979     0737  2F39               	goto	u8041
 11980     0738  2F3A               	goto	u8040
 11981     0739                     u8041:
 11982     0739  2F4E               	goto	l5716
 11983     073A                     u8040:
 11984     073A                     l5712:
 11985     073A  1FA7               	btfss	___xxtofl@val+3,7
 11986     073B  2F3D               	goto	u8051
 11987     073C  2F3E               	goto	u8050
 11988     073D                     u8051:
 11989     073D  2F4E               	goto	l5716
 11990     073E                     u8050:
 11991     073E                     l5714:
 11992     073E  0924               	comf	___xxtofl@val,w
 11993     073F  00AE               	movwf	___xxtofl@arg
 11994     0740  0925               	comf	___xxtofl@val+1,w
 11995     0741  00AF               	movwf	___xxtofl@arg+1
 11996     0742  0926               	comf	___xxtofl@val+2,w
 11997     0743  00B0               	movwf	___xxtofl@arg+2
 11998     0744  0927               	comf	___xxtofl@val+3,w
 11999     0745  00B1               	movwf	___xxtofl@arg+3
 12000     0746  0AAE               	incf	___xxtofl@arg,f
 12001     0747  1903               	skipnz
 12002     0748  0AAF               	incf	___xxtofl@arg+1,f
 12003     0749  1903               	skipnz
 12004     074A  0AB0               	incf	___xxtofl@arg+2,f
 12005     074B  1903               	skipnz
 12006     074C  0AB1               	incf	___xxtofl@arg+3,f
 12007     074D  2F56               	goto	l1141
 12008     074E                     l5716:
 12009     074E  0827               	movf	___xxtofl@val+3,w
 12010     074F  00B1               	movwf	___xxtofl@arg+3
 12011     0750  0826               	movf	___xxtofl@val+2,w
 12012     0751  00B0               	movwf	___xxtofl@arg+2
 12013     0752  0825               	movf	___xxtofl@val+1,w
 12014     0753  00AF               	movwf	___xxtofl@arg+1
 12015     0754  0824               	movf	___xxtofl@val,w
 12016     0755  00AE               	movwf	___xxtofl@arg
 12017     0756                     l1141:
 12018     0756  0827               	movf	___xxtofl@val+3,w
 12019     0757  0426               	iorwf	___xxtofl@val+2,w
 12020     0758  0425               	iorwf	___xxtofl@val+1,w
 12021     0759  0424               	iorwf	___xxtofl@val,w
 12022     075A  1D03               	skipz
 12023     075B  2F5D               	goto	u8061
 12024     075C  2F5E               	goto	u8060
 12025     075D                     u8061:
 12026     075D  2F67               	goto	l1142
 12027     075E                     u8060:
 12028     075E                     l5718:
 12029     075E  3000               	movlw	0
 12030     075F  00A7               	movwf	?___xxtofl+3
 12031     0760  3000               	movlw	0
 12032     0761  00A6               	movwf	?___xxtofl+2
 12033     0762  3000               	movlw	0
 12034     0763  00A5               	movwf	?___xxtofl+1
 12035     0764  3000               	movlw	0
 12036     0765  00A4               	movwf	?___xxtofl
 12037     0766  2FD7               	goto	l1143
 12038     0767                     l1142:
 12039     0767  3096               	movlw	150
 12040     0768  00AD               	movwf	___xxtofl@exp
 12041     0769  2F73               	goto	l5724
 12042     076A                     l5722:
 12043     076A  3001               	movlw	1
 12044     076B  07AD               	addwf	___xxtofl@exp,f
 12045     076C  3001               	movlw	1
 12046     076D                     u8075:
 12047     076D  36B1               	lsrf	___xxtofl@arg+3,f
 12048     076E  0CB0               	rrf	___xxtofl@arg+2,f
 12049     076F  0CAF               	rrf	___xxtofl@arg+1,f
 12050     0770  0CAE               	rrf	___xxtofl@arg,f
 12051     0771  0B89               	decfsz	9,f
 12052     0772  2F6D               	goto	u8075
 12053     0773                     l5724:
 12054     0773  30FE               	movlw	254
 12055     0774  0531               	andwf	___xxtofl@arg+3,w
 12056     0775  1D03               	btfss	3,2
 12057     0776  2F78               	goto	u8081
 12058     0777  2F79               	goto	u8080
 12059     0778                     u8081:
 12060     0778  2F6A               	goto	l5722
 12061     0779                     u8080:
 12062     0779  2F89               	goto	l5728
 12063     077A                     l5726:
 12064     077A  3001               	movlw	1
 12065     077B  07AD               	addwf	___xxtofl@exp,f
 12066     077C  3001               	movlw	1
 12067     077D  07AE               	addwf	___xxtofl@arg,f
 12068     077E  3000               	movlw	0
 12069     077F  3DAF               	addwfc	___xxtofl@arg+1,f
 12070     0780  3DB0               	addwfc	___xxtofl@arg+2,f
 12071     0781  3DB1               	addwfc	___xxtofl@arg+3,f
 12072     0782  3001               	movlw	1
 12073     0783                     u8095:
 12074     0783  36B1               	lsrf	___xxtofl@arg+3,f
 12075     0784  0CB0               	rrf	___xxtofl@arg+2,f
 12076     0785  0CAF               	rrf	___xxtofl@arg+1,f
 12077     0786  0CAE               	rrf	___xxtofl@arg,f
 12078     0787  0B89               	decfsz	9,f
 12079     0788  2F83               	goto	u8095
 12080     0789                     l5728:
 12081     0789  30FF               	movlw	255
 12082     078A  0531               	andwf	___xxtofl@arg+3,w
 12083     078B  1D03               	btfss	3,2
 12084     078C  2F8E               	goto	u8101
 12085     078D  2F8F               	goto	u8100
 12086     078E                     u8101:
 12087     078E  2F7A               	goto	l5726
 12088     078F                     u8100:
 12089     078F  2F99               	goto	l5732
 12090     0790                     l5730:
 12091     0790  3001               	movlw	1
 12092     0791  02AD               	subwf	___xxtofl@exp,f
 12093     0792  3001               	movlw	1
 12094     0793                     u8115:
 12095     0793  35AE               	lslf	___xxtofl@arg,f
 12096     0794  0DAF               	rlf	___xxtofl@arg+1,f
 12097     0795  0DB0               	rlf	___xxtofl@arg+2,f
 12098     0796  0DB1               	rlf	___xxtofl@arg+3,f
 12099     0797  0B89               	decfsz	9,f
 12100     0798  2F93               	goto	u8115
 12101     0799                     l5732:
 12102     0799  1BB0               	btfsc	___xxtofl@arg+2,7
 12103     079A  2F9C               	goto	u8121
 12104     079B  2F9D               	goto	u8120
 12105     079C                     u8121:
 12106     079C  2FA3               	goto	l1154
 12107     079D                     u8120:
 12108     079D                     l5734:
 12109     079D  3002               	movlw	2
 12110     079E  022D               	subwf	___xxtofl@exp,w
 12111     079F  1803               	skipnc
 12112     07A0  2FA2               	goto	u8131
 12113     07A1  2FA3               	goto	u8130
 12114     07A2                     u8131:
 12115     07A2  2F90               	goto	l5730
 12116     07A3                     u8130:
 12117     07A3                     l1154:
 12118     07A3  182D               	btfsc	___xxtofl@exp,0
 12119     07A4  2FA6               	goto	u8141
 12120     07A5  2FA7               	goto	u8140
 12121     07A6                     u8141:
 12122     07A6  2FAF               	goto	l1155
 12123     07A7                     u8140:
 12124     07A7                     l5736:
 12125     07A7  30FF               	movlw	255
 12126     07A8  05AE               	andwf	___xxtofl@arg,f
 12127     07A9  30FF               	movlw	255
 12128     07AA  05AF               	andwf	___xxtofl@arg+1,f
 12129     07AB  307F               	movlw	127
 12130     07AC  05B0               	andwf	___xxtofl@arg+2,f
 12131     07AD  30FF               	movlw	255
 12132     07AE  05B1               	andwf	___xxtofl@arg+3,f
 12133     07AF                     l1155:
 12134     07AF  1003               	clrc
 12135     07B0  0CAD               	rrf	___xxtofl@exp,f
 12136     07B1                     l5738:
 12137     07B1  082D               	movf	___xxtofl@exp,w
 12138     07B2  00A8               	movwf	??___xxtofl
 12139     07B3  01A9               	clrf	??___xxtofl+1
 12140     07B4  01AA               	clrf	??___xxtofl+2
 12141     07B5  01AB               	clrf	??___xxtofl+3
 12142     07B6  3018               	movlw	24
 12143     07B7                     u8155:
 12144     07B7  35A8               	lslf	??___xxtofl,f
 12145     07B8  0DA9               	rlf	??___xxtofl+1,f
 12146     07B9  0DAA               	rlf	??___xxtofl+2,f
 12147     07BA  0DAB               	rlf	??___xxtofl+3,f
 12148     07BB                     u8150:
 12149     07BB  0B89               	decfsz	9,f
 12150     07BC  2FB7               	goto	u8155
 12151     07BD  0828               	movf	??___xxtofl,w
 12152     07BE  04AE               	iorwf	___xxtofl@arg,f
 12153     07BF  0829               	movf	??___xxtofl+1,w
 12154     07C0  04AF               	iorwf	___xxtofl@arg+1,f
 12155     07C1  082A               	movf	??___xxtofl+2,w
 12156     07C2  04B0               	iorwf	___xxtofl@arg+2,f
 12157     07C3  082B               	movf	??___xxtofl+3,w
 12158     07C4  04B1               	iorwf	___xxtofl@arg+3,f
 12159     07C5                     l5740:
 12160     07C5  082C               	movf	___xxtofl@sign,w
 12161     07C6  1903               	btfsc	3,2
 12162     07C7  2FC9               	goto	u8161
 12163     07C8  2FCA               	goto	u8160
 12164     07C9                     u8161:
 12165     07C9  2FCF               	goto	l5746
 12166     07CA                     u8160:
 12167     07CA                     l5742:
 12168     07CA  1FA7               	btfss	___xxtofl@val+3,7
 12169     07CB  2FCD               	goto	u8171
 12170     07CC  2FCE               	goto	u8170
 12171     07CD                     u8171:
 12172     07CD  2FCF               	goto	l5746
 12173     07CE                     u8170:
 12174     07CE                     l5744:
 12175     07CE  17B1               	bsf	___xxtofl@arg+3,7
 12176     07CF                     l5746:
 12177     07CF  0831               	movf	___xxtofl@arg+3,w
 12178     07D0  00A7               	movwf	?___xxtofl+3
 12179     07D1  0830               	movf	___xxtofl@arg+2,w
 12180     07D2  00A6               	movwf	?___xxtofl+2
 12181     07D3  082F               	movf	___xxtofl@arg+1,w
 12182     07D4  00A5               	movwf	?___xxtofl+1
 12183     07D5  082E               	movf	___xxtofl@arg,w
 12184     07D6  00A4               	movwf	?___xxtofl
 12185     07D7                     l1143:
 12186     07D7  0008               	return
 12187     07D8                     __end_of___xxtofl:
 12188                           
 12189                           	psect	text35
 12190     1DE6                     __ptext35:	
 12191 ;; *************** function _TMR4_Start *****************
 12192 ;; Defined at:
 12193 ;;		line 69 in file "mcc_generated_files/timer/src/tmr4.c"
 12194 ;; Parameters:    Size  Location     Type
 12195 ;;		None
 12196 ;; Auto vars:     Size  Location     Type
 12197 ;;		None
 12198 ;; Return value:  Size  Location     Type
 12199 ;;                  1    wreg      void 
 12200 ;; Registers used:
 12201 ;;		None
 12202 ;; Tracked objects:
 12203 ;;		On entry : 0/0
 12204 ;;		On exit  : 0/0
 12205 ;;		Unchanged: 0/0
 12206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12211 ;;Total ram usage:        0 bytes
 12212 ;; Hardware stack levels used: 1
 12213 ;; Hardware stack levels required when called: 4
 12214 ;; This function calls:
 12215 ;;		Nothing
 12216 ;; This function is called by:
 12217 ;;		_main
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221     1DE6                     _TMR4_Start:	
 12222                           ;psect for function _TMR4_Start
 12223                           
 12224     1DE6                     l5614:	
 12225                           ;incstack = 0
 12226                           ; Regs used in _TMR4_Start: []
 12227                           
 12228                           
 12229                           ;mcc_generated_files/timer/src/tmr4.c: 71:     T4CONbits.TMR4ON = 1;
 12230     1DE6  0028               	movlb	8	; select bank8
 12231     1DE7  1517               	bsf	23,2	;volatile
 12232     1DE8                     l218:
 12233     1DE8  0008               	return
 12234     1DE9                     __end_of_TMR4_Start:
 12235                           
 12236                           	psect	text36
 12237     1E22                     __ptext36:	
 12238 ;; *************** function _TMR4_PeriodMatchCallbackRegister *****************
 12239 ;; Defined at:
 12240 ;;		line 129 in file "mcc_generated_files/timer/src/tmr4.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  CallbackHand    2    0[BANK0 ] PTR FTN()void 
 12243 ;;		 -> timer_interrupt(1), 
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;		None
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12258 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;Total ram usage:        2 bytes
 12260 ;; Hardware stack levels used: 1
 12261 ;; Hardware stack levels required when called: 4
 12262 ;; This function calls:
 12263 ;;		Nothing
 12264 ;; This function is called by:
 12265 ;;		_main
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269     1E22                     _TMR4_PeriodMatchCallbackRegister:	
 12270                           ;psect for function _TMR4_PeriodMatchCallbackRegister
 12271                           
 12272     1E22                     l5616:	
 12273                           ;incstack = 0
 12274                           ; Regs used in _TMR4_PeriodMatchCallbackRegister: [wreg]
 12275                           
 12276                           
 12277                           ;mcc_generated_files/timer/src/tmr4.c: 129: void TMR4_PeriodMatchCallbackRegister(void (
      +                          * CallbackHandler)(void));mcc_generated_files/timer/src/tmr4.c: 130: {;mcc_generated_fil
      +                          es/timer/src/tmr4.c: 131:    TMR4_PeriodMatchCallback = CallbackHandler;
 12278     1E22  0020               	movlb	0	; select bank0
 12279     1E23  0821               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler+1,w
 12280     1E24  0022               	movlb	2	; select bank2
 12281     1E25  00E6               	movwf	(_TMR4_PeriodMatchCallback+1)^(0+256)
 12282     1E26  0020               	movlb	0	; select bank0
 12283     1E27  0820               	movf	TMR4_PeriodMatchCallbackRegister@CallbackHandler,w
 12284     1E28  0022               	movlb	2	; select bank2
 12285     1E29  00E5               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 12286     1E2A                     l252:
 12287     1E2A  0008               	return
 12288     1E2B                     __end_of_TMR4_PeriodMatchCallbackRegister:
 12289                           
 12290                           	psect	text37
 12291     1EA1                     __ptext37:	
 12292 ;; *************** function _SYSTEM_Initialize *****************
 12293 ;; Defined at:
 12294 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, status,2, status,0, pclath, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used: 1
 12314 ;; Hardware stack levels required when called: 6
 12315 ;; This function calls:
 12316 ;;		_ADC_Initialize
 12317 ;;		_CLOCK_Initialize
 12318 ;;		_EUSART_Initialize
 12319 ;;		_INTERRUPT_Initialize
 12320 ;;		_PIN_MANAGER_Initialize
 12321 ;;		_TMR4_Initialize
 12322 ;; This function is called by:
 12323 ;;		_main
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327     1EA1                     _SYSTEM_Initialize:	
 12328                           ;psect for function _SYSTEM_Initialize
 12329                           
 12330     1EA1                     l5604:	
 12331                           ;incstack = 0
 12332                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12333                           
 12334                           
 12335                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
 12336     1EA1  319E  2610  319E   	fcall	_CLOCK_Initialize
 12337                           
 12338                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
 12339     1EA4  3190  20AD  319E   	fcall	_PIN_MANAGER_Initialize
 12340     1EA7                     l5606:
 12341                           
 12342                           ;mcc_generated_files/system/src/system.c: 43:     TMR4_Initialize();
 12343     1EA7  319E  267F  319E   	fcall	_TMR4_Initialize
 12344     1EAA                     l5608:
 12345                           
 12346                           ;mcc_generated_files/system/src/system.c: 44:     ADC_Initialize();
 12347     1EAA  319E  26B4  319E   	fcall	_ADC_Initialize
 12348     1EAD                     l5610:
 12349                           
 12350                           ;mcc_generated_files/system/src/system.c: 45:     EUSART_Initialize();
 12351     1EAD  3191  2110  319E   	fcall	_EUSART_Initialize
 12352     1EB0                     l5612:
 12353                           
 12354                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
 12355     1EB0  319E  262B  319E   	fcall	_INTERRUPT_Initialize
 12356     1EB3                     l193:
 12357     1EB3  0008               	return
 12358     1EB4                     __end_of_SYSTEM_Initialize:
 12359                           
 12360                           	psect	text38
 12361     1E7F                     __ptext38:	
 12362 ;; *************** function _TMR4_Initialize *****************
 12363 ;; Defined at:
 12364 ;;		line 45 in file "mcc_generated_files/timer/src/tmr4.c"
 12365 ;; Parameters:    Size  Location     Type
 12366 ;;		None
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;		None
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      void 
 12371 ;; Registers used:
 12372 ;;		wreg, status,2
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;Total ram usage:        0 bytes
 12383 ;; Hardware stack levels used: 1
 12384 ;; Hardware stack levels required when called: 4
 12385 ;; This function calls:
 12386 ;;		Nothing
 12387 ;; This function is called by:
 12388 ;;		_SYSTEM_Initialize
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392     1E7F                     _TMR4_Initialize:	
 12393                           ;psect for function _TMR4_Initialize
 12394                           
 12395     1E7F                     l5520:	
 12396                           ;incstack = 0
 12397                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
 12398                           
 12399                           
 12400                           ;mcc_generated_files/timer/src/tmr4.c: 48:     PR4 = 0xC3;
 12401     1E7F  30C3               	movlw	195
 12402     1E80  0028               	movlb	8	; select bank8
 12403     1E81  0096               	movwf	22	;volatile
 12404     1E82                     l5522:
 12405                           
 12406                           ;mcc_generated_files/timer/src/tmr4.c: 49:     TMR4 = 0x0;
 12407     1E82  0195               	clrf	21	;volatile
 12408     1E83                     l5524:
 12409                           
 12410                           ;mcc_generated_files/timer/src/tmr4.c: 50:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 12411     1E83  3000               	movlw	low _TMR4_DefaultPeriodMatchCallback
 12412     1E84  0022               	movlb	2	; select bank2
 12413     1E85  00E5               	movwf	_TMR4_PeriodMatchCallback^(0+256)
 12414     1E86  3010               	movlw	high _TMR4_DefaultPeriodMatchCallback
 12415     1E87  00E6               	movwf	(_TMR4_PeriodMatchCallback^(0+256)+1)
 12416     1E88                     l5526:
 12417                           
 12418                           ;mcc_generated_files/timer/src/tmr4.c: 52:     PIR2bits.TMR4IF = 0;
 12419     1E88  0020               	movlb	0	; select bank0
 12420     1E89  1092               	bcf	18,1	;volatile
 12421     1E8A                     l5528:
 12422                           
 12423                           ;mcc_generated_files/timer/src/tmr4.c: 53:     PIE2bits.TMR4IE = 1;
 12424     1E8A  0021               	movlb	1	; select bank1
 12425     1E8B  1492               	bsf	18,1	;volatile
 12426     1E8C                     l5530:
 12427                           
 12428                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4CON = (3 << 0x0)
 12429     1E8C  307F               	movlw	127
 12430     1E8D  0028               	movlb	8	; select bank8
 12431     1E8E  0097               	movwf	23	;volatile
 12432     1E8F                     l212:
 12433     1E8F  0008               	return
 12434     1E90                     __end_of_TMR4_Initialize:
 12435                           
 12436                           	psect	text39
 12437     10AD                     __ptext39:	
 12438 ;; *************** function _PIN_MANAGER_Initialize *****************
 12439 ;; Defined at:
 12440 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;		None
 12443 ;; Auto vars:     Size  Location     Type
 12444 ;;		None
 12445 ;; Return value:  Size  Location     Type
 12446 ;;                  1    wreg      void 
 12447 ;; Registers used:
 12448 ;;		status,2
 12449 ;; Tracked objects:
 12450 ;;		On entry : 0/0
 12451 ;;		On exit  : 0/0
 12452 ;;		Unchanged: 0/0
 12453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;Total ram usage:        0 bytes
 12459 ;; Hardware stack levels used: 1
 12460 ;; Hardware stack levels required when called: 4
 12461 ;; This function calls:
 12462 ;;		Nothing
 12463 ;; This function is called by:
 12464 ;;		_SYSTEM_Initialize
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           
 12468     10AD                     _PIN_MANAGER_Initialize:	
 12469                           ;psect for function _PIN_MANAGER_Initialize
 12470                           
 12471     10AD                     l5488:	
 12472                           ;incstack = 0
 12473                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
 12474                           
 12475                           
 12476                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 12477     10AD  0022               	movlb	2	; select bank2
 12478     10AE  018C               	clrf	12	;volatile
 12479                           
 12480                           ;mcc_generated_files/system/src/pins.c: 44:     LATC = 0x0;
 12481     10AF  018E               	clrf	14	;volatile
 12482     10B0                     l5490:
 12483                           
 12484                           ;mcc_generated_files/system/src/pins.c: 49:     TRISA = 0xB;
 12485     10B0  300B               	movlw	11
 12486     10B1  0021               	movlb	1	; select bank1
 12487     10B2  008C               	movwf	12	;volatile
 12488     10B3                     l5492:
 12489                           
 12490                           ;mcc_generated_files/system/src/pins.c: 50:     TRISC = 0x37;
 12491     10B3  3037               	movlw	55
 12492     10B4  008E               	movwf	14	;volatile
 12493     10B5                     l5494:
 12494                           
 12495                           ;mcc_generated_files/system/src/pins.c: 55:     ANSELA = 0x23;
 12496     10B5  3023               	movlw	35
 12497     10B6  0023               	movlb	3	; select bank3
 12498     10B7  008C               	movwf	12	;volatile
 12499     10B8                     l5496:
 12500                           
 12501                           ;mcc_generated_files/system/src/pins.c: 56:     ANSELC = 0x1F;
 12502     10B8  301F               	movlw	31
 12503     10B9  008E               	movwf	14	;volatile
 12504     10BA                     l5498:
 12505                           
 12506                           ;mcc_generated_files/system/src/pins.c: 61:     WPUA = 0xF;
 12507     10BA  300F               	movlw	15
 12508     10BB  0024               	movlb	4	; select bank4
 12509     10BC  008C               	movwf	12	;volatile
 12510     10BD                     l5500:
 12511                           
 12512                           ;mcc_generated_files/system/src/pins.c: 62:     WPUC = 0x3F;
 12513     10BD  303F               	movlw	63
 12514     10BE  008E               	movwf	14	;volatile
 12515     10BF                     l5502:
 12516                           
 12517                           ;mcc_generated_files/system/src/pins.c: 63:     OPTION_REGbits.nWPUEN = 0x0;
 12518     10BF  0021               	movlb	1	; select bank1
 12519     10C0  1395               	bcf	21,7	;volatile
 12520                           
 12521                           ;mcc_generated_files/system/src/pins.c: 69:     ODCONA = 0x0;
 12522     10C1  0025               	movlb	5	; select bank5
 12523     10C2  018C               	clrf	12	;volatile
 12524                           
 12525                           ;mcc_generated_files/system/src/pins.c: 70:     ODCONC = 0x0;
 12526     10C3  018E               	clrf	14	;volatile
 12527     10C4                     l5504:
 12528                           
 12529                           ;mcc_generated_files/system/src/pins.c: 74:     SLRCONA = 0x37;
 12530     10C4  3037               	movlw	55
 12531     10C5  0026               	movlb	6	; select bank6
 12532     10C6  008C               	movwf	12	;volatile
 12533     10C7                     l5506:
 12534                           
 12535                           ;mcc_generated_files/system/src/pins.c: 75:     SLRCONC = 0x3F;
 12536     10C7  303F               	movlw	63
 12537     10C8  008E               	movwf	14	;volatile
 12538     10C9                     l5508:
 12539                           
 12540                           ;mcc_generated_files/system/src/pins.c: 79:     INLVLA = 0x3F;
 12541     10C9  303F               	movlw	63
 12542     10CA  0027               	movlb	7	; select bank7
 12543     10CB  008C               	movwf	12	;volatile
 12544     10CC                     l5510:
 12545                           
 12546                           ;mcc_generated_files/system/src/pins.c: 80:     INLVLC = 0x3F;
 12547     10CC  303F               	movlw	63
 12548     10CD  008E               	movwf	14	;volatile
 12549     10CE                     l5512:
 12550                           
 12551                           ;mcc_generated_files/system/src/pins.c: 85:     RXPPS = 0x15;
 12552     10CE  3015               	movlw	21
 12553     10CF  003C               	movlb	28	; select bank28
 12554     10D0  00A4               	movwf	36	;volatile
 12555     10D1                     l5514:
 12556                           
 12557                           ;mcc_generated_files/system/src/pins.c: 86:     RC3PPS = 20;
 12558     10D1  3014               	movlw	20
 12559     10D2  003D               	movlb	29	; select bank29
 12560     10D3  00A3               	movwf	35	;volatile
 12561                           
 12562                           ;mcc_generated_files/system/src/pins.c: 95:     IOCAP = 0x0;
 12563     10D4  0027               	movlb	7	; select bank7
 12564     10D5  0191               	clrf	17	;volatile
 12565                           
 12566                           ;mcc_generated_files/system/src/pins.c: 96:     IOCAN = 0x0;
 12567     10D6  0192               	clrf	18	;volatile
 12568                           
 12569                           ;mcc_generated_files/system/src/pins.c: 97:     IOCAF = 0x0;
 12570     10D7  0193               	clrf	19	;volatile
 12571                           
 12572                           ;mcc_generated_files/system/src/pins.c: 98:     IOCCP = 0x0;
 12573     10D8  0197               	clrf	23	;volatile
 12574                           
 12575                           ;mcc_generated_files/system/src/pins.c: 99:     IOCCN = 0x0;
 12576     10D9  0198               	clrf	24	;volatile
 12577                           
 12578                           ;mcc_generated_files/system/src/pins.c: 100:     IOCCF = 0x0;
 12579     10DA  0199               	clrf	25	;volatile
 12580     10DB                     l116:
 12581     10DB  0008               	return
 12582     10DC                     __end_of_PIN_MANAGER_Initialize:
 12583                           
 12584                           	psect	text40
 12585     1E2B                     __ptext40:	
 12586 ;; *************** function _INTERRUPT_Initialize *****************
 12587 ;; Defined at:
 12588 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;		None
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, status,2, status,0, pclath, cstack
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;Total ram usage:        0 bytes
 12607 ;; Hardware stack levels used: 1
 12608 ;; Hardware stack levels required when called: 5
 12609 ;; This function calls:
 12610 ;;		_INT_SetInterruptHandler
 12611 ;; This function is called by:
 12612 ;;		_SYSTEM_Initialize
 12613 ;; This function uses a non-reentrant model
 12614 ;;
 12615                           
 12616     1E2B                     _INTERRUPT_Initialize:	
 12617                           ;psect for function _INTERRUPT_Initialize
 12618                           
 12619     1E2B                     l5516:	
 12620                           ;incstack = 0
 12621                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12622                           
 12623                           
 12624                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
 12625     1E2B  108B               	bcf	11,1	;volatile
 12626                           
 12627                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
 12628     1E2C  0021               	movlb	1	; select bank1
 12629     1E2D  1715               	bsf	21,6	;volatile
 12630     1E2E                     l5518:
 12631                           
 12632                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
 12633     1E2E  3000               	movlw	0
 12634     1E2F  0020               	movlb	0	; select bank0
 12635     1E30  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
 12636     1E31  3000               	movlw	0
 12637     1E32  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 12638     1E33  319E  2619  319E   	fcall	_INT_SetInterruptHandler
 12639     1E36                     l150:
 12640     1E36  0008               	return
 12641     1E37                     __end_of_INTERRUPT_Initialize:
 12642                           
 12643                           	psect	text41
 12644     1E19                     __ptext41:	
 12645 ;; *************** function _INT_SetInterruptHandler *****************
 12646 ;; Defined at:
 12647 ;;		line 109 in file "mcc_generated_files/system/src/interrupt.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 12650 ;;		 -> INT_DefaultInterruptHandler(1), 
 12651 ;; Auto vars:     Size  Location     Type
 12652 ;;		None
 12653 ;; Return value:  Size  Location     Type
 12654 ;;                  1    wreg      void 
 12655 ;; Registers used:
 12656 ;;		wreg
 12657 ;; Tracked objects:
 12658 ;;		On entry : 0/0
 12659 ;;		On exit  : 0/0
 12660 ;;		Unchanged: 0/0
 12661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12666 ;;Total ram usage:        2 bytes
 12667 ;; Hardware stack levels used: 1
 12668 ;; Hardware stack levels required when called: 4
 12669 ;; This function calls:
 12670 ;;		Nothing
 12671 ;; This function is called by:
 12672 ;;		_INTERRUPT_Initialize
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676     1E19                     _INT_SetInterruptHandler:	
 12677                           ;psect for function _INT_SetInterruptHandler
 12678                           
 12679     1E19                     l5402:	
 12680                           ;incstack = 0
 12681                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 12682                           
 12683                           
 12684                           ;mcc_generated_files/system/src/interrupt.c: 110:     INT_InterruptHandler = InterruptHa
      +                          ndler;
 12685     1E19  0020               	movlb	0	; select bank0
 12686     1E1A  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 12687     1E1B  0022               	movlb	2	; select bank2
 12688     1E1C  00D9               	movwf	(_INT_InterruptHandler+1)^(0+256)
 12689     1E1D  0020               	movlb	0	; select bank0
 12690     1E1E  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
 12691     1E1F  0022               	movlb	2	; select bank2
 12692     1E20  00D8               	movwf	_INT_InterruptHandler^(0+256)
 12693     1E21                     l175:
 12694     1E21  0008               	return
 12695     1E22                     __end_of_INT_SetInterruptHandler:
 12696                           
 12697                           	psect	text42
 12698     1110                     __ptext42:	
 12699 ;; *************** function _EUSART_Initialize *****************
 12700 ;; Defined at:
 12701 ;;		line 120 in file "mcc_generated_files/uart/src/eusart.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2, status,0, pclath, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used: 1
 12721 ;; Hardware stack levels required when called: 5
 12722 ;; This function calls:
 12723 ;;		_EUSART_FramingErrorCallbackRegister
 12724 ;;		_EUSART_OverrunErrorCallbackRegister
 12725 ;; This function is called by:
 12726 ;;		_SYSTEM_Initialize
 12727 ;; This function uses a non-reentrant model
 12728 ;;
 12729                           
 12730     1110                     _EUSART_Initialize:	
 12731                           ;psect for function _EUSART_Initialize
 12732                           
 12733     1110                     l5532:	
 12734                           ;incstack = 0
 12735                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12736                           
 12737                           
 12738                           ;mcc_generated_files/uart/src/eusart.c: 122:     PIE1bits.RCIE = 0;
 12739     1110  0021               	movlb	1	; select bank1
 12740     1111  1291               	bcf	17,5	;volatile
 12741     1112                     l5534:
 12742                           
 12743                           ;mcc_generated_files/uart/src/eusart.c: 123:      EUSART_RxInterruptHandler = EUSART_Rec
      +                          eiveISR;
 12744     1112  30CF               	movlw	low _EUSART_ReceiveISR
 12745     1113  0022               	movlb	2	; select bank2
 12746     1114  00E7               	movwf	_EUSART_RxInterruptHandler^(0+256)
 12747     1115  3011               	movlw	high _EUSART_ReceiveISR
 12748     1116  00E8               	movwf	(_EUSART_RxInterruptHandler^(0+256)+1)
 12749     1117                     l5536:
 12750                           
 12751                           ;mcc_generated_files/uart/src/eusart.c: 125:     PIE1bits.TXIE = 0;
 12752     1117  0021               	movlb	1	; select bank1
 12753     1118  1211               	bcf	17,4	;volatile
 12754                           
 12755                           ;mcc_generated_files/uart/src/eusart.c: 126:     EUSART_TxInterruptHandler = EUSART_Tran
      +                          smitISR;
 12756     1119  30F2               	movlw	low _EUSART_TransmitISR
 12757     111A  0023               	movlb	3	; select bank3
 12758     111B  00B0               	movwf	_EUSART_TxInterruptHandler^(0+384)
 12759     111C  301E               	movlw	high _EUSART_TransmitISR
 12760     111D  00B1               	movwf	(_EUSART_TxInterruptHandler^(0+384)+1)
 12761     111E                     l5538:
 12762                           
 12763                           ;mcc_generated_files/uart/src/eusart.c: 131:     BAUD1CON = 0x48;
 12764     111E  3048               	movlw	72
 12765     111F  009F               	movwf	31	;volatile
 12766     1120                     l5540:
 12767                           
 12768                           ;mcc_generated_files/uart/src/eusart.c: 133:     RC1STA = 0x90;
 12769     1120  3090               	movlw	144
 12770     1121  009D               	movwf	29	;volatile
 12771     1122                     l5542:
 12772                           
 12773                           ;mcc_generated_files/uart/src/eusart.c: 135:     TX1STA = 0x26;
 12774     1122  3026               	movlw	38
 12775     1123  009E               	movwf	30	;volatile
 12776     1124                     l5544:
 12777                           
 12778                           ;mcc_generated_files/uart/src/eusart.c: 137:     SP1BRGL = 0xA0;
 12779     1124  30A0               	movlw	160
 12780     1125  009B               	movwf	27	;volatile
 12781     1126                     l5546:
 12782                           
 12783                           ;mcc_generated_files/uart/src/eusart.c: 139:     SP1BRGH = 0x1;
 12784     1126  3001               	movlw	1
 12785     1127  009C               	movwf	28	;volatile
 12786     1128                     l5548:
 12787                           
 12788                           ;mcc_generated_files/uart/src/eusart.c: 141:     EUSART_FramingErrorCallbackRegister(EUS
      +                          ART_DefaultFramingErrorCallback);
 12789     1128  30E5               	movlw	low _EUSART_DefaultFramingErrorCallback
 12790     1129  0020               	movlb	0	; select bank0
 12791     112A  00A0               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler
 12792     112B  301D               	movlw	high _EUSART_DefaultFramingErrorCallback
 12793     112C  00A1               	movwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1
 12794     112D  319E  2661  3191   	fcall	_EUSART_FramingErrorCallbackRegister
 12795     1130                     l5550:
 12796                           
 12797                           ;mcc_generated_files/uart/src/eusart.c: 142:     EUSART_OverrunErrorCallbackRegister(EUS
      +                          ART_DefaultOverrunErrorCallback);
 12798     1130  30F5               	movlw	low _EUSART_DefaultOverrunErrorCallback
 12799     1131  0020               	movlb	0	; select bank0
 12800     1132  00A0               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler
 12801     1133  301D               	movlw	high _EUSART_DefaultOverrunErrorCallback
 12802     1134  00A1               	movwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1
 12803     1135  319E  2670  3191   	fcall	_EUSART_OverrunErrorCallbackRegister
 12804     1138                     l5552:
 12805                           
 12806                           ;mcc_generated_files/uart/src/eusart.c: 143:     eusartRxLastError.status = 0;
 12807     1138  0022               	movlb	2	; select bank2
 12808     1139  01D4               	clrf	_eusartRxLastError^(0+256)	;volatile
 12809     113A  01D5               	clrf	(_eusartRxLastError+1)^(0+256)	;volatile
 12810     113B                     l5554:
 12811                           
 12812                           ;mcc_generated_files/uart/src/eusart.c: 145:     eusartTxHead = 0;
 12813     113B  01F5               	clrf	_eusartTxHead	;volatile
 12814     113C                     l5556:
 12815                           
 12816                           ;mcc_generated_files/uart/src/eusart.c: 146:     eusartTxTail = 0;
 12817     113C  01F4               	clrf	_eusartTxTail	;volatile
 12818     113D                     l5558:
 12819                           
 12820                           ;mcc_generated_files/uart/src/eusart.c: 147:     eusartTxBufferRemaining = sizeof(eusart
      +                          TxBuffer);
 12821     113D  3008               	movlw	8
 12822     113E  00F3               	movwf	_eusartTxBufferRemaining	;volatile
 12823     113F                     l5560:
 12824                           
 12825                           ;mcc_generated_files/uart/src/eusart.c: 149:     eusartRxHead = 0;
 12826     113F  01F2               	clrf	_eusartRxHead	;volatile
 12827     1140                     l5562:
 12828                           
 12829                           ;mcc_generated_files/uart/src/eusart.c: 150:     eusartRxTail = 0;
 12830     1140  01F1               	clrf	_eusartRxTail	;volatile
 12831     1141                     l5564:
 12832                           
 12833                           ;mcc_generated_files/uart/src/eusart.c: 151:     eusartRxCount = 0;
 12834     1141  01F0               	clrf	_eusartRxCount	;volatile
 12835     1142                     l5566:
 12836                           
 12837                           ;mcc_generated_files/uart/src/eusart.c: 153:     PIE1bits.RCIE = 1;
 12838     1142  0021               	movlb	1	; select bank1
 12839     1143  1691               	bsf	17,5	;volatile
 12840     1144                     l354:
 12841     1144  0008               	return
 12842     1145                     __end_of_EUSART_Initialize:
 12843                           
 12844                           	psect	text43
 12845     1E70                     __ptext43:	
 12846 ;; *************** function _EUSART_OverrunErrorCallbackRegister *****************
 12847 ;; Defined at:
 12848 ;;		line 430 in file "mcc_generated_files/uart/src/eusart.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
 12851 ;;		 -> EUSART_DefaultOverrunErrorCallback(1), 
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;		None
 12854 ;; Return value:  Size  Location     Type
 12855 ;;                  1    wreg      void 
 12856 ;; Registers used:
 12857 ;;		wreg, status,2, status,0
 12858 ;; Tracked objects:
 12859 ;;		On entry : 0/0
 12860 ;;		On exit  : 0/0
 12861 ;;		Unchanged: 0/0
 12862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;Total ram usage:        2 bytes
 12868 ;; Hardware stack levels used: 1
 12869 ;; Hardware stack levels required when called: 4
 12870 ;; This function calls:
 12871 ;;		Nothing
 12872 ;; This function is called by:
 12873 ;;		_EUSART_Initialize
 12874 ;; This function uses a non-reentrant model
 12875 ;;
 12876                           
 12877     1E70                     _EUSART_OverrunErrorCallbackRegister:	
 12878                           ;psect for function _EUSART_OverrunErrorCallbackRegister
 12879                           
 12880     1E70                     l5408:	
 12881                           ;incstack = 0
 12882                           ; Regs used in _EUSART_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
 12883                           
 12884                           
 12885                           ;mcc_generated_files/uart/src/eusart.c: 430: void EUSART_OverrunErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 431: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 432:     if(((void*)0) != callbackHandler)
 12886     1E70  0020               	movlb	0	; select bank0
 12887     1E71  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
 12888     1E72  0421               	iorwf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
 12889     1E73  1903               	btfsc	3,2
 12890     1E74  2E76               	goto	u7721
 12891     1E75  2E77               	goto	u7720
 12892     1E76                     u7721:
 12893     1E76  2E7E               	goto	l472
 12894     1E77                     u7720:
 12895     1E77                     l5410:
 12896                           
 12897                           ;mcc_generated_files/uart/src/eusart.c: 433:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 434:         EUSART_OverrunErrorHandler = callbackHandler;
 12898     1E77  0821               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler+1,w
 12899     1E78  0022               	movlb	2	; select bank2
 12900     1E79  00CD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 12901     1E7A  0020               	movlb	0	; select bank0
 12902     1E7B  0820               	movf	EUSART_OverrunErrorCallbackRegister@callbackHandler,w
 12903     1E7C  0022               	movlb	2	; select bank2
 12904     1E7D  00CC               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 12905     1E7E                     l472:
 12906     1E7E  0008               	return
 12907     1E7F                     __end_of_EUSART_OverrunErrorCallbackRegister:
 12908                           
 12909                           	psect	text44
 12910     1E61                     __ptext44:	
 12911 ;; *************** function _EUSART_FramingErrorCallbackRegister *****************
 12912 ;; Defined at:
 12913 ;;		line 422 in file "mcc_generated_files/uart/src/eusart.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
 12916 ;;		 -> EUSART_DefaultFramingErrorCallback(1), 
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      void 
 12921 ;; Registers used:
 12922 ;;		wreg, status,2, status,0
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;Total ram usage:        2 bytes
 12933 ;; Hardware stack levels used: 1
 12934 ;; Hardware stack levels required when called: 4
 12935 ;; This function calls:
 12936 ;;		Nothing
 12937 ;; This function is called by:
 12938 ;;		_EUSART_Initialize
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           
 12942     1E61                     _EUSART_FramingErrorCallbackRegister:	
 12943                           ;psect for function _EUSART_FramingErrorCallbackRegister
 12944                           
 12945     1E61                     l5404:	
 12946                           ;incstack = 0
 12947                           ; Regs used in _EUSART_FramingErrorCallbackRegister: [wreg+status,2+status,0]
 12948                           
 12949                           
 12950                           ;mcc_generated_files/uart/src/eusart.c: 422: void EUSART_FramingErrorCallbackRegister(vo
      +                          id (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 423: {;mcc_generate
      +                          d_files/uart/src/eusart.c: 424:     if(((void*)0) != callbackHandler)
 12951     1E61  0020               	movlb	0	; select bank0
 12952     1E62  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
 12953     1E63  0421               	iorwf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
 12954     1E64  1903               	btfsc	3,2
 12955     1E65  2E67               	goto	u7711
 12956     1E66  2E68               	goto	u7710
 12957     1E67                     u7711:
 12958     1E67  2E6F               	goto	l468
 12959     1E68                     u7710:
 12960     1E68                     l5406:
 12961                           
 12962                           ;mcc_generated_files/uart/src/eusart.c: 425:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 426:         EUSART_FramingErrorHandler = callbackHandler;
 12963     1E68  0821               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler+1,w
 12964     1E69  0022               	movlb	2	; select bank2
 12965     1E6A  00CF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
 12966     1E6B  0020               	movlb	0	; select bank0
 12967     1E6C  0820               	movf	EUSART_FramingErrorCallbackRegister@callbackHandler,w
 12968     1E6D  0022               	movlb	2	; select bank2
 12969     1E6E  00CE               	movwf	_EUSART_FramingErrorHandler^(0+256)
 12970     1E6F                     l468:
 12971     1E6F  0008               	return
 12972     1E70                     __end_of_EUSART_FramingErrorCallbackRegister:
 12973                           
 12974                           	psect	text45
 12975     1E10                     __ptext45:	
 12976 ;; *************** function _CLOCK_Initialize *****************
 12977 ;; Defined at:
 12978 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;		None
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      void 
 12985 ;; Registers used:
 12986 ;;		status,2
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;Total ram usage:        0 bytes
 12997 ;; Hardware stack levels used: 1
 12998 ;; Hardware stack levels required when called: 4
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_SYSTEM_Initialize
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006     1E10                     _CLOCK_Initialize:	
 13007                           ;psect for function _CLOCK_Initialize
 13008                           
 13009     1E10                     l5484:	
 13010                           ;incstack = 0
 13011                           ; Regs used in _CLOCK_Initialize: [status,2]
 13012                           
 13013                           
 13014                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
 13015     1E10  3078               	movlw	120
 13016     1E11  0021               	movlb	1	; select bank1
 13017     1E12  0099               	movwf	25	;volatile
 13018                           
 13019                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (1 << 0x7)
 13020     1E13  3080               	movlw	128
 13021     1E14  0022               	movlb	2	; select bank2
 13022     1E15  0096               	movwf	22	;volatile
 13023     1E16                     l5486:
 13024                           
 13025                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
 13026     1E16  0021               	movlb	1	; select bank1
 13027     1E17  0198               	clrf	24	;volatile
 13028     1E18                     l67:
 13029     1E18  0008               	return
 13030     1E19                     __end_of_CLOCK_Initialize:
 13031                           
 13032                           	psect	text46
 13033     1EB4                     __ptext46:	
 13034 ;; *************** function _ADC_Initialize *****************
 13035 ;; Defined at:
 13036 ;;		line 55 in file "mcc_generated_files/adc/src/adc.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;		None
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;		None
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  1    wreg      void 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0, pclath, cstack
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;Total ram usage:        0 bytes
 13055 ;; Hardware stack levels used: 1
 13056 ;; Hardware stack levels required when called: 5
 13057 ;; This function calls:
 13058 ;;		_ADC_SetInterruptHandler
 13059 ;; This function is called by:
 13060 ;;		_SYSTEM_Initialize
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064     1EB4                     _ADC_Initialize:	
 13065                           ;psect for function _ADC_Initialize
 13066                           
 13067     1EB4                     l5472:	
 13068                           ;incstack = 0
 13069                           ; Regs used in _ADC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13070                           
 13071                           
 13072                           ;mcc_generated_files/adc/src/adc.c: 58:     ADCON1 = 0x60;
 13073     1EB4  3060               	movlw	96
 13074     1EB5  0021               	movlb	1	; select bank1
 13075     1EB6  009E               	movwf	30	;volatile
 13076     1EB7                     l5474:
 13077                           
 13078                           ;mcc_generated_files/adc/src/adc.c: 61:     ADRESL = 0x0;
 13079     1EB7  019B               	clrf	27	;volatile
 13080                           
 13081                           ;mcc_generated_files/adc/src/adc.c: 64:     ADRESH = 0x0;
 13082     1EB8  019C               	clrf	28	;volatile
 13083                           
 13084                           ;mcc_generated_files/adc/src/adc.c: 67:     ADCON2 = 0x0;
 13085     1EB9  019F               	clrf	31	;volatile
 13086     1EBA                     l5476:
 13087                           
 13088                           ;mcc_generated_files/adc/src/adc.c: 70:     ADCON0 = 0x1;
 13089     1EBA  3001               	movlw	1
 13090     1EBB  009D               	movwf	29	;volatile
 13091     1EBC                     l5478:
 13092                           
 13093                           ;mcc_generated_files/adc/src/adc.c: 73:     PIR1bits.ADIF = 0;
 13094     1EBC  0020               	movlb	0	; select bank0
 13095     1EBD  1311               	bcf	17,6	;volatile
 13096     1EBE                     l5480:
 13097                           
 13098                           ;mcc_generated_files/adc/src/adc.c: 76:     ADC_SetInterruptHandler(ADC_DefaultInterrupt
      +                          Handler);
 13099     1EBE  30E4               	movlw	low _ADC_DefaultInterruptHandler
 13100     1EBF  00A0               	movwf	ADC_SetInterruptHandler@InterruptHandler
 13101     1EC0  301D               	movlw	high _ADC_DefaultInterruptHandler
 13102     1EC1  00A1               	movwf	ADC_SetInterruptHandler@InterruptHandler+1
 13103     1EC2  319E  2607  319E   	fcall	_ADC_SetInterruptHandler
 13104     1EC5                     l5482:
 13105                           
 13106                           ;mcc_generated_files/adc/src/adc.c: 79:     PIE1bits.ADIE = 1;
 13107     1EC5  0021               	movlb	1	; select bank1
 13108     1EC6  1711               	bsf	17,6	;volatile
 13109     1EC7                     l27:
 13110     1EC7  0008               	return
 13111     1EC8                     __end_of_ADC_Initialize:
 13112                           
 13113                           	psect	text47
 13114     1E07                     __ptext47:	
 13115 ;; *************** function _ADC_SetInterruptHandler *****************
 13116 ;; Defined at:
 13117 ;;		line 145 in file "mcc_generated_files/adc/src/adc.c"
 13118 ;; Parameters:    Size  Location     Type
 13119 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13120 ;;		 -> ADC_DefaultInterruptHandler(1), 
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;		None
 13123 ;; Return value:  Size  Location     Type
 13124 ;;                  1    wreg      void 
 13125 ;; Registers used:
 13126 ;;		wreg
 13127 ;; Tracked objects:
 13128 ;;		On entry : 0/0
 13129 ;;		On exit  : 0/0
 13130 ;;		Unchanged: 0/0
 13131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13136 ;;Total ram usage:        2 bytes
 13137 ;; Hardware stack levels used: 1
 13138 ;; Hardware stack levels required when called: 4
 13139 ;; This function calls:
 13140 ;;		Nothing
 13141 ;; This function is called by:
 13142 ;;		_ADC_Initialize
 13143 ;; This function uses a non-reentrant model
 13144 ;;
 13145                           
 13146     1E07                     _ADC_SetInterruptHandler:	
 13147                           ;psect for function _ADC_SetInterruptHandler
 13148                           
 13149     1E07                     l5400:	
 13150                           ;incstack = 0
 13151                           ; Regs used in _ADC_SetInterruptHandler: [wreg]
 13152                           
 13153                           
 13154                           ;mcc_generated_files/adc/src/adc.c: 145: void ADC_SetInterruptHandler(void (* InterruptH
      +                          andler)(void));mcc_generated_files/adc/src/adc.c: 146: {;mcc_generated_files/adc/src/adc
      +                          .c: 147:     ADC_InterruptHandler = InterruptHandler;
 13155     1E07  0020               	movlb	0	; select bank0
 13156     1E08  0821               	movf	ADC_SetInterruptHandler@InterruptHandler+1,w
 13157     1E09  0022               	movlb	2	; select bank2
 13158     1E0A  00EA               	movwf	(_ADC_InterruptHandler+1)^(0+256)
 13159     1E0B  0020               	movlb	0	; select bank0
 13160     1E0C  0820               	movf	ADC_SetInterruptHandler@InterruptHandler,w
 13161     1E0D  0022               	movlb	2	; select bank2
 13162     1E0E  00E9               	movwf	_ADC_InterruptHandler^(0+256)
 13163     1E0F                     l55:
 13164     1E0F  0008               	return
 13165     1E10                     __end_of_ADC_SetInterruptHandler:
 13166                           
 13167                           	psect	text48
 13168     1E52                     __ptext48:	
 13169 ;; *************** function _EUSART_RxCompleteCallbackRegister *****************
 13170 ;; Defined at:
 13171 ;;		line 438 in file "mcc_generated_files/uart/src/eusart.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;  callbackHand    2    0[BANK0 ] PTR FTN()void 
 13174 ;;		 -> check_RX_Data(1), 
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;		None
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      void 
 13179 ;; Registers used:
 13180 ;;		wreg, status,2, status,0
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13190 ;;Total ram usage:        2 bytes
 13191 ;; Hardware stack levels used: 1
 13192 ;; Hardware stack levels required when called: 4
 13193 ;; This function calls:
 13194 ;;		Nothing
 13195 ;; This function is called by:
 13196 ;;		_main
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200     1E52                     _EUSART_RxCompleteCallbackRegister:	
 13201                           ;psect for function _EUSART_RxCompleteCallbackRegister
 13202                           
 13203     1E52                     l5618:	
 13204                           ;incstack = 0
 13205                           ; Regs used in _EUSART_RxCompleteCallbackRegister: [wreg+status,2+status,0]
 13206                           
 13207                           
 13208                           ;mcc_generated_files/uart/src/eusart.c: 438: void EUSART_RxCompleteCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/eusart.c: 439: {;mcc_generated_
      +                          files/uart/src/eusart.c: 440:     if(((void*)0) != callbackHandler)
 13209     1E52  0020               	movlb	0	; select bank0
 13210     1E53  0820               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler,w
 13211     1E54  0421               	iorwf	EUSART_RxCompleteCallbackRegister@callbackHandler+1,w
 13212     1E55  1903               	btfsc	3,2
 13213     1E56  2E58               	goto	u7801
 13214     1E57  2E59               	goto	u7800
 13215     1E58                     u7801:
 13216     1E58  2E60               	goto	l476
 13217     1E59                     u7800:
 13218     1E59                     l5620:
 13219                           
 13220                           ;mcc_generated_files/uart/src/eusart.c: 441:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 442:        EUSART_RxCompleteInterruptHandler = callbackHandler;
 13221     1E59  0821               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler+1,w
 13222     1E5A  0022               	movlb	2	; select bank2
 13223     1E5B  00D1               	movwf	(_EUSART_RxCompleteInterruptHandler+1)^(0+256)
 13224     1E5C  0020               	movlb	0	; select bank0
 13225     1E5D  0820               	movf	EUSART_RxCompleteCallbackRegister@callbackHandler,w
 13226     1E5E  0022               	movlb	2	; select bank2
 13227     1E5F  00D0               	movwf	_EUSART_RxCompleteInterruptHandler^(0+256)
 13228     1E60                     l476:
 13229     1E60  0008               	return
 13230     1E61                     __end_of_EUSART_RxCompleteCallbackRegister:
 13231                           
 13232                           	psect	text49
 13233     1022                     __ptext49:	
 13234 ;; *************** function _ADC_GetConversion *****************
 13235 ;; Defined at:
 13236 ;;		line 106 in file "mcc_generated_files/adc/src/adc.c"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;  channel         1    wreg     enum E4170
 13239 ;; Auto vars:     Size  Location     Type
 13240 ;;  channel         1    3[BANK0 ] enum E4170
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  2    0[BANK0 ] unsigned short 
 13243 ;; Registers used:
 13244 ;;		wreg, status,2, status,0
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 0/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;Total ram usage:        4 bytes
 13255 ;; Hardware stack levels used: 1
 13256 ;; Hardware stack levels required when called: 4
 13257 ;; This function calls:
 13258 ;;		Nothing
 13259 ;; This function is called by:
 13260 ;;		_main
 13261 ;; This function uses a non-reentrant model
 13262 ;;
 13263                           
 13264     1022                     _ADC_GetConversion:	
 13265                           ;psect for function _ADC_GetConversion
 13266                           
 13267                           
 13268                           ;incstack = 0
 13269                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13270                           ;ADC_GetConversion@channel stored from wreg
 13271     1022  0020               	movlb	0	; select bank0
 13272     1023  00A3               	movwf	ADC_GetConversion@channel
 13273     1024                     l5592:
 13274                           
 13275                           ;mcc_generated_files/adc/src/adc.c: 106: adc_result_t ADC_GetConversion(adc_channel_t ch
      +                          annel);mcc_generated_files/adc/src/adc.c: 107: {;mcc_generated_files/adc/src/adc.c: 109:
      +                               ADCON0bits.CHS = channel;
 13276     1024  0823               	movf	ADC_GetConversion@channel,w
 13277     1025  00A2               	movwf	??_ADC_GetConversion
 13278     1026  0DA2               	rlf	??_ADC_GetConversion,f
 13279     1027  0DA2               	rlf	??_ADC_GetConversion,f
 13280     1028  0021               	movlb	1	; select bank1
 13281     1029  081D               	movf	29,w	;volatile
 13282     102A  0020               	movlb	0	; select bank0
 13283     102B  0622               	xorwf	??_ADC_GetConversion,w
 13284     102C  3983               	andlw	-125
 13285     102D  0622               	xorwf	??_ADC_GetConversion,w
 13286     102E  0021               	movlb	1	; select bank1
 13287     102F  009D               	movwf	29	;volatile
 13288     1030                     l5594:
 13289                           
 13290                           ;mcc_generated_files/adc/src/adc.c: 112:     ADCON0bits.ADON = 1;
 13291     1030  141D               	bsf	29,0	;volatile
 13292     1031                     l5596:
 13293                           
 13294                           ;mcc_generated_files/adc/src/adc.c: 115:     _delay((unsigned long)((5)*(16000000/400000
      +                          0.0)));
 13295     1031  3006               	movlw	6
 13296     1032                     u8227:
 13297     1032  0B89               	decfsz	9,f
 13298     1033  2832               	goto	u8227
 13299     1034  3200               	nop2
 13300     1035                     l5598:
 13301                           
 13302                           ;mcc_generated_files/adc/src/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 13303     1035  0021               	movlb	1	; select bank1
 13304     1036  149D               	bsf	29,1	;volatile
 13305     1037                     l42:	
 13306                           ;mcc_generated_files/adc/src/adc.c: 122:     {;mcc_generated_files/adc/src/adc.c: 123:  
      +                             }
 13307                           
 13308                           
 13309                           ;mcc_generated_files/adc/src/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 13310     1037  189D               	btfsc	29,1	;volatile
 13311     1038  283A               	goto	u7791
 13312     1039  283B               	goto	u7790
 13313     103A                     u7791:
 13314     103A  2837               	goto	l42
 13315     103B                     u7790:
 13316     103B                     l5600:
 13317                           
 13318                           ;mcc_generated_files/adc/src/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRE
      +                          SL));
 13319     103B  081C               	movf	28,w	;volatile
 13320     103C  0020               	movlb	0	; select bank0
 13321     103D  00A1               	movwf	?_ADC_GetConversion+1
 13322     103E  0021               	movlb	1	; select bank1
 13323     103F  081B               	movf	27,w	;volatile
 13324     1040  0020               	movlb	0	; select bank0
 13325     1041  00A0               	movwf	?_ADC_GetConversion
 13326     1042                     l45:
 13327     1042  0008               	return
 13328     1043                     __end_of_ADC_GetConversion:
 13329                           
 13330                           	psect	intentry
 13331     0004                     __pintentry:	
 13332 ;; *************** function _INTERRUPT_InterruptManager *****************
 13333 ;; Defined at:
 13334 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;		None
 13337 ;; Auto vars:     Size  Location     Type
 13338 ;;		None
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  1    wreg      void 
 13341 ;; Registers used:
 13342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13352 ;;Total ram usage:        0 bytes
 13353 ;; Hardware stack levels used: 1
 13354 ;; Hardware stack levels required when called: 3
 13355 ;; This function calls:
 13356 ;;		NULL
 13357 ;;		_ADC_ISR
 13358 ;;		_EUSART_ReceiveISR
 13359 ;;		_EUSART_TransmitISR
 13360 ;;		_TMR4_ISR
 13361 ;; This function is called by:
 13362 ;;		Interrupt level 1
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366     0004                     _INTERRUPT_InterruptManager:
 13367                           
 13368                           ;incstack = 0
 13369     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13370                           
 13371                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13372     0005  3180               	pagesel	$
 13373     0006                     i1l4366:
 13374                           
 13375                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
 13376     0006  1F0B               	btfss	11,6	;volatile
 13377     0007  2809               	goto	u559_21
 13378     0008  280A               	goto	u559_20
 13379     0009                     u559_21:
 13380     0009  2848               	goto	i1l165
 13381     000A                     u559_20:
 13382     000A                     i1l4368:
 13383                           
 13384                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 13385     000A  0021               	movlb	1	; select bank1
 13386     000B  1E91               	btfss	17,5	;volatile
 13387     000C  280E               	goto	u560_21
 13388     000D  280F               	goto	u560_20
 13389     000E                     u560_21:
 13390     000E  281B               	goto	i1l156
 13391     000F                     u560_20:
 13392     000F                     i1l4370:
 13393     000F  0020               	movlb	0	; select bank0
 13394     0010  1E91               	btfss	17,5	;volatile
 13395     0011  2813               	goto	u561_21
 13396     0012  2814               	goto	u561_20
 13397     0013                     u561_21:
 13398     0013  281B               	goto	i1l156
 13399     0014                     u561_20:
 13400     0014                     i1l4372:
 13401                           
 13402                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART_RxInterruptHandler();
 13403     0014  0022               	movlb	2	; select bank2
 13404     0015  0868               	movf	(_EUSART_RxInterruptHandler+1)^(0+256),w
 13405     0016  008A               	movwf	10
 13406     0017  0867               	movf	_EUSART_RxInterruptHandler^(0+256),w
 13407     0018  000A               	callw
 13408     0019  3180               	pagesel	$
 13409                           
 13410                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
 13411     001A  2848               	goto	i1l165
 13412     001B                     i1l156:	
 13413                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.TXIE == 1 && P
      +                          IR1bits.TXIF == 1)
 13414                           
 13415     001B  0021               	movlb	1	; select bank1
 13416     001C  1E11               	btfss	17,4	;volatile
 13417     001D  281F               	goto	u562_21
 13418     001E  2820               	goto	u562_20
 13419     001F                     u562_21:
 13420     001F  282C               	goto	i1l158
 13421     0020                     u562_20:
 13422     0020                     i1l4374:
 13423     0020  0020               	movlb	0	; select bank0
 13424     0021  1E11               	btfss	17,4	;volatile
 13425     0022  2824               	goto	u563_21
 13426     0023  2825               	goto	u563_20
 13427     0024                     u563_21:
 13428     0024  282C               	goto	i1l158
 13429     0025                     u563_20:
 13430     0025                     i1l4376:
 13431                           
 13432                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART_TxInterruptHandler();
 13433     0025  0023               	movlb	3	; select bank3
 13434     0026  0831               	movf	(_EUSART_TxInterruptHandler+1)^(0+384),w
 13435     0027  008A               	movwf	10
 13436     0028  0830               	movf	_EUSART_TxInterruptHandler^(0+384),w
 13437     0029  000A               	callw
 13438     002A  3180               	pagesel	$
 13439                           
 13440                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
 13441     002B  2848               	goto	i1l165
 13442     002C                     i1l158:	
 13443                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.ADIE == 1 && P
      +                          IR1bits.ADIF == 1)
 13444                           
 13445     002C  0021               	movlb	1	; select bank1
 13446     002D  1F11               	btfss	17,6	;volatile
 13447     002E  2830               	goto	u564_21
 13448     002F  2831               	goto	u564_20
 13449     0030                     u564_21:
 13450     0030  283A               	goto	i1l160
 13451     0031                     u564_20:
 13452     0031                     i1l4378:
 13453     0031  0020               	movlb	0	; select bank0
 13454     0032  1F11               	btfss	17,6	;volatile
 13455     0033  2835               	goto	u565_21
 13456     0034  2836               	goto	u565_20
 13457     0035                     u565_21:
 13458     0035  283A               	goto	i1l160
 13459     0036                     u565_20:
 13460     0036                     i1l4380:
 13461                           
 13462                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             ADC_ISR();
 13463     0036  319E  2643  3180   	fcall	_ADC_ISR
 13464                           
 13465                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
 13466     0039  2848               	goto	i1l165
 13467     003A                     i1l160:	
 13468                           ;mcc_generated_files/system/src/interrupt.c: 76:         else if(PIE2bits.TMR4IE == 1 &&
      +                           PIR2bits.TMR4IF == 1)
 13469                           
 13470     003A  0021               	movlb	1	; select bank1
 13471     003B  1C92               	btfss	18,1	;volatile
 13472     003C  283E               	goto	u566_21
 13473     003D  283F               	goto	u566_20
 13474     003E                     u566_21:
 13475     003E  2848               	goto	i1l159
 13476     003F                     u566_20:
 13477     003F                     i1l4382:
 13478     003F  0020               	movlb	0	; select bank0
 13479     0040  1C92               	btfss	18,1	;volatile
 13480     0041  2843               	goto	u567_21
 13481     0042  2844               	goto	u567_20
 13482     0043                     u567_21:
 13483     0043  2848               	goto	i1l159
 13484     0044                     u567_20:
 13485     0044                     i1l4384:
 13486                           
 13487                           ;mcc_generated_files/system/src/interrupt.c: 77:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 78:             TMR4_ISR();
 13488     0044  319F  2781  3180   	fcall	_TMR4_ISR
 13489                           
 13490                           ;mcc_generated_files/system/src/interrupt.c: 79:         }
 13491     0047  2848               	goto	i1l165
 13492     0048                     i1l159:
 13493     0048                     i1l165:
 13494     0048  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13495     0049  0009               	retfie
 13496     004A                     __end_of_INTERRUPT_InterruptManager:
 13497                           
 13498                           	psect	text51
 13499     1F81                     __ptext51:	
 13500 ;; *************** function _TMR4_ISR *****************
 13501 ;; Defined at:
 13502 ;;		line 114 in file "mcc_generated_files/timer/src/tmr4.c"
 13503 ;; Parameters:    Size  Location     Type
 13504 ;;		None
 13505 ;; Auto vars:     Size  Location     Type
 13506 ;;		None
 13507 ;; Return value:  Size  Location     Type
 13508 ;;                  1    wreg      void 
 13509 ;; Registers used:
 13510 ;;		wreg, status,2, status,0, pclath, cstack
 13511 ;; Tracked objects:
 13512 ;;		On entry : 0/0
 13513 ;;		On exit  : 0/0
 13514 ;;		Unchanged: 0/0
 13515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13520 ;;Total ram usage:        0 bytes
 13521 ;; Hardware stack levels used: 1
 13522 ;; Hardware stack levels required when called: 1
 13523 ;; This function calls:
 13524 ;;		NULL
 13525 ;;		_TMR4_DefaultPeriodMatchCallback
 13526 ;;		_timer_interrupt
 13527 ;; This function is called by:
 13528 ;;		_INTERRUPT_InterruptManager
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           
 13532     1F81                     _TMR4_ISR:	
 13533                           ;psect for function _TMR4_ISR
 13534                           
 13535     1F81                     i1l4162:	
 13536                           ;incstack = 0
 13537                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 13538                           
 13539                           
 13540                           ;mcc_generated_files/timer/src/tmr4.c: 116:     static volatile uint16_t CountCallBack =
      +                           0;;mcc_generated_files/timer/src/tmr4.c: 118:     if(++CountCallBack >= (20U))
 13541     1F81  3001               	movlw	1
 13542     1F82  0022               	movlb	2	; select bank2
 13543     1F83  07D6               	addwf	TMR4_ISR@CountCallBack^(0+256),f	;volatile
 13544     1F84  3000               	movlw	0
 13545     1F85  3DD7               	addwfc	(TMR4_ISR@CountCallBack+1)^(0+256),f	;volatile
 13546     1F86  3000               	movlw	0
 13547     1F87  0257               	subwf	(TMR4_ISR@CountCallBack+1)^(0+256),w	;volatile
 13548     1F88  3014               	movlw	20
 13549     1F89  1903               	skipnz
 13550     1F8A  0256               	subwf	TMR4_ISR@CountCallBack^(0+256),w	;volatile
 13551     1F8B  1C03               	skipc
 13552     1F8C  2F8E               	goto	u512_21
 13553     1F8D  2F8F               	goto	u512_20
 13554     1F8E                     u512_21:
 13555     1F8E  2F9D               	goto	i1l4170
 13556     1F8F                     u512_20:
 13557     1F8F                     i1l4164:
 13558                           
 13559                           ;mcc_generated_files/timer/src/tmr4.c: 119:     {;mcc_generated_files/timer/src/tmr4.c: 
      +                          120:         if(((void*)0) != TMR4_PeriodMatchCallback)
 13560     1F8F  0865               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 13561     1F90  0466               	iorwf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 13562     1F91  1903               	btfsc	3,2
 13563     1F92  2F94               	goto	u513_21
 13564     1F93  2F95               	goto	u513_20
 13565     1F94                     u513_21:
 13566     1F94  2F9A               	goto	i1l4168
 13567     1F95                     u513_20:
 13568     1F95                     i1l4166:
 13569                           
 13570                           ;mcc_generated_files/timer/src/tmr4.c: 121:         {;mcc_generated_files/timer/src/tmr4
      +                          .c: 122:             TMR4_PeriodMatchCallback();
 13571     1F95  0866               	movf	(_TMR4_PeriodMatchCallback+1)^(0+256),w
 13572     1F96  008A               	movwf	10
 13573     1F97  0865               	movf	_TMR4_PeriodMatchCallback^(0+256),w
 13574     1F98  000A               	callw
 13575     1F99  319F               	pagesel	$
 13576     1F9A                     i1l4168:
 13577                           
 13578                           ;mcc_generated_files/timer/src/tmr4.c: 124:         CountCallBack = 0;
 13579     1F9A  0022               	movlb	2	; select bank2
 13580     1F9B  01D6               	clrf	TMR4_ISR@CountCallBack^(0+256)	;volatile
 13581     1F9C  01D7               	clrf	(TMR4_ISR@CountCallBack+1)^(0+256)	;volatile
 13582     1F9D                     i1l4170:
 13583                           
 13584                           ;mcc_generated_files/timer/src/tmr4.c: 126:     PIR2bits.TMR4IF = 0;
 13585     1F9D  0020               	movlb	0	; select bank0
 13586     1F9E  1092               	bcf	18,1	;volatile
 13587     1F9F                     i1l249:
 13588     1F9F  0008               	return
 13589     1FA0                     __end_of_TMR4_ISR:
 13590                           
 13591                           	psect	text52
 13592     1000                     __ptext52:	
 13593 ;; *************** function _TMR4_DefaultPeriodMatchCallback *****************
 13594 ;; Defined at:
 13595 ;;		line 134 in file "mcc_generated_files/timer/src/tmr4.c"
 13596 ;; Parameters:    Size  Location     Type
 13597 ;;		None
 13598 ;; Auto vars:     Size  Location     Type
 13599 ;;		None
 13600 ;; Return value:  Size  Location     Type
 13601 ;;                  1    wreg      void 
 13602 ;; Registers used:
 13603 ;;		None
 13604 ;; Tracked objects:
 13605 ;;		On entry : 0/0
 13606 ;;		On exit  : 0/0
 13607 ;;		Unchanged: 0/0
 13608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13613 ;;Total ram usage:        0 bytes
 13614 ;; Hardware stack levels used: 1
 13615 ;; This function calls:
 13616 ;;		Nothing
 13617 ;; This function is called by:
 13618 ;;		_TMR4_Initialize
 13619 ;;		_TMR4_ISR
 13620 ;; This function uses a non-reentrant model
 13621 ;;
 13622                           
 13623     1000                     _TMR4_DefaultPeriodMatchCallback:	
 13624                           ;psect for function _TMR4_DefaultPeriodMatchCallback
 13625                           
 13626     1000                     i1l255:	
 13627                           ;incstack = 0
 13628                           ; Regs used in _TMR4_DefaultPeriodMatchCallback: []
 13629                           
 13630     1000  0008               	return
 13631     1001                     __end_of_TMR4_DefaultPeriodMatchCallback:
 13632                           
 13633                           	psect	text53
 13634     1145                     __ptext53:	
 13635 ;; *************** function _timer_interrupt *****************
 13636 ;; Defined at:
 13637 ;;		line 131 in file "main.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;		None
 13640 ;; Auto vars:     Size  Location     Type
 13641 ;;		None
 13642 ;; Return value:  Size  Location     Type
 13643 ;;                  1    wreg      void 
 13644 ;; Registers used:
 13645 ;;		wreg, status,2, status,0
 13646 ;; Tracked objects:
 13647 ;;		On entry : 0/0
 13648 ;;		On exit  : 0/0
 13649 ;;		Unchanged: 0/0
 13650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13655 ;;Total ram usage:        0 bytes
 13656 ;; Hardware stack levels used: 1
 13657 ;; This function calls:
 13658 ;;		Nothing
 13659 ;; This function is called by:
 13660 ;;		_main
 13661 ;;		_TMR4_ISR
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665     1145                     _timer_interrupt:	
 13666                           ;psect for function _timer_interrupt
 13667                           
 13668     1145                     i1l4106:	
 13669                           ;incstack = 0
 13670                           ; Regs used in _timer_interrupt: [wreg+status,2+status,0]
 13671                           
 13672                           
 13673                           ;main.c: 132:     if (reset_flg_24 == 3) do { LATAbits.LATA4 = ~LATAbits.LATA4; } while(
      +                          0);
 13674     1145  3003               	movlw	3
 13675     1146  0022               	movlb	2	; select bank2
 13676     1147  066C               	xorwf	_reset_flg_24^(0+256),w
 13677     1148  1D03               	btfss	3,2
 13678     1149  294B               	goto	u497_21
 13679     114A  294C               	goto	u497_20
 13680     114B                     u497_21:
 13681     114B  2957               	goto	i1l4110
 13682     114C                     u497_20:
 13683     114C                     i1l4108:
 13684     114C  1003               	clrc
 13685     114D  1E0C               	btfss	12,4	;volatile
 13686     114E  1403               	setc
 13687     114F  1803               	btfsc	3,0
 13688     1150  2952               	goto	u498_21
 13689     1151  2955               	goto	u498_20
 13690     1152                     u498_21:
 13691     1152  0022               	movlb	2	; select bank2
 13692     1153  160C               	bsf	12,4	;volatile
 13693     1154  2957               	goto	u499_24
 13694     1155                     u498_20:
 13695     1155  0022               	movlb	2	; select bank2
 13696     1156  120C               	bcf	12,4	;volatile
 13697     1157                     u499_24:
 13698     1157                     i1l4110:
 13699                           
 13700                           ;main.c: 133:     if (reset_flg_12 == 3) do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(
      +                          0);
 13701     1157  3003               	movlw	3
 13702     1158  066B               	xorwf	_reset_flg_12^(0+256),w
 13703     1159  1D03               	btfss	3,2
 13704     115A  295C               	goto	u500_21
 13705     115B  295D               	goto	u500_20
 13706     115C                     u500_21:
 13707     115C  2968               	goto	i1l4114
 13708     115D                     u500_20:
 13709     115D                     i1l4112:
 13710     115D  1003               	clrc
 13711     115E  1E8C               	btfss	12,5	;volatile
 13712     115F  1403               	setc
 13713     1160  1803               	btfsc	3,0
 13714     1161  2963               	goto	u501_21
 13715     1162  2966               	goto	u501_20
 13716     1163                     u501_21:
 13717     1163  0022               	movlb	2	; select bank2
 13718     1164  168C               	bsf	12,5	;volatile
 13719     1165  2968               	goto	u502_24
 13720     1166                     u501_20:
 13721     1166  0022               	movlb	2	; select bank2
 13722     1167  128C               	bcf	12,5	;volatile
 13723     1168                     u502_24:
 13724     1168                     i1l4114:
 13725                           
 13726                           ;main.c: 134:     if (reset_flg_24 == 3 || reset_flg_12 == 3) do { LATAbits.LATA2 = ~LAT
      +                          Abits.LATA2; } while(0);
 13727     1168  3003               	movlw	3
 13728     1169  066C               	xorwf	_reset_flg_24^(0+256),w
 13729     116A  1903               	btfsc	3,2
 13730     116B  296D               	goto	u503_21
 13731     116C  296E               	goto	u503_20
 13732     116D                     u503_21:
 13733     116D  2974               	goto	i1l4118
 13734     116E                     u503_20:
 13735     116E                     i1l4116:
 13736     116E  3003               	movlw	3
 13737     116F  066B               	xorwf	_reset_flg_12^(0+256),w
 13738     1170  1D03               	btfss	3,2
 13739     1171  2973               	goto	u504_21
 13740     1172  2974               	goto	u504_20
 13741     1173                     u504_21:
 13742     1173  297F               	goto	i1l625
 13743     1174                     u504_20:
 13744     1174                     i1l4118:
 13745     1174  1003               	clrc
 13746     1175  1D0C               	btfss	12,2	;volatile
 13747     1176  1403               	setc
 13748     1177  1803               	btfsc	3,0
 13749     1178  297A               	goto	u505_21
 13750     1179  297D               	goto	u505_20
 13751     117A                     u505_21:
 13752     117A  0022               	movlb	2	; select bank2
 13753     117B  150C               	bsf	12,2	;volatile
 13754     117C  297F               	goto	u506_24
 13755     117D                     u505_20:
 13756     117D  0022               	movlb	2	; select bank2
 13757     117E  110C               	bcf	12,2	;volatile
 13758     117F                     u506_24:
 13759     117F                     i1l625:
 13760     117F  0008               	return
 13761     1180                     __end_of_timer_interrupt:
 13762                           
 13763                           	psect	text54
 13764     1EF2                     __ptext54:	
 13765 ;; *************** function _EUSART_TransmitISR *****************
 13766 ;; Defined at:
 13767 ;;		line 369 in file "mcc_generated_files/uart/src/eusart.c"
 13768 ;; Parameters:    Size  Location     Type
 13769 ;;		None
 13770 ;; Auto vars:     Size  Location     Type
 13771 ;;  tempTxTail      1    0[COMMON] unsigned char 
 13772 ;; Return value:  Size  Location     Type
 13773 ;;                  1    wreg      void 
 13774 ;; Registers used:
 13775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13776 ;; Tracked objects:
 13777 ;;		On entry : 0/0
 13778 ;;		On exit  : 0/0
 13779 ;;		Unchanged: 0/0
 13780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;Total ram usage:        1 bytes
 13786 ;; Hardware stack levels used: 1
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_EUSART_Initialize
 13791 ;;		_INTERRUPT_InterruptManager
 13792 ;; This function uses a non-reentrant model
 13793 ;;
 13794                           
 13795     1EF2                     _EUSART_TransmitISR:	
 13796                           ;psect for function _EUSART_TransmitISR
 13797                           
 13798     1EF2                     i1l4222:	
 13799                           ;incstack = 0
 13800                           ; Regs used in _EUSART_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 13801                           
 13802                           
 13803                           ;mcc_generated_files/uart/src/eusart.c: 371:     uint8_t tempTxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 373:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 13804     1EF2  3008               	movlw	8
 13805     1EF3  0273               	subwf	_eusartTxBufferRemaining,w	;volatile
 13806     1EF4  1803               	skipnc
 13807     1EF5  2EF7               	goto	u520_21
 13808     1EF6  2EF8               	goto	u520_20
 13809     1EF7                     u520_21:
 13810     1EF7  2F09               	goto	i1l443
 13811     1EF8                     u520_20:
 13812     1EF8                     i1l4224:
 13813                           
 13814                           ;mcc_generated_files/uart/src/eusart.c: 374:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 375:        TX1REG = eusartTxBuffer[eusartTxTail];
 13815     1EF8  0874               	movf	_eusartTxTail,w
 13816     1EF9  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 13817     1EFA  0086               	movwf	6
 13818     1EFB  3001               	movlw	1	; select bank2/3
 13819     1EFC  0087               	movwf	7
 13820     1EFD  0801               	movf	1,w
 13821     1EFE  0023               	movlb	3	; select bank3
 13822     1EFF  009A               	movwf	26	;volatile
 13823     1F00                     i1l4226:
 13824                           
 13825                           ;mcc_generated_files/uart/src/eusart.c: 376:        tempTxTail = (eusartTxTail + 1U) & (
      +                          (8U) - 1U);
 13826     1F00  0874               	movf	_eusartTxTail,w	;volatile
 13827     1F01  3E01               	addlw	1
 13828     1F02  3907               	andlw	7
 13829     1F03  00F6               	movwf	EUSART_TransmitISR@tempTxTail
 13830     1F04                     i1l4228:
 13831                           
 13832                           ;mcc_generated_files/uart/src/eusart.c: 378:        eusartTxTail = tempTxTail;
 13833     1F04  0876               	movf	EUSART_TransmitISR@tempTxTail,w
 13834     1F05  00F4               	movwf	_eusartTxTail	;volatile
 13835     1F06                     i1l4230:
 13836                           
 13837                           ;mcc_generated_files/uart/src/eusart.c: 379:        eusartTxBufferRemaining++;
 13838     1F06  3001               	movlw	1
 13839     1F07  07F3               	addwf	_eusartTxBufferRemaining,f	;volatile
 13840                           
 13841                           ;mcc_generated_files/uart/src/eusart.c: 380:     }
 13842     1F08  2F0B               	goto	i1l446
 13843     1F09                     i1l443:	
 13844                           ;mcc_generated_files/uart/src/eusart.c: 381:     else
 13845                           
 13846                           
 13847                           ;mcc_generated_files/uart/src/eusart.c: 382:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 383:         PIE1bits.TXIE = 0;
 13848     1F09  0021               	movlb	1	; select bank1
 13849     1F0A  1211               	bcf	17,4	;volatile
 13850     1F0B                     i1l446:
 13851     1F0B  0008               	return
 13852     1F0C                     __end_of_EUSART_TransmitISR:
 13853                           
 13854                           	psect	text55
 13855     11CF                     __ptext55:	
 13856 ;; *************** function _EUSART_ReceiveISR *****************
 13857 ;; Defined at:
 13858 ;;		line 300 in file "mcc_generated_files/uart/src/eusart.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;		None
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;  tempRxHead      1    5[COMMON] unsigned char 
 13863 ;;  regValue        1    4[COMMON] unsigned char 
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  1    wreg      void 
 13866 ;; Registers used:
 13867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;Total ram usage:        2 bytes
 13878 ;; Hardware stack levels used: 1
 13879 ;; Hardware stack levels required when called: 2
 13880 ;; This function calls:
 13881 ;;		NULL
 13882 ;;		_EUSART_DefaultFramingErrorCallback
 13883 ;;		_EUSART_DefaultOverrunErrorCallback
 13884 ;;		_check_RX_Data
 13885 ;; This function is called by:
 13886 ;;		_EUSART_Initialize
 13887 ;;		_INTERRUPT_InterruptManager
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891     11CF                     _EUSART_ReceiveISR:	
 13892                           ;psect for function _EUSART_ReceiveISR
 13893                           
 13894     11CF                     i1l4186:	
 13895                           ;incstack = 0
 13896                           ; Regs used in _EUSART_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13897                           
 13898                           
 13899                           ;mcc_generated_files/uart/src/eusart.c: 302:     uint8_t regValue;;mcc_generated_files/u
      +                          art/src/eusart.c: 303:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart.c: 306: 
      +                              eusartRxStatusBuffer[eusartRxHead].status = 0;
 13900     11CF  3572               	lslf	_eusartRxHead,w	;volatile
 13901     11D0  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 13902     11D1  0086               	movwf	6
 13903     11D2  3001               	movlw	1	; select bank2/3
 13904     11D3  0087               	movwf	7
 13905     11D4  3000               	movlw	0
 13906     11D5  3FC0               	movwi [0]fsr1
 13907     11D6  3FC1               	movwi [1]fsr1
 13908     11D7                     i1l4188:
 13909                           
 13910                           ;mcc_generated_files/uart/src/eusart.c: 308:     if(1 == RC1STAbits.OERR)
 13911     11D7  0023               	movlb	3	; select bank3
 13912     11D8  1C9D               	btfss	29,1	;volatile
 13913     11D9  29DB               	goto	u514_21
 13914     11DA  29DC               	goto	u514_20
 13915     11DB                     u514_21:
 13916     11DB  29EE               	goto	i1l4196
 13917     11DC                     u514_20:
 13918     11DC                     i1l4190:
 13919                           
 13920                           ;mcc_generated_files/uart/src/eusart.c: 309:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 310:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 13921     11DC  3572               	lslf	_eusartRxHead,w	;volatile
 13922     11DD  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 13923     11DE  0086               	movwf	6
 13924     11DF  3001               	movlw	1	; select bank2/3
 13925     11E0  0087               	movwf	7
 13926     11E1  1501               	bsf	1,2
 13927     11E2                     i1l4192:
 13928                           
 13929                           ;mcc_generated_files/uart/src/eusart.c: 311:         if(((void*)0) != EUSART_OverrunErro
      +                          rHandler)
 13930     11E2  0022               	movlb	2	; select bank2
 13931     11E3  084C               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 13932     11E4  044D               	iorwf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 13933     11E5  1903               	btfsc	3,2
 13934     11E6  29E8               	goto	u515_21
 13935     11E7  29E9               	goto	u515_20
 13936     11E8                     u515_21:
 13937     11E8  29EE               	goto	i1l4196
 13938     11E9                     u515_20:
 13939     11E9                     i1l4194:
 13940                           
 13941                           ;mcc_generated_files/uart/src/eusart.c: 312:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 313:             EUSART_OverrunErrorHandler();
 13942     11E9  084D               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 13943     11EA  008A               	movwf	10
 13944     11EB  084C               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 13945     11EC  000A               	callw
 13946     11ED  3191               	pagesel	$
 13947     11EE                     i1l4196:
 13948                           
 13949                           ;mcc_generated_files/uart/src/eusart.c: 316:     if(1 == RC1STAbits.FERR)
 13950     11EE  0023               	movlb	3	; select bank3
 13951     11EF  1D1D               	btfss	29,2	;volatile
 13952     11F0  29F2               	goto	u516_21
 13953     11F1  29F3               	goto	u516_20
 13954     11F2                     u516_21:
 13955     11F2  2A05               	goto	i1l4204
 13956     11F3                     u516_20:
 13957     11F3                     i1l4198:
 13958                           
 13959                           ;mcc_generated_files/uart/src/eusart.c: 317:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 318:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13960     11F3  3572               	lslf	_eusartRxHead,w	;volatile
 13961     11F4  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 13962     11F5  0086               	movwf	6
 13963     11F6  3001               	movlw	1	; select bank2/3
 13964     11F7  0087               	movwf	7
 13965     11F8  1481               	bsf	1,1
 13966     11F9                     i1l4200:
 13967                           
 13968                           ;mcc_generated_files/uart/src/eusart.c: 319:         if(((void*)0) != EUSART_FramingErro
      +                          rHandler)
 13969     11F9  0022               	movlb	2	; select bank2
 13970     11FA  084E               	movf	_EUSART_FramingErrorHandler^(0+256),w
 13971     11FB  044F               	iorwf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 13972     11FC  1903               	btfsc	3,2
 13973     11FD  29FF               	goto	u517_21
 13974     11FE  2A00               	goto	u517_20
 13975     11FF                     u517_21:
 13976     11FF  2A05               	goto	i1l4204
 13977     1200                     u517_20:
 13978     1200                     i1l4202:
 13979                           
 13980                           ;mcc_generated_files/uart/src/eusart.c: 320:         {;mcc_generated_files/uart/src/eusa
      +                          rt.c: 321:             EUSART_FramingErrorHandler();
 13981     1200  084F               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 13982     1201  008A               	movwf	10
 13983     1202  084E               	movf	_EUSART_FramingErrorHandler^(0+256),w
 13984     1203  000A               	callw
 13985     1204  3191               	pagesel	$
 13986     1205                     i1l4204:
 13987                           
 13988                           ;mcc_generated_files/uart/src/eusart.c: 325:     regValue = RC1REG;
 13989     1205  0023               	movlb	3	; select bank3
 13990     1206  0819               	movf	25,w	;volatile
 13991     1207  00FA               	movwf	EUSART_ReceiveISR@regValue
 13992     1208                     i1l4206:
 13993                           
 13994                           ;mcc_generated_files/uart/src/eusart.c: 327:     tempRxHead = (eusartRxHead + 1U) & ((8U
      +                          ) - 1U);
 13995     1208  0872               	movf	_eusartRxHead,w	;volatile
 13996     1209  3E01               	addlw	1
 13997     120A  3907               	andlw	7
 13998     120B  00FB               	movwf	EUSART_ReceiveISR@tempRxHead
 13999     120C                     i1l4208:
 14000                           
 14001                           ;mcc_generated_files/uart/src/eusart.c: 328:     if (tempRxHead == eusartRxTail)
 14002     120C  087B               	movf	EUSART_ReceiveISR@tempRxHead,w
 14003     120D  0671               	xorwf	_eusartRxTail,w	;volatile
 14004     120E  1D03               	skipz
 14005     120F  2A11               	goto	u518_21
 14006     1210  2A12               	goto	u518_20
 14007     1211                     u518_21:
 14008     1211  2A13               	goto	i1l4212
 14009     1212                     u518_20:
 14010     1212  2A1E               	goto	i1l4218
 14011     1213                     i1l4212:
 14012                           
 14013                           ;mcc_generated_files/uart/src/eusart.c: 333:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 334:         eusartRxBuffer[eusartRxHead] = regValue;
 14014     1213  0872               	movf	_eusartRxHead,w
 14015     1214  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 14016     1215  0086               	movwf	6
 14017     1216  3001               	movlw	1	; select bank3/4
 14018     1217  0087               	movwf	7
 14019     1218  087A               	movf	EUSART_ReceiveISR@regValue,w
 14020     1219  0081               	movwf	1
 14021     121A                     i1l4214:
 14022                           
 14023                           ;mcc_generated_files/uart/src/eusart.c: 335:   eusartRxHead = tempRxHead;
 14024     121A  087B               	movf	EUSART_ReceiveISR@tempRxHead,w
 14025     121B  00F2               	movwf	_eusartRxHead	;volatile
 14026     121C                     i1l4216:
 14027                           
 14028                           ;mcc_generated_files/uart/src/eusart.c: 336:   eusartRxCount++;
 14029     121C  3001               	movlw	1
 14030     121D  07F0               	addwf	_eusartRxCount,f	;volatile
 14031     121E                     i1l4218:
 14032                           
 14033                           ;mcc_generated_files/uart/src/eusart.c: 339:     if(((void*)0) != EUSART_RxCompleteInter
      +                          ruptHandler)
 14034     121E  0022               	movlb	2	; select bank2
 14035     121F  0850               	movf	_EUSART_RxCompleteInterruptHandler^(0+256),w
 14036     1220  0451               	iorwf	(_EUSART_RxCompleteInterruptHandler+1)^(0+256),w
 14037     1221  1903               	btfsc	3,2
 14038     1222  2A24               	goto	u519_21
 14039     1223  2A25               	goto	u519_20
 14040     1224                     u519_21:
 14041     1224  2A2A               	goto	i1l433
 14042     1225                     u519_20:
 14043     1225                     i1l4220:
 14044                           
 14045                           ;mcc_generated_files/uart/src/eusart.c: 340:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 341:         (*EUSART_RxCompleteInterruptHandler)();
 14046     1225  0851               	movf	(_EUSART_RxCompleteInterruptHandler+1)^(0+256),w
 14047     1226  008A               	movwf	10
 14048     1227  0850               	movf	_EUSART_RxCompleteInterruptHandler^(0+256),w
 14049     1228  000A               	callw
 14050     1229  3191               	pagesel	$
 14051     122A                     i1l433:
 14052     122A  0008               	return
 14053     122B                     __end_of_EUSART_ReceiveISR:
 14054                           
 14055                           	psect	text56
 14056     1F62                     __ptext56:	
 14057 ;; *************** function _check_RX_Data *****************
 14058 ;; Defined at:
 14059 ;;		line 137 in file "main.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;		None
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;  i               1    2[COMMON] unsigned char 
 14064 ;;  buf             1    3[COMMON] unsigned char 
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;Total ram usage:        2 bytes
 14079 ;; Hardware stack levels used: 1
 14080 ;; Hardware stack levels required when called: 1
 14081 ;; This function calls:
 14082 ;;		_EUSART_IsRxReady
 14083 ;;		_EUSART_Read
 14084 ;;		i1_EUSART_Write
 14085 ;; This function is called by:
 14086 ;;		_main
 14087 ;;		_EUSART_ReceiveISR
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091     1F62                     _check_RX_Data:	
 14092                           ;psect for function _check_RX_Data
 14093                           
 14094     1F62                     i1l4120:	
 14095                           ;incstack = 0
 14096                           ; Regs used in _check_RX_Data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14097                           
 14098                           
 14099                           ;main.c: 138:     char buf;;main.c: 139:     EUSART_Write('C');
 14100     1F62  3043               	movlw	67
 14101     1F63  00F6               	movwf	i1EUSART_Write@txData
 14102     1F64  3190  2001  319F   	fcall	i1_EUSART_Write
 14103                           
 14104                           ;main.c: 140:     while(EUSART_IsRxReady()){
 14105     1F67  2F6F               	goto	i1l4128
 14106     1F68                     i1l4122:
 14107                           
 14108                           ;main.c: 141:         char i=0;
 14109     1F68  01F8               	clrf	check_RX_Data@i
 14110     1F69                     i1l4124:
 14111                           
 14112                           ;main.c: 142:         buf=EUSART_Read();
 14113     1F69  3190  2043  319F   	fcall	_EUSART_Read
 14114     1F6C  00F9               	movwf	check_RX_Data@buf
 14115     1F6D                     i1l4126:
 14116                           
 14117                           ;main.c: 143:         i++;
 14118     1F6D  3001               	movlw	1
 14119     1F6E  07F8               	addwf	check_RX_Data@i,f
 14120     1F6F                     i1l4128:
 14121                           
 14122                           ;main.c: 140:     while(EUSART_IsRxReady()){
 14123     1F6F  319D  25FF  319F   	fcall	_EUSART_IsRxReady
 14124     1F72  3A00               	xorlw	0
 14125     1F73  1D03               	skipz
 14126     1F74  2F76               	goto	u507_21
 14127     1F75  2F77               	goto	u507_20
 14128     1F76                     u507_21:
 14129     1F76  2F68               	goto	i1l4122
 14130     1F77                     u507_20:
 14131     1F77                     i1l4130:
 14132                           
 14133                           ;main.c: 145:     if(buf == 'c'){
 14134     1F77  3063               	movlw	99
 14135     1F78  0679               	xorwf	check_RX_Data@buf,w
 14136     1F79  1D03               	btfss	3,2
 14137     1F7A  2F7C               	goto	u508_21
 14138     1F7B  2F7D               	goto	u508_20
 14139     1F7C                     u508_21:
 14140     1F7C  2F80               	goto	i1l632
 14141     1F7D                     u508_20:
 14142     1F7D                     i1l4132:
 14143                           
 14144                           ;main.c: 146:         config_flg = 1;
 14145     1F7D  3001               	movlw	1
 14146     1F7E  0022               	movlb	2	; select bank2
 14147     1F7F  00DA               	movwf	_config_flg^(0+256)
 14148     1F80                     i1l632:
 14149     1F80  0008               	return
 14150     1F81                     __end_of_check_RX_Data:
 14151                           
 14152                           	psect	text57
 14153     1001                     __ptext57:	
 14154 ;; *************** function i1_EUSART_Write *****************
 14155 ;; Defined at:
 14156 ;;		line 345 in file "mcc_generated_files/uart/src/eusart.c"
 14157 ;; Parameters:    Size  Location     Type
 14158 ;;  txData          1    0[COMMON] unsigned char 
 14159 ;; Auto vars:     Size  Location     Type
 14160 ;;  tempTxHead      1    1[COMMON] unsigned char 
 14161 ;; Return value:  Size  Location     Type
 14162 ;;                  1    wreg      void 
 14163 ;; Registers used:
 14164 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14165 ;; Tracked objects:
 14166 ;;		On entry : 0/0
 14167 ;;		On exit  : 0/0
 14168 ;;		Unchanged: 0/0
 14169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14170 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;Total ram usage:        2 bytes
 14175 ;; Hardware stack levels used: 1
 14176 ;; This function calls:
 14177 ;;		Nothing
 14178 ;; This function is called by:
 14179 ;;		_check_RX_Data
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183     1001                     i1_EUSART_Write:	
 14184                           ;psect for function i1_EUSART_Write
 14185                           
 14186     1001                     i1l3978:	
 14187                           ;incstack = 0
 14188                           ; Regs used in i1_EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14189                           
 14190                           
 14191                           ;mcc_generated_files/uart/src/eusart.c: 345: void EUSART_Write(uint8_t txData);mcc_gener
      +                          ated_files/uart/src/eusart.c: 346: {;mcc_generated_files/uart/src/eusart.c: 347:     uin
      +                          t8_t tempTxHead;;mcc_generated_files/uart/src/eusart.c: 349:     if(0 == PIE1bits.TXIE)
 14192     1001  0021               	movlb	1	; select bank1
 14193     1002  1A11               	btfsc	17,4	;volatile
 14194     1003  2805               	goto	u494_21
 14195     1004  2806               	goto	u494_20
 14196     1005                     u494_21:
 14197     1005  280A               	goto	i1l3982
 14198     1006                     u494_20:
 14199     1006                     i1l3980:
 14200                           
 14201                           ;mcc_generated_files/uart/src/eusart.c: 350:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 351:         TX1REG = txData;
 14202     1006  0876               	movf	i1EUSART_Write@txData,w
 14203     1007  0023               	movlb	3	; select bank3
 14204     1008  009A               	movwf	26	;volatile
 14205                           
 14206                           ;mcc_generated_files/uart/src/eusart.c: 352:     }
 14207     1009  281F               	goto	i1l437
 14208     100A                     i1l3982:
 14209     100A  0873               	movf	_eusartTxBufferRemaining,w	;volatile
 14210     100B  1903               	btfsc	3,2
 14211     100C  280E               	goto	u495_21
 14212     100D  280F               	goto	u495_20
 14213     100E                     u495_21:
 14214     100E  281F               	goto	i1l437
 14215     100F                     u495_20:
 14216     100F                     i1l3984:
 14217                           
 14218                           ;mcc_generated_files/uart/src/eusart.c: 354:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 355:        eusartTxBuffer[eusartTxHead] = txData;
 14219     100F  0875               	movf	_eusartTxHead,w
 14220     1010  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14221     1011  0086               	movwf	6
 14222     1012  3001               	movlw	1	; select bank2/3
 14223     1013  0087               	movwf	7
 14224     1014  0876               	movf	i1EUSART_Write@txData,w
 14225     1015  0081               	movwf	1
 14226     1016                     i1l3986:
 14227                           
 14228                           ;mcc_generated_files/uart/src/eusart.c: 356:        tempTxHead = (eusartTxHead + 1U) & (
      +                          (8U) - 1U);
 14229     1016  0875               	movf	_eusartTxHead,w	;volatile
 14230     1017  3E01               	addlw	1
 14231     1018  3907               	andlw	7
 14232     1019  00F7               	movwf	i1EUSART_Write@tempTxHead
 14233     101A                     i1l3988:
 14234                           
 14235                           ;mcc_generated_files/uart/src/eusart.c: 358:        eusartTxHead = tempTxHead;
 14236     101A  0877               	movf	i1EUSART_Write@tempTxHead,w
 14237     101B  00F5               	movwf	_eusartTxHead	;volatile
 14238     101C                     i1l3990:
 14239                           
 14240                           ;mcc_generated_files/uart/src/eusart.c: 359:        PIE1bits.TXIE = 0;
 14241     101C  1211               	bcf	17,4	;volatile
 14242     101D                     i1l3992:
 14243                           
 14244                           ;mcc_generated_files/uart/src/eusart.c: 360:        eusartTxBufferRemaining--;
 14245     101D  3001               	movlw	1
 14246     101E  02F3               	subwf	_eusartTxBufferRemaining,f	;volatile
 14247     101F                     i1l437:	
 14248                           ;mcc_generated_files/uart/src/eusart.c: 361:     }
 14249                           
 14250                           
 14251                           ;mcc_generated_files/uart/src/eusart.c: 366:     PIE1bits.TXIE = 1;
 14252     101F  0021               	movlb	1	; select bank1
 14253     1020  1611               	bsf	17,4	;volatile
 14254     1021                     i1l440:
 14255     1021  0008               	return
 14256     1022                     __end_ofi1_EUSART_Write:
 14257                           
 14258                           	psect	text58
 14259     1043                     __ptext58:	
 14260 ;; *************** function _EUSART_Read *****************
 14261 ;; Defined at:
 14262 ;;		line 277 in file "mcc_generated_files/uart/src/eusart.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;		None
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;  readValue       1    1[COMMON] unsigned char 
 14267 ;;  tempRxTail      1    0[COMMON] unsigned char 
 14268 ;; Return value:  Size  Location     Type
 14269 ;;                  1    wreg      unsigned char 
 14270 ;; Registers used:
 14271 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14272 ;; Tracked objects:
 14273 ;;		On entry : 0/0
 14274 ;;		On exit  : 0/0
 14275 ;;		Unchanged: 0/0
 14276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14281 ;;Total ram usage:        2 bytes
 14282 ;; Hardware stack levels used: 1
 14283 ;; This function calls:
 14284 ;;		Nothing
 14285 ;; This function is called by:
 14286 ;;		_check_RX_Data
 14287 ;;		_getch
 14288 ;; This function uses a non-reentrant model
 14289 ;;
 14290                           
 14291     1043                     _EUSART_Read:	
 14292                           ;psect for function _EUSART_Read
 14293                           
 14294     1043                     i1l3896:	
 14295                           ;incstack = 0
 14296                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 14297                           
 14298     1043                     i1l3898:
 14299                           
 14300                           ;mcc_generated_files/uart/src/eusart.c: 280:     uint8_t tempRxTail;;mcc_generated_files
      +                          /uart/src/eusart.c: 282:     readValue = eusartRxBuffer[eusartRxTail];
 14301     1043  0871               	movf	_eusartRxTail,w
 14302     1044  3EA0               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 14303     1045  0086               	movwf	6
 14304     1046  3001               	movlw	1	; select bank3/4
 14305     1047  0087               	movwf	7
 14306     1048  0801               	movf	1,w
 14307     1049  00F7               	movwf	EUSART_Read@readValue
 14308     104A                     i1l3900:
 14309                           
 14310                           ;mcc_generated_files/uart/src/eusart.c: 284:     tempRxTail = (eusartRxTail + 1U) & ((8U
      +                          ) - 1U);
 14311     104A  0871               	movf	_eusartRxTail,w	;volatile
 14312     104B  3E01               	addlw	1
 14313     104C  3907               	andlw	7
 14314     104D  00F6               	movwf	EUSART_Read@tempRxTail
 14315     104E                     i1l3902:
 14316                           
 14317                           ;mcc_generated_files/uart/src/eusart.c: 286:     eusartRxTail = tempRxTail;
 14318     104E  0876               	movf	EUSART_Read@tempRxTail,w
 14319     104F  00F1               	movwf	_eusartRxTail	;volatile
 14320     1050                     i1l3904:
 14321                           
 14322                           ;mcc_generated_files/uart/src/eusart.c: 288:     eusartRxLastError = eusartRxStatusBuffe
      +                          r[eusartRxTail];
 14323     1050  3571               	lslf	_eusartRxTail,w	;volatile
 14324     1051  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 14325     1052  0086               	movwf	6
 14326     1053  3001               	movlw	1	; select bank2/3
 14327     1054  0087               	movwf	7
 14328     1055  3F40               	moviw [0]fsr1
 14329     1056  0022               	movlb	2	; select bank2
 14330     1057  00D4               	movwf	_eusartRxLastError^(0+256)	;volatile
 14331     1058  3F41               	moviw [1]fsr1
 14332     1059  00D5               	movwf	(_eusartRxLastError+1)^(0+256)	;volatile
 14333     105A                     i1l3906:
 14334                           
 14335                           ;mcc_generated_files/uart/src/eusart.c: 291:     PIE1bits.RCIE = 0;
 14336     105A  0021               	movlb	1	; select bank1
 14337     105B  1291               	bcf	17,5	;volatile
 14338     105C                     i1l3908:
 14339                           
 14340                           ;mcc_generated_files/uart/src/eusart.c: 292:     if(0U != eusartRxCount)
 14341     105C  0870               	movf	_eusartRxCount,w	;volatile
 14342     105D  1903               	btfsc	3,2
 14343     105E  2860               	goto	u489_21
 14344     105F  2861               	goto	u489_20
 14345     1060                     u489_21:
 14346     1060  2863               	goto	i1l3912
 14347     1061                     u489_20:
 14348     1061                     i1l3910:
 14349                           
 14350                           ;mcc_generated_files/uart/src/eusart.c: 293:     {;mcc_generated_files/uart/src/eusart.c
      +                          : 294:         eusartRxCount--;
 14351     1061  3001               	movlw	1
 14352     1062  02F0               	subwf	_eusartRxCount,f	;volatile
 14353     1063                     i1l3912:
 14354                           
 14355                           ;mcc_generated_files/uart/src/eusart.c: 296:     PIE1bits.RCIE = 1;
 14356     1063  1691               	bsf	17,5	;volatile
 14357     1064                     i1l3914:
 14358                           
 14359                           ;mcc_generated_files/uart/src/eusart.c: 297:     return readValue;
 14360     1064  0877               	movf	EUSART_Read@readValue,w
 14361     1065                     i1l423:
 14362     1065  0008               	return
 14363     1066                     __end_of_EUSART_Read:
 14364                           
 14365                           	psect	text59
 14366     1DFF                     __ptext59:	
 14367 ;; *************** function _EUSART_IsRxReady *****************
 14368 ;; Defined at:
 14369 ;;		line 256 in file "mcc_generated_files/uart/src/eusart.c"
 14370 ;; Parameters:    Size  Location     Type
 14371 ;;		None
 14372 ;; Auto vars:     Size  Location     Type
 14373 ;;		None
 14374 ;; Return value:  Size  Location     Type
 14375 ;;                  1    wreg      _Bool 
 14376 ;; Registers used:
 14377 ;;		wreg, status,2, status,0
 14378 ;; Tracked objects:
 14379 ;;		On entry : 0/0
 14380 ;;		On exit  : 0/0
 14381 ;;		Unchanged: 0/0
 14382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14387 ;;Total ram usage:        0 bytes
 14388 ;; Hardware stack levels used: 1
 14389 ;; This function calls:
 14390 ;;		Nothing
 14391 ;; This function is called by:
 14392 ;;		_check_RX_Data
 14393 ;;		_getch
 14394 ;; This function uses a non-reentrant model
 14395 ;;
 14396                           
 14397     1DFF                     _EUSART_IsRxReady:	
 14398                           ;psect for function _EUSART_IsRxReady
 14399                           
 14400     1DFF                     i1l3892:	
 14401                           ;incstack = 0
 14402                           ; Regs used in _EUSART_IsRxReady: [wreg+status,2+status,0]
 14403                           
 14404                           
 14405                           ;mcc_generated_files/uart/src/eusart.c: 258:     return (eusartRxCount ? 1 : 0);
 14406     1DFF  0870               	movf	_eusartRxCount,w	;volatile
 14407     1E00  1D03               	btfss	3,2
 14408     1E01  2E03               	goto	u487_21
 14409     1E02  2E05               	goto	u487_20
 14410     1E03                     u487_21:
 14411     1E03  3001               	movlw	1
 14412     1E04  2E06               	goto	u488_20
 14413     1E05                     u487_20:
 14414     1E05  3000               	movlw	0
 14415     1E06                     u488_20:
 14416     1E06                     i1l410:
 14417     1E06  0008               	return
 14418     1E07                     __end_of_EUSART_IsRxReady:
 14419                           
 14420                           	psect	text60
 14421     1DF5                     __ptext60:	
 14422 ;; *************** function _EUSART_DefaultOverrunErrorCallback *****************
 14423 ;; Defined at:
 14424 ;;		line 415 in file "mcc_generated_files/uart/src/eusart.c"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;		None
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;		None
 14429 ;; Return value:  Size  Location     Type
 14430 ;;                  1    wreg      void 
 14431 ;; Registers used:
 14432 ;;		None
 14433 ;; Tracked objects:
 14434 ;;		On entry : 0/0
 14435 ;;		On exit  : 0/0
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;Total ram usage:        0 bytes
 14443 ;; Hardware stack levels used: 1
 14444 ;; This function calls:
 14445 ;;		Nothing
 14446 ;; This function is called by:
 14447 ;;		_EUSART_Initialize
 14448 ;;		_EUSART_ReceiveISR
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452     1DF5                     _EUSART_DefaultOverrunErrorCallback:	
 14453                           ;psect for function _EUSART_DefaultOverrunErrorCallback
 14454                           
 14455     1DF5                     i1l4090:	
 14456                           ;incstack = 0
 14457                           ; Regs used in _EUSART_DefaultOverrunErrorCallback: []
 14458                           
 14459                           
 14460                           ;mcc_generated_files/uart/src/eusart.c: 418:     RC1STAbits.CREN = 0;
 14461     1DF5  0023               	movlb	3	; select bank3
 14462     1DF6  121D               	bcf	29,4	;volatile
 14463                           
 14464                           ;mcc_generated_files/uart/src/eusart.c: 419:     RC1STAbits.CREN = 1;
 14465     1DF7  161D               	bsf	29,4	;volatile
 14466     1DF8                     i1l464:
 14467     1DF8  0008               	return
 14468     1DF9                     __end_of_EUSART_DefaultOverrunErrorCallback:
 14469                           
 14470                           	psect	text61
 14471     1DE5                     __ptext61:	
 14472 ;; *************** function _EUSART_DefaultFramingErrorCallback *****************
 14473 ;; Defined at:
 14474 ;;		line 410 in file "mcc_generated_files/uart/src/eusart.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;		None
 14477 ;; Auto vars:     Size  Location     Type
 14478 ;;		None
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  1    wreg      void 
 14481 ;; Registers used:
 14482 ;;		None
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14492 ;;Total ram usage:        0 bytes
 14493 ;; Hardware stack levels used: 1
 14494 ;; This function calls:
 14495 ;;		Nothing
 14496 ;; This function is called by:
 14497 ;;		_EUSART_Initialize
 14498 ;;		_EUSART_ReceiveISR
 14499 ;; This function uses a non-reentrant model
 14500 ;;
 14501                           
 14502     1DE5                     _EUSART_DefaultFramingErrorCallback:	
 14503                           ;psect for function _EUSART_DefaultFramingErrorCallback
 14504                           
 14505     1DE5                     i1l461:	
 14506                           ;incstack = 0
 14507                           ; Regs used in _EUSART_DefaultFramingErrorCallback: []
 14508                           
 14509     1DE5  0008               	return
 14510     1DE6                     __end_of_EUSART_DefaultFramingErrorCallback:
 14511                           
 14512                           	psect	text62
 14513     1E43                     __ptext62:	
 14514 ;; *************** function _ADC_ISR *****************
 14515 ;; Defined at:
 14516 ;;		line 134 in file "mcc_generated_files/adc/src/adc.c"
 14517 ;; Parameters:    Size  Location     Type
 14518 ;;		None
 14519 ;; Auto vars:     Size  Location     Type
 14520 ;;		None
 14521 ;; Return value:  Size  Location     Type
 14522 ;;                  1    wreg      void 
 14523 ;; Registers used:
 14524 ;;		wreg, status,2, status,0, pclath, cstack
 14525 ;; Tracked objects:
 14526 ;;		On entry : 0/0
 14527 ;;		On exit  : 0/0
 14528 ;;		Unchanged: 0/0
 14529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14534 ;;Total ram usage:        0 bytes
 14535 ;; Hardware stack levels used: 1
 14536 ;; Hardware stack levels required when called: 1
 14537 ;; This function calls:
 14538 ;;		NULL
 14539 ;;		_ADC_DefaultInterruptHandler
 14540 ;; This function is called by:
 14541 ;;		_INTERRUPT_InterruptManager
 14542 ;; This function uses a non-reentrant model
 14543 ;;
 14544                           
 14545     1E43                     _ADC_ISR:	
 14546                           ;psect for function _ADC_ISR
 14547                           
 14548     1E43                     i1l4156:	
 14549                           ;incstack = 0
 14550                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
 14551                           
 14552                           
 14553                           ;mcc_generated_files/adc/src/adc.c: 137:     PIR1bits.ADIF = 0;
 14554     1E43  0020               	movlb	0	; select bank0
 14555     1E44  1311               	bcf	17,6	;volatile
 14556     1E45                     i1l4158:
 14557                           
 14558                           ;mcc_generated_files/adc/src/adc.c: 139:  if(ADC_InterruptHandler)
 14559     1E45  0022               	movlb	2	; select bank2
 14560     1E46  0869               	movf	_ADC_InterruptHandler^(0+256),w
 14561     1E47  046A               	iorwf	(_ADC_InterruptHandler+1)^(0+256),w
 14562     1E48  1903               	btfsc	3,2
 14563     1E49  2E4B               	goto	u511_21
 14564     1E4A  2E4C               	goto	u511_20
 14565     1E4B                     u511_21:
 14566     1E4B  2E51               	goto	i1l52
 14567     1E4C                     u511_20:
 14568     1E4C                     i1l4160:
 14569                           
 14570                           ;mcc_generated_files/adc/src/adc.c: 140:     {;mcc_generated_files/adc/src/adc.c: 141:  
      +                                 ADC_InterruptHandler();
 14571     1E4C  086A               	movf	(_ADC_InterruptHandler+1)^(0+256),w
 14572     1E4D  008A               	movwf	10
 14573     1E4E  0869               	movf	_ADC_InterruptHandler^(0+256),w
 14574     1E4F  000A               	callw
 14575     1E50  319E               	pagesel	$
 14576     1E51                     i1l52:
 14577     1E51  0008               	return
 14578     1E52                     __end_of_ADC_ISR:
 14579                           
 14580                           	psect	text63
 14581     1DE4                     __ptext63:	
 14582 ;; *************** function _ADC_DefaultInterruptHandler *****************
 14583 ;; Defined at:
 14584 ;;		line 150 in file "mcc_generated_files/adc/src/adc.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;		None
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;		None
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      void 
 14591 ;; Registers used:
 14592 ;;		None
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;Total ram usage:        0 bytes
 14603 ;; Hardware stack levels used: 1
 14604 ;; This function calls:
 14605 ;;		Nothing
 14606 ;; This function is called by:
 14607 ;;		_ADC_Initialize
 14608 ;;		_ADC_ISR
 14609 ;; This function uses a non-reentrant model
 14610 ;;
 14611                           
 14612     1DE4                     _ADC_DefaultInterruptHandler:	
 14613                           ;psect for function _ADC_DefaultInterruptHandler
 14614                           
 14615     1DE4                     i1l58:	
 14616                           ;incstack = 0
 14617                           ; Regs used in _ADC_DefaultInterruptHandler: []
 14618                           
 14619     1DE4  0008               	return
 14620     1DE5                     __end_of_ADC_DefaultInterruptHandler:
 14621     0002                     ___latbits      equ	2
 14622     007E                     btemp           set	126	;btemp
 14623     007E                     int$flags       set	126
 14624     007E                     wtemp0          set	126
 14625                           
 14626                           	psect	config
 14627                           
 14628                           ;Config register CONFIG1 @ 0x8007
 14629                           ;	Oscillator Selection Bits
 14630                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 14631                           ;	Watchdog Timer Enable
 14632                           ;	WDTE = OFF, WDT disabled
 14633                           ;	Power-up Timer Enable
 14634                           ;	PWRTE = OFF, PWRT disabled
 14635                           ;	MCLR Pin Function Select
 14636                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 14637                           ;	Flash Program Memory Code Protection
 14638                           ;	CP = OFF, Program memory code protection is disabled
 14639                           ;	Brown-out Reset Enable
 14640                           ;	BOREN = ON, Brown-out Reset enabled
 14641                           ;	Clock Out Enable
 14642                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 14643                           ;	Internal/External Switchover Mode
 14644                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 14645                           ;	Fail-Safe Clock Monitor Enable
 14646                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 14647     8007                     	org	32775
 14648     8007  3FE4               	dw	16356
 14649                           
 14650                           ;Config register CONFIG2 @ 0x8008
 14651                           ;	Flash Memory Self-Write Protection
 14652                           ;	WRT = OFF, Write protection off
 14653                           ;	Peripheral Pin Select one-way control
 14654                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 14655                           ;	Zero-cross detect disable
 14656                           ;	ZCDDIS = ON, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 14657                           ;	Phase Lock Loop enable
 14658                           ;	PLLEN = OFF, 4x PLL is disabled
 14659                           ;	Stack Overflow/Underflow Reset Enable
 14660                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 14661                           ;	Brown-out Reset Voltage Selection
 14662                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 14663                           ;	Low-Power Brown Out Reset
 14664                           ;	LPBOR = OFF, Low-Power BOR is disabled
 14665                           ;	In-Circuit Debugger Mode
 14666                           ;	DEBUG = 0x1, unprogrammed default
 14667                           ;	Low-Voltage Programming Enable
 14668                           ;	LVP = ON, Low-voltage programming enabled
 14669     8008                     	org	32776
 14670     8008  3EFF               	dw	16127

Data Sizes:
    Strings     96
    Constant    48
    Data        2
    BSS         154
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     75      76
    BANK2            80     10      77
    BANK3            80      8      18
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), NULL(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), NULL(), 

    EUSART_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), NULL(), 

    EUSART_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> check_RX_Data(), 

    EUSART_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> check_RX_Data(), NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_ReceiveISR(), NULL(), 

    EUSART_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitISR(), NULL(), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    handle_voltage@LED_SetHigh	PTR FTN()void  size(2) Largest target is 1
		 -> LED_12V_On(), LED_24V_On(), 

    handle_voltage@LED_SetLow	PTR FTN()void  size(2) Largest target is 1
		 -> LED_12V_Off(), LED_24V_Off(), 

    handle_voltage@reset_flg	PTR unsigned char  size(1) Largest target is 1
		 -> reset_flg_12(BANK2[1]), reset_flg_24(BANK2[1]), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S1446$buffer	PTR unsigned char  size(2) Largest target is 0

    S1446$source	PTR const unsigned char  size(2) Largest target is 0

    S575$17$0	PTR FTN()void  size(2) Largest target is 0

    S575$18$0	PTR FTN()void  size(2) Largest target is 1
		 -> check_RX_Data(), 

    S575$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorCallback(), 

    S575$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorCallback(), 

    S575$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S575$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    S575$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    S575$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S575$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S575$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    S575$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    S575$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    S575$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S575$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    S575$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    S575$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    S575$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    S575$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S575$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    S575$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    S575$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    S575$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S575$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    S575$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_8(CODE[4]), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> timer_interrupt(), TMR4_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_interrupt(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), i1_EUSART_Write(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_1(CODE[24]), STR_2(CODE[27]), STR_3(CODE[17]), STR_4(CODE[20]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_ReceiveISR
    _EUSART_ReceiveISR->_check_RX_Data
    _check_RX_Data->_EUSART_Read
    _check_RX_Data->i1_EUSART_Write

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___flsub
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    _handle_voltage->___flge
    _handle_buzzer->_delay_ms
    ___flge->___flmul
    ___xxtofl->_ADC_GetConversion
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_FramingErrorCallbackRegister
    _EUSART_Initialize->_EUSART_OverrunErrorCallbackRegister
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   27320
                                             71 BANK1      4     4      0
                                              0 BANK3      8     8      0
                  _ADC_GetConversion
  _EUSART_RxCompleteCallbackRegister
                  _SYSTEM_Initialize
   _TMR4_PeriodMatchCallbackRegister
                         _TMR4_Start
                            ___fladd
                             ___flge
                            ___flmul
                           ___xxtofl
                           _delay_ms
                     _handle_voltage
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              13     3     10   18800
                                             70 BANK1      1     1      0
                                              0 BANK2     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5   18695
                                             79 BANK0      1     1      0
                                             63 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4   18468
                                             48 BANK1     15    11      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     6      2     408
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     142
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   16836
                                             72 BANK0      7     0      7
                                              0 BANK1     48    48      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     115
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1330
                                             20 BANK0      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     627
                                             12 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     481
                                              3 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     146
                                              2 BANK0      1     1      0
                   _EUSART_IsTxReady
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     1      1      99
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _EUSART_IsTxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     217
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4     102
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     495
                                             26 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     201
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     346
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3043
                                             64 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2966
                                             44 BANK0     20    12      8
                  _ADC_GetConversion (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    2473
                                             18 BANK0     26    18      8
                  _ADC_GetConversion (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     232
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     142
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1713
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _handle_voltage                                      14     0     14    1698
                                             56 BANK0     14     0     14
                        _LED_12V_Off *
                         _LED_12V_On *
                        _LED_24V_Off *
                         _LED_24V_On *
                             ___flge
                           _delay_ms
                      _handle_buzzer
 ---------------------------------------------------------------------------------
 (2) _handle_buzzer                                        1     1      0     157
                                              5 BANK0      1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             5     3      2      89
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     362
                                             44 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_24V_On                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_24V_Off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_12V_On                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_12V_Off                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     514
                                              4 BANK0     14    10      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_PeriodMatchCallbackRegister                     2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     198
                     _ADC_Initialize
                   _CLOCK_Initialize
                  _EUSART_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      34
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     130
_EUSART_FramingErrorCallbackRegister
_EUSART_OverrunErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _EUSART_OverrunErrorCallbackRegister                  2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_FramingErrorCallbackRegister                  2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      34
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_RxCompleteCallbackRegister                    2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      47
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     231
                                NULL *
                            _ADC_ISR
                  _EUSART_ReceiveISR *
                 _EUSART_TransmitISR *
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR4_ISR                                            0     0      0       0
                                NULL *
    _TMR4_DefaultPeriodMatchCallback *
                    _timer_interrupt *
 ---------------------------------------------------------------------------------
 (12) _timer_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR4_DefaultPeriodMatchCallback                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_ReceiveISR                                   2     2      0     208
                                              4 COMMON     2     2      0
                                NULL *
 _EUSART_DefaultFramingErrorCallback *
 _EUSART_DefaultOverrunErrorCallback *
                      _check_RX_Data *
 ---------------------------------------------------------------------------------
 (12) _check_RX_Data                                       2     2      0     140
                                              2 COMMON     2     2      0
                   _EUSART_IsRxReady
                        _EUSART_Read
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (13) i1_EUSART_Write                                      2     1      1      68
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (13) _EUSART_Read                                         2     2      0      47
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_IsRxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
                                NULL *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_RxCompleteCallbackRegister
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _CLOCK_Initialize
     _EUSART_Initialize
       _EUSART_FramingErrorCallbackRegister
       _EUSART_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR4_Initialize
   _TMR4_PeriodMatchCallbackRegister
   _TMR4_Start
   ___fladd
     _ADC_GetConversion (ARG)
     ___flmul (ARG)
       _ADC_GetConversion (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _ADC_GetConversion (ARG)
     ___xxtofl (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _delay_ms
   _handle_voltage
     _LED_12V_Off *
     _LED_12V_On *
     _LED_24V_Off *
     _LED_24V_On *
     ___flge *
     _delay_ms *
     _handle_buzzer *
       _delay_ms
   _printf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _EUSART_IsTxReady
                 _EUSART_Write
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _ADC_ISR *
     NULL(Fake) *
     _ADC_DefaultInterruptHandler *
   _EUSART_ReceiveISR *
     NULL(Fake) *
     _EUSART_DefaultFramingErrorCallback *
     _EUSART_DefaultOverrunErrorCallback *
     _check_RX_Data *
       _EUSART_IsRxReady
       _EUSART_Read
       i1_EUSART_Write
   _EUSART_TransmitISR *
   _TMR4_ISR *
     NULL(Fake) *
     _TMR4_DefaultPeriodMatchCallback *
     _timer_interrupt *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           48      0       0      0.0%
BIGRAM            1008      0       0      0.0%
COMMON              14      6      12     85.7%
BANK0               80     80      80    100.0%
BANK1               80     75      76     95.0%
BANK2               80     10      77     96.2%
BANK3               80      8      18     22.5%
BANK4               80      0      80    100.0%
BANK5               80      0       0      0.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     343      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Nov 17 15:08:01 2024

                                  ??i1_EUSART_Write 0077             __end_of_TMR4_DefaultPeriodMatchCallback 1001  
                 ??_TMR4_DefaultPeriodMatchCallback 0076                    ?_TMR4_DefaultPeriodMatchCallback 0076  
                   _TMR4_DefaultPeriodMatchCallback 1000                                        ___fldiv@aexp 0039  
                                      ___fldiv@bexp 0038                                        ___fldiv@sign 0031  
                                                l42 1037                                                  l27 1EC7  
                                                l45 1042                                                  l55 1E0F  
                                                l67 1E18         __end_of_EUSART_OverrunErrorCallbackRegister 1E7F  
             ??_EUSART_OverrunErrorCallbackRegister 0022                ?_EUSART_OverrunErrorCallbackRegister 0020  
               _EUSART_OverrunErrorCallbackRegister 1E70                                 ___wmul@multiplicand 0022  
                               __Umul8_16@word_mpld 0026                                                 l116 10DB  
                                               l212 1E8F                                                 l150 1E36  
                                               l218 1DE8                                                 l252 1E2A  
                                               l413 0807                                                 l175 1E21  
                                               l440 07FF                                                 l193 1EB3  
                                               l601 1FA2                                                 l354 1144  
                                               l522 1DE9                                                 l611 1F43  
                                               l524 1DEB                                                 l532 1DEC  
                                               l604 1FAE                                                 l700 1FEB  
                                               l517 1DEF                                                 l605 1FBF  
                                               l437 07FD                                                 l534 1DEE  
                                               l702 1FFF                                                 l519 1DF1  
                                               l527 1DF2                                                 l472 1E7E  
                                               l608 1F39                                                 l529 1DF4  
                                               l458 1EA0                                                 l571 09D7  
                                               l476 1E60                                                 l468 1E6F  
                                               l901 133F                                                 l904 1354  
                                               l870 11B9                                                 l881 1445  
                                               l890 1E42                                                 l875 11CE  
                                               l869 119D                                                 l886 145E  
                                               l878 13F1                                                 l894 1354  
                                               _PR4 0416                                                 _pad 10DC  
                                   __end_of_ADC_ISR 1E52                     __end_of_ADC_SetInterruptHandler 1E10  
                                               wreg 0009                                        ___flmul@aexp 0040  
                                      ___flmul@bexp 0045                        ?_ADC_DefaultInterruptHandler 0076  
                                      ___flmul@sign 003F                                        ___flmul@temp 004A  
                                      ___flmul@prod 0046                                        ?_EUSART_Read 0076  
                                      _BAUD1CONbits 019F                                        ___fltol@exp1 0029  
                                              l1001 0C0F                                                l1005 0C8E  
                                              l1022 0D1F                                                l1014 0DC4  
                                              l1103 0F7D                                                l1007 0C68  
                                              l1032 0D64                                                l1026 0D41  
                                              l1202 00EC                                                l1043 0DB7  
                                              l1035 0D97                                                l1116 109C  
                                              l1044 0DC4                                                l1141 0756  
                                              l1109 0FF5                                                l1221 0309  
                                              l1205 0732                                                l1142 0767  
                                              l1118 10AC                                                l1302 1541  
                                              l1143 07D7                                                l1047 1FDF  
                                              l1231 055F                                                l1312 1EF1  
                                              l1081 17F4                                                l1073 1785  
                                              l1057 16AB                                                l1154 07A3  
                                              l1330 12E5                                                l1155 07AF  
                                              l1059 17FF                                                l1315 107C  
                                              l1163 1EDB                                                l1078 17CF  
                                              l1318 1088                                                l1190 10E3  
                                              l1254 1287                                                l1079 17E9  
                                              l1263 15AF                                                l1344 1F26  
                                              l1097 0FFF                                                l1281 1F61  
                                              l1338 082B                                                l1194 110F  
                                              l1274 165B                                                l1291 13D3  
                                              l5000 0E30                                                l1297 14A0  
                                              l5010 0E87                                                l5002 0E3D  
                                              l1298 1549                                                l5020 0EB8  
                                              l5012 0E94                                                l5004 0E55  
                                              l5100 10F2                                                l5030 0EF5  
                                              l5022 0EBF                                                l5014 0E9B  
                                              l5006 0E62                                                l5110 1382  
                                              l5102 10F7                                                l5040 0F46  
                                              l5032 0F07                                                l5024 0ED1  
                                              l5016 0EA6                                                l5008 0E7A  
                                              l5112 1388                                                l5120 13A9  
                                              l5104 1105                                                l5200 00E8  
                                              l5042 0F4D                                                l5050 0F5D  
                                              l5034 0F1C                                                l5026 0ED8  
                                              l5018 0EAD                                                l5122 13AF  
                                              l5114 139F                                                l5106 1355  
                                              l5130 1F0C                                                l5210 0124  
                                              l5202 00EE                                                l5052 0F61  
                                              l5044 0F51                                                l5036 0F33  
                                              l5028 0EEA                                                l4500 0BB9  
                                              l5116 13A4                                                l5108 136D  
                                              l5132 1F0F                                                l5300 04EA  
                                              l5220 0168                                                l5204 0107  
                                              l5070 0FA9                                                l5062 0F82  
                                              l5054 0F62                                                l5046 0F52  
                                              l5038 0F3A                                                l4510 0BC9  
                                              l4502 0BBD                                                l5126 13CF  
                                              l5150 14A5                                                l5142 145F  
                                              l5134 1EDC                                                l5310 056C  
                                              l5302 0524                                                l5230 017F  
                                              l5206 010D                                                l5214 013C  
                                              l5400 1E07                                                l5080 0FDB  
                                              l5064 0F87                                                l5072 0FAD  
                                              l5056 0F66                                                l5048 0F59  
                                              l4600 0C97                                                l4520 0BE1  
                                              l4512 0BCE                                                l4504 0BBF  
                                              l5160 14F1                                                l5152 14BD  
                                              l5144 1477                                                l5136 1EE1  
                                              l5320 05EF                                                l5312 056D  
                                              l5304 0529                                                l5240 0207  
                                              l5216 0156                                                l5208 0119  
                                              l5410 1E77                                                l5402 1E19  
                                              l5090 0FF7                                                l5082 0FDD  
                                              l5074 0FBA                                                l5066 0F8D  
                                              l5058 0F7A                                                l4610 0CB0  
                                              l4530 0BF1                                                l4522 0BE4  
                                              l4514 0BD6                                                l4506 0BC3  
                                              l5162 1502                                                l5146 1492  
                                              l5138 1EE2                                                l5330 0608  
                                              l5322 05F4                                                l5314 056F  
                                              l5306 0555                                                l5250 0299  
                                              l5242 022E                                                l5234 019E  
                                              l5218 015C                                                l5226 0174  
                                              l5404 1E61                                                l5500 10BD  
                                              l5412 1F27                                                l4700 1094  
                                              l5084 0FE8                                                l5076 0FC4  
                                              l5068 0F91                                                l4620 0CC9  
                                              l4612 0CBA                                                l4604 0CA0  
                                              l4540 0C05                                                l4532 0BF2  
                                              l4524 0BEA                                                l4516 0BD7  
                                              l4508 0BC4                                                l5164 1519  
                                              l5156 14D2                                                l5148 149F  
                                              l5172 1066                                                l4460 07DC  
                                              l5340 061E                                                l5332 060C  
                                              l5324 05F9                                                l5316 0572  
                                              l5308 055B                                                l5260 02FC  
                                              l5244 025F                                                l5236 01AB  
                                              l5228 017D                                                l5180 0079  
                                              l5420 1564                                                l5406 1E68  
                                              l5510 10CC                                                l5502 10BF  
                                              l5414 1F2B                                                l4702 1098  
                                              l5086 0FEC                                                l5078 0FD2  
                                              l4630 0D0B                                                l4614 0CBC  
                                              l4606 0CA8                                                l4622 0CCC  
                                              l4550 0C1D                                                l4534 0BF7  
                                              l4542 0C07                                                l4526 0BEB  
                                              l4518 0BD9                                                l5166 1522  
                                              l5158 14E9                                                l5174 106C  
                                              l4470 07F7                                                l4462 07E1  
                                              l4710 0808                                                l5094 10DC  
                                              l5350 0638                                                l5334 060F  
                                              l5326 05FD                                                l5342 0622  
                                              l5318 05D3                                                l5270 0323  
                                              l5262 0304                                                l5246 0269  
                                              l5254 02CA                                                l5238 01D7  
                                              l5190 00CE                                                l5182 007B  
                                              l5430 159B                                                l5422 156A  
                                              ?_pad 0034                                                l5600 103B  
                                              l5408 1E70                                                l5512 10CE  
                                              l5504 10C4                                                l5520 1E7F  
                                              l4704 10A3                                                l5088 0FED  
                                              l4632 0D10                                                l4624 0CE2  
                                              l4616 0CC0                                                l4608 0CAC  
                                              l4560 0C27                                                l4552 0C1F  
                                              l4544 0C15                                                l4536 0BFC  
                                              l4528 0BED                                                l5168 1539  
                                              l5176 1072                                                l4456 0800  
                                              l4472 07F9                                                l4464 07E6  
                                              l4480 1E9A                                                l4712 080C  
                                              l5096 10E1                                                l5360 06C8  
                                              l5352 0686                                                l5344 0628  
                                              l5336 0616                                                l5328 0604  
                                              l5280 0339                                                l5272 0325  
                                              l5264 0311                                                l5248 0295  
                                              l5256 02F1                                                l5192 00D1  
                                              l5184 008B                                                l4720 1FE3  
                                              l5440 15B4                                                l5432 15A3  
                                              l5424 156F                                                l5416 154A  
                                              l5514 10D1                                                l5506 10C7  
                                              l5530 1E8C                                                l5522 1E82  
                                              l5610 1EAD                                                l4706 10A8  
                                              l4650 0D49                                                l4642 0D35  
                                              l4626 0D06                                                l4634 0D17  
                                              l4618 0CC1                                                l4570 0C31  
                                              l4562 0C29                                                l4554 0C21  
                                              l4546 0C19                                                l4538 0C04  
                                              l4810 1FC3                                                l4802 1336  
                                              l5178 1074                                                l4474 07FB  
                                              l4466 07EB                                                l4490 129A  
                                              l4714 081A                                                l5098 10E6  
                                              l5370 06FC                                                l5362 06D6  
                                              l5354 06B2                                                l5346 0630  
                                              l5338 061A                                                l5290 0479  
                                              l5282 0342                                                l5274 032B  
                                              l5266 0317                                                l5258 02F7  
                                              l5194 00D9                                                l5186 00A9  
                                              l4722 1FE7                                                l5450 15EE  
                                              l5442 15BF                                                l5434 15AA  
                                              l5426 1581                                                l5418 155C  
                                              l5620 1E59                                                l5540 1120  
                                              l5532 1110                                                l5516 1E2B  
                                              l5508 10C9                                                l5524 1E83  
                                              l5612 1EB0                                                l5604 1EA1  
                                              l5700 09B9                                                l4900 174C  
                                              l4820 1666                                                l4740 11CD  
                                              l4732 1180                                                l4660 0D57  
                                              l4652 0D4B                                                l4644 0D3C  
                                              l4636 0D27                                                l4628 0D08  
                                              l4580 0C3A                                                l4572 0C33  
                                              l4564 0C2B                                                l4556 0C23  
                                              l4548 0C1B                                                l4804 1344  
                                              l4468 07F3                                                l4476 1E92  
                                              l4492 12A5                                                l4484 1288  
                                              l4716 081F                                                l5372 0709  
                                              l5364 06DB                                                l5356 06B6  
                                              l5348 0634                                                l5292 0483  
                                              l5284 0415                                                l5268 031B  
                                              l5276 032F                                                l5196 00DE  
                                              l5188 00AC                                                l4724 1FF0  
                                              l5460 1627                                                l5452 15F6  
                                              l5444 15CA                                                l5436 15B2  
                                              l5428 1589                                                l5550 1130  
                                              l5542 1122                                                l5534 1112  
                                              l5518 1E2E                                                l5526 1E88  
                                              l5606 1EA7                                                l5614 1DE6  
                                              l5710 0735                                                l4750 140D  
                                              l5702 09BF                                                l5630 0844  
                                              l4910 1761                                                l4902 174E  
                                              l4830 167A                                                l4822 1667  
                                              l4814 165C                                                l4734 1195  
                                              l4670 0D6E                                                l4662 0D5B  
                                              l4654 0D50                                                l4646 0D40  
                                              l4638 0D2C                                                l4590 0C7C  
                                              l4582 0C51                                                l4574 0C35  
                                              l4566 0C2D                                                l4558 0C25  
                                              l4806 1349                                                l4478 1E92  
                                              l4494 12C5                                                l4486 128F  
                                              l5374 070E                                                l5366 06E1  
                                              l5358 06BA                                                l5294 04AA  
                                              l5286 0419                                                l5278 0331  
                                              l5198 00E3                                                l4726 1FF5  
                                              l4718 1FE0                                                l5390 1255  
                                              l5382 122B                                                l5454 1604  
                                              l5446 15DC                                                l5462 1630  
                                              l5622 1EC8                                                l5480 1EBE  
                                              l5472 1EB4                                                l5560 113F  
                                              l5552 1138                                                l5544 1124  
                                              l5536 1117                                                l5528 1E8A  
                                              l5608 1EAA                                                l5616 1E22  
                                              l5712 073A                                                l4760 145D  
                                              l4752 1411                                                l4744 13D4  
                                              l5704 09C7                                                l5640 0867  
                                              l5632 084F                                                l4920 1782  
                                              l4904 1755                                                l4912 1765  
                                              l4840 168D                                                l4824 166C  
                                              l4832 167C                                                l4816 1660  
                                              l4736 11B1                                                l4680 0DA1  
                                              l4672 0D74                                                l4664 0D61  
                                              l4648 0D45                                                l4656 0D52  
                                              l4592 0C7D                                                l4584 0C6C  
                                              l4576 0C37                                                l4568 0C2F  
                                              l4808 1FC0                                                l4496 12DB  
                                              l4488 1295                                                l5376 0719  
                                              l5368 06F5                                                l5296 04AF  
                                              l5288 0427                                                l4728 1FFB  
                                              l5392 1267                                                l5384 122E  
                                              l5624 1ECB                                                l5618 1E52  
                                              l5482 1EC5                                                l5474 1EB7  
                                              l5562 1140                                                l5554 113B  
                                              l5546 1126                                                l5538 111E  
                                              l5490 10B0                                                l5730 0790  
                                              l5722 076A                                                l5714 073E  
                                              l4754 1429                                                l4746 13E9  
                                              l5706 09C9                                                l5650 0893  
                                              l5642 086E                                                l5634 0855  
                                              l4930 1799                                                l4914 1769  
                                              l4906 1759                                                l4850 16A1  
                                              l4842 168E                                                l4834 1684  
                                              l4826 1671                                                l4818 1662  
                                              l4738 11CB                                                l4690 0DB5  
                                              l4682 0DA9                                                l4674 0D78  
                                              l4658 0D56                                                l4594 0C85  
                                              l4586 0C76                                                l4578 0C39  
                                              l5378 071D                                                l5298 04B7  
                                              l5386 123F                                                l5394 126F  
                                              l5466 163A                                                l5476 1EBA  
                                              l5484 1E10                                                l5564 1141  
                                              l5556 113C                                                l5548 1128  
                                              l5492 10B3                                                l5740 07C5  
                                              l5732 0799                                                l5724 0773  
                                              l5716 074E                                                l4756 142D  
                                              l4748 1405                                                l5580 1FB9  
                                              l5708 09CF                                                l5660 08CF  
                                              l5652 089A                                                l5636 0857  
                                              l5628 082C                                                l4940 17E0  
                                              l4932 17B1                                                l4924 178A  
                                              l4916 176A                                                l4908 175A  
                                              l4844 1693                                                l4852 16A3  
                                              l4836 1687                                                l4828 1679  
                                              l4764 1E37                                                l4692 0DBF  
                                              l4684 0DAE                                                l4676 0D95  
                                              l4668 0D69                                                l4588 0C78  
                                              l4596 0C87                                                l4780 130A  
                                              l4772 12E6                                                l5396 1283  
                                              l5388 1247                                                l5478 1EBC  
                                              l5486 1E16                                                l5566 1142  
                                              l5558 113D                                                l5494 10B5  
                                              l5742 07CA                                                l5734 079D  
                                              l5726 077A                                                l5718 075E  
                                              l4758 145B                                                l5574 1FA4  
                                              l5670 090F                                                l5662 08D3  
                                              l5654 08B1                                                l5646 0876  
                                              l5638 085D                                                l4942 17E8  
                                              l4926 178F                                                l4934 17B5  
                                              l4918 176E                                                l4870 16E8  
                                              l4854 16B3                                                l4862 16CA  
                                              l4846 1698                                                l4838 1689  
                                              l4766 1E40                                                l4694 0DC3  
                                              l4686 0DAF                                                l4678 0D9C  
                                              l4598 0C92                                                l4782 130B  
                                              l4774 12F0                                                l5582 1F44  
                                              l5750 09D8                                                l5592 1024  
                                              l5496 10B8                                                l5488 10AD  
                                              l5744 07CE                                                l5736 07A7  
                                              l5728 0789                                                l5576 1FAC  
                                              l5568 1FA0                                                l5680 0943  
                                              l5672 0919                                                l5664 08DA  
                                              l5656 08BB                                                l5648 087C  
                                              l4944 17EC                                                l4936 17C2  
                                              l4928 1795                                                l4880 1707  
                                              l4872 16F0                                                l4864 16CF  
                                              l4856 16BF                                                l4848 16A0  
                                              l4696 108B                                                l4960 0DCF  
                                              l4768 1E42                                                l4688 0DB3  
                                              l4784 1313                                                l5584 1F4A  
                                              l5760 09E8                                                l5752 09DB  
                                              l5594 1030                                                l5498 10BA  
                                              l5746 07CF                                                l5738 07B1  
                                              l5578 1FB6                                                l5690 0989  
                                              l5682 095A                                                l5666 08F1  
                                              l5674 091E                                                l5658 08C8  
                                              l4946 17F0                                                l4938 17DD  
                                              l4890 1733                                                l4882 1715  
                                              l4874 16F8                                                l4858 16C1  
                                              l4698 108D                                                l4970 0DE4  
                                              l4962 0DD0                                                l4954 0DC5  
                                              l4794 1321                                                l4786 1315  
                                              l4778 12F9                                                l5586 1F55  
                                              l5770 0AB4                                                l5762 09F0  
                                              l5754 09DC                                                l5596 1031  
                                              l5692 0990                                                l5684 0965  
                                              l5676 0925                                                l5668 08F8  
                                              l4948 17F2                                                l4892 1734  
                                              l4884 1719                                                l4876 1700  
                                              l4868 16D8                                                l4980 0DF6  
                                              l4972 0DEC                                                l4964 0DD5  
                                              l4956 0DC9                                                l4788 1319  
                                              l4796 132F                                                l5588 1F5F  
                                              l5780 0B18                                                l5772 0AD4  
                                              l5764 09F8                                                l5756 09DD  
                                              l5598 1035                                                l5694 09A7  
                                              l5686 096B                                                l5678 093C  
                                              l4894 173C                                                l4886 171A  
                                              l4878 1702                                                l4990 0E12  
                                              l4982 0DFB                                                l4974 0DEF  
                                              l4966 0DDA                                                l4958 0DCB  
                                              l5782 0B28                                                l5774 0ADE  
                                              l5766 0A00                                                l5758 09E0  
                                              l5696 09B2                                                l5688 0972  
                                              l4888 1721                                                l4896 173E  
                                              l4992 0E17                                                l4984 0E00  
                                              l4976 0DF1                                                l4968 0DE2  
                                              l5792 0BA5                                                l5784 0B50  
                                              l5776 0AEE                                                l5768 0A5A  
                                              l5698 09B7                                                l4898 1744  
                                              l4994 0E1C                                                l4986 0E08  
                                              l4978 0DF5                                                l5794 0BAE  
                                              l5786 0B77                                                l5778 0B0E  
                                              l4988 0E0A                                                l5788 0B9E  
                                              l4998 0E25                                                STR_1 184B  
                                              STR_2 1830                                                STR_3 1877  
                                              STR_4 1863                                                STR_5 1888  
                                              STR_8 188C                                                _LATA 010C  
                                              _LATC 010E                                                u6000 0C92  
                                              u6001 0C91                                                u6010 0C97  
                                              u6011 0C96                                                u6100 0D2C  
                                              u6020 0CAC                                                u6101 0D2B  
                                              u6021 0CAB                                                u6030 0CB0  
                                              u6031 0CAF                                                u7000 0F51  
                                              u6200 0D78                                                u6120 0D40  
                                              u7001 0F50                                                u6201 0D77  
                                              u6121 0D3F                                                u6210 0D86  
                                              u6130 0D45                                                u6050 0CC0  
                                              u6131 0D44                                                u6115 0D36  
                                              u6051 0CBF                                                u7100 0FD2  
                                              u7020 0F61                                                u6220 0D95  
                                              u6140 0D50                                                u7101 0FD1  
                                              u7021 0F60                                                u6221 0D94  
                                              u6141 0D4F                                                u6045 0CB3  
                                              u6310 10A8                                                u7110 0FEC  
                                              u7030 0F66                                                u6230 0D9C  
                                              u6150 0D56                                                u6070 0CE2  
                                              u6311 10A7                                                u7111 0FEB  
                                              u7031 0F65                                                u7015 0F53  
                                              u6231 0D9B                                                u6215 0D82  
                                              u6151 0D55                                                u6071 0CE1  
                                              u6400 13E9                                                u8000 0989  
                                              u7040 0F7A                                                u6240 0DA1  
                                              u6160 0D5B                                                u6080 0D10  
                                              u7200 13BC                                                u6320 082B  
                                              u6401 13E8                                                u8001 0988  
                                              u6305 109D                                                u7105 0FCE  
                                              u7041 0F79                                                u6241 0DA0  
                                              u6161 0D5A                                                u6081 0D0F  
                                              u6073 0CDE                                                u6065 0CC3  
                                              u6321 082A                                                u6410 1405  
                                              u8010 0990                                                u7050 0F81  
                                              u6250 0DAE                                                u6170 0D61  
                                              u6090 0D27                                                u7210 13C7  
                                              u7130 10E1                                                u6330 1FE7  
                                              u6411 1404                                                u8011 098F  
                                              u7051 0F80                                                u6251 0DAD  
                                              u6171 0D60                                                u6091 0D26  
                                              u7211 13C5                                                u7131 10E0  
                                              u6331 1FE6                                                i1l52 1E51  
                                              u8100 078F                                                u6420 1411  
                                              u8020 09A7                                                u7060 0F87  
                                              u6260 0DB3                                                u6180 0D68  
                                              u7220 13C8                                                u7300 14DF  
                                              u7140 1105                                                u8101 078E  
                                              u6421 1410                                                u8021 09A6  
                                              u7125 0FF0                                                u7061 0F86  
                                              u6261 0DB2                                                u6181 0D67  
                                              u7205 13B8                                                u7141 1104  
                                              u6430 142D                                                u8030 09B2  
                                              u7070 0F91                                                u6190 0D6E  
                                              u6510 132E                                                u7150 137A  
                                              u7310 14E9                                                u7230 1F26  
                                              u6431 142C                                                u8031 09B1  
                                              u7071 0F90                                                u6191 0D6D  
                                              u6511 132D                                                u7311 14E8  
                                              u7231 1F25                                                u8120 079D  
                                              u8040 073A                                                u6440 145B  
                                              u6600 1693                                                u7080 0F9F  
                                              u6280 0DC3                                                u6520 1335  
                                              u7160 1388                                                u7320 150F  
                                              u7240 1EE1                                                u5800 1295  
                                              u7400 0107                                                u6360 1FFB  
                                              u8200 0BA4                                                u8121 079C  
                                              u8041 0739                                                u6441 145A  
                                              u6601 1692                                                u6281 0DC2  
                                              u6521 1334                                                u6505 1322  
                                              u7161 1387                                                u7305 14DB  
                                              u7241 1EE0                                                u5801 1294  
                                              u7145 1101                                                u7401 0106  
                                              u6361 1FFA                                                u6345 1FEC  
                                              u8201 0BA3                                                i1l58 1DE4  
                                              u8130 07A3                                                u8050 073E  
                                              u6610 1698                                                u6370 1195  
                                              u6290 1098                                                u7090 0FBA  
                                              u6450 1E40                                                u7170 1395  
                                              u7330 1519                                                u7250 1484  
                                              u5810 12A5                                                u7410 010D  
                                              u8131 07A2                                                u8115 0793  
                                              u8051 073D                                                u6611 1697  
                                              u6371 1194                                                u6291 1097  
                                              u7091 0FB9                                                u6451 1E3F  
                                              u6275 0DBA                                                u7155 1376  
                                              u7331 1518                                                u5811 12A4  
                                              u7411 010C                                                u6355 1FF1  
                                              u8140 07A7                                                u8060 075E  
                                              u6700 1744                                                u6620 16B3  
                                              u6380 11B1                                                u5900 0C15  
                                              u6540 1344                                                u6460 12F0  
                                              u7180 139F                                                u7340 152F  
                                              u7260 149F                                                u5740 0806  
                                              u5820 12C5                                                u7500 02FC  
                                              u7420 0156                                                u8141 07A6  
                                              u8061 075D                                                u6445 1457  
                                              u6701 1743                                                u6621 16B2  
                                              u6381 11B0                                                u7085 0F9B  
                                              u5901 0C14                                                u6541 1343  
                                              u6461 12EF                                                u7181 139E  
                                              u7325 150B                                                u7261 149E  
                                              u5741 0804                                                u5821 12C4  
                                              u7501 02FB                                                u7421 0155  
                                              u8150 07BB                                                u6710 174C  
                                              u6630 16CF                                                u6390 11CB  
                                              u5910 0C19                                                u5830 0BC3  
                                              u6550 1349                                                u6470 1306  
                                              u7190 13AF                                                u7350 1539  
                                              u7270 14A5                                                u5750 0807  
                                              u7510 0317                                                u7430 015C  
                                              u6711 174B                                                u6631 16CE  
                                              u6391 11CA                                                u7095 0FB6  
                                              u5911 0C18                                                u5831 0BC2  
                                              u6551 1348                                                u6535 1337  
                                              u7191 13AE                                                u7175 1391  
                                              u7351 1538                                                u7271 14A4  
                                              u7255 1480                                                u7511 0316  
                                              u7431 015B                                                u8160 07CA  
                                              u8080 0779                                                u6800 1799  
                                              u6640 1707                                                u6560 1666  
                                              u5920 0C51                                                u5840 0BC9  
                                              u6480 1319                                                u7280 14B3  
                                              u7360 1088                                                u5760 07E1  
                                              u7600 05D3                                                u7520 031B  
                                              u7440 019D                                                u8161 07C9  
                                              u8081 0778                                                u8217 1F2F  
                                              u6801 1798                                                u6641 1706  
                                              u6561 1665                                                u5921 0C50  
                                              u5841 0BC8                                                u6481 1318  
                                              u7345 152B                                                u7265 149B  
                                              u7361 1087                                                u5761 07E0  
                                              u5825 12C1                                                u7601 05D2  
                                              u7521 031A                                                u7441 019C  
                                              u8170 07CE                                                u6810 17A7  
                                              u6730 1759                                                u6570 166C  
                                              u5930 0C5B                                                u5850 0BCE  
                                              u6490 1320                                                u7290 14D1  
                                              u5770 07EB                                                u7610 05F9  
                                              u7530 032B                                                u7450 0207  
                                              u7370 00A9                                                u8227 1032  
                                              u8171 07CD                                                u8155 07B7  
                                              u8075 076D                                                u6731 1758  
                                              u6571 166B                                                u6395 11C7  
                                              u5931 0C59                                                u5851 0BCD  
                                              u6491 131F                                                u6475 1302  
                                              u7291 14D0                                                u5771 07EA  
                                              u7611 05F8                                                u7531 032A  
                                              u7451 0206                                                u7371 00A8  
                                              u6820 17C2                                                u6580 1671  
                                              u6900 0DFB                                                u5940 0C5C  
                                              u5860 0BEA                                                u5780 1E9A  
                                              u7620 05FD                                                u7540 0427  
                                              u7460 022E                                                u7380 00DE  
                                              u7700 1283                                                u8180 0AD4  
                                              u6821 17C1                                                u6725 174F  
                                              u6581 1670                                                u6901 0DFA  
                                              u5925 0C4D                                                u5861 0BE9  
                                              u7285 14AF                                                u5781 1E99  
                                              u7621 05FC                                                u7605 05CF  
                                              u7541 0426                                                u7461 022D  
                                              u7381 00DD                                                u7701 1282  
                                              u8181 0AD3                                                u7710 1E68  
                                              u6830 17DD                                                u6750 1769  
                                              u6670 1719                                                u6590 168D  
                                              u6910 0E00                                                u5950 0C6C  
                                              u5870 0BF1                                                u5790 128F  
                                              u7630 0628                                                u7550 0479  
                                              u7470 025F                                                u7390 00E3  
                                              u8190 0B0E                                                u7711 1E67  
                                              u8095 0783                                                u6831 17DC  
                                              u6815 17A3                                                u6751 1768  
                                              u6671 1718                                                u6655 1708  
                                              u6591 168C                                                u6911 0DFF  
                                              u5951 0C6B                                                u5871 0BF0  
                                              u5791 128E                                                u7631 0627  
                                              u7551 0478                                                u7471 025E  
                                              u7391 00E2                                                u8191 0B0D  
                                              u7800 1E59                                                u7720 1E77  
                                              u6840 17F0                                                u6760 176E  
                                              u6920 0E17                                                u5880 0BF7  
                                              u7640 06C8                                                u7560 04AA  
                                              u7480 02C9                                                u7801 1E58  
                                              u7721 1E76                                                u6841 17EF  
                                              u6825 17BE                                                u6761 176D  
                                              u6745 175B                                                u6665 170F  
                                              u6921 0E16                                                u5881 0BF6  
                                              u7641 06C7                                                u7561 04A9  
                                              u7545 0423                                                u7481 02C8  
                                              u7730 1F43                                                u7810 0844  
                                              u6770 1782                                                u6690 1733  
                                              u6930 0E1C                                                u5970 0C7C  
                                              u5890 0BFC                                                u7650 06D6  
                                              u7570 04AF                                                u7490 02F1  
                                              u7731 1F42                                                u7811 0843  
                                              u6835 17D9                                                u6771 1781  
                                              u6691 1732                                                u6931 0E1B  
                                              u5971 0C7B                                                u5891 0BFB  
                                              u7651 06D5                                                u7571 04AE  
                                              u7491 02F0                                                u7900 08F1  
                                              u7820 084F                                                u6780 1789  
                                              u6860 0DCF                                                u7660 0702  
                                              u7580 0524                                                u7740 155C  
                                              u7901 08F0                                                u7821 084E  
                                              u6781 1788                                                u6685 171B  
                                              u6861 0DCE                                                u5965 0C6F  
                                              u7661 0700                                                u7645 06C4  
                                              u7581 0523                                                u7741 155B  
                                              u7910 08F8                                                u7830 0867  
                                              u6790 178F                                                u6870 0DD5  
                                              u5990 0C8E                                                u7670 0703  
                                              u7590 055B                                                u7750 1581  
                                              u7735 1F3F                                                u7911 08F7  
                                              u7831 0866                                                u6855 17F7  
                                              u6791 178E                                                u6695 172F  
                                              u6871 0DD4                                                u5991 0C8D  
                                              u7655 06D2                                                u7591 055A  
                                              u7751 1580                                                u7920 090F  
                                              u7840 087C                                                u6960 0F12  
                                              u6880 0DDA                                                u7680 070E  
                                              u7760 15C9                                                u7921 090E  
                                              u7841 087B                                                u6945 0E95  
                                              u6881 0DD9                                                u5985 0C7F  
                                              u7681 070D                                                u7761 15C8  
                                              u7770 1FBF                                                u7930 0919  
                                              u7850 0893                                                u6970 0F29  
                                              u6890 0DF5                                                u7690 123F  
                                              u7771 1FBE                                                u7931 0918  
                                              u7851 0892                                                u6955 0EC0  
                                              u6891 0DF4                                                u7691 123E  
                                              u7940 0925                                                u7860 089A  
                                              u7780 1F5F                                                u7941 0924  
                                              u7861 0899                                                u6965 0F0E  
                                              u7781 1F5E                                                u7790 103B  
                                              u7950 093C                                                u7870 08B1  
                                              u7791 103A                                                u7951 093B  
                                              u7871 08B0                                                u6975 0F25  
                                              u7960 0943                                                u7880 08BB  
                                              u7961 0942                                                u7881 08BA  
                                              u6985 0F34                                                u7970 095A  
                                              u7890 08DA                                                u7971 0959  
                                              u7891 08D9                                                u6995 0F47  
                                              u7980 0965                                                u7981 0964  
                                              u7990 0972                                                u7991 0971  
                                              _TMR4 0415                                                _WPUA 020C  
                                              _WPUC 020E                           EUSART_ReceiveISR@regValue 007A  
                                              _dbuf 0220                                                _labs 1EDC  
                                              _main 09D8                                                _prec 014A  
                                              pad@i 003A                                                pad@p 0037  
                                              fsr0h 0005                                                fsr1h 0007  
                                              indf0 0000                                                fsr0l 0004  
                                              indf1 0001                                                fsr1l 0006  
                                              btemp 007E                         _INT_DefaultInterruptHandler 0000  
                                     ___fpclassifyf 1355                            handle_voltage@LED_SetLow 0064  
                                              start 004A          __end_of_EUSART_DefaultOverrunErrorCallback 1DF9  
              ??_EUSART_DefaultOverrunErrorCallback 0076                 ?_EUSART_DefaultOverrunErrorCallback 0076  
                _EUSART_DefaultOverrunErrorCallback 1DF5                                     ___fldiv@new_exp 0032  
                   __end_of_INT_SetInterruptHandler 1E22                                               ??_pad 0039  
                                     ?_EUSART_Write 0020                                       ___fltol@sign1 0028  
                                             ?_labs 0020                                     __end_of___fladd 0DC5  
                                             ?_main 0076                                     __end_of___fldiv 1800  
                                   __end_of___flneg 1E43                                     __end_of___flmul 1000  
                                   __end_of___flsub 1FE0                                     __end_of___fltol 1355  
                                             _T4CON 0417                                               _IOCAF 0393  
                                             _IOCCF 0399                                               _IOCAN 0392  
                                             _IOCAP 0391                                               _IOCCN 0398  
                                             _IOCCP 0397                                               i1l160 003A  
                                             i1l410 1E06                                               i1l156 001B  
                                             i1l165 0048                                               i1l158 002C  
                                             i1l423 1065                                               i1l255 1000  
                                             i1l159 0048                                               i1l440 1021  
                                             i1l433 122A                                               i1l249 1F9F  
                                             i1l443 1F09                                               i1l461 1DE5  
                                             i1l437 101F                                               i1l446 1F0B  
                                             i1l464 1DF8                                               i1l632 1F80  
                                             i1l625 117F                                               _UART1 1800  
                                      vfpfcnvrt@fmt 00D2                                               _TRISA 008C  
                                             _TRISC 008E                                               _RXPPS 0E24  
                                   _TMR4_Initialize 1E7F                                    __end_of_TMR4_ISR 1FA0  
                                             _flags 00EB                                  _EUSART_TransmitISR 1EF2  
                               read_prec_or_width@c 002B                                 read_prec_or_width@n 002C  
                                             _fputc 1288                                               _fputs 0808  
                                       ?_TMR4_Start 0076                                               labs@a 0020  
                                             pad@fp 0034                                               _width 0148  
                                             _putch 1E90                                               pclath 000A  
                                             status 0003                                               wtemp0 007E  
                                    ?___fpclassifyf 0020                                 ?_EUSART_TransmitISR 0076  
                                   __initialization 004C                                        __end_of_labs 1EF2  
                                      __end_of_main 0BB9                                      ??_EUSART_Write 0021  
                 _EUSART_TxCompleteInterruptHandler 0152                                           ??_ADC_ISR 0076  
                       ?_INTERRUPT_InterruptManager 0076                                              ??_labs 0024  
                              ??_EUSART_TransmitISR 0076                                              ??_main 00E7  
                        __end_of_read_prec_or_width 1288    EUSART_RxCompleteCallbackRegister@callbackHandler 0020  
EUSART_OverrunErrorCallbackRegister@callbackHandler 0020  EUSART_FramingErrorCallbackRegister@callbackHandler 0020  
                                            _ADCON0 009D                                              _ADCON1 009E  
                                            _ADCON2 009F                          _EUSART_OverrunErrorHandler 014C  
                                            ?_fputc 0023                                              ?_fputs 002C  
                                            _ADRESH 009C                                              _ADRESL 009B  
                                            _ANSELA 018C                                              ?_putch 0076  
                                            _ANSELC 018E                                              _BORCON 0116  
                                            _RC1REG 0199                                              _RC1STA 019D  
                                            _RC3PPS 0EA3                                              _ODCONA 028C  
                                            _ODCONC 028E                                              i1l4110 1157  
                                            i1l4120 1F62                                              i1l4200 11F9  
                                            i1l4112 115D                                              i1l4130 1F77  
                                            i1l4122 1F68                                              i1l4202 1200  
                                            i1l4114 1168                                              i1l4106 1145  
                                            i1l4132 1F7D                                              i1l4124 1F69  
                                            i1l4220 1225                                              i1l4212 1213  
                                            i1l4204 1205                                              i1l4116 116E  
                                            i1l4108 114C                                              i1l4126 1F6D  
                                            i1l4214 121A                                              i1l4206 1208  
                                            i1l4230 1F06                                              i1l4222 1EF2  
                                            i1l4118 1174                                              i1l4160 1E4C  
                                            i1l4128 1F6F                                              i1l4216 121C  
                                            i1l4208 120C                                              i1l4224 1EF8  
                                            i1l4090 1DF5                                              i1l4218 121E  
                                            i1l4226 1F00                                              i1l4170 1F9D  
                                            i1l4162 1F81                                              i1l4156 1E43  
                                            i1l4228 1F04                                              i1l4164 1F8F  
                                            i1l4158 1E45                                              i1l4190 11DC  
                                            i1l4166 1F95                                              i1l4192 11E2  
                                            i1l4168 1F9A                                              i1l4194 11E9  
                                            i1l4186 11CF                                              i1l4370 000F  
                                            i1l3900 104A                                              i1l4196 11EE  
                                            i1l4188 11D7                                              i1l4380 0036  
                                            i1l4372 0014                                              i1l3910 1061  
                                            i1l3902 104E                                              i1l4198 11F3  
                                            i1l4382 003F                                              i1l4374 0020  
                                            i1l4366 0006                                              i1l3912 1063  
                                            i1l3904 1050                                              i1l4384 0044  
                                            i1l4376 0025                                              i1l4368 000A  
                                            i1l3914 1064                                              i1l3906 105A  
                                            i1l4378 0031                                              i1l3908 105C  
                                            i1l3892 1DFF                                              i1l3980 1006  
                                            i1l3990 101C                                              i1l3982 100A  
                                            i1l3896 1043                                              i1l3992 101D  
                                            i1l3984 100F                                              i1l3898 1043  
                                            i1l3986 1016                                              i1l3978 1001  
                                            i1l3988 101A                                              _INLVLA 038C  
                                            _INLVLC 038E                                              u500_20 115D  
                                            u500_21 115C                                              u501_20 1166  
                                            u501_21 1163                                              u502_24 1168  
                                            u511_20 1E4C                                              u503_20 116E  
                                            u511_21 1E4B                                              u503_21 116D  
                                            u520_20 1EF8                                              u504_20 1174  
                                            u512_20 1F8F                                              u520_21 1EF7  
                                            u504_21 1173                                              u512_21 1F8E  
                                            u505_20 117D                                              u513_20 1F95  
                                            u505_21 117A                                              u513_21 1F94  
                                            u514_20 11DC                                              u514_21 11DB  
                                            u506_24 117F                                              u507_20 1F77  
                                            u515_20 11E9                                              u507_21 1F76  
                                            u515_21 11E8                                              u508_20 1F7D  
                                            u516_20 11F3                                              u508_21 1F7C  
                                            u516_21 11F2                                              u517_20 1200  
                                            u517_21 11FF                                              u518_20 1212  
                                            u518_21 1211                                              u519_20 1225  
                                            u519_21 1224                                              u560_20 000F  
                                            u560_21 000E                                              u561_20 0014  
                                            u561_21 0013                                              u562_20 0020  
                                            _OSCCON 0099                                              u562_21 001F  
                                            u563_20 0025                                              u563_21 0024  
                                            u564_20 0031                                              u564_21 0030  
                                            u565_20 0036                                              u565_21 0035  
                                            u494_20 1006                                              u566_20 003F  
                                            u494_21 1005                                              u566_21 003E  
                                            u487_20 1E05                                              u495_20 100F  
                                            u567_20 0044                                              u559_20 000A  
                                            u487_21 1E03                                              u495_21 100E  
                                            u567_21 0043                                              u559_21 0009  
                                            u488_20 1E06                                              u489_20 1061  
                                            u497_20 114C                                              u489_21 1060  
                                            u497_21 114B                                              u498_20 1155  
                                            u498_21 1152                                              u499_24 1157  
                                            _TX1REG 019A                                              _TX1STA 019E  
                                  __end_of___xxtofl 07D8                                    __end_of_delay_ms 1F44  
                                      vfprintf@cfmt 00E4                                              ___flge 13D4  
                                            ___fleq 1180                                           ??___fladd 0054  
                                            ___wmul 1FE0                                           ??___fldiv 0028  
                                         ??___flneg 0024                                           ??___flmul 003A  
                                         ??___flsub 0068                                           ??___fltol 0024  
                                            _efgtoa 0079                                              _floorf 145F  
                                            _memcpy 1066                                read_prec_or_width@ap 0027  
                           __end_of_TMR4_Initialize 1E90                                   ?_EUSART_IsRxReady 0076  
                                 ?_EUSART_IsTxReady 0076                                              _printf 1EC8  
                                            pad@buf 0036                                   ?_CLOCK_Initialize 0076  
                                            _strcpy 1F0C                                  ??_EUSART_IsRxReady 0076  
                                            fputc@c 0023                                  ??_EUSART_IsTxReady 0020  
                                            fputs@c 0031                                              fputs@i 0032  
                                            fputs@s 002C                                  ??_CLOCK_Initialize 0020  
                                   ___fpclassifyf@e 002A                                     ___fpclassifyf@u 002C  
                                   ___fpclassifyf@x 0020                            ADC_GetConversion@channel 0023  
                       EUSART_ReceiveISR@tempRxHead 007B                                    __end_of_vfprintf 1F62  
           INT_SetInterruptHandler@InterruptHandler 0020             ADC_SetInterruptHandler@InterruptHandler 0020  
                                handle_voltage@mode 0060                                          ___flge@ff1 004C  
                                        ___flge@ff2 0050                                     ??___fpclassifyf 0024  
                                      ___xxtofl@arg 002E                                        ___xxtofl@exp 002D  
                                 _SYSTEM_Initialize 1EA1                                        ___xxtofl@val 0024  
                                        ___fleq@ff1 0020                                          ___fleq@ff2 0024  
                                      ??_LED_12V_On 0020                                        ??_LED_24V_On 0020  
                           __end_of__initialization 0075                                          ___flneg@f1 0020  
                                ?_SYSTEM_Initialize 0076                                          ___fltol@f1 0020  
                                     __end_of_UART1 1830                                      __pcstackCOMMON 0076  
                                      __pidataBANK2 0002                                 ??_SYSTEM_Initialize 0022  
                                         ?_TMR4_ISR 0076                                       __end_of_fputc 12E6  
                                     __end_of_fputs 082C                                       __end_of_putch 1EA1  
                                __end_of_LED_12V_On 1DF5                                  __end_of_LED_24V_On 1DF2  
                                    _OPTION_REGbits 0095                                _eusartRxStatusBuffer 0120  
                                 ??_timer_interrupt 0076                                             ??_fputc 0027  
                         __end_of_SYSTEM_Initialize 1EB4                                             ??_fputs 002F  
                                           ??_putch 0022                                          __pbssBANK1 00EB  
                                        __pbssBANK2 0120                                          __pbssBANK3 01A0  
                                        __pbssBANK4 0220                               __end_of_handle_buzzer 1FC0  
                              __end_of_EUSART_Write 0800                                   __end_of__Umul8_16 10AD  
                                        __pmaintext 09D8                                             ?___flge 004C  
                                           ?___fleq 0020                                             ?___wmul 0020  
                                        ??_TMR4_ISR 0076                                          __pintentry 0004  
                                           ?_efgtoa 0068                                _EUSART_AutoBaudQuery 0000  
                                           ?_floorf 003A                                             ?_memcpy 0020  
                                           _ADC_ISR 1E43                                    ?_TMR4_Initialize 0076  
                                           ?_printf 015B                                             ?_strcpy 0020  
                                   _EUSART_IsTxDone 0000                                       _eusartRxCount 0070  
         __end_of_EUSART_RxCompleteCallbackRegister 1E61                 ??_EUSART_RxCompleteCallbackRegister 0022  
                ?_EUSART_RxCompleteCallbackRegister 0020                   _EUSART_RxCompleteCallbackRegister 1E52  
                                         ?___xxtofl 0024                                     _EUSART_ErrorGet 0000  
                                           _SP1BRGH 019C                                             _SP1BRGL 019B  
                                        _config_flg 015A                                           ?_delay_ms 0020  
                                           _OSCTUNE 0098                                             _SLRCONA 030C  
                                           _SLRCONC 030E                            i1EUSART_Write@tempTxHead 0077  
                                      ??_TMR4_Start 0020                               EUSART_Read@tempRxTail 0076  
                              _ADC_InterruptHandler 0169                             _ADC_SetInterruptHandler 1E07  
                                           ___fladd 0BB9                                             ___fldiv 165C  
                                           ___flneg 1E37                                             ___flmul 0DC5  
                                           ___flsub 1FC0                                             ___fltol 12E6  
                                         ?_vfprintf 00DF                                  __end_of_TMR4_Start 1DE9  
                                           __ptext1 1EC8                                             __ptext2 1F44  
                                           __ptext3 154A                                             __ptext4 122B  
                                           __ptext5 1FE0                                             __ptext6 0079  
                                           __ptext7 1F0C                                             __ptext8 10DC  
                                           __ptext9 0808                                      check_RX_Data@i 0078  
                             read_prec_or_width@fmt 0026                                          ??___xxtofl 0028  
                                         _T4CONbits 0417                            ??_PIN_MANAGER_Initialize 0020  
                           _INT_SetInterruptHandler 1E19                                          ??_delay_ms 0022  
                                           efgtoa@c 006E                                             efgtoa@d 00AF  
                                           efgtoa@e 00B3                                             efgtoa@f 006A  
                                           efgtoa@g 00C6                                             efgtoa@h 00BD  
                                           efgtoa@i 00BB                                             efgtoa@l 00C1  
                                           efgtoa@m 00B1                                             efgtoa@n 00CA  
                                           efgtoa@p 00A6                                             efgtoa@t 00A8  
                                           efgtoa@u 00CC                              _EUSART_Write$intlevel0 07DC  
                                           efgtoa@w 00B5                                             clrloop0 1DFA  
                                        delay_ms@ms 0020                                end_of_initialization 0075  
                                           floorf@e 0048                                             floorf@m 0044  
                                           floorf@u 004A                                             floorf@x 003A  
                                           memcpy@d 0025                                             memcpy@n 0022  
                                           memcpy@s 0026                                             fputc@fp 0025  
                                           fputs@fp 002D                                  _read_prec_or_width 122B  
                                 _EUSART_Initialize 1110                                  ?_EUSART_Initialize 0076  
                                 __end_of_vfpfcnvrt 165C                                          efgtoa@mode 00AD  
                                        efgtoa@sign 00C5                                   _EUSART_ReceiveISR 11CF  
                                     _check_RX_Data 1F62                                 ?_read_prec_or_width 0026  
                                  vfpfcnvrt@convarg 00D8                                          ??_vfprintf 006F  
                                ?_EUSART_ReceiveISR 0076                                             strcpy@d 0025  
                               ??_EUSART_Initialize 0022                                         ___fladd@grs 005F  
                               ??_EUSART_ReceiveISR 007A                 __end_of_ADC_DefaultInterruptHandler 1DE5  
                       _ADC_DefaultInterruptHandler 1DE4                                       ___xxtofl@sign 002C  
                                     ??_LED_12V_Off 0020     TMR4_PeriodMatchCallbackRegister@CallbackHandler 0020  
                                     ??_LED_24V_Off 0020                                ??_read_prec_or_width 0028  
                                       ___fldiv@grs 0034                                         ___fldiv@rem 002D  
                               _EUSART_Deinitialize 0000                                         ___flmul@grs 0041  
                         __end_of_EUSART_Initialize 1145                       ??_ADC_DefaultInterruptHandler 0076  
                         ??_ADC_SetInterruptHandler 0022                           __end_of_EUSART_ReceiveISR 122B  
                                        _voltage_12 0144                                          _voltage_24 0140  
                                    ?_check_RX_Data 0076                        __end_of_INTERRUPT_Initialize 1E37  
                                    __end_of___flge 145F                                      __end_of___fleq 11CF  
                                   _timer_interrupt 1145                                         vfpfcnvrt@ap 00D3  
                                       vfpfcnvrt@cp 00DD                                         vfpfcnvrt@fp 00D0  
                                    __end_of___wmul 2000                                      __end_of_efgtoa 0733  
                                      _EUSART_Write 07D8                                      _ADC_Initialize 1EB4  
                                    __end_of_floorf 154A                                      __end_of_memcpy 1089  
                                        floorf@F521 0138                           ??_INT_SetInterruptHandler 0022  
                                    __end_of_printf 1EDC                                      __end_of_strcpy 1F27  
                               start_initialization 004C                                         __end_of_pad 1110  
                                     ??_EUSART_Read 0076            __end_of_TMR4_PeriodMatchCallbackRegister 1E2B  
                ??_TMR4_PeriodMatchCallbackRegister 0022                   ?_TMR4_PeriodMatchCallbackRegister 0020  
                  _TMR4_PeriodMatchCallbackRegister 1E22                                         putch@txData 0022  
                                    _handle_voltage 082C                                 __end_of_LED_12V_Off 1DEF  
                               __end_of_LED_24V_Off 1DEC                           _EUSART_RxInterruptHandler 0167  
                             __end_of___fpclassifyf 13D4                                         vfprintf@fmt 00E1  
                        _EUSART_FramingErrorHandler 014E                                            ??___flge 0054  
                                          ??___fleq 0028                                            ??___wmul 0024  
                                          ??_efgtoa 00A0                              __end_of_ADC_Initialize 1EC8  
                                         __Umul8_16 1089                                         __pdataBANK2 016B  
                                          ??_floorf 003E                                            ??_memcpy 0024  
                                          ?_ADC_ISR 0076                                            ??_printf 0070  
                                          ??_strcpy 0023                                           ___fladd@a 0050  
                                         ___fladd@b 004C                                      i1_EUSART_Write 1001  
                                         ___fldiv@a 0020                                           ___fldiv@b 0024  
                             TMR4_ISR@CountCallBack 0156                                           ___flmul@a 0036  
                                         ___flmul@b 0032                                         __pbssCOMMON 0070  
                                         ___flsub@a 0060                                           ___flsub@b 0064  
                                         ___latbits 0002                                       __pcstackBANK0 0020  
                                     __pcstackBANK1 00A0                                       __pcstackBANK2 015B  
                                     __pcstackBANK3 01A8                              __end_of_handle_voltage 09D8  
                               __end_of_EUSART_Read 1066                              EUSART_Write@tempTxHead 0021  
                                         __pnvBANK2 0165                                           __pnvBANK3 01B0  
                                   ??_check_RX_Data 0078                             __end_of_timer_interrupt 1180  
                                       _efgtoa$1557 00AA                                           _main$1110 01AC  
                                         _main$1109 01A8                              _PIN_MANAGER_Initialize 10AD  
                          _TMR4_PeriodMatchCallback 0165                                EUSART_Read@readValue 0077  
                                          ?___fladd 004C                                            ?___fldiv 0020  
                                          ?___flneg 0020                                            ?___flmul 0032  
                                          ?___flsub 0060                                            ?___fltol 0020  
                                        ?__Umul8_16 0020                                      handle_buzzer@i 0025  
                                   ?_ADC_Initialize 0076                                        _eusartRxHead 0072  
                                      _eusartTxHead 0075                                        _eusartRxTail 0071  
                                      _eusartTxTail 0074                              __end_ofi1_EUSART_Write 1022  
                      ??_INTERRUPT_InterruptManager 007C                        EUSART_TransmitISR@tempTxTail 0076  
                           _eusartTxBufferRemaining 0073                                            _BAUD1CON 019F  
                            _EUSART_TransmitDisable 0000                                         _LED_12V_Off 1DEC  
                                  check_RX_Data@buf 0079                                         _LED_24V_Off 1DE9  
                         handle_voltage@LED_SetHigh 0062                                     ?_handle_voltage 0058  
                              i1EUSART_Write@txData 0076                                    _EUSART_IsRxReady 1DFF  
                              _INTERRUPT_Initialize 1E2B                                    _EUSART_IsTxReady 0800  
                                    _eusartRxBuffer 01A0                                    _CLOCK_Initialize 1E10  
                                    _eusartTxBuffer 0130                                      ___wmul@product 0024  
                                          _LATAbits 010C                                           delay_ms@i 0023  
                                         clear_ram0 1DF9                                            _PIE1bits 0091  
                 _EUSART_TxCompleteCallbackRegister 0000                                            _PIE2bits 0092  
                                 _eusartRxLastError 0154                                            _PIR1bits 0011  
                                          _PIR2bits 0012                                            _TMR4_ISR 1F81  
                                         _vfpfcnvrt 154A                                     ?i1_EUSART_Write 0076  
                                        _ADCON0bits 009D                                   ___wmul@multiplier 0020  
                                       _EUSART_Read 1043                                          vfpfcnvrt@c 00DC  
                             ?_INTERRUPT_Initialize 0076                   _EUSART_RxCompleteInterruptHandler 0150  
                                     _handle_buzzer 1FA0                                    ?_timer_interrupt 0076  
                                         memcpy@tmp 0024                                          vfprintf@ap 00E3  
                                        vfprintf@fp 00DF                                   _ADC_GetConversion 1022  
                                       ??__Umul8_16 0022                                  ?_ADC_GetConversion 0020  
                        __end_of_EUSART_TransmitISR 1F0C                                          ?_vfpfcnvrt 00D0  
                           handle_voltage@reset_flg 0061                                  ___fpclassifyf@F465 013C  
                               ??_ADC_GetConversion 0022                                            ___xxtofl 0733  
                                          _delay_ms 1F27                             handle_voltage@threshold 005C  
                                _EUSART_AutoBaudSet 0000                                            __ptext10 1288  
                                          __ptext11 1E90                                            __ptext20 0BB9  
                                          __ptext12 07D8                                            __ptext21 1E37  
                                          __ptext13 0800                                            __ptext30 1DF2  
                                          __ptext22 0DC5                                            __ptext14 1066  
                                          __ptext31 1DEF                                            __ptext23 1089  
                                          __ptext15 1EDC                                            __ptext40 1E2B  
                                          __ptext32 1DEC                                            __ptext24 1180  
                                          __ptext16 145F                                            __ptext41 1E19  
                                          __ptext33 1DE9                                            __ptext25 165C  
                                          __ptext17 1355                                            __ptext42 1110  
                                          __ptext34 0733                                            __ptext26 082C  
                                          __ptext18 12E6                                            __ptext51 1F81  
                                          __ptext43 1E70                                            __ptext35 1DE6  
                                          __ptext27 1FA0                                            __ptext19 1FC0  
                                          __ptext60 1DF5                                            __ptext52 1000  
                                          __ptext44 1E61                                            __ptext36 1E22  
                                          __ptext28 1F27                                            __ptext61 1DE5  
                                          __ptext53 1145                                            __ptext45 1E10  
                                          __ptext37 1EA1                                            __ptext29 13D4  
                                          __ptext62 1E43                                            __ptext54 1EF2  
                                          __ptext46 1EB4                                            __ptext38 1E7F  
                                          __ptext63 1DE4                                            __ptext55 11CF  
                                          __ptext47 1E07                                            __ptext39 10AD  
                                          __ptext56 1F62                                            __ptext48 1E52  
                                          __ptext57 1001                                            __ptext49 1022  
                                          __ptext58 1043                                            __ptext59 1DFF  
                             _EUSART_TransmitEnable 0000                                          strcpy@dest 0020  
                                    ?_handle_buzzer 0076                                          _LED_12V_On 1DF2  
                                        _LED_24V_On 1DEF                                   ??_TMR4_Initialize 0020  
                                      _reset_flg_12 016B                                        _reset_flg_24 016C  
                         __end_of_ADC_GetConversion 1043                                          _RC1STAbits 019D  
                                          efgtoa@fp 0068                                            efgtoa@ne 00A4  
                                          efgtoa@pp 00AC                                            efgtoa@ou 00B7  
                                          int$flags 007E                                            _vfprintf 1F44  
                __end_of_INTERRUPT_InterruptManager 004A                          _INTERRUPT_InterruptManager 0004  
       __end_of_EUSART_FramingErrorCallbackRegister 1E70               ??_EUSART_FramingErrorCallbackRegister 0022  
              ?_EUSART_FramingErrorCallbackRegister 0020                 _EUSART_FramingErrorCallbackRegister 1E61  
                                         printf@fmt 015B                                          _INTCONbits 000B  
                                          memcpy@d1 0020                                            memcpy@s1 0021  
                              _INT_InterruptHandler 0158                              ??_INTERRUPT_Initialize 0022  
                          ?_ADC_SetInterruptHandler 0020                                            intlevel1 0000  
                         _EUSART_TxInterruptHandler 01B0                             ?_PIN_MANAGER_Initialize 0076  
        __end_of_EUSART_DefaultFramingErrorCallback 1DE6                ??_EUSART_DefaultFramingErrorCallback 0076  
               ?_EUSART_DefaultFramingErrorCallback 0076                  _EUSART_DefaultFramingErrorCallback 1DE5  
                                         strcpy@src 0021                                    ??_ADC_Initialize 0022  
                                       efgtoa@nmode 00AE                                            printf@ap 00E6  
                          ?_INT_SetInterruptHandler 0020                            __end_of_EUSART_IsRxReady 1E07  
                                       ??_vfpfcnvrt 00D4                            __end_of_EUSART_IsTxReady 0808  
                          __end_of_CLOCK_Initialize 1E19                                       __pstringtext1 1800  
                                     __pstringtext2 1830                                       __pstringtext3 184B  
                                     __pstringtext4 1863                                       __pstringtext5 1877  
                                     __pstringtext6 1888                                       __pstringtext7 188C  
                                     __pstringtext8 0000                              __Umul8_16@multiplicand 0020  
                                  ??_handle_voltage 0066                               handle_voltage@voltage 0058  
                                      ?_LED_12V_Off 0076                                        ?_LED_24V_Off 0076  
                                        _TX1STAbits 019E                                     ??_handle_buzzer 0025  
                                     ___fladd@signs 005C                                          _TMR4_Start 1DE6  
                                EUSART_Write@txData 0020                      __end_of_PIN_MANAGER_Initialize 10DC  
                                       ?_LED_12V_On 0076                                         ?_LED_24V_On 0076  
                                      ___fladd@aexp 005D                                        ___fladd@bexp 005E  
                              __Umul8_16@multiplier 0028                                   __Umul8_16@product 0024  
                             __end_of_check_RX_Data 1F81  
